# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSpeedFunctionToPathFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSpeedFunctionToPathFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSpeedFunctionToPathFilterPython
            return _itkSpeedFunctionToPathFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSpeedFunctionToPathFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSpeedFunctionToPathFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSpeedFunctionToPathFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPointPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import vnl_vector_refPython
import itkFixedArrayPython
import itkVectorPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import ITKCommonBasePython
import itkRGBAPixelPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkSpeedFunctionPathInformationPython
import itkArrivalFunctionToPathFilterPython
import itkSingleImageCostFunctionPython
import itkArrayPython
import itkOptimizerParametersPython
import ITKCostFunctionsPython
import vnl_cost_functionPython
import vnl_unary_functionPython
import itkArray2DPython
import itkCostFunctionPython
import vnl_least_squares_functionPython
import itkInterpolateImageFunctionPython
import itkContinuousIndexPython
import itkImageFunctionBasePython
import itkFunctionBasePython
import ITKOptimizersBasePython
import itkImageToPathFilterPython
import itkPathSourcePython
import itkPolyLineParametricPathPython
import itkParametricPathPython
import itkPathBasePython
import itkVectorContainerPython

def itkSpeedFunctionToPathFilterID3PPP3_New():
  return itkSpeedFunctionToPathFilterID3PPP3.New()


def itkSpeedFunctionToPathFilterIF3PPP3_New():
  return itkSpeedFunctionToPathFilterIF3PPP3.New()


def itkSpeedFunctionToPathFilterIUS3PPP3_New():
  return itkSpeedFunctionToPathFilterIUS3PPP3.New()


def itkSpeedFunctionToPathFilterIUC3PPP3_New():
  return itkSpeedFunctionToPathFilterIUC3PPP3.New()


def itkSpeedFunctionToPathFilterISS3PPP3_New():
  return itkSpeedFunctionToPathFilterISS3PPP3.New()


def itkSpeedFunctionToPathFilterID2PPP2_New():
  return itkSpeedFunctionToPathFilterID2PPP2.New()


def itkSpeedFunctionToPathFilterIF2PPP2_New():
  return itkSpeedFunctionToPathFilterIF2PPP2.New()


def itkSpeedFunctionToPathFilterIUS2PPP2_New():
  return itkSpeedFunctionToPathFilterIUS2PPP2.New()


def itkSpeedFunctionToPathFilterIUC2PPP2_New():
  return itkSpeedFunctionToPathFilterIUC2PPP2.New()


def itkSpeedFunctionToPathFilterISS2PPP2_New():
  return itkSpeedFunctionToPathFilterISS2PPP2.New()

class itkSpeedFunctionToPathFilterID2PPP2(itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2):
    """Proxy of C++ itkSpeedFunctionToPathFilterID2PPP2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionToPathFilterID2PPP2_Pointer":
        """__New_orig__() -> itkSpeedFunctionToPathFilterID2PPP2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionToPathFilterID2PPP2_Pointer":
        """Clone(itkSpeedFunctionToPathFilterID2PPP2 self) -> itkSpeedFunctionToPathFilterID2PPP2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_Clone(self)


    def AddPathInformation(self, info: 'itkSpeedFunctionPathInformationPD2') -> "void":
        """AddPathInformation(itkSpeedFunctionToPathFilterID2PPP2 self, itkSpeedFunctionPathInformationPD2 info)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_AddPathInformation(self, info)


    def ClearPathInformation(self) -> "void":
        """ClearPathInformation(itkSpeedFunctionToPathFilterID2PPP2 self)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_ClearPathInformation(self)


    def GetCurrentArrivalFunction(self) -> "itkImageD2_Pointer":
        """GetCurrentArrivalFunction(itkSpeedFunctionToPathFilterID2PPP2 self) -> itkImageD2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_GetCurrentArrivalFunction(self)

    __swig_destroy__ = _itkSpeedFunctionToPathFilterPython.delete_itkSpeedFunctionToPathFilterID2PPP2

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterID2PPP2 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterID2PPP2"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionToPathFilterID2PPP2

        Create a new object of the class itkSpeedFunctionToPathFilterID2PPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionToPathFilterID2PPP2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionToPathFilterID2PPP2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionToPathFilterID2PPP2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionToPathFilterID2PPP2.Clone = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_Clone, None, itkSpeedFunctionToPathFilterID2PPP2)
itkSpeedFunctionToPathFilterID2PPP2.AddPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_AddPathInformation, None, itkSpeedFunctionToPathFilterID2PPP2)
itkSpeedFunctionToPathFilterID2PPP2.ClearPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_ClearPathInformation, None, itkSpeedFunctionToPathFilterID2PPP2)
itkSpeedFunctionToPathFilterID2PPP2.GetCurrentArrivalFunction = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_GetCurrentArrivalFunction, None, itkSpeedFunctionToPathFilterID2PPP2)
itkSpeedFunctionToPathFilterID2PPP2_swigregister = _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_swigregister
itkSpeedFunctionToPathFilterID2PPP2_swigregister(itkSpeedFunctionToPathFilterID2PPP2)

def itkSpeedFunctionToPathFilterID2PPP2___New_orig__() -> "itkSpeedFunctionToPathFilterID2PPP2_Pointer":
    """itkSpeedFunctionToPathFilterID2PPP2___New_orig__() -> itkSpeedFunctionToPathFilterID2PPP2_Pointer"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2___New_orig__()

def itkSpeedFunctionToPathFilterID2PPP2_cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterID2PPP2 *":
    """itkSpeedFunctionToPathFilterID2PPP2_cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterID2PPP2"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID2PPP2_cast(obj)

class itkSpeedFunctionToPathFilterID3PPP3(itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3):
    """Proxy of C++ itkSpeedFunctionToPathFilterID3PPP3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionToPathFilterID3PPP3_Pointer":
        """__New_orig__() -> itkSpeedFunctionToPathFilterID3PPP3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionToPathFilterID3PPP3_Pointer":
        """Clone(itkSpeedFunctionToPathFilterID3PPP3 self) -> itkSpeedFunctionToPathFilterID3PPP3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_Clone(self)


    def AddPathInformation(self, info: 'itkSpeedFunctionPathInformationPD3') -> "void":
        """AddPathInformation(itkSpeedFunctionToPathFilterID3PPP3 self, itkSpeedFunctionPathInformationPD3 info)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_AddPathInformation(self, info)


    def ClearPathInformation(self) -> "void":
        """ClearPathInformation(itkSpeedFunctionToPathFilterID3PPP3 self)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_ClearPathInformation(self)


    def GetCurrentArrivalFunction(self) -> "itkImageD3_Pointer":
        """GetCurrentArrivalFunction(itkSpeedFunctionToPathFilterID3PPP3 self) -> itkImageD3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_GetCurrentArrivalFunction(self)

    __swig_destroy__ = _itkSpeedFunctionToPathFilterPython.delete_itkSpeedFunctionToPathFilterID3PPP3

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterID3PPP3 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterID3PPP3"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionToPathFilterID3PPP3

        Create a new object of the class itkSpeedFunctionToPathFilterID3PPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionToPathFilterID3PPP3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionToPathFilterID3PPP3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionToPathFilterID3PPP3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionToPathFilterID3PPP3.Clone = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_Clone, None, itkSpeedFunctionToPathFilterID3PPP3)
itkSpeedFunctionToPathFilterID3PPP3.AddPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_AddPathInformation, None, itkSpeedFunctionToPathFilterID3PPP3)
itkSpeedFunctionToPathFilterID3PPP3.ClearPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_ClearPathInformation, None, itkSpeedFunctionToPathFilterID3PPP3)
itkSpeedFunctionToPathFilterID3PPP3.GetCurrentArrivalFunction = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_GetCurrentArrivalFunction, None, itkSpeedFunctionToPathFilterID3PPP3)
itkSpeedFunctionToPathFilterID3PPP3_swigregister = _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_swigregister
itkSpeedFunctionToPathFilterID3PPP3_swigregister(itkSpeedFunctionToPathFilterID3PPP3)

def itkSpeedFunctionToPathFilterID3PPP3___New_orig__() -> "itkSpeedFunctionToPathFilterID3PPP3_Pointer":
    """itkSpeedFunctionToPathFilterID3PPP3___New_orig__() -> itkSpeedFunctionToPathFilterID3PPP3_Pointer"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3___New_orig__()

def itkSpeedFunctionToPathFilterID3PPP3_cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterID3PPP3 *":
    """itkSpeedFunctionToPathFilterID3PPP3_cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterID3PPP3"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterID3PPP3_cast(obj)

class itkSpeedFunctionToPathFilterIF2PPP2(itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2):
    """Proxy of C++ itkSpeedFunctionToPathFilterIF2PPP2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionToPathFilterIF2PPP2_Pointer":
        """__New_orig__() -> itkSpeedFunctionToPathFilterIF2PPP2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionToPathFilterIF2PPP2_Pointer":
        """Clone(itkSpeedFunctionToPathFilterIF2PPP2 self) -> itkSpeedFunctionToPathFilterIF2PPP2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_Clone(self)


    def AddPathInformation(self, info: 'itkSpeedFunctionPathInformationPD2') -> "void":
        """AddPathInformation(itkSpeedFunctionToPathFilterIF2PPP2 self, itkSpeedFunctionPathInformationPD2 info)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_AddPathInformation(self, info)


    def ClearPathInformation(self) -> "void":
        """ClearPathInformation(itkSpeedFunctionToPathFilterIF2PPP2 self)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_ClearPathInformation(self)


    def GetCurrentArrivalFunction(self) -> "itkImageF2_Pointer":
        """GetCurrentArrivalFunction(itkSpeedFunctionToPathFilterIF2PPP2 self) -> itkImageF2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_GetCurrentArrivalFunction(self)

    __swig_destroy__ = _itkSpeedFunctionToPathFilterPython.delete_itkSpeedFunctionToPathFilterIF2PPP2

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIF2PPP2 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIF2PPP2"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionToPathFilterIF2PPP2

        Create a new object of the class itkSpeedFunctionToPathFilterIF2PPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionToPathFilterIF2PPP2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionToPathFilterIF2PPP2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionToPathFilterIF2PPP2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionToPathFilterIF2PPP2.Clone = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_Clone, None, itkSpeedFunctionToPathFilterIF2PPP2)
itkSpeedFunctionToPathFilterIF2PPP2.AddPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_AddPathInformation, None, itkSpeedFunctionToPathFilterIF2PPP2)
itkSpeedFunctionToPathFilterIF2PPP2.ClearPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_ClearPathInformation, None, itkSpeedFunctionToPathFilterIF2PPP2)
itkSpeedFunctionToPathFilterIF2PPP2.GetCurrentArrivalFunction = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_GetCurrentArrivalFunction, None, itkSpeedFunctionToPathFilterIF2PPP2)
itkSpeedFunctionToPathFilterIF2PPP2_swigregister = _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_swigregister
itkSpeedFunctionToPathFilterIF2PPP2_swigregister(itkSpeedFunctionToPathFilterIF2PPP2)

def itkSpeedFunctionToPathFilterIF2PPP2___New_orig__() -> "itkSpeedFunctionToPathFilterIF2PPP2_Pointer":
    """itkSpeedFunctionToPathFilterIF2PPP2___New_orig__() -> itkSpeedFunctionToPathFilterIF2PPP2_Pointer"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2___New_orig__()

def itkSpeedFunctionToPathFilterIF2PPP2_cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIF2PPP2 *":
    """itkSpeedFunctionToPathFilterIF2PPP2_cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIF2PPP2"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF2PPP2_cast(obj)

class itkSpeedFunctionToPathFilterIF3PPP3(itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3):
    """Proxy of C++ itkSpeedFunctionToPathFilterIF3PPP3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionToPathFilterIF3PPP3_Pointer":
        """__New_orig__() -> itkSpeedFunctionToPathFilterIF3PPP3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionToPathFilterIF3PPP3_Pointer":
        """Clone(itkSpeedFunctionToPathFilterIF3PPP3 self) -> itkSpeedFunctionToPathFilterIF3PPP3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_Clone(self)


    def AddPathInformation(self, info: 'itkSpeedFunctionPathInformationPD3') -> "void":
        """AddPathInformation(itkSpeedFunctionToPathFilterIF3PPP3 self, itkSpeedFunctionPathInformationPD3 info)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_AddPathInformation(self, info)


    def ClearPathInformation(self) -> "void":
        """ClearPathInformation(itkSpeedFunctionToPathFilterIF3PPP3 self)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_ClearPathInformation(self)


    def GetCurrentArrivalFunction(self) -> "itkImageF3_Pointer":
        """GetCurrentArrivalFunction(itkSpeedFunctionToPathFilterIF3PPP3 self) -> itkImageF3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_GetCurrentArrivalFunction(self)

    __swig_destroy__ = _itkSpeedFunctionToPathFilterPython.delete_itkSpeedFunctionToPathFilterIF3PPP3

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIF3PPP3 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIF3PPP3"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionToPathFilterIF3PPP3

        Create a new object of the class itkSpeedFunctionToPathFilterIF3PPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionToPathFilterIF3PPP3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionToPathFilterIF3PPP3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionToPathFilterIF3PPP3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionToPathFilterIF3PPP3.Clone = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_Clone, None, itkSpeedFunctionToPathFilterIF3PPP3)
itkSpeedFunctionToPathFilterIF3PPP3.AddPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_AddPathInformation, None, itkSpeedFunctionToPathFilterIF3PPP3)
itkSpeedFunctionToPathFilterIF3PPP3.ClearPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_ClearPathInformation, None, itkSpeedFunctionToPathFilterIF3PPP3)
itkSpeedFunctionToPathFilterIF3PPP3.GetCurrentArrivalFunction = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_GetCurrentArrivalFunction, None, itkSpeedFunctionToPathFilterIF3PPP3)
itkSpeedFunctionToPathFilterIF3PPP3_swigregister = _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_swigregister
itkSpeedFunctionToPathFilterIF3PPP3_swigregister(itkSpeedFunctionToPathFilterIF3PPP3)

def itkSpeedFunctionToPathFilterIF3PPP3___New_orig__() -> "itkSpeedFunctionToPathFilterIF3PPP3_Pointer":
    """itkSpeedFunctionToPathFilterIF3PPP3___New_orig__() -> itkSpeedFunctionToPathFilterIF3PPP3_Pointer"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3___New_orig__()

def itkSpeedFunctionToPathFilterIF3PPP3_cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIF3PPP3 *":
    """itkSpeedFunctionToPathFilterIF3PPP3_cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIF3PPP3"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIF3PPP3_cast(obj)

class itkSpeedFunctionToPathFilterISS2PPP2(itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2):
    """Proxy of C++ itkSpeedFunctionToPathFilterISS2PPP2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionToPathFilterISS2PPP2_Pointer":
        """__New_orig__() -> itkSpeedFunctionToPathFilterISS2PPP2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionToPathFilterISS2PPP2_Pointer":
        """Clone(itkSpeedFunctionToPathFilterISS2PPP2 self) -> itkSpeedFunctionToPathFilterISS2PPP2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_Clone(self)


    def AddPathInformation(self, info: 'itkSpeedFunctionPathInformationPD2') -> "void":
        """AddPathInformation(itkSpeedFunctionToPathFilterISS2PPP2 self, itkSpeedFunctionPathInformationPD2 info)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_AddPathInformation(self, info)


    def ClearPathInformation(self) -> "void":
        """ClearPathInformation(itkSpeedFunctionToPathFilterISS2PPP2 self)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_ClearPathInformation(self)


    def GetCurrentArrivalFunction(self) -> "itkImageSS2_Pointer":
        """GetCurrentArrivalFunction(itkSpeedFunctionToPathFilterISS2PPP2 self) -> itkImageSS2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_GetCurrentArrivalFunction(self)

    __swig_destroy__ = _itkSpeedFunctionToPathFilterPython.delete_itkSpeedFunctionToPathFilterISS2PPP2

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterISS2PPP2 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterISS2PPP2"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionToPathFilterISS2PPP2

        Create a new object of the class itkSpeedFunctionToPathFilterISS2PPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionToPathFilterISS2PPP2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionToPathFilterISS2PPP2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionToPathFilterISS2PPP2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionToPathFilterISS2PPP2.Clone = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_Clone, None, itkSpeedFunctionToPathFilterISS2PPP2)
itkSpeedFunctionToPathFilterISS2PPP2.AddPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_AddPathInformation, None, itkSpeedFunctionToPathFilterISS2PPP2)
itkSpeedFunctionToPathFilterISS2PPP2.ClearPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_ClearPathInformation, None, itkSpeedFunctionToPathFilterISS2PPP2)
itkSpeedFunctionToPathFilterISS2PPP2.GetCurrentArrivalFunction = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_GetCurrentArrivalFunction, None, itkSpeedFunctionToPathFilterISS2PPP2)
itkSpeedFunctionToPathFilterISS2PPP2_swigregister = _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_swigregister
itkSpeedFunctionToPathFilterISS2PPP2_swigregister(itkSpeedFunctionToPathFilterISS2PPP2)

def itkSpeedFunctionToPathFilterISS2PPP2___New_orig__() -> "itkSpeedFunctionToPathFilterISS2PPP2_Pointer":
    """itkSpeedFunctionToPathFilterISS2PPP2___New_orig__() -> itkSpeedFunctionToPathFilterISS2PPP2_Pointer"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2___New_orig__()

def itkSpeedFunctionToPathFilterISS2PPP2_cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterISS2PPP2 *":
    """itkSpeedFunctionToPathFilterISS2PPP2_cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterISS2PPP2"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS2PPP2_cast(obj)

class itkSpeedFunctionToPathFilterISS3PPP3(itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3):
    """Proxy of C++ itkSpeedFunctionToPathFilterISS3PPP3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionToPathFilterISS3PPP3_Pointer":
        """__New_orig__() -> itkSpeedFunctionToPathFilterISS3PPP3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionToPathFilterISS3PPP3_Pointer":
        """Clone(itkSpeedFunctionToPathFilterISS3PPP3 self) -> itkSpeedFunctionToPathFilterISS3PPP3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_Clone(self)


    def AddPathInformation(self, info: 'itkSpeedFunctionPathInformationPD3') -> "void":
        """AddPathInformation(itkSpeedFunctionToPathFilterISS3PPP3 self, itkSpeedFunctionPathInformationPD3 info)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_AddPathInformation(self, info)


    def ClearPathInformation(self) -> "void":
        """ClearPathInformation(itkSpeedFunctionToPathFilterISS3PPP3 self)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_ClearPathInformation(self)


    def GetCurrentArrivalFunction(self) -> "itkImageSS3_Pointer":
        """GetCurrentArrivalFunction(itkSpeedFunctionToPathFilterISS3PPP3 self) -> itkImageSS3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_GetCurrentArrivalFunction(self)

    __swig_destroy__ = _itkSpeedFunctionToPathFilterPython.delete_itkSpeedFunctionToPathFilterISS3PPP3

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterISS3PPP3 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterISS3PPP3"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionToPathFilterISS3PPP3

        Create a new object of the class itkSpeedFunctionToPathFilterISS3PPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionToPathFilterISS3PPP3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionToPathFilterISS3PPP3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionToPathFilterISS3PPP3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionToPathFilterISS3PPP3.Clone = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_Clone, None, itkSpeedFunctionToPathFilterISS3PPP3)
itkSpeedFunctionToPathFilterISS3PPP3.AddPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_AddPathInformation, None, itkSpeedFunctionToPathFilterISS3PPP3)
itkSpeedFunctionToPathFilterISS3PPP3.ClearPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_ClearPathInformation, None, itkSpeedFunctionToPathFilterISS3PPP3)
itkSpeedFunctionToPathFilterISS3PPP3.GetCurrentArrivalFunction = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_GetCurrentArrivalFunction, None, itkSpeedFunctionToPathFilterISS3PPP3)
itkSpeedFunctionToPathFilterISS3PPP3_swigregister = _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_swigregister
itkSpeedFunctionToPathFilterISS3PPP3_swigregister(itkSpeedFunctionToPathFilterISS3PPP3)

def itkSpeedFunctionToPathFilterISS3PPP3___New_orig__() -> "itkSpeedFunctionToPathFilterISS3PPP3_Pointer":
    """itkSpeedFunctionToPathFilterISS3PPP3___New_orig__() -> itkSpeedFunctionToPathFilterISS3PPP3_Pointer"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3___New_orig__()

def itkSpeedFunctionToPathFilterISS3PPP3_cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterISS3PPP3 *":
    """itkSpeedFunctionToPathFilterISS3PPP3_cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterISS3PPP3"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterISS3PPP3_cast(obj)

class itkSpeedFunctionToPathFilterIUC2PPP2(itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2):
    """Proxy of C++ itkSpeedFunctionToPathFilterIUC2PPP2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionToPathFilterIUC2PPP2_Pointer":
        """__New_orig__() -> itkSpeedFunctionToPathFilterIUC2PPP2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionToPathFilterIUC2PPP2_Pointer":
        """Clone(itkSpeedFunctionToPathFilterIUC2PPP2 self) -> itkSpeedFunctionToPathFilterIUC2PPP2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_Clone(self)


    def AddPathInformation(self, info: 'itkSpeedFunctionPathInformationPD2') -> "void":
        """AddPathInformation(itkSpeedFunctionToPathFilterIUC2PPP2 self, itkSpeedFunctionPathInformationPD2 info)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_AddPathInformation(self, info)


    def ClearPathInformation(self) -> "void":
        """ClearPathInformation(itkSpeedFunctionToPathFilterIUC2PPP2 self)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_ClearPathInformation(self)


    def GetCurrentArrivalFunction(self) -> "itkImageUC2_Pointer":
        """GetCurrentArrivalFunction(itkSpeedFunctionToPathFilterIUC2PPP2 self) -> itkImageUC2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_GetCurrentArrivalFunction(self)

    __swig_destroy__ = _itkSpeedFunctionToPathFilterPython.delete_itkSpeedFunctionToPathFilterIUC2PPP2

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIUC2PPP2 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIUC2PPP2"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionToPathFilterIUC2PPP2

        Create a new object of the class itkSpeedFunctionToPathFilterIUC2PPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionToPathFilterIUC2PPP2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionToPathFilterIUC2PPP2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionToPathFilterIUC2PPP2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionToPathFilterIUC2PPP2.Clone = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_Clone, None, itkSpeedFunctionToPathFilterIUC2PPP2)
itkSpeedFunctionToPathFilterIUC2PPP2.AddPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_AddPathInformation, None, itkSpeedFunctionToPathFilterIUC2PPP2)
itkSpeedFunctionToPathFilterIUC2PPP2.ClearPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_ClearPathInformation, None, itkSpeedFunctionToPathFilterIUC2PPP2)
itkSpeedFunctionToPathFilterIUC2PPP2.GetCurrentArrivalFunction = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_GetCurrentArrivalFunction, None, itkSpeedFunctionToPathFilterIUC2PPP2)
itkSpeedFunctionToPathFilterIUC2PPP2_swigregister = _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_swigregister
itkSpeedFunctionToPathFilterIUC2PPP2_swigregister(itkSpeedFunctionToPathFilterIUC2PPP2)

def itkSpeedFunctionToPathFilterIUC2PPP2___New_orig__() -> "itkSpeedFunctionToPathFilterIUC2PPP2_Pointer":
    """itkSpeedFunctionToPathFilterIUC2PPP2___New_orig__() -> itkSpeedFunctionToPathFilterIUC2PPP2_Pointer"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2___New_orig__()

def itkSpeedFunctionToPathFilterIUC2PPP2_cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIUC2PPP2 *":
    """itkSpeedFunctionToPathFilterIUC2PPP2_cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIUC2PPP2"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC2PPP2_cast(obj)

class itkSpeedFunctionToPathFilterIUC3PPP3(itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3):
    """Proxy of C++ itkSpeedFunctionToPathFilterIUC3PPP3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionToPathFilterIUC3PPP3_Pointer":
        """__New_orig__() -> itkSpeedFunctionToPathFilterIUC3PPP3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionToPathFilterIUC3PPP3_Pointer":
        """Clone(itkSpeedFunctionToPathFilterIUC3PPP3 self) -> itkSpeedFunctionToPathFilterIUC3PPP3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_Clone(self)


    def AddPathInformation(self, info: 'itkSpeedFunctionPathInformationPD3') -> "void":
        """AddPathInformation(itkSpeedFunctionToPathFilterIUC3PPP3 self, itkSpeedFunctionPathInformationPD3 info)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_AddPathInformation(self, info)


    def ClearPathInformation(self) -> "void":
        """ClearPathInformation(itkSpeedFunctionToPathFilterIUC3PPP3 self)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_ClearPathInformation(self)


    def GetCurrentArrivalFunction(self) -> "itkImageUC3_Pointer":
        """GetCurrentArrivalFunction(itkSpeedFunctionToPathFilterIUC3PPP3 self) -> itkImageUC3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_GetCurrentArrivalFunction(self)

    __swig_destroy__ = _itkSpeedFunctionToPathFilterPython.delete_itkSpeedFunctionToPathFilterIUC3PPP3

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIUC3PPP3 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIUC3PPP3"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionToPathFilterIUC3PPP3

        Create a new object of the class itkSpeedFunctionToPathFilterIUC3PPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionToPathFilterIUC3PPP3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionToPathFilterIUC3PPP3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionToPathFilterIUC3PPP3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionToPathFilterIUC3PPP3.Clone = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_Clone, None, itkSpeedFunctionToPathFilterIUC3PPP3)
itkSpeedFunctionToPathFilterIUC3PPP3.AddPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_AddPathInformation, None, itkSpeedFunctionToPathFilterIUC3PPP3)
itkSpeedFunctionToPathFilterIUC3PPP3.ClearPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_ClearPathInformation, None, itkSpeedFunctionToPathFilterIUC3PPP3)
itkSpeedFunctionToPathFilterIUC3PPP3.GetCurrentArrivalFunction = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_GetCurrentArrivalFunction, None, itkSpeedFunctionToPathFilterIUC3PPP3)
itkSpeedFunctionToPathFilterIUC3PPP3_swigregister = _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_swigregister
itkSpeedFunctionToPathFilterIUC3PPP3_swigregister(itkSpeedFunctionToPathFilterIUC3PPP3)

def itkSpeedFunctionToPathFilterIUC3PPP3___New_orig__() -> "itkSpeedFunctionToPathFilterIUC3PPP3_Pointer":
    """itkSpeedFunctionToPathFilterIUC3PPP3___New_orig__() -> itkSpeedFunctionToPathFilterIUC3PPP3_Pointer"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3___New_orig__()

def itkSpeedFunctionToPathFilterIUC3PPP3_cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIUC3PPP3 *":
    """itkSpeedFunctionToPathFilterIUC3PPP3_cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIUC3PPP3"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUC3PPP3_cast(obj)

class itkSpeedFunctionToPathFilterIUS2PPP2(itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2):
    """Proxy of C++ itkSpeedFunctionToPathFilterIUS2PPP2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionToPathFilterIUS2PPP2_Pointer":
        """__New_orig__() -> itkSpeedFunctionToPathFilterIUS2PPP2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionToPathFilterIUS2PPP2_Pointer":
        """Clone(itkSpeedFunctionToPathFilterIUS2PPP2 self) -> itkSpeedFunctionToPathFilterIUS2PPP2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_Clone(self)


    def AddPathInformation(self, info: 'itkSpeedFunctionPathInformationPD2') -> "void":
        """AddPathInformation(itkSpeedFunctionToPathFilterIUS2PPP2 self, itkSpeedFunctionPathInformationPD2 info)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_AddPathInformation(self, info)


    def ClearPathInformation(self) -> "void":
        """ClearPathInformation(itkSpeedFunctionToPathFilterIUS2PPP2 self)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_ClearPathInformation(self)


    def GetCurrentArrivalFunction(self) -> "itkImageUS2_Pointer":
        """GetCurrentArrivalFunction(itkSpeedFunctionToPathFilterIUS2PPP2 self) -> itkImageUS2_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_GetCurrentArrivalFunction(self)

    __swig_destroy__ = _itkSpeedFunctionToPathFilterPython.delete_itkSpeedFunctionToPathFilterIUS2PPP2

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIUS2PPP2 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIUS2PPP2"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionToPathFilterIUS2PPP2

        Create a new object of the class itkSpeedFunctionToPathFilterIUS2PPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionToPathFilterIUS2PPP2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionToPathFilterIUS2PPP2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionToPathFilterIUS2PPP2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionToPathFilterIUS2PPP2.Clone = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_Clone, None, itkSpeedFunctionToPathFilterIUS2PPP2)
itkSpeedFunctionToPathFilterIUS2PPP2.AddPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_AddPathInformation, None, itkSpeedFunctionToPathFilterIUS2PPP2)
itkSpeedFunctionToPathFilterIUS2PPP2.ClearPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_ClearPathInformation, None, itkSpeedFunctionToPathFilterIUS2PPP2)
itkSpeedFunctionToPathFilterIUS2PPP2.GetCurrentArrivalFunction = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_GetCurrentArrivalFunction, None, itkSpeedFunctionToPathFilterIUS2PPP2)
itkSpeedFunctionToPathFilterIUS2PPP2_swigregister = _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_swigregister
itkSpeedFunctionToPathFilterIUS2PPP2_swigregister(itkSpeedFunctionToPathFilterIUS2PPP2)

def itkSpeedFunctionToPathFilterIUS2PPP2___New_orig__() -> "itkSpeedFunctionToPathFilterIUS2PPP2_Pointer":
    """itkSpeedFunctionToPathFilterIUS2PPP2___New_orig__() -> itkSpeedFunctionToPathFilterIUS2PPP2_Pointer"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2___New_orig__()

def itkSpeedFunctionToPathFilterIUS2PPP2_cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIUS2PPP2 *":
    """itkSpeedFunctionToPathFilterIUS2PPP2_cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIUS2PPP2"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS2PPP2_cast(obj)

class itkSpeedFunctionToPathFilterIUS3PPP3(itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3):
    """Proxy of C++ itkSpeedFunctionToPathFilterIUS3PPP3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionToPathFilterIUS3PPP3_Pointer":
        """__New_orig__() -> itkSpeedFunctionToPathFilterIUS3PPP3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionToPathFilterIUS3PPP3_Pointer":
        """Clone(itkSpeedFunctionToPathFilterIUS3PPP3 self) -> itkSpeedFunctionToPathFilterIUS3PPP3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_Clone(self)


    def AddPathInformation(self, info: 'itkSpeedFunctionPathInformationPD3') -> "void":
        """AddPathInformation(itkSpeedFunctionToPathFilterIUS3PPP3 self, itkSpeedFunctionPathInformationPD3 info)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_AddPathInformation(self, info)


    def ClearPathInformation(self) -> "void":
        """ClearPathInformation(itkSpeedFunctionToPathFilterIUS3PPP3 self)"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_ClearPathInformation(self)


    def GetCurrentArrivalFunction(self) -> "itkImageUS3_Pointer":
        """GetCurrentArrivalFunction(itkSpeedFunctionToPathFilterIUS3PPP3 self) -> itkImageUS3_Pointer"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_GetCurrentArrivalFunction(self)

    __swig_destroy__ = _itkSpeedFunctionToPathFilterPython.delete_itkSpeedFunctionToPathFilterIUS3PPP3

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIUS3PPP3 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIUS3PPP3"""
        return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionToPathFilterIUS3PPP3

        Create a new object of the class itkSpeedFunctionToPathFilterIUS3PPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionToPathFilterIUS3PPP3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionToPathFilterIUS3PPP3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionToPathFilterIUS3PPP3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionToPathFilterIUS3PPP3.Clone = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_Clone, None, itkSpeedFunctionToPathFilterIUS3PPP3)
itkSpeedFunctionToPathFilterIUS3PPP3.AddPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_AddPathInformation, None, itkSpeedFunctionToPathFilterIUS3PPP3)
itkSpeedFunctionToPathFilterIUS3PPP3.ClearPathInformation = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_ClearPathInformation, None, itkSpeedFunctionToPathFilterIUS3PPP3)
itkSpeedFunctionToPathFilterIUS3PPP3.GetCurrentArrivalFunction = new_instancemethod(_itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_GetCurrentArrivalFunction, None, itkSpeedFunctionToPathFilterIUS3PPP3)
itkSpeedFunctionToPathFilterIUS3PPP3_swigregister = _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_swigregister
itkSpeedFunctionToPathFilterIUS3PPP3_swigregister(itkSpeedFunctionToPathFilterIUS3PPP3)

def itkSpeedFunctionToPathFilterIUS3PPP3___New_orig__() -> "itkSpeedFunctionToPathFilterIUS3PPP3_Pointer":
    """itkSpeedFunctionToPathFilterIUS3PPP3___New_orig__() -> itkSpeedFunctionToPathFilterIUS3PPP3_Pointer"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3___New_orig__()

def itkSpeedFunctionToPathFilterIUS3PPP3_cast(obj: 'itkLightObject') -> "itkSpeedFunctionToPathFilterIUS3PPP3 *":
    """itkSpeedFunctionToPathFilterIUS3PPP3_cast(itkLightObject obj) -> itkSpeedFunctionToPathFilterIUS3PPP3"""
    return _itkSpeedFunctionToPathFilterPython.itkSpeedFunctionToPathFilterIUS3PPP3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def speed_function_to_path_filter(*args, **kwargs):
    """Procedural interface for SpeedFunctionToPathFilter"""
    import itk
    instance = itk.SpeedFunctionToPathFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def speed_function_to_path_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.SpeedFunctionToPathFilter, itkTemplate.itkTemplate):
        filter_object = itk.SpeedFunctionToPathFilter.values()[0]
    else:
        filter_object = itk.SpeedFunctionToPathFilter

    speed_function_to_path_filter.__doc__ = filter_object.__doc__
    speed_function_to_path_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    speed_function_to_path_filter.__doc__ += "Available Keyword Arguments:\n"
    speed_function_to_path_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



