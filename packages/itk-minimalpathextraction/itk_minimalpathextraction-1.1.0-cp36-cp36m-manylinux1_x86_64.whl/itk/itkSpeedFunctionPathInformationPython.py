# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSpeedFunctionPathInformationPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSpeedFunctionPathInformationPython', [dirname(__file__)])
        except ImportError:
            import _itkSpeedFunctionPathInformationPython
            return _itkSpeedFunctionPathInformationPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSpeedFunctionPathInformationPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSpeedFunctionPathInformationPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSpeedFunctionPathInformationPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import pyBasePython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import ITKCommonBasePython

def itkSpeedFunctionPathInformationPD3_New():
  return itkSpeedFunctionPathInformationPD3.New()


def itkSpeedFunctionPathInformationPD2_New():
  return itkSpeedFunctionPathInformationPD2.New()

class itkSpeedFunctionPathInformationPD2(ITKCommonBasePython.itkLightObject):
    """Proxy of C++ itkSpeedFunctionPathInformationPD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionPathInformationPD2_Pointer":
        """__New_orig__() -> itkSpeedFunctionPathInformationPD2_Pointer"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionPathInformationPD2_Pointer":
        """Clone(itkSpeedFunctionPathInformationPD2 self) -> itkSpeedFunctionPathInformationPD2_Pointer"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_Clone(self)


    def ClearInfo(self) -> "void":
        """ClearInfo(itkSpeedFunctionPathInformationPD2 self)"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_ClearInfo(self)


    def SetStartPoint(self, *args) -> "void":
        """
        SetStartPoint(itkSpeedFunctionPathInformationPD2 self, itkPointD2 start)
        SetStartPoint(itkSpeedFunctionPathInformationPD2 self, vectoritkPointD2 start)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetStartPoint(self, *args)


    def SetEndPoint(self, *args) -> "void":
        """
        SetEndPoint(itkSpeedFunctionPathInformationPD2 self, itkPointD2 end)
        SetEndPoint(itkSpeedFunctionPathInformationPD2 self, vectoritkPointD2 end)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetEndPoint(self, *args)


    def AddWayPoint(self, *args) -> "void":
        """
        AddWayPoint(itkSpeedFunctionPathInformationPD2 self, itkPointD2 way)
        AddWayPoint(itkSpeedFunctionPathInformationPD2 self, vectoritkPointD2 way)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_AddWayPoint(self, *args)


    def SetCurrent(self, *args) -> "void":
        """
        SetCurrent(itkSpeedFunctionPathInformationPD2 self, vectoritkPointD2 newcurrent)
        SetCurrent(itkSpeedFunctionPathInformationPD2 self, itkPointD2 current)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetCurrent(self, *args)


    def SetPrevious(self, *args) -> "void":
        """
        SetPrevious(itkSpeedFunctionPathInformationPD2 self, vectoritkPointD2 newprevious)
        SetPrevious(itkSpeedFunctionPathInformationPD2 self, itkPointD2 newprevious)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetPrevious(self, *args)


    def SetNext(self, *args) -> "void":
        """
        SetNext(itkSpeedFunctionPathInformationPD2 self, vectoritkPointD2 newnext)
        SetNext(itkSpeedFunctionPathInformationPD2 self, itkPointD2 newnext)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetNext(self, *args)


    def Advance(self) -> "void":
        """Advance(itkSpeedFunctionPathInformationPD2 self)"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_Advance(self)


    def GetNumberOfPoints(self) -> "unsigned int":
        """GetNumberOfPoints(itkSpeedFunctionPathInformationPD2 self) -> unsigned int"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetNumberOfPoints(self)


    def GetStartPoint(self) -> "std::vector< itkPointD2,std::allocator< itkPointD2 > > const &":
        """GetStartPoint(itkSpeedFunctionPathInformationPD2 self) -> vectoritkPointD2"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetStartPoint(self)


    def GetEndPoint(self) -> "std::vector< itkPointD2,std::allocator< itkPointD2 > > const &":
        """GetEndPoint(itkSpeedFunctionPathInformationPD2 self) -> vectoritkPointD2"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetEndPoint(self)


    def GetWayPoint(self, i: 'unsigned long') -> "std::vector< itkPointD2,std::allocator< itkPointD2 > > const &":
        """GetWayPoint(itkSpeedFunctionPathInformationPD2 self, unsigned long i) -> vectoritkPointD2"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetWayPoint(self, i)


    def HasNextFront(self) -> "bool":
        """HasNextFront(itkSpeedFunctionPathInformationPD2 self) -> bool"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_HasNextFront(self)


    def GetCurrentFrontAndAdvance(self) -> "std::vector< itkPointD2,std::allocator< itkPointD2 > > const &":
        """GetCurrentFrontAndAdvance(itkSpeedFunctionPathInformationPD2 self) -> vectoritkPointD2"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetCurrentFrontAndAdvance(self)


    def PeekCurrentFront(self) -> "std::vector< itkPointD2,std::allocator< itkPointD2 > > const &":
        """PeekCurrentFront(itkSpeedFunctionPathInformationPD2 self) -> vectoritkPointD2"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_PeekCurrentFront(self)


    def PeekNextFront(self) -> "std::vector< itkPointD2,std::allocator< itkPointD2 > > const &":
        """PeekNextFront(itkSpeedFunctionPathInformationPD2 self) -> vectoritkPointD2"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_PeekNextFront(self)


    def PeekPreviousFront(self) -> "std::vector< itkPointD2,std::allocator< itkPointD2 > > const &":
        """PeekPreviousFront(itkSpeedFunctionPathInformationPD2 self) -> vectoritkPointD2"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_PeekPreviousFront(self)

    __swig_destroy__ = _itkSpeedFunctionPathInformationPython.delete_itkSpeedFunctionPathInformationPD2

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionPathInformationPD2 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionPathInformationPD2"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionPathInformationPD2

        Create a new object of the class itkSpeedFunctionPathInformationPD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionPathInformationPD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionPathInformationPD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionPathInformationPD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionPathInformationPD2.Clone = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_Clone, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.ClearInfo = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_ClearInfo, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.SetStartPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetStartPoint, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.SetEndPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetEndPoint, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.AddWayPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_AddWayPoint, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.SetCurrent = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetCurrent, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.SetPrevious = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetPrevious, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.SetNext = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetNext, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.Advance = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_Advance, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.GetNumberOfPoints = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetNumberOfPoints, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.GetStartPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetStartPoint, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.GetEndPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetEndPoint, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.GetWayPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetWayPoint, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.HasNextFront = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_HasNextFront, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.GetCurrentFrontAndAdvance = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetCurrentFrontAndAdvance, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.PeekCurrentFront = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_PeekCurrentFront, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.PeekNextFront = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_PeekNextFront, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2.PeekPreviousFront = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_PeekPreviousFront, None, itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2_swigregister = _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_swigregister
itkSpeedFunctionPathInformationPD2_swigregister(itkSpeedFunctionPathInformationPD2)

def itkSpeedFunctionPathInformationPD2___New_orig__() -> "itkSpeedFunctionPathInformationPD2_Pointer":
    """itkSpeedFunctionPathInformationPD2___New_orig__() -> itkSpeedFunctionPathInformationPD2_Pointer"""
    return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2___New_orig__()

def itkSpeedFunctionPathInformationPD2_cast(obj: 'itkLightObject') -> "itkSpeedFunctionPathInformationPD2 *":
    """itkSpeedFunctionPathInformationPD2_cast(itkLightObject obj) -> itkSpeedFunctionPathInformationPD2"""
    return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_cast(obj)

class itkSpeedFunctionPathInformationPD3(ITKCommonBasePython.itkLightObject):
    """Proxy of C++ itkSpeedFunctionPathInformationPD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpeedFunctionPathInformationPD3_Pointer":
        """__New_orig__() -> itkSpeedFunctionPathInformationPD3_Pointer"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpeedFunctionPathInformationPD3_Pointer":
        """Clone(itkSpeedFunctionPathInformationPD3 self) -> itkSpeedFunctionPathInformationPD3_Pointer"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_Clone(self)


    def ClearInfo(self) -> "void":
        """ClearInfo(itkSpeedFunctionPathInformationPD3 self)"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_ClearInfo(self)


    def SetStartPoint(self, *args) -> "void":
        """
        SetStartPoint(itkSpeedFunctionPathInformationPD3 self, itkPointD3 start)
        SetStartPoint(itkSpeedFunctionPathInformationPD3 self, vectoritkPointD3 start)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetStartPoint(self, *args)


    def SetEndPoint(self, *args) -> "void":
        """
        SetEndPoint(itkSpeedFunctionPathInformationPD3 self, itkPointD3 end)
        SetEndPoint(itkSpeedFunctionPathInformationPD3 self, vectoritkPointD3 end)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetEndPoint(self, *args)


    def AddWayPoint(self, *args) -> "void":
        """
        AddWayPoint(itkSpeedFunctionPathInformationPD3 self, itkPointD3 way)
        AddWayPoint(itkSpeedFunctionPathInformationPD3 self, vectoritkPointD3 way)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_AddWayPoint(self, *args)


    def SetCurrent(self, *args) -> "void":
        """
        SetCurrent(itkSpeedFunctionPathInformationPD3 self, vectoritkPointD3 newcurrent)
        SetCurrent(itkSpeedFunctionPathInformationPD3 self, itkPointD3 current)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetCurrent(self, *args)


    def SetPrevious(self, *args) -> "void":
        """
        SetPrevious(itkSpeedFunctionPathInformationPD3 self, vectoritkPointD3 newprevious)
        SetPrevious(itkSpeedFunctionPathInformationPD3 self, itkPointD3 newprevious)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetPrevious(self, *args)


    def SetNext(self, *args) -> "void":
        """
        SetNext(itkSpeedFunctionPathInformationPD3 self, vectoritkPointD3 newnext)
        SetNext(itkSpeedFunctionPathInformationPD3 self, itkPointD3 newnext)
        """
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetNext(self, *args)


    def Advance(self) -> "void":
        """Advance(itkSpeedFunctionPathInformationPD3 self)"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_Advance(self)


    def GetNumberOfPoints(self) -> "unsigned int":
        """GetNumberOfPoints(itkSpeedFunctionPathInformationPD3 self) -> unsigned int"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetNumberOfPoints(self)


    def GetStartPoint(self) -> "std::vector< itkPointD3,std::allocator< itkPointD3 > > const &":
        """GetStartPoint(itkSpeedFunctionPathInformationPD3 self) -> vectoritkPointD3"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetStartPoint(self)


    def GetEndPoint(self) -> "std::vector< itkPointD3,std::allocator< itkPointD3 > > const &":
        """GetEndPoint(itkSpeedFunctionPathInformationPD3 self) -> vectoritkPointD3"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetEndPoint(self)


    def GetWayPoint(self, i: 'unsigned long') -> "std::vector< itkPointD3,std::allocator< itkPointD3 > > const &":
        """GetWayPoint(itkSpeedFunctionPathInformationPD3 self, unsigned long i) -> vectoritkPointD3"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetWayPoint(self, i)


    def HasNextFront(self) -> "bool":
        """HasNextFront(itkSpeedFunctionPathInformationPD3 self) -> bool"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_HasNextFront(self)


    def GetCurrentFrontAndAdvance(self) -> "std::vector< itkPointD3,std::allocator< itkPointD3 > > const &":
        """GetCurrentFrontAndAdvance(itkSpeedFunctionPathInformationPD3 self) -> vectoritkPointD3"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetCurrentFrontAndAdvance(self)


    def PeekCurrentFront(self) -> "std::vector< itkPointD3,std::allocator< itkPointD3 > > const &":
        """PeekCurrentFront(itkSpeedFunctionPathInformationPD3 self) -> vectoritkPointD3"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_PeekCurrentFront(self)


    def PeekNextFront(self) -> "std::vector< itkPointD3,std::allocator< itkPointD3 > > const &":
        """PeekNextFront(itkSpeedFunctionPathInformationPD3 self) -> vectoritkPointD3"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_PeekNextFront(self)


    def PeekPreviousFront(self) -> "std::vector< itkPointD3,std::allocator< itkPointD3 > > const &":
        """PeekPreviousFront(itkSpeedFunctionPathInformationPD3 self) -> vectoritkPointD3"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_PeekPreviousFront(self)

    __swig_destroy__ = _itkSpeedFunctionPathInformationPython.delete_itkSpeedFunctionPathInformationPD3

    def cast(obj: 'itkLightObject') -> "itkSpeedFunctionPathInformationPD3 *":
        """cast(itkLightObject obj) -> itkSpeedFunctionPathInformationPD3"""
        return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionPathInformationPD3

        Create a new object of the class itkSpeedFunctionPathInformationPD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionPathInformationPD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionPathInformationPD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpeedFunctionPathInformationPD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpeedFunctionPathInformationPD3.Clone = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_Clone, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.ClearInfo = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_ClearInfo, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.SetStartPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetStartPoint, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.SetEndPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetEndPoint, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.AddWayPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_AddWayPoint, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.SetCurrent = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetCurrent, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.SetPrevious = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetPrevious, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.SetNext = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetNext, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.Advance = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_Advance, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.GetNumberOfPoints = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetNumberOfPoints, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.GetStartPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetStartPoint, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.GetEndPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetEndPoint, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.GetWayPoint = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetWayPoint, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.HasNextFront = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_HasNextFront, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.GetCurrentFrontAndAdvance = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetCurrentFrontAndAdvance, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.PeekCurrentFront = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_PeekCurrentFront, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.PeekNextFront = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_PeekNextFront, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3.PeekPreviousFront = new_instancemethod(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_PeekPreviousFront, None, itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3_swigregister = _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_swigregister
itkSpeedFunctionPathInformationPD3_swigregister(itkSpeedFunctionPathInformationPD3)

def itkSpeedFunctionPathInformationPD3___New_orig__() -> "itkSpeedFunctionPathInformationPD3_Pointer":
    """itkSpeedFunctionPathInformationPD3___New_orig__() -> itkSpeedFunctionPathInformationPD3_Pointer"""
    return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3___New_orig__()

def itkSpeedFunctionPathInformationPD3_cast(obj: 'itkLightObject') -> "itkSpeedFunctionPathInformationPD3 *":
    """itkSpeedFunctionPathInformationPD3_cast(itkLightObject obj) -> itkSpeedFunctionPathInformationPD3"""
    return _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_cast(obj)



