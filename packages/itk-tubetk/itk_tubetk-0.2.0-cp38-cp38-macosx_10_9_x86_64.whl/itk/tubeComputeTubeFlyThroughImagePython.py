# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _tubeComputeTubeFlyThroughImagePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_tubeComputeTubeFlyThroughImagePython', [dirname(__file__)])
        except ImportError:
            import _tubeComputeTubeFlyThroughImagePython
            return _tubeComputeTubeFlyThroughImagePython
        if fp is not None:
            try:
                _mod = imp.load_module('_tubeComputeTubeFlyThroughImagePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _tubeComputeTubeFlyThroughImagePython = swig_import_helper()
    del swig_import_helper
else:
    import _tubeComputeTubeFlyThroughImagePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkGroupSpatialObjectPython
import itkSpatialObjectBasePython
import itkImageRegionPython
import ITKCommonBasePython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkPointPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import itkAffineTransformPython
import itkTransformBasePython
import itkArray2DPython
import itkDiffusionTensor3DPython
import itkSymmetricSecondRankTensorPython
import itkArrayPython
import itkOptimizerParametersPython
import itkVariableLengthVectorPython
import itkMatrixOffsetTransformBasePython
import itkImagePython
import itkRGBPixelPython

def tubeComputeTubeFlyThroughImageD3_New():
  return tubeComputeTubeFlyThroughImageD3.New()


def tubeComputeTubeFlyThroughImageD2_New():
  return tubeComputeTubeFlyThroughImageD2.New()


def tubeComputeTubeFlyThroughImageF3_New():
  return tubeComputeTubeFlyThroughImageF3.New()


def tubeComputeTubeFlyThroughImageF2_New():
  return tubeComputeTubeFlyThroughImageF2.New()


def tubeComputeTubeFlyThroughImageUS3_New():
  return tubeComputeTubeFlyThroughImageUS3.New()


def tubeComputeTubeFlyThroughImageUS2_New():
  return tubeComputeTubeFlyThroughImageUS2.New()


def tubeComputeTubeFlyThroughImageUC3_New():
  return tubeComputeTubeFlyThroughImageUC3.New()


def tubeComputeTubeFlyThroughImageUC2_New():
  return tubeComputeTubeFlyThroughImageUC2.New()


def tubeComputeTubeFlyThroughImageSS3_New():
  return tubeComputeTubeFlyThroughImageSS3.New()


def tubeComputeTubeFlyThroughImageSS2_New():
  return tubeComputeTubeFlyThroughImageSS2.New()

class tubeComputeTubeFlyThroughImageD2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeComputeTubeFlyThroughImageD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeComputeTubeFlyThroughImageD2_Pointer":
        """__New_orig__() -> tubeComputeTubeFlyThroughImageD2_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeComputeTubeFlyThroughImageD2_Pointer":
        """Clone(tubeComputeTubeFlyThroughImageD2 self) -> tubeComputeTubeFlyThroughImageD2_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_Clone(self)


    def SetTubeId(self, value: 'unsigned long') -> "void":
        """SetTubeId(tubeComputeTubeFlyThroughImageD2 self, unsigned long value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_SetTubeId(self, value)


    def GetTubeId(self) -> "unsigned long":
        """GetTubeId(tubeComputeTubeFlyThroughImageD2 self) -> unsigned long"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_GetTubeId(self)


    def SetInputImage(self, value: 'itkImageD2') -> "void":
        """SetInputImage(tubeComputeTubeFlyThroughImageD2 self, itkImageD2 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_SetInputImage(self, value)


    def GetInputImage(self) -> "itkImageD2 const *":
        """GetInputImage(tubeComputeTubeFlyThroughImageD2 self) -> itkImageD2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_GetInputImage(self)


    def SetInput(self, value: 'itkGroupSpatialObject2') -> "void":
        """SetInput(tubeComputeTubeFlyThroughImageD2 self, itkGroupSpatialObject2 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_SetInput(self, value)


    def GetInput(self) -> "itkGroupSpatialObject2 const *":
        """GetInput(tubeComputeTubeFlyThroughImageD2 self) -> itkGroupSpatialObject2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_GetInput(self)


    def GetOutput(self) -> "itkImageD2 *":
        """GetOutput(tubeComputeTubeFlyThroughImageD2 self) -> itkImageD2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_GetOutput(self)


    def GetOutputMask(self) -> "itkImageUC2 *":
        """GetOutputMask(tubeComputeTubeFlyThroughImageD2 self) -> itkImageUC2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_GetOutputMask(self)

    __swig_destroy__ = _tubeComputeTubeFlyThroughImagePython.delete_tubeComputeTubeFlyThroughImageD2

    def cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageD2 *":
        """cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageD2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeComputeTubeFlyThroughImageD2

        Create a new object of the class tubeComputeTubeFlyThroughImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeTubeFlyThroughImageD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeTubeFlyThroughImageD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeTubeFlyThroughImageD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeComputeTubeFlyThroughImageD2.Clone = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_Clone, None, tubeComputeTubeFlyThroughImageD2)
tubeComputeTubeFlyThroughImageD2.SetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_SetTubeId, None, tubeComputeTubeFlyThroughImageD2)
tubeComputeTubeFlyThroughImageD2.GetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_GetTubeId, None, tubeComputeTubeFlyThroughImageD2)
tubeComputeTubeFlyThroughImageD2.SetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_SetInputImage, None, tubeComputeTubeFlyThroughImageD2)
tubeComputeTubeFlyThroughImageD2.GetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_GetInputImage, None, tubeComputeTubeFlyThroughImageD2)
tubeComputeTubeFlyThroughImageD2.SetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_SetInput, None, tubeComputeTubeFlyThroughImageD2)
tubeComputeTubeFlyThroughImageD2.GetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_GetInput, None, tubeComputeTubeFlyThroughImageD2)
tubeComputeTubeFlyThroughImageD2.GetOutput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_GetOutput, None, tubeComputeTubeFlyThroughImageD2)
tubeComputeTubeFlyThroughImageD2.GetOutputMask = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_GetOutputMask, None, tubeComputeTubeFlyThroughImageD2)
tubeComputeTubeFlyThroughImageD2_swigregister = _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_swigregister
tubeComputeTubeFlyThroughImageD2_swigregister(tubeComputeTubeFlyThroughImageD2)

def tubeComputeTubeFlyThroughImageD2___New_orig__() -> "tubeComputeTubeFlyThroughImageD2_Pointer":
    """tubeComputeTubeFlyThroughImageD2___New_orig__() -> tubeComputeTubeFlyThroughImageD2_Pointer"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2___New_orig__()

def tubeComputeTubeFlyThroughImageD2_cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageD2 *":
    """tubeComputeTubeFlyThroughImageD2_cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageD2"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD2_cast(obj)

class tubeComputeTubeFlyThroughImageD3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeComputeTubeFlyThroughImageD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeComputeTubeFlyThroughImageD3_Pointer":
        """__New_orig__() -> tubeComputeTubeFlyThroughImageD3_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeComputeTubeFlyThroughImageD3_Pointer":
        """Clone(tubeComputeTubeFlyThroughImageD3 self) -> tubeComputeTubeFlyThroughImageD3_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_Clone(self)


    def SetTubeId(self, value: 'unsigned long') -> "void":
        """SetTubeId(tubeComputeTubeFlyThroughImageD3 self, unsigned long value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_SetTubeId(self, value)


    def GetTubeId(self) -> "unsigned long":
        """GetTubeId(tubeComputeTubeFlyThroughImageD3 self) -> unsigned long"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_GetTubeId(self)


    def SetInputImage(self, value: 'itkImageD3') -> "void":
        """SetInputImage(tubeComputeTubeFlyThroughImageD3 self, itkImageD3 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_SetInputImage(self, value)


    def GetInputImage(self) -> "itkImageD3 const *":
        """GetInputImage(tubeComputeTubeFlyThroughImageD3 self) -> itkImageD3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_GetInputImage(self)


    def SetInput(self, value: 'itkGroupSpatialObject3') -> "void":
        """SetInput(tubeComputeTubeFlyThroughImageD3 self, itkGroupSpatialObject3 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_SetInput(self, value)


    def GetInput(self) -> "itkGroupSpatialObject3 const *":
        """GetInput(tubeComputeTubeFlyThroughImageD3 self) -> itkGroupSpatialObject3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_GetInput(self)


    def GetOutput(self) -> "itkImageD3 *":
        """GetOutput(tubeComputeTubeFlyThroughImageD3 self) -> itkImageD3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_GetOutput(self)


    def GetOutputMask(self) -> "itkImageUC3 *":
        """GetOutputMask(tubeComputeTubeFlyThroughImageD3 self) -> itkImageUC3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_GetOutputMask(self)

    __swig_destroy__ = _tubeComputeTubeFlyThroughImagePython.delete_tubeComputeTubeFlyThroughImageD3

    def cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageD3 *":
        """cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageD3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeComputeTubeFlyThroughImageD3

        Create a new object of the class tubeComputeTubeFlyThroughImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeTubeFlyThroughImageD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeTubeFlyThroughImageD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeTubeFlyThroughImageD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeComputeTubeFlyThroughImageD3.Clone = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_Clone, None, tubeComputeTubeFlyThroughImageD3)
tubeComputeTubeFlyThroughImageD3.SetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_SetTubeId, None, tubeComputeTubeFlyThroughImageD3)
tubeComputeTubeFlyThroughImageD3.GetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_GetTubeId, None, tubeComputeTubeFlyThroughImageD3)
tubeComputeTubeFlyThroughImageD3.SetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_SetInputImage, None, tubeComputeTubeFlyThroughImageD3)
tubeComputeTubeFlyThroughImageD3.GetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_GetInputImage, None, tubeComputeTubeFlyThroughImageD3)
tubeComputeTubeFlyThroughImageD3.SetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_SetInput, None, tubeComputeTubeFlyThroughImageD3)
tubeComputeTubeFlyThroughImageD3.GetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_GetInput, None, tubeComputeTubeFlyThroughImageD3)
tubeComputeTubeFlyThroughImageD3.GetOutput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_GetOutput, None, tubeComputeTubeFlyThroughImageD3)
tubeComputeTubeFlyThroughImageD3.GetOutputMask = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_GetOutputMask, None, tubeComputeTubeFlyThroughImageD3)
tubeComputeTubeFlyThroughImageD3_swigregister = _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_swigregister
tubeComputeTubeFlyThroughImageD3_swigregister(tubeComputeTubeFlyThroughImageD3)

def tubeComputeTubeFlyThroughImageD3___New_orig__() -> "tubeComputeTubeFlyThroughImageD3_Pointer":
    """tubeComputeTubeFlyThroughImageD3___New_orig__() -> tubeComputeTubeFlyThroughImageD3_Pointer"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3___New_orig__()

def tubeComputeTubeFlyThroughImageD3_cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageD3 *":
    """tubeComputeTubeFlyThroughImageD3_cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageD3"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageD3_cast(obj)

class tubeComputeTubeFlyThroughImageF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeComputeTubeFlyThroughImageF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeComputeTubeFlyThroughImageF2_Pointer":
        """__New_orig__() -> tubeComputeTubeFlyThroughImageF2_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeComputeTubeFlyThroughImageF2_Pointer":
        """Clone(tubeComputeTubeFlyThroughImageF2 self) -> tubeComputeTubeFlyThroughImageF2_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_Clone(self)


    def SetTubeId(self, value: 'unsigned long') -> "void":
        """SetTubeId(tubeComputeTubeFlyThroughImageF2 self, unsigned long value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_SetTubeId(self, value)


    def GetTubeId(self) -> "unsigned long":
        """GetTubeId(tubeComputeTubeFlyThroughImageF2 self) -> unsigned long"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_GetTubeId(self)


    def SetInputImage(self, value: 'itkImageF2') -> "void":
        """SetInputImage(tubeComputeTubeFlyThroughImageF2 self, itkImageF2 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_SetInputImage(self, value)


    def GetInputImage(self) -> "itkImageF2 const *":
        """GetInputImage(tubeComputeTubeFlyThroughImageF2 self) -> itkImageF2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_GetInputImage(self)


    def SetInput(self, value: 'itkGroupSpatialObject2') -> "void":
        """SetInput(tubeComputeTubeFlyThroughImageF2 self, itkGroupSpatialObject2 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_SetInput(self, value)


    def GetInput(self) -> "itkGroupSpatialObject2 const *":
        """GetInput(tubeComputeTubeFlyThroughImageF2 self) -> itkGroupSpatialObject2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_GetInput(self)


    def GetOutput(self) -> "itkImageF2 *":
        """GetOutput(tubeComputeTubeFlyThroughImageF2 self) -> itkImageF2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_GetOutput(self)


    def GetOutputMask(self) -> "itkImageUC2 *":
        """GetOutputMask(tubeComputeTubeFlyThroughImageF2 self) -> itkImageUC2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_GetOutputMask(self)

    __swig_destroy__ = _tubeComputeTubeFlyThroughImagePython.delete_tubeComputeTubeFlyThroughImageF2

    def cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageF2 *":
        """cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageF2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeComputeTubeFlyThroughImageF2

        Create a new object of the class tubeComputeTubeFlyThroughImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeTubeFlyThroughImageF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeTubeFlyThroughImageF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeTubeFlyThroughImageF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeComputeTubeFlyThroughImageF2.Clone = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_Clone, None, tubeComputeTubeFlyThroughImageF2)
tubeComputeTubeFlyThroughImageF2.SetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_SetTubeId, None, tubeComputeTubeFlyThroughImageF2)
tubeComputeTubeFlyThroughImageF2.GetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_GetTubeId, None, tubeComputeTubeFlyThroughImageF2)
tubeComputeTubeFlyThroughImageF2.SetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_SetInputImage, None, tubeComputeTubeFlyThroughImageF2)
tubeComputeTubeFlyThroughImageF2.GetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_GetInputImage, None, tubeComputeTubeFlyThroughImageF2)
tubeComputeTubeFlyThroughImageF2.SetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_SetInput, None, tubeComputeTubeFlyThroughImageF2)
tubeComputeTubeFlyThroughImageF2.GetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_GetInput, None, tubeComputeTubeFlyThroughImageF2)
tubeComputeTubeFlyThroughImageF2.GetOutput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_GetOutput, None, tubeComputeTubeFlyThroughImageF2)
tubeComputeTubeFlyThroughImageF2.GetOutputMask = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_GetOutputMask, None, tubeComputeTubeFlyThroughImageF2)
tubeComputeTubeFlyThroughImageF2_swigregister = _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_swigregister
tubeComputeTubeFlyThroughImageF2_swigregister(tubeComputeTubeFlyThroughImageF2)

def tubeComputeTubeFlyThroughImageF2___New_orig__() -> "tubeComputeTubeFlyThroughImageF2_Pointer":
    """tubeComputeTubeFlyThroughImageF2___New_orig__() -> tubeComputeTubeFlyThroughImageF2_Pointer"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2___New_orig__()

def tubeComputeTubeFlyThroughImageF2_cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageF2 *":
    """tubeComputeTubeFlyThroughImageF2_cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageF2"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF2_cast(obj)

class tubeComputeTubeFlyThroughImageF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeComputeTubeFlyThroughImageF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeComputeTubeFlyThroughImageF3_Pointer":
        """__New_orig__() -> tubeComputeTubeFlyThroughImageF3_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeComputeTubeFlyThroughImageF3_Pointer":
        """Clone(tubeComputeTubeFlyThroughImageF3 self) -> tubeComputeTubeFlyThroughImageF3_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_Clone(self)


    def SetTubeId(self, value: 'unsigned long') -> "void":
        """SetTubeId(tubeComputeTubeFlyThroughImageF3 self, unsigned long value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_SetTubeId(self, value)


    def GetTubeId(self) -> "unsigned long":
        """GetTubeId(tubeComputeTubeFlyThroughImageF3 self) -> unsigned long"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_GetTubeId(self)


    def SetInputImage(self, value: 'itkImageF3') -> "void":
        """SetInputImage(tubeComputeTubeFlyThroughImageF3 self, itkImageF3 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_SetInputImage(self, value)


    def GetInputImage(self) -> "itkImageF3 const *":
        """GetInputImage(tubeComputeTubeFlyThroughImageF3 self) -> itkImageF3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_GetInputImage(self)


    def SetInput(self, value: 'itkGroupSpatialObject3') -> "void":
        """SetInput(tubeComputeTubeFlyThroughImageF3 self, itkGroupSpatialObject3 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_SetInput(self, value)


    def GetInput(self) -> "itkGroupSpatialObject3 const *":
        """GetInput(tubeComputeTubeFlyThroughImageF3 self) -> itkGroupSpatialObject3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_GetInput(self)


    def GetOutput(self) -> "itkImageF3 *":
        """GetOutput(tubeComputeTubeFlyThroughImageF3 self) -> itkImageF3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_GetOutput(self)


    def GetOutputMask(self) -> "itkImageUC3 *":
        """GetOutputMask(tubeComputeTubeFlyThroughImageF3 self) -> itkImageUC3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_GetOutputMask(self)

    __swig_destroy__ = _tubeComputeTubeFlyThroughImagePython.delete_tubeComputeTubeFlyThroughImageF3

    def cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageF3 *":
        """cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageF3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeComputeTubeFlyThroughImageF3

        Create a new object of the class tubeComputeTubeFlyThroughImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeTubeFlyThroughImageF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeTubeFlyThroughImageF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeTubeFlyThroughImageF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeComputeTubeFlyThroughImageF3.Clone = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_Clone, None, tubeComputeTubeFlyThroughImageF3)
tubeComputeTubeFlyThroughImageF3.SetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_SetTubeId, None, tubeComputeTubeFlyThroughImageF3)
tubeComputeTubeFlyThroughImageF3.GetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_GetTubeId, None, tubeComputeTubeFlyThroughImageF3)
tubeComputeTubeFlyThroughImageF3.SetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_SetInputImage, None, tubeComputeTubeFlyThroughImageF3)
tubeComputeTubeFlyThroughImageF3.GetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_GetInputImage, None, tubeComputeTubeFlyThroughImageF3)
tubeComputeTubeFlyThroughImageF3.SetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_SetInput, None, tubeComputeTubeFlyThroughImageF3)
tubeComputeTubeFlyThroughImageF3.GetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_GetInput, None, tubeComputeTubeFlyThroughImageF3)
tubeComputeTubeFlyThroughImageF3.GetOutput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_GetOutput, None, tubeComputeTubeFlyThroughImageF3)
tubeComputeTubeFlyThroughImageF3.GetOutputMask = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_GetOutputMask, None, tubeComputeTubeFlyThroughImageF3)
tubeComputeTubeFlyThroughImageF3_swigregister = _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_swigregister
tubeComputeTubeFlyThroughImageF3_swigregister(tubeComputeTubeFlyThroughImageF3)

def tubeComputeTubeFlyThroughImageF3___New_orig__() -> "tubeComputeTubeFlyThroughImageF3_Pointer":
    """tubeComputeTubeFlyThroughImageF3___New_orig__() -> tubeComputeTubeFlyThroughImageF3_Pointer"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3___New_orig__()

def tubeComputeTubeFlyThroughImageF3_cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageF3 *":
    """tubeComputeTubeFlyThroughImageF3_cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageF3"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageF3_cast(obj)

class tubeComputeTubeFlyThroughImageSS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeComputeTubeFlyThroughImageSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeComputeTubeFlyThroughImageSS2_Pointer":
        """__New_orig__() -> tubeComputeTubeFlyThroughImageSS2_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeComputeTubeFlyThroughImageSS2_Pointer":
        """Clone(tubeComputeTubeFlyThroughImageSS2 self) -> tubeComputeTubeFlyThroughImageSS2_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_Clone(self)


    def SetTubeId(self, value: 'unsigned long') -> "void":
        """SetTubeId(tubeComputeTubeFlyThroughImageSS2 self, unsigned long value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_SetTubeId(self, value)


    def GetTubeId(self) -> "unsigned long":
        """GetTubeId(tubeComputeTubeFlyThroughImageSS2 self) -> unsigned long"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_GetTubeId(self)


    def SetInputImage(self, value: 'itkImageSS2') -> "void":
        """SetInputImage(tubeComputeTubeFlyThroughImageSS2 self, itkImageSS2 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_SetInputImage(self, value)


    def GetInputImage(self) -> "itkImageSS2 const *":
        """GetInputImage(tubeComputeTubeFlyThroughImageSS2 self) -> itkImageSS2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_GetInputImage(self)


    def SetInput(self, value: 'itkGroupSpatialObject2') -> "void":
        """SetInput(tubeComputeTubeFlyThroughImageSS2 self, itkGroupSpatialObject2 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_SetInput(self, value)


    def GetInput(self) -> "itkGroupSpatialObject2 const *":
        """GetInput(tubeComputeTubeFlyThroughImageSS2 self) -> itkGroupSpatialObject2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_GetInput(self)


    def GetOutput(self) -> "itkImageSS2 *":
        """GetOutput(tubeComputeTubeFlyThroughImageSS2 self) -> itkImageSS2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_GetOutput(self)


    def GetOutputMask(self) -> "itkImageUC2 *":
        """GetOutputMask(tubeComputeTubeFlyThroughImageSS2 self) -> itkImageUC2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_GetOutputMask(self)

    __swig_destroy__ = _tubeComputeTubeFlyThroughImagePython.delete_tubeComputeTubeFlyThroughImageSS2

    def cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageSS2 *":
        """cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageSS2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeComputeTubeFlyThroughImageSS2

        Create a new object of the class tubeComputeTubeFlyThroughImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeTubeFlyThroughImageSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeTubeFlyThroughImageSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeTubeFlyThroughImageSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeComputeTubeFlyThroughImageSS2.Clone = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_Clone, None, tubeComputeTubeFlyThroughImageSS2)
tubeComputeTubeFlyThroughImageSS2.SetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_SetTubeId, None, tubeComputeTubeFlyThroughImageSS2)
tubeComputeTubeFlyThroughImageSS2.GetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_GetTubeId, None, tubeComputeTubeFlyThroughImageSS2)
tubeComputeTubeFlyThroughImageSS2.SetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_SetInputImage, None, tubeComputeTubeFlyThroughImageSS2)
tubeComputeTubeFlyThroughImageSS2.GetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_GetInputImage, None, tubeComputeTubeFlyThroughImageSS2)
tubeComputeTubeFlyThroughImageSS2.SetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_SetInput, None, tubeComputeTubeFlyThroughImageSS2)
tubeComputeTubeFlyThroughImageSS2.GetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_GetInput, None, tubeComputeTubeFlyThroughImageSS2)
tubeComputeTubeFlyThroughImageSS2.GetOutput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_GetOutput, None, tubeComputeTubeFlyThroughImageSS2)
tubeComputeTubeFlyThroughImageSS2.GetOutputMask = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_GetOutputMask, None, tubeComputeTubeFlyThroughImageSS2)
tubeComputeTubeFlyThroughImageSS2_swigregister = _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_swigregister
tubeComputeTubeFlyThroughImageSS2_swigregister(tubeComputeTubeFlyThroughImageSS2)

def tubeComputeTubeFlyThroughImageSS2___New_orig__() -> "tubeComputeTubeFlyThroughImageSS2_Pointer":
    """tubeComputeTubeFlyThroughImageSS2___New_orig__() -> tubeComputeTubeFlyThroughImageSS2_Pointer"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2___New_orig__()

def tubeComputeTubeFlyThroughImageSS2_cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageSS2 *":
    """tubeComputeTubeFlyThroughImageSS2_cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageSS2"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS2_cast(obj)

class tubeComputeTubeFlyThroughImageSS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeComputeTubeFlyThroughImageSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeComputeTubeFlyThroughImageSS3_Pointer":
        """__New_orig__() -> tubeComputeTubeFlyThroughImageSS3_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeComputeTubeFlyThroughImageSS3_Pointer":
        """Clone(tubeComputeTubeFlyThroughImageSS3 self) -> tubeComputeTubeFlyThroughImageSS3_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_Clone(self)


    def SetTubeId(self, value: 'unsigned long') -> "void":
        """SetTubeId(tubeComputeTubeFlyThroughImageSS3 self, unsigned long value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_SetTubeId(self, value)


    def GetTubeId(self) -> "unsigned long":
        """GetTubeId(tubeComputeTubeFlyThroughImageSS3 self) -> unsigned long"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_GetTubeId(self)


    def SetInputImage(self, value: 'itkImageSS3') -> "void":
        """SetInputImage(tubeComputeTubeFlyThroughImageSS3 self, itkImageSS3 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_SetInputImage(self, value)


    def GetInputImage(self) -> "itkImageSS3 const *":
        """GetInputImage(tubeComputeTubeFlyThroughImageSS3 self) -> itkImageSS3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_GetInputImage(self)


    def SetInput(self, value: 'itkGroupSpatialObject3') -> "void":
        """SetInput(tubeComputeTubeFlyThroughImageSS3 self, itkGroupSpatialObject3 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_SetInput(self, value)


    def GetInput(self) -> "itkGroupSpatialObject3 const *":
        """GetInput(tubeComputeTubeFlyThroughImageSS3 self) -> itkGroupSpatialObject3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_GetInput(self)


    def GetOutput(self) -> "itkImageSS3 *":
        """GetOutput(tubeComputeTubeFlyThroughImageSS3 self) -> itkImageSS3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_GetOutput(self)


    def GetOutputMask(self) -> "itkImageUC3 *":
        """GetOutputMask(tubeComputeTubeFlyThroughImageSS3 self) -> itkImageUC3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_GetOutputMask(self)

    __swig_destroy__ = _tubeComputeTubeFlyThroughImagePython.delete_tubeComputeTubeFlyThroughImageSS3

    def cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageSS3 *":
        """cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageSS3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeComputeTubeFlyThroughImageSS3

        Create a new object of the class tubeComputeTubeFlyThroughImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeTubeFlyThroughImageSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeTubeFlyThroughImageSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeTubeFlyThroughImageSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeComputeTubeFlyThroughImageSS3.Clone = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_Clone, None, tubeComputeTubeFlyThroughImageSS3)
tubeComputeTubeFlyThroughImageSS3.SetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_SetTubeId, None, tubeComputeTubeFlyThroughImageSS3)
tubeComputeTubeFlyThroughImageSS3.GetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_GetTubeId, None, tubeComputeTubeFlyThroughImageSS3)
tubeComputeTubeFlyThroughImageSS3.SetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_SetInputImage, None, tubeComputeTubeFlyThroughImageSS3)
tubeComputeTubeFlyThroughImageSS3.GetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_GetInputImage, None, tubeComputeTubeFlyThroughImageSS3)
tubeComputeTubeFlyThroughImageSS3.SetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_SetInput, None, tubeComputeTubeFlyThroughImageSS3)
tubeComputeTubeFlyThroughImageSS3.GetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_GetInput, None, tubeComputeTubeFlyThroughImageSS3)
tubeComputeTubeFlyThroughImageSS3.GetOutput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_GetOutput, None, tubeComputeTubeFlyThroughImageSS3)
tubeComputeTubeFlyThroughImageSS3.GetOutputMask = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_GetOutputMask, None, tubeComputeTubeFlyThroughImageSS3)
tubeComputeTubeFlyThroughImageSS3_swigregister = _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_swigregister
tubeComputeTubeFlyThroughImageSS3_swigregister(tubeComputeTubeFlyThroughImageSS3)

def tubeComputeTubeFlyThroughImageSS3___New_orig__() -> "tubeComputeTubeFlyThroughImageSS3_Pointer":
    """tubeComputeTubeFlyThroughImageSS3___New_orig__() -> tubeComputeTubeFlyThroughImageSS3_Pointer"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3___New_orig__()

def tubeComputeTubeFlyThroughImageSS3_cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageSS3 *":
    """tubeComputeTubeFlyThroughImageSS3_cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageSS3"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageSS3_cast(obj)

class tubeComputeTubeFlyThroughImageUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeComputeTubeFlyThroughImageUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeComputeTubeFlyThroughImageUC2_Pointer":
        """__New_orig__() -> tubeComputeTubeFlyThroughImageUC2_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeComputeTubeFlyThroughImageUC2_Pointer":
        """Clone(tubeComputeTubeFlyThroughImageUC2 self) -> tubeComputeTubeFlyThroughImageUC2_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_Clone(self)


    def SetTubeId(self, value: 'unsigned long') -> "void":
        """SetTubeId(tubeComputeTubeFlyThroughImageUC2 self, unsigned long value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_SetTubeId(self, value)


    def GetTubeId(self) -> "unsigned long":
        """GetTubeId(tubeComputeTubeFlyThroughImageUC2 self) -> unsigned long"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_GetTubeId(self)


    def SetInputImage(self, value: 'itkImageUC2') -> "void":
        """SetInputImage(tubeComputeTubeFlyThroughImageUC2 self, itkImageUC2 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_SetInputImage(self, value)


    def GetInputImage(self) -> "itkImageUC2 const *":
        """GetInputImage(tubeComputeTubeFlyThroughImageUC2 self) -> itkImageUC2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_GetInputImage(self)


    def SetInput(self, value: 'itkGroupSpatialObject2') -> "void":
        """SetInput(tubeComputeTubeFlyThroughImageUC2 self, itkGroupSpatialObject2 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_SetInput(self, value)


    def GetInput(self) -> "itkGroupSpatialObject2 const *":
        """GetInput(tubeComputeTubeFlyThroughImageUC2 self) -> itkGroupSpatialObject2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_GetInput(self)


    def GetOutput(self) -> "itkImageUC2 *":
        """GetOutput(tubeComputeTubeFlyThroughImageUC2 self) -> itkImageUC2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_GetOutput(self)


    def GetOutputMask(self) -> "itkImageUC2 *":
        """GetOutputMask(tubeComputeTubeFlyThroughImageUC2 self) -> itkImageUC2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_GetOutputMask(self)

    __swig_destroy__ = _tubeComputeTubeFlyThroughImagePython.delete_tubeComputeTubeFlyThroughImageUC2

    def cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageUC2 *":
        """cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageUC2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeComputeTubeFlyThroughImageUC2

        Create a new object of the class tubeComputeTubeFlyThroughImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeTubeFlyThroughImageUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeTubeFlyThroughImageUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeTubeFlyThroughImageUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeComputeTubeFlyThroughImageUC2.Clone = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_Clone, None, tubeComputeTubeFlyThroughImageUC2)
tubeComputeTubeFlyThroughImageUC2.SetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_SetTubeId, None, tubeComputeTubeFlyThroughImageUC2)
tubeComputeTubeFlyThroughImageUC2.GetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_GetTubeId, None, tubeComputeTubeFlyThroughImageUC2)
tubeComputeTubeFlyThroughImageUC2.SetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_SetInputImage, None, tubeComputeTubeFlyThroughImageUC2)
tubeComputeTubeFlyThroughImageUC2.GetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_GetInputImage, None, tubeComputeTubeFlyThroughImageUC2)
tubeComputeTubeFlyThroughImageUC2.SetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_SetInput, None, tubeComputeTubeFlyThroughImageUC2)
tubeComputeTubeFlyThroughImageUC2.GetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_GetInput, None, tubeComputeTubeFlyThroughImageUC2)
tubeComputeTubeFlyThroughImageUC2.GetOutput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_GetOutput, None, tubeComputeTubeFlyThroughImageUC2)
tubeComputeTubeFlyThroughImageUC2.GetOutputMask = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_GetOutputMask, None, tubeComputeTubeFlyThroughImageUC2)
tubeComputeTubeFlyThroughImageUC2_swigregister = _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_swigregister
tubeComputeTubeFlyThroughImageUC2_swigregister(tubeComputeTubeFlyThroughImageUC2)

def tubeComputeTubeFlyThroughImageUC2___New_orig__() -> "tubeComputeTubeFlyThroughImageUC2_Pointer":
    """tubeComputeTubeFlyThroughImageUC2___New_orig__() -> tubeComputeTubeFlyThroughImageUC2_Pointer"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2___New_orig__()

def tubeComputeTubeFlyThroughImageUC2_cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageUC2 *":
    """tubeComputeTubeFlyThroughImageUC2_cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageUC2"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC2_cast(obj)

class tubeComputeTubeFlyThroughImageUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeComputeTubeFlyThroughImageUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeComputeTubeFlyThroughImageUC3_Pointer":
        """__New_orig__() -> tubeComputeTubeFlyThroughImageUC3_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeComputeTubeFlyThroughImageUC3_Pointer":
        """Clone(tubeComputeTubeFlyThroughImageUC3 self) -> tubeComputeTubeFlyThroughImageUC3_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_Clone(self)


    def SetTubeId(self, value: 'unsigned long') -> "void":
        """SetTubeId(tubeComputeTubeFlyThroughImageUC3 self, unsigned long value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_SetTubeId(self, value)


    def GetTubeId(self) -> "unsigned long":
        """GetTubeId(tubeComputeTubeFlyThroughImageUC3 self) -> unsigned long"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_GetTubeId(self)


    def SetInputImage(self, value: 'itkImageUC3') -> "void":
        """SetInputImage(tubeComputeTubeFlyThroughImageUC3 self, itkImageUC3 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_SetInputImage(self, value)


    def GetInputImage(self) -> "itkImageUC3 const *":
        """GetInputImage(tubeComputeTubeFlyThroughImageUC3 self) -> itkImageUC3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_GetInputImage(self)


    def SetInput(self, value: 'itkGroupSpatialObject3') -> "void":
        """SetInput(tubeComputeTubeFlyThroughImageUC3 self, itkGroupSpatialObject3 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_SetInput(self, value)


    def GetInput(self) -> "itkGroupSpatialObject3 const *":
        """GetInput(tubeComputeTubeFlyThroughImageUC3 self) -> itkGroupSpatialObject3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_GetInput(self)


    def GetOutput(self) -> "itkImageUC3 *":
        """GetOutput(tubeComputeTubeFlyThroughImageUC3 self) -> itkImageUC3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_GetOutput(self)


    def GetOutputMask(self) -> "itkImageUC3 *":
        """GetOutputMask(tubeComputeTubeFlyThroughImageUC3 self) -> itkImageUC3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_GetOutputMask(self)

    __swig_destroy__ = _tubeComputeTubeFlyThroughImagePython.delete_tubeComputeTubeFlyThroughImageUC3

    def cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageUC3 *":
        """cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageUC3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeComputeTubeFlyThroughImageUC3

        Create a new object of the class tubeComputeTubeFlyThroughImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeTubeFlyThroughImageUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeTubeFlyThroughImageUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeTubeFlyThroughImageUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeComputeTubeFlyThroughImageUC3.Clone = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_Clone, None, tubeComputeTubeFlyThroughImageUC3)
tubeComputeTubeFlyThroughImageUC3.SetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_SetTubeId, None, tubeComputeTubeFlyThroughImageUC3)
tubeComputeTubeFlyThroughImageUC3.GetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_GetTubeId, None, tubeComputeTubeFlyThroughImageUC3)
tubeComputeTubeFlyThroughImageUC3.SetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_SetInputImage, None, tubeComputeTubeFlyThroughImageUC3)
tubeComputeTubeFlyThroughImageUC3.GetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_GetInputImage, None, tubeComputeTubeFlyThroughImageUC3)
tubeComputeTubeFlyThroughImageUC3.SetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_SetInput, None, tubeComputeTubeFlyThroughImageUC3)
tubeComputeTubeFlyThroughImageUC3.GetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_GetInput, None, tubeComputeTubeFlyThroughImageUC3)
tubeComputeTubeFlyThroughImageUC3.GetOutput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_GetOutput, None, tubeComputeTubeFlyThroughImageUC3)
tubeComputeTubeFlyThroughImageUC3.GetOutputMask = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_GetOutputMask, None, tubeComputeTubeFlyThroughImageUC3)
tubeComputeTubeFlyThroughImageUC3_swigregister = _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_swigregister
tubeComputeTubeFlyThroughImageUC3_swigregister(tubeComputeTubeFlyThroughImageUC3)

def tubeComputeTubeFlyThroughImageUC3___New_orig__() -> "tubeComputeTubeFlyThroughImageUC3_Pointer":
    """tubeComputeTubeFlyThroughImageUC3___New_orig__() -> tubeComputeTubeFlyThroughImageUC3_Pointer"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3___New_orig__()

def tubeComputeTubeFlyThroughImageUC3_cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageUC3 *":
    """tubeComputeTubeFlyThroughImageUC3_cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageUC3"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUC3_cast(obj)

class tubeComputeTubeFlyThroughImageUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeComputeTubeFlyThroughImageUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeComputeTubeFlyThroughImageUS2_Pointer":
        """__New_orig__() -> tubeComputeTubeFlyThroughImageUS2_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeComputeTubeFlyThroughImageUS2_Pointer":
        """Clone(tubeComputeTubeFlyThroughImageUS2 self) -> tubeComputeTubeFlyThroughImageUS2_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_Clone(self)


    def SetTubeId(self, value: 'unsigned long') -> "void":
        """SetTubeId(tubeComputeTubeFlyThroughImageUS2 self, unsigned long value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_SetTubeId(self, value)


    def GetTubeId(self) -> "unsigned long":
        """GetTubeId(tubeComputeTubeFlyThroughImageUS2 self) -> unsigned long"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_GetTubeId(self)


    def SetInputImage(self, value: 'itkImageUS2') -> "void":
        """SetInputImage(tubeComputeTubeFlyThroughImageUS2 self, itkImageUS2 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_SetInputImage(self, value)


    def GetInputImage(self) -> "itkImageUS2 const *":
        """GetInputImage(tubeComputeTubeFlyThroughImageUS2 self) -> itkImageUS2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_GetInputImage(self)


    def SetInput(self, value: 'itkGroupSpatialObject2') -> "void":
        """SetInput(tubeComputeTubeFlyThroughImageUS2 self, itkGroupSpatialObject2 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_SetInput(self, value)


    def GetInput(self) -> "itkGroupSpatialObject2 const *":
        """GetInput(tubeComputeTubeFlyThroughImageUS2 self) -> itkGroupSpatialObject2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_GetInput(self)


    def GetOutput(self) -> "itkImageUS2 *":
        """GetOutput(tubeComputeTubeFlyThroughImageUS2 self) -> itkImageUS2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_GetOutput(self)


    def GetOutputMask(self) -> "itkImageUC2 *":
        """GetOutputMask(tubeComputeTubeFlyThroughImageUS2 self) -> itkImageUC2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_GetOutputMask(self)

    __swig_destroy__ = _tubeComputeTubeFlyThroughImagePython.delete_tubeComputeTubeFlyThroughImageUS2

    def cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageUS2 *":
        """cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageUS2"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeComputeTubeFlyThroughImageUS2

        Create a new object of the class tubeComputeTubeFlyThroughImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeTubeFlyThroughImageUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeTubeFlyThroughImageUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeTubeFlyThroughImageUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeComputeTubeFlyThroughImageUS2.Clone = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_Clone, None, tubeComputeTubeFlyThroughImageUS2)
tubeComputeTubeFlyThroughImageUS2.SetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_SetTubeId, None, tubeComputeTubeFlyThroughImageUS2)
tubeComputeTubeFlyThroughImageUS2.GetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_GetTubeId, None, tubeComputeTubeFlyThroughImageUS2)
tubeComputeTubeFlyThroughImageUS2.SetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_SetInputImage, None, tubeComputeTubeFlyThroughImageUS2)
tubeComputeTubeFlyThroughImageUS2.GetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_GetInputImage, None, tubeComputeTubeFlyThroughImageUS2)
tubeComputeTubeFlyThroughImageUS2.SetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_SetInput, None, tubeComputeTubeFlyThroughImageUS2)
tubeComputeTubeFlyThroughImageUS2.GetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_GetInput, None, tubeComputeTubeFlyThroughImageUS2)
tubeComputeTubeFlyThroughImageUS2.GetOutput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_GetOutput, None, tubeComputeTubeFlyThroughImageUS2)
tubeComputeTubeFlyThroughImageUS2.GetOutputMask = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_GetOutputMask, None, tubeComputeTubeFlyThroughImageUS2)
tubeComputeTubeFlyThroughImageUS2_swigregister = _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_swigregister
tubeComputeTubeFlyThroughImageUS2_swigregister(tubeComputeTubeFlyThroughImageUS2)

def tubeComputeTubeFlyThroughImageUS2___New_orig__() -> "tubeComputeTubeFlyThroughImageUS2_Pointer":
    """tubeComputeTubeFlyThroughImageUS2___New_orig__() -> tubeComputeTubeFlyThroughImageUS2_Pointer"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2___New_orig__()

def tubeComputeTubeFlyThroughImageUS2_cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageUS2 *":
    """tubeComputeTubeFlyThroughImageUS2_cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageUS2"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS2_cast(obj)

class tubeComputeTubeFlyThroughImageUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeComputeTubeFlyThroughImageUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeComputeTubeFlyThroughImageUS3_Pointer":
        """__New_orig__() -> tubeComputeTubeFlyThroughImageUS3_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeComputeTubeFlyThroughImageUS3_Pointer":
        """Clone(tubeComputeTubeFlyThroughImageUS3 self) -> tubeComputeTubeFlyThroughImageUS3_Pointer"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_Clone(self)


    def SetTubeId(self, value: 'unsigned long') -> "void":
        """SetTubeId(tubeComputeTubeFlyThroughImageUS3 self, unsigned long value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_SetTubeId(self, value)


    def GetTubeId(self) -> "unsigned long":
        """GetTubeId(tubeComputeTubeFlyThroughImageUS3 self) -> unsigned long"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_GetTubeId(self)


    def SetInputImage(self, value: 'itkImageUS3') -> "void":
        """SetInputImage(tubeComputeTubeFlyThroughImageUS3 self, itkImageUS3 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_SetInputImage(self, value)


    def GetInputImage(self) -> "itkImageUS3 const *":
        """GetInputImage(tubeComputeTubeFlyThroughImageUS3 self) -> itkImageUS3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_GetInputImage(self)


    def SetInput(self, value: 'itkGroupSpatialObject3') -> "void":
        """SetInput(tubeComputeTubeFlyThroughImageUS3 self, itkGroupSpatialObject3 value)"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_SetInput(self, value)


    def GetInput(self) -> "itkGroupSpatialObject3 const *":
        """GetInput(tubeComputeTubeFlyThroughImageUS3 self) -> itkGroupSpatialObject3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_GetInput(self)


    def GetOutput(self) -> "itkImageUS3 *":
        """GetOutput(tubeComputeTubeFlyThroughImageUS3 self) -> itkImageUS3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_GetOutput(self)


    def GetOutputMask(self) -> "itkImageUC3 *":
        """GetOutputMask(tubeComputeTubeFlyThroughImageUS3 self) -> itkImageUC3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_GetOutputMask(self)

    __swig_destroy__ = _tubeComputeTubeFlyThroughImagePython.delete_tubeComputeTubeFlyThroughImageUS3

    def cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageUS3 *":
        """cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageUS3"""
        return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeComputeTubeFlyThroughImageUS3

        Create a new object of the class tubeComputeTubeFlyThroughImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeTubeFlyThroughImageUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeTubeFlyThroughImageUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeTubeFlyThroughImageUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeComputeTubeFlyThroughImageUS3.Clone = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_Clone, None, tubeComputeTubeFlyThroughImageUS3)
tubeComputeTubeFlyThroughImageUS3.SetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_SetTubeId, None, tubeComputeTubeFlyThroughImageUS3)
tubeComputeTubeFlyThroughImageUS3.GetTubeId = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_GetTubeId, None, tubeComputeTubeFlyThroughImageUS3)
tubeComputeTubeFlyThroughImageUS3.SetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_SetInputImage, None, tubeComputeTubeFlyThroughImageUS3)
tubeComputeTubeFlyThroughImageUS3.GetInputImage = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_GetInputImage, None, tubeComputeTubeFlyThroughImageUS3)
tubeComputeTubeFlyThroughImageUS3.SetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_SetInput, None, tubeComputeTubeFlyThroughImageUS3)
tubeComputeTubeFlyThroughImageUS3.GetInput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_GetInput, None, tubeComputeTubeFlyThroughImageUS3)
tubeComputeTubeFlyThroughImageUS3.GetOutput = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_GetOutput, None, tubeComputeTubeFlyThroughImageUS3)
tubeComputeTubeFlyThroughImageUS3.GetOutputMask = new_instancemethod(_tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_GetOutputMask, None, tubeComputeTubeFlyThroughImageUS3)
tubeComputeTubeFlyThroughImageUS3_swigregister = _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_swigregister
tubeComputeTubeFlyThroughImageUS3_swigregister(tubeComputeTubeFlyThroughImageUS3)

def tubeComputeTubeFlyThroughImageUS3___New_orig__() -> "tubeComputeTubeFlyThroughImageUS3_Pointer":
    """tubeComputeTubeFlyThroughImageUS3___New_orig__() -> tubeComputeTubeFlyThroughImageUS3_Pointer"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3___New_orig__()

def tubeComputeTubeFlyThroughImageUS3_cast(obj: 'itkLightObject') -> "tubeComputeTubeFlyThroughImageUS3 *":
    """tubeComputeTubeFlyThroughImageUS3_cast(itkLightObject obj) -> tubeComputeTubeFlyThroughImageUS3"""
    return _tubeComputeTubeFlyThroughImagePython.tubeComputeTubeFlyThroughImageUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def compute_tube_fly_through_image(*args, **kwargs):
    """Procedural interface for ComputeTubeFlyThroughImage"""
    import itk
    instance = itk.ComputeTubeFlyThroughImage.New(*args, **kwargs)
    return instance.__internal_call__()

def compute_tube_fly_through_image_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ComputeTubeFlyThroughImage, itkTemplate.itkTemplate):
        filter_object = itk.ComputeTubeFlyThroughImage.values()[0]
    else:
        filter_object = itk.ComputeTubeFlyThroughImage

    compute_tube_fly_through_image.__doc__ = filter_object.__doc__
    compute_tube_fly_through_image.__doc__ += "\n Args are Input(s) to the filter.\n"
    compute_tube_fly_through_image.__doc__ += "Available Keyword Arguments:\n"
    compute_tube_fly_through_image.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



