# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _tubeConvertTubesToDensityImagePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_tubeConvertTubesToDensityImagePython', [dirname(__file__)])
        except ImportError:
            import _tubeConvertTubesToDensityImagePython
            return _tubeConvertTubesToDensityImagePython
        if fp is not None:
            try:
                _mod = imp.load_module('_tubeConvertTubesToDensityImagePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _tubeConvertTubesToDensityImagePython = swig_import_helper()
    del swig_import_helper
else:
    import _tubeConvertTubesToDensityImagePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkGroupSpatialObjectPython
import itkSpatialObjectBasePython
import itkImageRegionPython
import ITKCommonBasePython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkPointPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import itkAffineTransformPython
import itkTransformBasePython
import itkArray2DPython
import itkDiffusionTensor3DPython
import itkSymmetricSecondRankTensorPython
import itkArrayPython
import itkOptimizerParametersPython
import itkVariableLengthVectorPython
import itkMatrixOffsetTransformBasePython
import itkImagePython
import itkRGBPixelPython

def tubeConvertTubesToDensityImageD3_New():
  return tubeConvertTubesToDensityImageD3.New()


def tubeConvertTubesToDensityImageF3_New():
  return tubeConvertTubesToDensityImageF3.New()


def tubeConvertTubesToDensityImageUS3_New():
  return tubeConvertTubesToDensityImageUS3.New()


def tubeConvertTubesToDensityImageUC3_New():
  return tubeConvertTubesToDensityImageUC3.New()


def tubeConvertTubesToDensityImageSS3_New():
  return tubeConvertTubesToDensityImageSS3.New()


def tubeConvertTubesToDensityImageD2_New():
  return tubeConvertTubesToDensityImageD2.New()


def tubeConvertTubesToDensityImageF2_New():
  return tubeConvertTubesToDensityImageF2.New()


def tubeConvertTubesToDensityImageUS2_New():
  return tubeConvertTubesToDensityImageUS2.New()


def tubeConvertTubesToDensityImageUC2_New():
  return tubeConvertTubesToDensityImageUC2.New()


def tubeConvertTubesToDensityImageSS2_New():
  return tubeConvertTubesToDensityImageSS2.New()

class tubeConvertTubesToDensityImageD2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToDensityImageD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToDensityImageD2_Pointer":
        """__New_orig__() -> tubeConvertTubesToDensityImageD2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToDensityImageD2_Pointer":
        """Clone(tubeConvertTubesToDensityImageD2 self) -> tubeConvertTubesToDensityImageD2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_Clone(self)


    def SetMaxDensityIntensity(self, value: 'double') -> "void":
        """SetMaxDensityIntensity(tubeConvertTubesToDensityImageD2 self, double value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetMaxDensityIntensity(self, value)


    def GetMaxDensityIntensity(self) -> "double":
        """GetMaxDensityIntensity(tubeConvertTubesToDensityImageD2 self) -> double"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetMaxDensityIntensity(self)


    def SetSize(self, value: 'itkSize2') -> "void":
        """SetSize(tubeConvertTubesToDensityImageD2 self, itkSize2 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetSize(self, value)


    def GetSize(self) -> "itkSize2":
        """GetSize(tubeConvertTubesToDensityImageD2 self) -> itkSize2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetSize(self)


    def SetUseSquaredDistance(self, value: 'bool') -> "void":
        """SetUseSquaredDistance(tubeConvertTubesToDensityImageD2 self, bool value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetUseSquaredDistance(self, value)


    def GetUseSquaredDistance(self) -> "bool":
        """GetUseSquaredDistance(tubeConvertTubesToDensityImageD2 self) -> bool"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetUseSquaredDistance(self)


    def SetInputTubeGroup(self, value: 'itkGroupSpatialObject2_Pointer') -> "void":
        """SetInputTubeGroup(tubeConvertTubesToDensityImageD2 self, itkGroupSpatialObject2_Pointer value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetInputTubeGroup(self, value)


    def GetInputTubeGroup(self) -> "itkGroupSpatialObject2_Pointer":
        """GetInputTubeGroup(tubeConvertTubesToDensityImageD2 self) -> itkGroupSpatialObject2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetInputTubeGroup(self)


    def GetDensityMapImage(self) -> "itkImageD2_Pointer":
        """GetDensityMapImage(tubeConvertTubesToDensityImageD2 self) -> itkImageD2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetDensityMapImage(self)


    def GetRadiusMapImage(self) -> "itkImageD2_Pointer":
        """GetRadiusMapImage(tubeConvertTubesToDensityImageD2 self) -> itkImageD2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetRadiusMapImage(self)


    def GetTangentMapImage(self) -> "itkImageVD22_Pointer":
        """GetTangentMapImage(tubeConvertTubesToDensityImageD2 self) -> itkImageVD22_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetTangentMapImage(self)


    def SetSpacing(self, value: 'itkVectorD2') -> "void":
        """SetSpacing(tubeConvertTubesToDensityImageD2 self, itkVectorD2 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetSpacing(self, value)


    def GetSpacing(self) -> "itkVectorD2":
        """GetSpacing(tubeConvertTubesToDensityImageD2 self) -> itkVectorD2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetSpacing(self)

    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageD2

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageD2 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToDensityImageD2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageD2

        Create a new object of the class tubeConvertTubesToDensityImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToDensityImageD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToDensityImageD2.Clone = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_Clone, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.SetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetMaxDensityIntensity, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.GetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetMaxDensityIntensity, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.SetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetSize, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.GetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetSize, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.SetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetUseSquaredDistance, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.GetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetUseSquaredDistance, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.SetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetInputTubeGroup, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.GetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetInputTubeGroup, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.GetDensityMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetDensityMapImage, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.GetRadiusMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetRadiusMapImage, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.GetTangentMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetTangentMapImage, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.SetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetSpacing, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2.GetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetSpacing, None, tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2_swigregister = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_swigregister
tubeConvertTubesToDensityImageD2_swigregister(tubeConvertTubesToDensityImageD2)

def tubeConvertTubesToDensityImageD2___New_orig__() -> "tubeConvertTubesToDensityImageD2_Pointer":
    """tubeConvertTubesToDensityImageD2___New_orig__() -> tubeConvertTubesToDensityImageD2_Pointer"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2___New_orig__()

def tubeConvertTubesToDensityImageD2_cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageD2 *":
    """tubeConvertTubesToDensityImageD2_cast(itkLightObject obj) -> tubeConvertTubesToDensityImageD2"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_cast(obj)

class tubeConvertTubesToDensityImageD3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToDensityImageD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToDensityImageD3_Pointer":
        """__New_orig__() -> tubeConvertTubesToDensityImageD3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToDensityImageD3_Pointer":
        """Clone(tubeConvertTubesToDensityImageD3 self) -> tubeConvertTubesToDensityImageD3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_Clone(self)


    def SetMaxDensityIntensity(self, value: 'double') -> "void":
        """SetMaxDensityIntensity(tubeConvertTubesToDensityImageD3 self, double value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetMaxDensityIntensity(self, value)


    def GetMaxDensityIntensity(self) -> "double":
        """GetMaxDensityIntensity(tubeConvertTubesToDensityImageD3 self) -> double"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetMaxDensityIntensity(self)


    def SetSize(self, value: 'itkSize3') -> "void":
        """SetSize(tubeConvertTubesToDensityImageD3 self, itkSize3 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetSize(self, value)


    def GetSize(self) -> "itkSize3":
        """GetSize(tubeConvertTubesToDensityImageD3 self) -> itkSize3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetSize(self)


    def SetUseSquaredDistance(self, value: 'bool') -> "void":
        """SetUseSquaredDistance(tubeConvertTubesToDensityImageD3 self, bool value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetUseSquaredDistance(self, value)


    def GetUseSquaredDistance(self) -> "bool":
        """GetUseSquaredDistance(tubeConvertTubesToDensityImageD3 self) -> bool"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetUseSquaredDistance(self)


    def SetInputTubeGroup(self, value: 'itkGroupSpatialObject3_Pointer') -> "void":
        """SetInputTubeGroup(tubeConvertTubesToDensityImageD3 self, itkGroupSpatialObject3_Pointer value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetInputTubeGroup(self, value)


    def GetInputTubeGroup(self) -> "itkGroupSpatialObject3_Pointer":
        """GetInputTubeGroup(tubeConvertTubesToDensityImageD3 self) -> itkGroupSpatialObject3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetInputTubeGroup(self)


    def GetDensityMapImage(self) -> "itkImageD3_Pointer":
        """GetDensityMapImage(tubeConvertTubesToDensityImageD3 self) -> itkImageD3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetDensityMapImage(self)


    def GetRadiusMapImage(self) -> "itkImageD3_Pointer":
        """GetRadiusMapImage(tubeConvertTubesToDensityImageD3 self) -> itkImageD3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetRadiusMapImage(self)


    def GetTangentMapImage(self) -> "itkImageVD33_Pointer":
        """GetTangentMapImage(tubeConvertTubesToDensityImageD3 self) -> itkImageVD33_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetTangentMapImage(self)


    def SetSpacing(self, value: 'itkVectorD3') -> "void":
        """SetSpacing(tubeConvertTubesToDensityImageD3 self, itkVectorD3 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetSpacing(self, value)


    def GetSpacing(self) -> "itkVectorD3":
        """GetSpacing(tubeConvertTubesToDensityImageD3 self) -> itkVectorD3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetSpacing(self)

    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageD3

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageD3 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToDensityImageD3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageD3

        Create a new object of the class tubeConvertTubesToDensityImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToDensityImageD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToDensityImageD3.Clone = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_Clone, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.SetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetMaxDensityIntensity, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.GetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetMaxDensityIntensity, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.SetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetSize, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.GetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetSize, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.SetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetUseSquaredDistance, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.GetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetUseSquaredDistance, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.SetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetInputTubeGroup, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.GetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetInputTubeGroup, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.GetDensityMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetDensityMapImage, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.GetRadiusMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetRadiusMapImage, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.GetTangentMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetTangentMapImage, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.SetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetSpacing, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3.GetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetSpacing, None, tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3_swigregister = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_swigregister
tubeConvertTubesToDensityImageD3_swigregister(tubeConvertTubesToDensityImageD3)

def tubeConvertTubesToDensityImageD3___New_orig__() -> "tubeConvertTubesToDensityImageD3_Pointer":
    """tubeConvertTubesToDensityImageD3___New_orig__() -> tubeConvertTubesToDensityImageD3_Pointer"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3___New_orig__()

def tubeConvertTubesToDensityImageD3_cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageD3 *":
    """tubeConvertTubesToDensityImageD3_cast(itkLightObject obj) -> tubeConvertTubesToDensityImageD3"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_cast(obj)

class tubeConvertTubesToDensityImageF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToDensityImageF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToDensityImageF2_Pointer":
        """__New_orig__() -> tubeConvertTubesToDensityImageF2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToDensityImageF2_Pointer":
        """Clone(tubeConvertTubesToDensityImageF2 self) -> tubeConvertTubesToDensityImageF2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_Clone(self)


    def SetMaxDensityIntensity(self, value: 'float') -> "void":
        """SetMaxDensityIntensity(tubeConvertTubesToDensityImageF2 self, float value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetMaxDensityIntensity(self, value)


    def GetMaxDensityIntensity(self) -> "float":
        """GetMaxDensityIntensity(tubeConvertTubesToDensityImageF2 self) -> float"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetMaxDensityIntensity(self)


    def SetSize(self, value: 'itkSize2') -> "void":
        """SetSize(tubeConvertTubesToDensityImageF2 self, itkSize2 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetSize(self, value)


    def GetSize(self) -> "itkSize2":
        """GetSize(tubeConvertTubesToDensityImageF2 self) -> itkSize2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetSize(self)


    def SetUseSquaredDistance(self, value: 'bool') -> "void":
        """SetUseSquaredDistance(tubeConvertTubesToDensityImageF2 self, bool value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetUseSquaredDistance(self, value)


    def GetUseSquaredDistance(self) -> "bool":
        """GetUseSquaredDistance(tubeConvertTubesToDensityImageF2 self) -> bool"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetUseSquaredDistance(self)


    def SetInputTubeGroup(self, value: 'itkGroupSpatialObject2_Pointer') -> "void":
        """SetInputTubeGroup(tubeConvertTubesToDensityImageF2 self, itkGroupSpatialObject2_Pointer value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetInputTubeGroup(self, value)


    def GetInputTubeGroup(self) -> "itkGroupSpatialObject2_Pointer":
        """GetInputTubeGroup(tubeConvertTubesToDensityImageF2 self) -> itkGroupSpatialObject2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetInputTubeGroup(self)


    def GetDensityMapImage(self) -> "itkImageF2_Pointer":
        """GetDensityMapImage(tubeConvertTubesToDensityImageF2 self) -> itkImageF2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetDensityMapImage(self)


    def GetRadiusMapImage(self) -> "itkImageF2_Pointer":
        """GetRadiusMapImage(tubeConvertTubesToDensityImageF2 self) -> itkImageF2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetRadiusMapImage(self)


    def GetTangentMapImage(self) -> "itkImageVF22_Pointer":
        """GetTangentMapImage(tubeConvertTubesToDensityImageF2 self) -> itkImageVF22_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetTangentMapImage(self)


    def SetSpacing(self, value: 'itkVectorD2') -> "void":
        """SetSpacing(tubeConvertTubesToDensityImageF2 self, itkVectorD2 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetSpacing(self, value)


    def GetSpacing(self) -> "itkVectorD2":
        """GetSpacing(tubeConvertTubesToDensityImageF2 self) -> itkVectorD2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetSpacing(self)

    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageF2

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageF2 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToDensityImageF2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageF2

        Create a new object of the class tubeConvertTubesToDensityImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToDensityImageF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToDensityImageF2.Clone = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_Clone, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.SetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetMaxDensityIntensity, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.GetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetMaxDensityIntensity, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.SetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetSize, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.GetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetSize, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.SetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetUseSquaredDistance, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.GetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetUseSquaredDistance, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.SetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetInputTubeGroup, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.GetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetInputTubeGroup, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.GetDensityMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetDensityMapImage, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.GetRadiusMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetRadiusMapImage, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.GetTangentMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetTangentMapImage, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.SetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetSpacing, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2.GetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetSpacing, None, tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2_swigregister = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_swigregister
tubeConvertTubesToDensityImageF2_swigregister(tubeConvertTubesToDensityImageF2)

def tubeConvertTubesToDensityImageF2___New_orig__() -> "tubeConvertTubesToDensityImageF2_Pointer":
    """tubeConvertTubesToDensityImageF2___New_orig__() -> tubeConvertTubesToDensityImageF2_Pointer"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2___New_orig__()

def tubeConvertTubesToDensityImageF2_cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageF2 *":
    """tubeConvertTubesToDensityImageF2_cast(itkLightObject obj) -> tubeConvertTubesToDensityImageF2"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_cast(obj)

class tubeConvertTubesToDensityImageF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToDensityImageF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToDensityImageF3_Pointer":
        """__New_orig__() -> tubeConvertTubesToDensityImageF3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToDensityImageF3_Pointer":
        """Clone(tubeConvertTubesToDensityImageF3 self) -> tubeConvertTubesToDensityImageF3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_Clone(self)


    def SetMaxDensityIntensity(self, value: 'float') -> "void":
        """SetMaxDensityIntensity(tubeConvertTubesToDensityImageF3 self, float value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetMaxDensityIntensity(self, value)


    def GetMaxDensityIntensity(self) -> "float":
        """GetMaxDensityIntensity(tubeConvertTubesToDensityImageF3 self) -> float"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetMaxDensityIntensity(self)


    def SetSize(self, value: 'itkSize3') -> "void":
        """SetSize(tubeConvertTubesToDensityImageF3 self, itkSize3 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetSize(self, value)


    def GetSize(self) -> "itkSize3":
        """GetSize(tubeConvertTubesToDensityImageF3 self) -> itkSize3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetSize(self)


    def SetUseSquaredDistance(self, value: 'bool') -> "void":
        """SetUseSquaredDistance(tubeConvertTubesToDensityImageF3 self, bool value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetUseSquaredDistance(self, value)


    def GetUseSquaredDistance(self) -> "bool":
        """GetUseSquaredDistance(tubeConvertTubesToDensityImageF3 self) -> bool"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetUseSquaredDistance(self)


    def SetInputTubeGroup(self, value: 'itkGroupSpatialObject3_Pointer') -> "void":
        """SetInputTubeGroup(tubeConvertTubesToDensityImageF3 self, itkGroupSpatialObject3_Pointer value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetInputTubeGroup(self, value)


    def GetInputTubeGroup(self) -> "itkGroupSpatialObject3_Pointer":
        """GetInputTubeGroup(tubeConvertTubesToDensityImageF3 self) -> itkGroupSpatialObject3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetInputTubeGroup(self)


    def GetDensityMapImage(self) -> "itkImageF3_Pointer":
        """GetDensityMapImage(tubeConvertTubesToDensityImageF3 self) -> itkImageF3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetDensityMapImage(self)


    def GetRadiusMapImage(self) -> "itkImageF3_Pointer":
        """GetRadiusMapImage(tubeConvertTubesToDensityImageF3 self) -> itkImageF3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetRadiusMapImage(self)


    def GetTangentMapImage(self) -> "itkImageVF33_Pointer":
        """GetTangentMapImage(tubeConvertTubesToDensityImageF3 self) -> itkImageVF33_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetTangentMapImage(self)


    def SetSpacing(self, value: 'itkVectorD3') -> "void":
        """SetSpacing(tubeConvertTubesToDensityImageF3 self, itkVectorD3 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetSpacing(self, value)


    def GetSpacing(self) -> "itkVectorD3":
        """GetSpacing(tubeConvertTubesToDensityImageF3 self) -> itkVectorD3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetSpacing(self)

    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageF3

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageF3 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToDensityImageF3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageF3

        Create a new object of the class tubeConvertTubesToDensityImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToDensityImageF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToDensityImageF3.Clone = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_Clone, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.SetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetMaxDensityIntensity, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.GetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetMaxDensityIntensity, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.SetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetSize, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.GetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetSize, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.SetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetUseSquaredDistance, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.GetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetUseSquaredDistance, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.SetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetInputTubeGroup, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.GetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetInputTubeGroup, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.GetDensityMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetDensityMapImage, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.GetRadiusMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetRadiusMapImage, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.GetTangentMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetTangentMapImage, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.SetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetSpacing, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3.GetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetSpacing, None, tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3_swigregister = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_swigregister
tubeConvertTubesToDensityImageF3_swigregister(tubeConvertTubesToDensityImageF3)

def tubeConvertTubesToDensityImageF3___New_orig__() -> "tubeConvertTubesToDensityImageF3_Pointer":
    """tubeConvertTubesToDensityImageF3___New_orig__() -> tubeConvertTubesToDensityImageF3_Pointer"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3___New_orig__()

def tubeConvertTubesToDensityImageF3_cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageF3 *":
    """tubeConvertTubesToDensityImageF3_cast(itkLightObject obj) -> tubeConvertTubesToDensityImageF3"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_cast(obj)

class tubeConvertTubesToDensityImageSS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToDensityImageSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToDensityImageSS2_Pointer":
        """__New_orig__() -> tubeConvertTubesToDensityImageSS2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToDensityImageSS2_Pointer":
        """Clone(tubeConvertTubesToDensityImageSS2 self) -> tubeConvertTubesToDensityImageSS2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_Clone(self)


    def SetMaxDensityIntensity(self, value: 'short') -> "void":
        """SetMaxDensityIntensity(tubeConvertTubesToDensityImageSS2 self, short value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetMaxDensityIntensity(self, value)


    def GetMaxDensityIntensity(self) -> "short":
        """GetMaxDensityIntensity(tubeConvertTubesToDensityImageSS2 self) -> short"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetMaxDensityIntensity(self)


    def SetSize(self, value: 'itkSize2') -> "void":
        """SetSize(tubeConvertTubesToDensityImageSS2 self, itkSize2 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetSize(self, value)


    def GetSize(self) -> "itkSize2":
        """GetSize(tubeConvertTubesToDensityImageSS2 self) -> itkSize2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetSize(self)


    def SetUseSquaredDistance(self, value: 'bool') -> "void":
        """SetUseSquaredDistance(tubeConvertTubesToDensityImageSS2 self, bool value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetUseSquaredDistance(self, value)


    def GetUseSquaredDistance(self) -> "bool":
        """GetUseSquaredDistance(tubeConvertTubesToDensityImageSS2 self) -> bool"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetUseSquaredDistance(self)


    def SetInputTubeGroup(self, value: 'itkGroupSpatialObject2_Pointer') -> "void":
        """SetInputTubeGroup(tubeConvertTubesToDensityImageSS2 self, itkGroupSpatialObject2_Pointer value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetInputTubeGroup(self, value)


    def GetInputTubeGroup(self) -> "itkGroupSpatialObject2_Pointer":
        """GetInputTubeGroup(tubeConvertTubesToDensityImageSS2 self) -> itkGroupSpatialObject2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetInputTubeGroup(self)


    def GetDensityMapImage(self) -> "itkImageSS2_Pointer":
        """GetDensityMapImage(tubeConvertTubesToDensityImageSS2 self) -> itkImageSS2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetDensityMapImage(self)


    def GetRadiusMapImage(self) -> "itkImageSS2_Pointer":
        """GetRadiusMapImage(tubeConvertTubesToDensityImageSS2 self) -> itkImageSS2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetRadiusMapImage(self)


    def GetTangentMapImage(self) -> "itk::SmartPointer< itk::Image< itk::Vector< short,2 >,2 > >":
        """GetTangentMapImage(tubeConvertTubesToDensityImageSS2 self) -> itk::SmartPointer< itk::Image< itk::Vector< short,2 >,2 > >"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetTangentMapImage(self)


    def SetSpacing(self, value: 'itkVectorD2') -> "void":
        """SetSpacing(tubeConvertTubesToDensityImageSS2 self, itkVectorD2 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetSpacing(self, value)


    def GetSpacing(self) -> "itkVectorD2":
        """GetSpacing(tubeConvertTubesToDensityImageSS2 self) -> itkVectorD2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetSpacing(self)

    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageSS2

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageSS2 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToDensityImageSS2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageSS2

        Create a new object of the class tubeConvertTubesToDensityImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToDensityImageSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToDensityImageSS2.Clone = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_Clone, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.SetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetMaxDensityIntensity, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.GetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetMaxDensityIntensity, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.SetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetSize, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.GetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetSize, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.SetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetUseSquaredDistance, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.GetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetUseSquaredDistance, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.SetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetInputTubeGroup, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.GetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetInputTubeGroup, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.GetDensityMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetDensityMapImage, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.GetRadiusMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetRadiusMapImage, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.GetTangentMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetTangentMapImage, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.SetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetSpacing, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2.GetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetSpacing, None, tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2_swigregister = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_swigregister
tubeConvertTubesToDensityImageSS2_swigregister(tubeConvertTubesToDensityImageSS2)

def tubeConvertTubesToDensityImageSS2___New_orig__() -> "tubeConvertTubesToDensityImageSS2_Pointer":
    """tubeConvertTubesToDensityImageSS2___New_orig__() -> tubeConvertTubesToDensityImageSS2_Pointer"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2___New_orig__()

def tubeConvertTubesToDensityImageSS2_cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageSS2 *":
    """tubeConvertTubesToDensityImageSS2_cast(itkLightObject obj) -> tubeConvertTubesToDensityImageSS2"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_cast(obj)

class tubeConvertTubesToDensityImageSS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToDensityImageSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToDensityImageSS3_Pointer":
        """__New_orig__() -> tubeConvertTubesToDensityImageSS3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToDensityImageSS3_Pointer":
        """Clone(tubeConvertTubesToDensityImageSS3 self) -> tubeConvertTubesToDensityImageSS3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_Clone(self)


    def SetMaxDensityIntensity(self, value: 'short') -> "void":
        """SetMaxDensityIntensity(tubeConvertTubesToDensityImageSS3 self, short value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetMaxDensityIntensity(self, value)


    def GetMaxDensityIntensity(self) -> "short":
        """GetMaxDensityIntensity(tubeConvertTubesToDensityImageSS3 self) -> short"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetMaxDensityIntensity(self)


    def SetSize(self, value: 'itkSize3') -> "void":
        """SetSize(tubeConvertTubesToDensityImageSS3 self, itkSize3 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetSize(self, value)


    def GetSize(self) -> "itkSize3":
        """GetSize(tubeConvertTubesToDensityImageSS3 self) -> itkSize3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetSize(self)


    def SetUseSquaredDistance(self, value: 'bool') -> "void":
        """SetUseSquaredDistance(tubeConvertTubesToDensityImageSS3 self, bool value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetUseSquaredDistance(self, value)


    def GetUseSquaredDistance(self) -> "bool":
        """GetUseSquaredDistance(tubeConvertTubesToDensityImageSS3 self) -> bool"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetUseSquaredDistance(self)


    def SetInputTubeGroup(self, value: 'itkGroupSpatialObject3_Pointer') -> "void":
        """SetInputTubeGroup(tubeConvertTubesToDensityImageSS3 self, itkGroupSpatialObject3_Pointer value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetInputTubeGroup(self, value)


    def GetInputTubeGroup(self) -> "itkGroupSpatialObject3_Pointer":
        """GetInputTubeGroup(tubeConvertTubesToDensityImageSS3 self) -> itkGroupSpatialObject3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetInputTubeGroup(self)


    def GetDensityMapImage(self) -> "itkImageSS3_Pointer":
        """GetDensityMapImage(tubeConvertTubesToDensityImageSS3 self) -> itkImageSS3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetDensityMapImage(self)


    def GetRadiusMapImage(self) -> "itkImageSS3_Pointer":
        """GetRadiusMapImage(tubeConvertTubesToDensityImageSS3 self) -> itkImageSS3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetRadiusMapImage(self)


    def GetTangentMapImage(self) -> "itk::SmartPointer< itk::Image< itk::Vector< short,3 >,3 > >":
        """GetTangentMapImage(tubeConvertTubesToDensityImageSS3 self) -> itk::SmartPointer< itk::Image< itk::Vector< short,3 >,3 > >"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetTangentMapImage(self)


    def SetSpacing(self, value: 'itkVectorD3') -> "void":
        """SetSpacing(tubeConvertTubesToDensityImageSS3 self, itkVectorD3 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetSpacing(self, value)


    def GetSpacing(self) -> "itkVectorD3":
        """GetSpacing(tubeConvertTubesToDensityImageSS3 self) -> itkVectorD3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetSpacing(self)

    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageSS3

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageSS3 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToDensityImageSS3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageSS3

        Create a new object of the class tubeConvertTubesToDensityImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToDensityImageSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToDensityImageSS3.Clone = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_Clone, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.SetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetMaxDensityIntensity, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.GetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetMaxDensityIntensity, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.SetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetSize, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.GetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetSize, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.SetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetUseSquaredDistance, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.GetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetUseSquaredDistance, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.SetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetInputTubeGroup, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.GetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetInputTubeGroup, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.GetDensityMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetDensityMapImage, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.GetRadiusMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetRadiusMapImage, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.GetTangentMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetTangentMapImage, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.SetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetSpacing, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3.GetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetSpacing, None, tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3_swigregister = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_swigregister
tubeConvertTubesToDensityImageSS3_swigregister(tubeConvertTubesToDensityImageSS3)

def tubeConvertTubesToDensityImageSS3___New_orig__() -> "tubeConvertTubesToDensityImageSS3_Pointer":
    """tubeConvertTubesToDensityImageSS3___New_orig__() -> tubeConvertTubesToDensityImageSS3_Pointer"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3___New_orig__()

def tubeConvertTubesToDensityImageSS3_cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageSS3 *":
    """tubeConvertTubesToDensityImageSS3_cast(itkLightObject obj) -> tubeConvertTubesToDensityImageSS3"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_cast(obj)

class tubeConvertTubesToDensityImageUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToDensityImageUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToDensityImageUC2_Pointer":
        """__New_orig__() -> tubeConvertTubesToDensityImageUC2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToDensityImageUC2_Pointer":
        """Clone(tubeConvertTubesToDensityImageUC2 self) -> tubeConvertTubesToDensityImageUC2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_Clone(self)


    def SetMaxDensityIntensity(self, value: 'unsigned char') -> "void":
        """SetMaxDensityIntensity(tubeConvertTubesToDensityImageUC2 self, unsigned char value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetMaxDensityIntensity(self, value)


    def GetMaxDensityIntensity(self) -> "unsigned char":
        """GetMaxDensityIntensity(tubeConvertTubesToDensityImageUC2 self) -> unsigned char"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetMaxDensityIntensity(self)


    def SetSize(self, value: 'itkSize2') -> "void":
        """SetSize(tubeConvertTubesToDensityImageUC2 self, itkSize2 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetSize(self, value)


    def GetSize(self) -> "itkSize2":
        """GetSize(tubeConvertTubesToDensityImageUC2 self) -> itkSize2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetSize(self)


    def SetUseSquaredDistance(self, value: 'bool') -> "void":
        """SetUseSquaredDistance(tubeConvertTubesToDensityImageUC2 self, bool value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetUseSquaredDistance(self, value)


    def GetUseSquaredDistance(self) -> "bool":
        """GetUseSquaredDistance(tubeConvertTubesToDensityImageUC2 self) -> bool"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetUseSquaredDistance(self)


    def SetInputTubeGroup(self, value: 'itkGroupSpatialObject2_Pointer') -> "void":
        """SetInputTubeGroup(tubeConvertTubesToDensityImageUC2 self, itkGroupSpatialObject2_Pointer value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetInputTubeGroup(self, value)


    def GetInputTubeGroup(self) -> "itkGroupSpatialObject2_Pointer":
        """GetInputTubeGroup(tubeConvertTubesToDensityImageUC2 self) -> itkGroupSpatialObject2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetInputTubeGroup(self)


    def GetDensityMapImage(self) -> "itkImageUC2_Pointer":
        """GetDensityMapImage(tubeConvertTubesToDensityImageUC2 self) -> itkImageUC2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetDensityMapImage(self)


    def GetRadiusMapImage(self) -> "itkImageUC2_Pointer":
        """GetRadiusMapImage(tubeConvertTubesToDensityImageUC2 self) -> itkImageUC2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetRadiusMapImage(self)


    def GetTangentMapImage(self) -> "itk::SmartPointer< itk::Image< itk::Vector< unsigned char,2 >,2 > >":
        """GetTangentMapImage(tubeConvertTubesToDensityImageUC2 self) -> itk::SmartPointer< itk::Image< itk::Vector< unsigned char,2 >,2 > >"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetTangentMapImage(self)


    def SetSpacing(self, value: 'itkVectorD2') -> "void":
        """SetSpacing(tubeConvertTubesToDensityImageUC2 self, itkVectorD2 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetSpacing(self, value)


    def GetSpacing(self) -> "itkVectorD2":
        """GetSpacing(tubeConvertTubesToDensityImageUC2 self) -> itkVectorD2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetSpacing(self)

    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageUC2

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageUC2 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToDensityImageUC2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageUC2

        Create a new object of the class tubeConvertTubesToDensityImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToDensityImageUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToDensityImageUC2.Clone = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_Clone, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.SetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetMaxDensityIntensity, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.GetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetMaxDensityIntensity, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.SetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetSize, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.GetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetSize, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.SetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetUseSquaredDistance, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.GetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetUseSquaredDistance, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.SetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetInputTubeGroup, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.GetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetInputTubeGroup, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.GetDensityMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetDensityMapImage, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.GetRadiusMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetRadiusMapImage, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.GetTangentMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetTangentMapImage, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.SetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetSpacing, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2.GetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetSpacing, None, tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2_swigregister = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_swigregister
tubeConvertTubesToDensityImageUC2_swigregister(tubeConvertTubesToDensityImageUC2)

def tubeConvertTubesToDensityImageUC2___New_orig__() -> "tubeConvertTubesToDensityImageUC2_Pointer":
    """tubeConvertTubesToDensityImageUC2___New_orig__() -> tubeConvertTubesToDensityImageUC2_Pointer"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2___New_orig__()

def tubeConvertTubesToDensityImageUC2_cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageUC2 *":
    """tubeConvertTubesToDensityImageUC2_cast(itkLightObject obj) -> tubeConvertTubesToDensityImageUC2"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_cast(obj)

class tubeConvertTubesToDensityImageUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToDensityImageUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToDensityImageUC3_Pointer":
        """__New_orig__() -> tubeConvertTubesToDensityImageUC3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToDensityImageUC3_Pointer":
        """Clone(tubeConvertTubesToDensityImageUC3 self) -> tubeConvertTubesToDensityImageUC3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_Clone(self)


    def SetMaxDensityIntensity(self, value: 'unsigned char') -> "void":
        """SetMaxDensityIntensity(tubeConvertTubesToDensityImageUC3 self, unsigned char value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetMaxDensityIntensity(self, value)


    def GetMaxDensityIntensity(self) -> "unsigned char":
        """GetMaxDensityIntensity(tubeConvertTubesToDensityImageUC3 self) -> unsigned char"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetMaxDensityIntensity(self)


    def SetSize(self, value: 'itkSize3') -> "void":
        """SetSize(tubeConvertTubesToDensityImageUC3 self, itkSize3 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetSize(self, value)


    def GetSize(self) -> "itkSize3":
        """GetSize(tubeConvertTubesToDensityImageUC3 self) -> itkSize3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetSize(self)


    def SetUseSquaredDistance(self, value: 'bool') -> "void":
        """SetUseSquaredDistance(tubeConvertTubesToDensityImageUC3 self, bool value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetUseSquaredDistance(self, value)


    def GetUseSquaredDistance(self) -> "bool":
        """GetUseSquaredDistance(tubeConvertTubesToDensityImageUC3 self) -> bool"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetUseSquaredDistance(self)


    def SetInputTubeGroup(self, value: 'itkGroupSpatialObject3_Pointer') -> "void":
        """SetInputTubeGroup(tubeConvertTubesToDensityImageUC3 self, itkGroupSpatialObject3_Pointer value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetInputTubeGroup(self, value)


    def GetInputTubeGroup(self) -> "itkGroupSpatialObject3_Pointer":
        """GetInputTubeGroup(tubeConvertTubesToDensityImageUC3 self) -> itkGroupSpatialObject3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetInputTubeGroup(self)


    def GetDensityMapImage(self) -> "itkImageUC3_Pointer":
        """GetDensityMapImage(tubeConvertTubesToDensityImageUC3 self) -> itkImageUC3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetDensityMapImage(self)


    def GetRadiusMapImage(self) -> "itkImageUC3_Pointer":
        """GetRadiusMapImage(tubeConvertTubesToDensityImageUC3 self) -> itkImageUC3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetRadiusMapImage(self)


    def GetTangentMapImage(self) -> "itk::SmartPointer< itk::Image< itk::Vector< unsigned char,3 >,3 > >":
        """GetTangentMapImage(tubeConvertTubesToDensityImageUC3 self) -> itk::SmartPointer< itk::Image< itk::Vector< unsigned char,3 >,3 > >"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetTangentMapImage(self)


    def SetSpacing(self, value: 'itkVectorD3') -> "void":
        """SetSpacing(tubeConvertTubesToDensityImageUC3 self, itkVectorD3 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetSpacing(self, value)


    def GetSpacing(self) -> "itkVectorD3":
        """GetSpacing(tubeConvertTubesToDensityImageUC3 self) -> itkVectorD3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetSpacing(self)

    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageUC3

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageUC3 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToDensityImageUC3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageUC3

        Create a new object of the class tubeConvertTubesToDensityImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToDensityImageUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToDensityImageUC3.Clone = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_Clone, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.SetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetMaxDensityIntensity, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.GetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetMaxDensityIntensity, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.SetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetSize, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.GetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetSize, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.SetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetUseSquaredDistance, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.GetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetUseSquaredDistance, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.SetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetInputTubeGroup, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.GetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetInputTubeGroup, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.GetDensityMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetDensityMapImage, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.GetRadiusMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetRadiusMapImage, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.GetTangentMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetTangentMapImage, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.SetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetSpacing, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3.GetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetSpacing, None, tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3_swigregister = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_swigregister
tubeConvertTubesToDensityImageUC3_swigregister(tubeConvertTubesToDensityImageUC3)

def tubeConvertTubesToDensityImageUC3___New_orig__() -> "tubeConvertTubesToDensityImageUC3_Pointer":
    """tubeConvertTubesToDensityImageUC3___New_orig__() -> tubeConvertTubesToDensityImageUC3_Pointer"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3___New_orig__()

def tubeConvertTubesToDensityImageUC3_cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageUC3 *":
    """tubeConvertTubesToDensityImageUC3_cast(itkLightObject obj) -> tubeConvertTubesToDensityImageUC3"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_cast(obj)

class tubeConvertTubesToDensityImageUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToDensityImageUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToDensityImageUS2_Pointer":
        """__New_orig__() -> tubeConvertTubesToDensityImageUS2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToDensityImageUS2_Pointer":
        """Clone(tubeConvertTubesToDensityImageUS2 self) -> tubeConvertTubesToDensityImageUS2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_Clone(self)


    def SetMaxDensityIntensity(self, value: 'unsigned short') -> "void":
        """SetMaxDensityIntensity(tubeConvertTubesToDensityImageUS2 self, unsigned short value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetMaxDensityIntensity(self, value)


    def GetMaxDensityIntensity(self) -> "unsigned short":
        """GetMaxDensityIntensity(tubeConvertTubesToDensityImageUS2 self) -> unsigned short"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetMaxDensityIntensity(self)


    def SetSize(self, value: 'itkSize2') -> "void":
        """SetSize(tubeConvertTubesToDensityImageUS2 self, itkSize2 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetSize(self, value)


    def GetSize(self) -> "itkSize2":
        """GetSize(tubeConvertTubesToDensityImageUS2 self) -> itkSize2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetSize(self)


    def SetUseSquaredDistance(self, value: 'bool') -> "void":
        """SetUseSquaredDistance(tubeConvertTubesToDensityImageUS2 self, bool value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetUseSquaredDistance(self, value)


    def GetUseSquaredDistance(self) -> "bool":
        """GetUseSquaredDistance(tubeConvertTubesToDensityImageUS2 self) -> bool"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetUseSquaredDistance(self)


    def SetInputTubeGroup(self, value: 'itkGroupSpatialObject2_Pointer') -> "void":
        """SetInputTubeGroup(tubeConvertTubesToDensityImageUS2 self, itkGroupSpatialObject2_Pointer value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetInputTubeGroup(self, value)


    def GetInputTubeGroup(self) -> "itkGroupSpatialObject2_Pointer":
        """GetInputTubeGroup(tubeConvertTubesToDensityImageUS2 self) -> itkGroupSpatialObject2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetInputTubeGroup(self)


    def GetDensityMapImage(self) -> "itkImageUS2_Pointer":
        """GetDensityMapImage(tubeConvertTubesToDensityImageUS2 self) -> itkImageUS2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetDensityMapImage(self)


    def GetRadiusMapImage(self) -> "itkImageUS2_Pointer":
        """GetRadiusMapImage(tubeConvertTubesToDensityImageUS2 self) -> itkImageUS2_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetRadiusMapImage(self)


    def GetTangentMapImage(self) -> "itk::SmartPointer< itk::Image< itk::Vector< unsigned short,2 >,2 > >":
        """GetTangentMapImage(tubeConvertTubesToDensityImageUS2 self) -> itk::SmartPointer< itk::Image< itk::Vector< unsigned short,2 >,2 > >"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetTangentMapImage(self)


    def SetSpacing(self, value: 'itkVectorD2') -> "void":
        """SetSpacing(tubeConvertTubesToDensityImageUS2 self, itkVectorD2 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetSpacing(self, value)


    def GetSpacing(self) -> "itkVectorD2":
        """GetSpacing(tubeConvertTubesToDensityImageUS2 self) -> itkVectorD2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetSpacing(self)

    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageUS2

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageUS2 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToDensityImageUS2"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageUS2

        Create a new object of the class tubeConvertTubesToDensityImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToDensityImageUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToDensityImageUS2.Clone = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_Clone, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.SetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetMaxDensityIntensity, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.GetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetMaxDensityIntensity, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.SetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetSize, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.GetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetSize, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.SetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetUseSquaredDistance, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.GetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetUseSquaredDistance, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.SetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetInputTubeGroup, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.GetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetInputTubeGroup, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.GetDensityMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetDensityMapImage, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.GetRadiusMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetRadiusMapImage, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.GetTangentMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetTangentMapImage, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.SetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetSpacing, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2.GetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetSpacing, None, tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2_swigregister = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_swigregister
tubeConvertTubesToDensityImageUS2_swigregister(tubeConvertTubesToDensityImageUS2)

def tubeConvertTubesToDensityImageUS2___New_orig__() -> "tubeConvertTubesToDensityImageUS2_Pointer":
    """tubeConvertTubesToDensityImageUS2___New_orig__() -> tubeConvertTubesToDensityImageUS2_Pointer"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2___New_orig__()

def tubeConvertTubesToDensityImageUS2_cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageUS2 *":
    """tubeConvertTubesToDensityImageUS2_cast(itkLightObject obj) -> tubeConvertTubesToDensityImageUS2"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_cast(obj)

class tubeConvertTubesToDensityImageUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToDensityImageUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToDensityImageUS3_Pointer":
        """__New_orig__() -> tubeConvertTubesToDensityImageUS3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToDensityImageUS3_Pointer":
        """Clone(tubeConvertTubesToDensityImageUS3 self) -> tubeConvertTubesToDensityImageUS3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_Clone(self)


    def SetMaxDensityIntensity(self, value: 'unsigned short') -> "void":
        """SetMaxDensityIntensity(tubeConvertTubesToDensityImageUS3 self, unsigned short value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetMaxDensityIntensity(self, value)


    def GetMaxDensityIntensity(self) -> "unsigned short":
        """GetMaxDensityIntensity(tubeConvertTubesToDensityImageUS3 self) -> unsigned short"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetMaxDensityIntensity(self)


    def SetSize(self, value: 'itkSize3') -> "void":
        """SetSize(tubeConvertTubesToDensityImageUS3 self, itkSize3 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetSize(self, value)


    def GetSize(self) -> "itkSize3":
        """GetSize(tubeConvertTubesToDensityImageUS3 self) -> itkSize3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetSize(self)


    def SetUseSquaredDistance(self, value: 'bool') -> "void":
        """SetUseSquaredDistance(tubeConvertTubesToDensityImageUS3 self, bool value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetUseSquaredDistance(self, value)


    def GetUseSquaredDistance(self) -> "bool":
        """GetUseSquaredDistance(tubeConvertTubesToDensityImageUS3 self) -> bool"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetUseSquaredDistance(self)


    def SetInputTubeGroup(self, value: 'itkGroupSpatialObject3_Pointer') -> "void":
        """SetInputTubeGroup(tubeConvertTubesToDensityImageUS3 self, itkGroupSpatialObject3_Pointer value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetInputTubeGroup(self, value)


    def GetInputTubeGroup(self) -> "itkGroupSpatialObject3_Pointer":
        """GetInputTubeGroup(tubeConvertTubesToDensityImageUS3 self) -> itkGroupSpatialObject3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetInputTubeGroup(self)


    def GetDensityMapImage(self) -> "itkImageUS3_Pointer":
        """GetDensityMapImage(tubeConvertTubesToDensityImageUS3 self) -> itkImageUS3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetDensityMapImage(self)


    def GetRadiusMapImage(self) -> "itkImageUS3_Pointer":
        """GetRadiusMapImage(tubeConvertTubesToDensityImageUS3 self) -> itkImageUS3_Pointer"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetRadiusMapImage(self)


    def GetTangentMapImage(self) -> "itk::SmartPointer< itk::Image< itk::Vector< unsigned short,3 >,3 > >":
        """GetTangentMapImage(tubeConvertTubesToDensityImageUS3 self) -> itk::SmartPointer< itk::Image< itk::Vector< unsigned short,3 >,3 > >"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetTangentMapImage(self)


    def SetSpacing(self, value: 'itkVectorD3') -> "void":
        """SetSpacing(tubeConvertTubesToDensityImageUS3 self, itkVectorD3 value)"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetSpacing(self, value)


    def GetSpacing(self) -> "itkVectorD3":
        """GetSpacing(tubeConvertTubesToDensityImageUS3 self) -> itkVectorD3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetSpacing(self)

    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageUS3

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageUS3 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToDensityImageUS3"""
        return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageUS3

        Create a new object of the class tubeConvertTubesToDensityImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToDensityImageUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToDensityImageUS3.Clone = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_Clone, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.SetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetMaxDensityIntensity, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.GetMaxDensityIntensity = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetMaxDensityIntensity, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.SetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetSize, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.GetSize = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetSize, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.SetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetUseSquaredDistance, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.GetUseSquaredDistance = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetUseSquaredDistance, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.SetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetInputTubeGroup, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.GetInputTubeGroup = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetInputTubeGroup, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.GetDensityMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetDensityMapImage, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.GetRadiusMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetRadiusMapImage, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.GetTangentMapImage = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetTangentMapImage, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.SetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetSpacing, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3.GetSpacing = new_instancemethod(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetSpacing, None, tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3_swigregister = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_swigregister
tubeConvertTubesToDensityImageUS3_swigregister(tubeConvertTubesToDensityImageUS3)

def tubeConvertTubesToDensityImageUS3___New_orig__() -> "tubeConvertTubesToDensityImageUS3_Pointer":
    """tubeConvertTubesToDensityImageUS3___New_orig__() -> tubeConvertTubesToDensityImageUS3_Pointer"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3___New_orig__()

def tubeConvertTubesToDensityImageUS3_cast(obj: 'itkLightObject') -> "tubeConvertTubesToDensityImageUS3 *":
    """tubeConvertTubesToDensityImageUS3_cast(itkLightObject obj) -> tubeConvertTubesToDensityImageUS3"""
    return _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def convert_tubes_to_density_image(*args, **kwargs):
    """Procedural interface for ConvertTubesToDensityImage"""
    import itk
    instance = itk.ConvertTubesToDensityImage.New(*args, **kwargs)
    return instance.__internal_call__()

def convert_tubes_to_density_image_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ConvertTubesToDensityImage, itkTemplate.itkTemplate):
        filter_object = itk.ConvertTubesToDensityImage.values()[0]
    else:
        filter_object = itk.ConvertTubesToDensityImage

    convert_tubes_to_density_image.__doc__ = filter_object.__doc__
    convert_tubes_to_density_image.__doc__ += "\n Args are Input(s) to the filter.\n"
    convert_tubes_to_density_image.__doc__ += "Available Keyword Arguments:\n"
    convert_tubes_to_density_image.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



