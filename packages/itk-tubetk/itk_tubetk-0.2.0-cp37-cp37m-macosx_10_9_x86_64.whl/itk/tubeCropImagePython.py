# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _tubeCropImagePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_tubeCropImagePython', [dirname(__file__)])
        except ImportError:
            import _tubeCropImagePython
            return _tubeCropImagePython
        if fp is not None:
            try:
                _mod = imp.load_module('_tubeCropImagePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _tubeCropImagePython = swig_import_helper()
    del swig_import_helper
else:
    import _tubeCropImagePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRegionPython
import itkRGBAPixelPython
import itkRGBPixelPython

def tubeCropImageID3ID3_New():
  return tubeCropImageID3ID3.New()


def tubeCropImageID2ID2_New():
  return tubeCropImageID2ID2.New()


def tubeCropImageIF3IF3_New():
  return tubeCropImageIF3IF3.New()


def tubeCropImageIF2IF2_New():
  return tubeCropImageIF2IF2.New()


def tubeCropImageIUS3IUS3_New():
  return tubeCropImageIUS3IUS3.New()


def tubeCropImageIUS2IUS2_New():
  return tubeCropImageIUS2IUS2.New()


def tubeCropImageIUC3IUC3_New():
  return tubeCropImageIUC3IUC3.New()


def tubeCropImageIUC2IUC2_New():
  return tubeCropImageIUC2IUC2.New()


def tubeCropImageISS3ISS3_New():
  return tubeCropImageISS3ISS3.New()


def tubeCropImageISS2ISS2_New():
  return tubeCropImageISS2ISS2.New()

class tubeCropImageID2ID2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeCropImageID2ID2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeCropImageID2ID2_Pointer":
        """__New_orig__() -> tubeCropImageID2ID2_Pointer"""
        return _tubeCropImagePython.tubeCropImageID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeCropImageID2ID2_Pointer":
        """Clone(tubeCropImageID2ID2 self) -> tubeCropImageID2ID2_Pointer"""
        return _tubeCropImagePython.tubeCropImageID2ID2_Clone(self)


    def SetMin(self, value: 'itkIndex2') -> "void":
        """SetMin(tubeCropImageID2ID2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageID2ID2_SetMin(self, value)


    def GetMin(self) -> "itkIndex2":
        """GetMin(tubeCropImageID2ID2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageID2ID2_GetMin(self)


    def SetMax(self, value: 'itkIndex2') -> "void":
        """SetMax(tubeCropImageID2ID2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageID2ID2_SetMax(self, value)


    def GetMax(self) -> "itkIndex2":
        """GetMax(tubeCropImageID2ID2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageID2ID2_GetMax(self)


    def SetSize(self, value: 'itkSize2') -> "void":
        """SetSize(tubeCropImageID2ID2 self, itkSize2 value)"""
        return _tubeCropImagePython.tubeCropImageID2ID2_SetSize(self, value)


    def GetSize(self) -> "itkSize2":
        """GetSize(tubeCropImageID2ID2 self) -> itkSize2"""
        return _tubeCropImagePython.tubeCropImageID2ID2_GetSize(self)


    def SetCenter(self, value: 'itkIndex2') -> "void":
        """SetCenter(tubeCropImageID2ID2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageID2ID2_SetCenter(self, value)


    def GetCenter(self) -> "itkIndex2":
        """GetCenter(tubeCropImageID2ID2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageID2ID2_GetCenter(self)


    def SetBoundary(self, value: 'itkIndex2') -> "void":
        """SetBoundary(tubeCropImageID2ID2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageID2ID2_SetBoundary(self, value)


    def GetBoundary(self) -> "itkIndex2":
        """GetBoundary(tubeCropImageID2ID2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageID2ID2_GetBoundary(self)


    def SetMatchVolume(self, value: 'itkImageD2') -> "void":
        """SetMatchVolume(tubeCropImageID2ID2 self, itkImageD2 value)"""
        return _tubeCropImagePython.tubeCropImageID2ID2_SetMatchVolume(self, value)


    def SetMatchMask(self, value: 'itkImageD2') -> "void":
        """SetMatchMask(tubeCropImageID2ID2 self, itkImageD2 value)"""
        return _tubeCropImagePython.tubeCropImageID2ID2_SetMatchMask(self, value)


    def SetSplitInput(self, splitIndex: 'itkIndex2', roiIndex: 'itkIndex2') -> "void":
        """SetSplitInput(tubeCropImageID2ID2 self, itkIndex2 splitIndex, itkIndex2 roiIndex)"""
        return _tubeCropImagePython.tubeCropImageID2ID2_SetSplitInput(self, splitIndex, roiIndex)


    def SetInput(self, value: 'itkImageD2') -> "void":
        """SetInput(tubeCropImageID2ID2 self, itkImageD2 value)"""
        return _tubeCropImagePython.tubeCropImageID2ID2_SetInput(self, value)


    def GetInput(self) -> "itkImageD2 const *":
        """GetInput(tubeCropImageID2ID2 self) -> itkImageD2"""
        return _tubeCropImagePython.tubeCropImageID2ID2_GetInput(self)


    def GetOutput(self) -> "itkImageD2 *":
        """GetOutput(tubeCropImageID2ID2 self) -> itkImageD2"""
        return _tubeCropImagePython.tubeCropImageID2ID2_GetOutput(self)

    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageID2ID2

    def cast(obj: 'itkLightObject') -> "tubeCropImageID2ID2 *":
        """cast(itkLightObject obj) -> tubeCropImageID2ID2"""
        return _tubeCropImagePython.tubeCropImageID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageID2ID2

        Create a new object of the class tubeCropImageID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeCropImageID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeCropImageID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeCropImageID2ID2.Clone = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_Clone, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.SetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_SetMin, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.GetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_GetMin, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.SetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_SetMax, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.GetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_GetMax, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.SetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_SetSize, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.GetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_GetSize, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.SetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_SetCenter, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.GetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_GetCenter, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.SetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_SetBoundary, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.GetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_GetBoundary, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.SetMatchVolume = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_SetMatchVolume, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.SetMatchMask = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_SetMatchMask, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.SetSplitInput = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_SetSplitInput, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.SetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_SetInput, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.GetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_GetInput, None, tubeCropImageID2ID2)
tubeCropImageID2ID2.GetOutput = new_instancemethod(_tubeCropImagePython.tubeCropImageID2ID2_GetOutput, None, tubeCropImageID2ID2)
tubeCropImageID2ID2_swigregister = _tubeCropImagePython.tubeCropImageID2ID2_swigregister
tubeCropImageID2ID2_swigregister(tubeCropImageID2ID2)

def tubeCropImageID2ID2___New_orig__() -> "tubeCropImageID2ID2_Pointer":
    """tubeCropImageID2ID2___New_orig__() -> tubeCropImageID2ID2_Pointer"""
    return _tubeCropImagePython.tubeCropImageID2ID2___New_orig__()

def tubeCropImageID2ID2_cast(obj: 'itkLightObject') -> "tubeCropImageID2ID2 *":
    """tubeCropImageID2ID2_cast(itkLightObject obj) -> tubeCropImageID2ID2"""
    return _tubeCropImagePython.tubeCropImageID2ID2_cast(obj)

class tubeCropImageID3ID3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeCropImageID3ID3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeCropImageID3ID3_Pointer":
        """__New_orig__() -> tubeCropImageID3ID3_Pointer"""
        return _tubeCropImagePython.tubeCropImageID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeCropImageID3ID3_Pointer":
        """Clone(tubeCropImageID3ID3 self) -> tubeCropImageID3ID3_Pointer"""
        return _tubeCropImagePython.tubeCropImageID3ID3_Clone(self)


    def SetMin(self, value: 'itkIndex3') -> "void":
        """SetMin(tubeCropImageID3ID3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageID3ID3_SetMin(self, value)


    def GetMin(self) -> "itkIndex3":
        """GetMin(tubeCropImageID3ID3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageID3ID3_GetMin(self)


    def SetMax(self, value: 'itkIndex3') -> "void":
        """SetMax(tubeCropImageID3ID3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageID3ID3_SetMax(self, value)


    def GetMax(self) -> "itkIndex3":
        """GetMax(tubeCropImageID3ID3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageID3ID3_GetMax(self)


    def SetSize(self, value: 'itkSize3') -> "void":
        """SetSize(tubeCropImageID3ID3 self, itkSize3 value)"""
        return _tubeCropImagePython.tubeCropImageID3ID3_SetSize(self, value)


    def GetSize(self) -> "itkSize3":
        """GetSize(tubeCropImageID3ID3 self) -> itkSize3"""
        return _tubeCropImagePython.tubeCropImageID3ID3_GetSize(self)


    def SetCenter(self, value: 'itkIndex3') -> "void":
        """SetCenter(tubeCropImageID3ID3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageID3ID3_SetCenter(self, value)


    def GetCenter(self) -> "itkIndex3":
        """GetCenter(tubeCropImageID3ID3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageID3ID3_GetCenter(self)


    def SetBoundary(self, value: 'itkIndex3') -> "void":
        """SetBoundary(tubeCropImageID3ID3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageID3ID3_SetBoundary(self, value)


    def GetBoundary(self) -> "itkIndex3":
        """GetBoundary(tubeCropImageID3ID3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageID3ID3_GetBoundary(self)


    def SetMatchVolume(self, value: 'itkImageD3') -> "void":
        """SetMatchVolume(tubeCropImageID3ID3 self, itkImageD3 value)"""
        return _tubeCropImagePython.tubeCropImageID3ID3_SetMatchVolume(self, value)


    def SetMatchMask(self, value: 'itkImageD3') -> "void":
        """SetMatchMask(tubeCropImageID3ID3 self, itkImageD3 value)"""
        return _tubeCropImagePython.tubeCropImageID3ID3_SetMatchMask(self, value)


    def SetSplitInput(self, splitIndex: 'itkIndex3', roiIndex: 'itkIndex3') -> "void":
        """SetSplitInput(tubeCropImageID3ID3 self, itkIndex3 splitIndex, itkIndex3 roiIndex)"""
        return _tubeCropImagePython.tubeCropImageID3ID3_SetSplitInput(self, splitIndex, roiIndex)


    def SetInput(self, value: 'itkImageD3') -> "void":
        """SetInput(tubeCropImageID3ID3 self, itkImageD3 value)"""
        return _tubeCropImagePython.tubeCropImageID3ID3_SetInput(self, value)


    def GetInput(self) -> "itkImageD3 const *":
        """GetInput(tubeCropImageID3ID3 self) -> itkImageD3"""
        return _tubeCropImagePython.tubeCropImageID3ID3_GetInput(self)


    def GetOutput(self) -> "itkImageD3 *":
        """GetOutput(tubeCropImageID3ID3 self) -> itkImageD3"""
        return _tubeCropImagePython.tubeCropImageID3ID3_GetOutput(self)

    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageID3ID3

    def cast(obj: 'itkLightObject') -> "tubeCropImageID3ID3 *":
        """cast(itkLightObject obj) -> tubeCropImageID3ID3"""
        return _tubeCropImagePython.tubeCropImageID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageID3ID3

        Create a new object of the class tubeCropImageID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeCropImageID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeCropImageID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeCropImageID3ID3.Clone = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_Clone, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.SetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_SetMin, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.GetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_GetMin, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.SetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_SetMax, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.GetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_GetMax, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.SetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_SetSize, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.GetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_GetSize, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.SetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_SetCenter, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.GetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_GetCenter, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.SetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_SetBoundary, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.GetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_GetBoundary, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.SetMatchVolume = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_SetMatchVolume, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.SetMatchMask = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_SetMatchMask, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.SetSplitInput = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_SetSplitInput, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.SetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_SetInput, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.GetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_GetInput, None, tubeCropImageID3ID3)
tubeCropImageID3ID3.GetOutput = new_instancemethod(_tubeCropImagePython.tubeCropImageID3ID3_GetOutput, None, tubeCropImageID3ID3)
tubeCropImageID3ID3_swigregister = _tubeCropImagePython.tubeCropImageID3ID3_swigregister
tubeCropImageID3ID3_swigregister(tubeCropImageID3ID3)

def tubeCropImageID3ID3___New_orig__() -> "tubeCropImageID3ID3_Pointer":
    """tubeCropImageID3ID3___New_orig__() -> tubeCropImageID3ID3_Pointer"""
    return _tubeCropImagePython.tubeCropImageID3ID3___New_orig__()

def tubeCropImageID3ID3_cast(obj: 'itkLightObject') -> "tubeCropImageID3ID3 *":
    """tubeCropImageID3ID3_cast(itkLightObject obj) -> tubeCropImageID3ID3"""
    return _tubeCropImagePython.tubeCropImageID3ID3_cast(obj)

class tubeCropImageIF2IF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeCropImageIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeCropImageIF2IF2_Pointer":
        """__New_orig__() -> tubeCropImageIF2IF2_Pointer"""
        return _tubeCropImagePython.tubeCropImageIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeCropImageIF2IF2_Pointer":
        """Clone(tubeCropImageIF2IF2 self) -> tubeCropImageIF2IF2_Pointer"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_Clone(self)


    def SetMin(self, value: 'itkIndex2') -> "void":
        """SetMin(tubeCropImageIF2IF2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_SetMin(self, value)


    def GetMin(self) -> "itkIndex2":
        """GetMin(tubeCropImageIF2IF2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_GetMin(self)


    def SetMax(self, value: 'itkIndex2') -> "void":
        """SetMax(tubeCropImageIF2IF2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_SetMax(self, value)


    def GetMax(self) -> "itkIndex2":
        """GetMax(tubeCropImageIF2IF2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_GetMax(self)


    def SetSize(self, value: 'itkSize2') -> "void":
        """SetSize(tubeCropImageIF2IF2 self, itkSize2 value)"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_SetSize(self, value)


    def GetSize(self) -> "itkSize2":
        """GetSize(tubeCropImageIF2IF2 self) -> itkSize2"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_GetSize(self)


    def SetCenter(self, value: 'itkIndex2') -> "void":
        """SetCenter(tubeCropImageIF2IF2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_SetCenter(self, value)


    def GetCenter(self) -> "itkIndex2":
        """GetCenter(tubeCropImageIF2IF2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_GetCenter(self)


    def SetBoundary(self, value: 'itkIndex2') -> "void":
        """SetBoundary(tubeCropImageIF2IF2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_SetBoundary(self, value)


    def GetBoundary(self) -> "itkIndex2":
        """GetBoundary(tubeCropImageIF2IF2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_GetBoundary(self)


    def SetMatchVolume(self, value: 'itkImageF2') -> "void":
        """SetMatchVolume(tubeCropImageIF2IF2 self, itkImageF2 value)"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_SetMatchVolume(self, value)


    def SetMatchMask(self, value: 'itkImageF2') -> "void":
        """SetMatchMask(tubeCropImageIF2IF2 self, itkImageF2 value)"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_SetMatchMask(self, value)


    def SetSplitInput(self, splitIndex: 'itkIndex2', roiIndex: 'itkIndex2') -> "void":
        """SetSplitInput(tubeCropImageIF2IF2 self, itkIndex2 splitIndex, itkIndex2 roiIndex)"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_SetSplitInput(self, splitIndex, roiIndex)


    def SetInput(self, value: 'itkImageF2') -> "void":
        """SetInput(tubeCropImageIF2IF2 self, itkImageF2 value)"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_SetInput(self, value)


    def GetInput(self) -> "itkImageF2 const *":
        """GetInput(tubeCropImageIF2IF2 self) -> itkImageF2"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_GetInput(self)


    def GetOutput(self) -> "itkImageF2 *":
        """GetOutput(tubeCropImageIF2IF2 self) -> itkImageF2"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_GetOutput(self)

    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIF2IF2

    def cast(obj: 'itkLightObject') -> "tubeCropImageIF2IF2 *":
        """cast(itkLightObject obj) -> tubeCropImageIF2IF2"""
        return _tubeCropImagePython.tubeCropImageIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIF2IF2

        Create a new object of the class tubeCropImageIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeCropImageIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeCropImageIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeCropImageIF2IF2.Clone = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_Clone, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.SetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_SetMin, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.GetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_GetMin, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.SetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_SetMax, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.GetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_GetMax, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.SetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_SetSize, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.GetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_GetSize, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.SetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_SetCenter, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.GetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_GetCenter, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.SetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_SetBoundary, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.GetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_GetBoundary, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.SetMatchVolume = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_SetMatchVolume, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.SetMatchMask = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_SetMatchMask, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.SetSplitInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_SetSplitInput, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.SetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_SetInput, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.GetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_GetInput, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2.GetOutput = new_instancemethod(_tubeCropImagePython.tubeCropImageIF2IF2_GetOutput, None, tubeCropImageIF2IF2)
tubeCropImageIF2IF2_swigregister = _tubeCropImagePython.tubeCropImageIF2IF2_swigregister
tubeCropImageIF2IF2_swigregister(tubeCropImageIF2IF2)

def tubeCropImageIF2IF2___New_orig__() -> "tubeCropImageIF2IF2_Pointer":
    """tubeCropImageIF2IF2___New_orig__() -> tubeCropImageIF2IF2_Pointer"""
    return _tubeCropImagePython.tubeCropImageIF2IF2___New_orig__()

def tubeCropImageIF2IF2_cast(obj: 'itkLightObject') -> "tubeCropImageIF2IF2 *":
    """tubeCropImageIF2IF2_cast(itkLightObject obj) -> tubeCropImageIF2IF2"""
    return _tubeCropImagePython.tubeCropImageIF2IF2_cast(obj)

class tubeCropImageIF3IF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeCropImageIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeCropImageIF3IF3_Pointer":
        """__New_orig__() -> tubeCropImageIF3IF3_Pointer"""
        return _tubeCropImagePython.tubeCropImageIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeCropImageIF3IF3_Pointer":
        """Clone(tubeCropImageIF3IF3 self) -> tubeCropImageIF3IF3_Pointer"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_Clone(self)


    def SetMin(self, value: 'itkIndex3') -> "void":
        """SetMin(tubeCropImageIF3IF3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_SetMin(self, value)


    def GetMin(self) -> "itkIndex3":
        """GetMin(tubeCropImageIF3IF3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_GetMin(self)


    def SetMax(self, value: 'itkIndex3') -> "void":
        """SetMax(tubeCropImageIF3IF3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_SetMax(self, value)


    def GetMax(self) -> "itkIndex3":
        """GetMax(tubeCropImageIF3IF3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_GetMax(self)


    def SetSize(self, value: 'itkSize3') -> "void":
        """SetSize(tubeCropImageIF3IF3 self, itkSize3 value)"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_SetSize(self, value)


    def GetSize(self) -> "itkSize3":
        """GetSize(tubeCropImageIF3IF3 self) -> itkSize3"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_GetSize(self)


    def SetCenter(self, value: 'itkIndex3') -> "void":
        """SetCenter(tubeCropImageIF3IF3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_SetCenter(self, value)


    def GetCenter(self) -> "itkIndex3":
        """GetCenter(tubeCropImageIF3IF3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_GetCenter(self)


    def SetBoundary(self, value: 'itkIndex3') -> "void":
        """SetBoundary(tubeCropImageIF3IF3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_SetBoundary(self, value)


    def GetBoundary(self) -> "itkIndex3":
        """GetBoundary(tubeCropImageIF3IF3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_GetBoundary(self)


    def SetMatchVolume(self, value: 'itkImageF3') -> "void":
        """SetMatchVolume(tubeCropImageIF3IF3 self, itkImageF3 value)"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_SetMatchVolume(self, value)


    def SetMatchMask(self, value: 'itkImageF3') -> "void":
        """SetMatchMask(tubeCropImageIF3IF3 self, itkImageF3 value)"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_SetMatchMask(self, value)


    def SetSplitInput(self, splitIndex: 'itkIndex3', roiIndex: 'itkIndex3') -> "void":
        """SetSplitInput(tubeCropImageIF3IF3 self, itkIndex3 splitIndex, itkIndex3 roiIndex)"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_SetSplitInput(self, splitIndex, roiIndex)


    def SetInput(self, value: 'itkImageF3') -> "void":
        """SetInput(tubeCropImageIF3IF3 self, itkImageF3 value)"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_SetInput(self, value)


    def GetInput(self) -> "itkImageF3 const *":
        """GetInput(tubeCropImageIF3IF3 self) -> itkImageF3"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_GetInput(self)


    def GetOutput(self) -> "itkImageF3 *":
        """GetOutput(tubeCropImageIF3IF3 self) -> itkImageF3"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_GetOutput(self)

    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIF3IF3

    def cast(obj: 'itkLightObject') -> "tubeCropImageIF3IF3 *":
        """cast(itkLightObject obj) -> tubeCropImageIF3IF3"""
        return _tubeCropImagePython.tubeCropImageIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIF3IF3

        Create a new object of the class tubeCropImageIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeCropImageIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeCropImageIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeCropImageIF3IF3.Clone = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_Clone, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.SetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_SetMin, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.GetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_GetMin, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.SetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_SetMax, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.GetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_GetMax, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.SetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_SetSize, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.GetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_GetSize, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.SetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_SetCenter, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.GetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_GetCenter, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.SetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_SetBoundary, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.GetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_GetBoundary, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.SetMatchVolume = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_SetMatchVolume, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.SetMatchMask = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_SetMatchMask, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.SetSplitInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_SetSplitInput, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.SetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_SetInput, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.GetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_GetInput, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3.GetOutput = new_instancemethod(_tubeCropImagePython.tubeCropImageIF3IF3_GetOutput, None, tubeCropImageIF3IF3)
tubeCropImageIF3IF3_swigregister = _tubeCropImagePython.tubeCropImageIF3IF3_swigregister
tubeCropImageIF3IF3_swigregister(tubeCropImageIF3IF3)

def tubeCropImageIF3IF3___New_orig__() -> "tubeCropImageIF3IF3_Pointer":
    """tubeCropImageIF3IF3___New_orig__() -> tubeCropImageIF3IF3_Pointer"""
    return _tubeCropImagePython.tubeCropImageIF3IF3___New_orig__()

def tubeCropImageIF3IF3_cast(obj: 'itkLightObject') -> "tubeCropImageIF3IF3 *":
    """tubeCropImageIF3IF3_cast(itkLightObject obj) -> tubeCropImageIF3IF3"""
    return _tubeCropImagePython.tubeCropImageIF3IF3_cast(obj)

class tubeCropImageISS2ISS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeCropImageISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeCropImageISS2ISS2_Pointer":
        """__New_orig__() -> tubeCropImageISS2ISS2_Pointer"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeCropImageISS2ISS2_Pointer":
        """Clone(tubeCropImageISS2ISS2 self) -> tubeCropImageISS2ISS2_Pointer"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_Clone(self)


    def SetMin(self, value: 'itkIndex2') -> "void":
        """SetMin(tubeCropImageISS2ISS2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_SetMin(self, value)


    def GetMin(self) -> "itkIndex2":
        """GetMin(tubeCropImageISS2ISS2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_GetMin(self)


    def SetMax(self, value: 'itkIndex2') -> "void":
        """SetMax(tubeCropImageISS2ISS2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_SetMax(self, value)


    def GetMax(self) -> "itkIndex2":
        """GetMax(tubeCropImageISS2ISS2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_GetMax(self)


    def SetSize(self, value: 'itkSize2') -> "void":
        """SetSize(tubeCropImageISS2ISS2 self, itkSize2 value)"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_SetSize(self, value)


    def GetSize(self) -> "itkSize2":
        """GetSize(tubeCropImageISS2ISS2 self) -> itkSize2"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_GetSize(self)


    def SetCenter(self, value: 'itkIndex2') -> "void":
        """SetCenter(tubeCropImageISS2ISS2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_SetCenter(self, value)


    def GetCenter(self) -> "itkIndex2":
        """GetCenter(tubeCropImageISS2ISS2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_GetCenter(self)


    def SetBoundary(self, value: 'itkIndex2') -> "void":
        """SetBoundary(tubeCropImageISS2ISS2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_SetBoundary(self, value)


    def GetBoundary(self) -> "itkIndex2":
        """GetBoundary(tubeCropImageISS2ISS2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_GetBoundary(self)


    def SetMatchVolume(self, value: 'itkImageSS2') -> "void":
        """SetMatchVolume(tubeCropImageISS2ISS2 self, itkImageSS2 value)"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_SetMatchVolume(self, value)


    def SetMatchMask(self, value: 'itkImageSS2') -> "void":
        """SetMatchMask(tubeCropImageISS2ISS2 self, itkImageSS2 value)"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_SetMatchMask(self, value)


    def SetSplitInput(self, splitIndex: 'itkIndex2', roiIndex: 'itkIndex2') -> "void":
        """SetSplitInput(tubeCropImageISS2ISS2 self, itkIndex2 splitIndex, itkIndex2 roiIndex)"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_SetSplitInput(self, splitIndex, roiIndex)


    def SetInput(self, value: 'itkImageSS2') -> "void":
        """SetInput(tubeCropImageISS2ISS2 self, itkImageSS2 value)"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_SetInput(self, value)


    def GetInput(self) -> "itkImageSS2 const *":
        """GetInput(tubeCropImageISS2ISS2 self) -> itkImageSS2"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_GetInput(self)


    def GetOutput(self) -> "itkImageSS2 *":
        """GetOutput(tubeCropImageISS2ISS2 self) -> itkImageSS2"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_GetOutput(self)

    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageISS2ISS2

    def cast(obj: 'itkLightObject') -> "tubeCropImageISS2ISS2 *":
        """cast(itkLightObject obj) -> tubeCropImageISS2ISS2"""
        return _tubeCropImagePython.tubeCropImageISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageISS2ISS2

        Create a new object of the class tubeCropImageISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeCropImageISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeCropImageISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeCropImageISS2ISS2.Clone = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_Clone, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.SetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_SetMin, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.GetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_GetMin, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.SetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_SetMax, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.GetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_GetMax, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.SetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_SetSize, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.GetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_GetSize, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.SetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_SetCenter, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.GetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_GetCenter, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.SetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_SetBoundary, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.GetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_GetBoundary, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.SetMatchVolume = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_SetMatchVolume, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.SetMatchMask = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_SetMatchMask, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.SetSplitInput = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_SetSplitInput, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.SetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_SetInput, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.GetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_GetInput, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2.GetOutput = new_instancemethod(_tubeCropImagePython.tubeCropImageISS2ISS2_GetOutput, None, tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2_swigregister = _tubeCropImagePython.tubeCropImageISS2ISS2_swigregister
tubeCropImageISS2ISS2_swigregister(tubeCropImageISS2ISS2)

def tubeCropImageISS2ISS2___New_orig__() -> "tubeCropImageISS2ISS2_Pointer":
    """tubeCropImageISS2ISS2___New_orig__() -> tubeCropImageISS2ISS2_Pointer"""
    return _tubeCropImagePython.tubeCropImageISS2ISS2___New_orig__()

def tubeCropImageISS2ISS2_cast(obj: 'itkLightObject') -> "tubeCropImageISS2ISS2 *":
    """tubeCropImageISS2ISS2_cast(itkLightObject obj) -> tubeCropImageISS2ISS2"""
    return _tubeCropImagePython.tubeCropImageISS2ISS2_cast(obj)

class tubeCropImageISS3ISS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeCropImageISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeCropImageISS3ISS3_Pointer":
        """__New_orig__() -> tubeCropImageISS3ISS3_Pointer"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeCropImageISS3ISS3_Pointer":
        """Clone(tubeCropImageISS3ISS3 self) -> tubeCropImageISS3ISS3_Pointer"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_Clone(self)


    def SetMin(self, value: 'itkIndex3') -> "void":
        """SetMin(tubeCropImageISS3ISS3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_SetMin(self, value)


    def GetMin(self) -> "itkIndex3":
        """GetMin(tubeCropImageISS3ISS3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_GetMin(self)


    def SetMax(self, value: 'itkIndex3') -> "void":
        """SetMax(tubeCropImageISS3ISS3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_SetMax(self, value)


    def GetMax(self) -> "itkIndex3":
        """GetMax(tubeCropImageISS3ISS3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_GetMax(self)


    def SetSize(self, value: 'itkSize3') -> "void":
        """SetSize(tubeCropImageISS3ISS3 self, itkSize3 value)"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_SetSize(self, value)


    def GetSize(self) -> "itkSize3":
        """GetSize(tubeCropImageISS3ISS3 self) -> itkSize3"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_GetSize(self)


    def SetCenter(self, value: 'itkIndex3') -> "void":
        """SetCenter(tubeCropImageISS3ISS3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_SetCenter(self, value)


    def GetCenter(self) -> "itkIndex3":
        """GetCenter(tubeCropImageISS3ISS3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_GetCenter(self)


    def SetBoundary(self, value: 'itkIndex3') -> "void":
        """SetBoundary(tubeCropImageISS3ISS3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_SetBoundary(self, value)


    def GetBoundary(self) -> "itkIndex3":
        """GetBoundary(tubeCropImageISS3ISS3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_GetBoundary(self)


    def SetMatchVolume(self, value: 'itkImageSS3') -> "void":
        """SetMatchVolume(tubeCropImageISS3ISS3 self, itkImageSS3 value)"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_SetMatchVolume(self, value)


    def SetMatchMask(self, value: 'itkImageSS3') -> "void":
        """SetMatchMask(tubeCropImageISS3ISS3 self, itkImageSS3 value)"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_SetMatchMask(self, value)


    def SetSplitInput(self, splitIndex: 'itkIndex3', roiIndex: 'itkIndex3') -> "void":
        """SetSplitInput(tubeCropImageISS3ISS3 self, itkIndex3 splitIndex, itkIndex3 roiIndex)"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_SetSplitInput(self, splitIndex, roiIndex)


    def SetInput(self, value: 'itkImageSS3') -> "void":
        """SetInput(tubeCropImageISS3ISS3 self, itkImageSS3 value)"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_SetInput(self, value)


    def GetInput(self) -> "itkImageSS3 const *":
        """GetInput(tubeCropImageISS3ISS3 self) -> itkImageSS3"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_GetInput(self)


    def GetOutput(self) -> "itkImageSS3 *":
        """GetOutput(tubeCropImageISS3ISS3 self) -> itkImageSS3"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_GetOutput(self)

    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageISS3ISS3

    def cast(obj: 'itkLightObject') -> "tubeCropImageISS3ISS3 *":
        """cast(itkLightObject obj) -> tubeCropImageISS3ISS3"""
        return _tubeCropImagePython.tubeCropImageISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageISS3ISS3

        Create a new object of the class tubeCropImageISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeCropImageISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeCropImageISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeCropImageISS3ISS3.Clone = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_Clone, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.SetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_SetMin, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.GetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_GetMin, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.SetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_SetMax, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.GetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_GetMax, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.SetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_SetSize, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.GetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_GetSize, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.SetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_SetCenter, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.GetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_GetCenter, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.SetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_SetBoundary, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.GetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_GetBoundary, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.SetMatchVolume = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_SetMatchVolume, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.SetMatchMask = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_SetMatchMask, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.SetSplitInput = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_SetSplitInput, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.SetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_SetInput, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.GetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_GetInput, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3.GetOutput = new_instancemethod(_tubeCropImagePython.tubeCropImageISS3ISS3_GetOutput, None, tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3_swigregister = _tubeCropImagePython.tubeCropImageISS3ISS3_swigregister
tubeCropImageISS3ISS3_swigregister(tubeCropImageISS3ISS3)

def tubeCropImageISS3ISS3___New_orig__() -> "tubeCropImageISS3ISS3_Pointer":
    """tubeCropImageISS3ISS3___New_orig__() -> tubeCropImageISS3ISS3_Pointer"""
    return _tubeCropImagePython.tubeCropImageISS3ISS3___New_orig__()

def tubeCropImageISS3ISS3_cast(obj: 'itkLightObject') -> "tubeCropImageISS3ISS3 *":
    """tubeCropImageISS3ISS3_cast(itkLightObject obj) -> tubeCropImageISS3ISS3"""
    return _tubeCropImagePython.tubeCropImageISS3ISS3_cast(obj)

class tubeCropImageIUC2IUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeCropImageIUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeCropImageIUC2IUC2_Pointer":
        """__New_orig__() -> tubeCropImageIUC2IUC2_Pointer"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeCropImageIUC2IUC2_Pointer":
        """Clone(tubeCropImageIUC2IUC2 self) -> tubeCropImageIUC2IUC2_Pointer"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_Clone(self)


    def SetMin(self, value: 'itkIndex2') -> "void":
        """SetMin(tubeCropImageIUC2IUC2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_SetMin(self, value)


    def GetMin(self) -> "itkIndex2":
        """GetMin(tubeCropImageIUC2IUC2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_GetMin(self)


    def SetMax(self, value: 'itkIndex2') -> "void":
        """SetMax(tubeCropImageIUC2IUC2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_SetMax(self, value)


    def GetMax(self) -> "itkIndex2":
        """GetMax(tubeCropImageIUC2IUC2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_GetMax(self)


    def SetSize(self, value: 'itkSize2') -> "void":
        """SetSize(tubeCropImageIUC2IUC2 self, itkSize2 value)"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_SetSize(self, value)


    def GetSize(self) -> "itkSize2":
        """GetSize(tubeCropImageIUC2IUC2 self) -> itkSize2"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_GetSize(self)


    def SetCenter(self, value: 'itkIndex2') -> "void":
        """SetCenter(tubeCropImageIUC2IUC2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_SetCenter(self, value)


    def GetCenter(self) -> "itkIndex2":
        """GetCenter(tubeCropImageIUC2IUC2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_GetCenter(self)


    def SetBoundary(self, value: 'itkIndex2') -> "void":
        """SetBoundary(tubeCropImageIUC2IUC2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_SetBoundary(self, value)


    def GetBoundary(self) -> "itkIndex2":
        """GetBoundary(tubeCropImageIUC2IUC2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_GetBoundary(self)


    def SetMatchVolume(self, value: 'itkImageUC2') -> "void":
        """SetMatchVolume(tubeCropImageIUC2IUC2 self, itkImageUC2 value)"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_SetMatchVolume(self, value)


    def SetMatchMask(self, value: 'itkImageUC2') -> "void":
        """SetMatchMask(tubeCropImageIUC2IUC2 self, itkImageUC2 value)"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_SetMatchMask(self, value)


    def SetSplitInput(self, splitIndex: 'itkIndex2', roiIndex: 'itkIndex2') -> "void":
        """SetSplitInput(tubeCropImageIUC2IUC2 self, itkIndex2 splitIndex, itkIndex2 roiIndex)"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_SetSplitInput(self, splitIndex, roiIndex)


    def SetInput(self, value: 'itkImageUC2') -> "void":
        """SetInput(tubeCropImageIUC2IUC2 self, itkImageUC2 value)"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_SetInput(self, value)


    def GetInput(self) -> "itkImageUC2 const *":
        """GetInput(tubeCropImageIUC2IUC2 self) -> itkImageUC2"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_GetInput(self)


    def GetOutput(self) -> "itkImageUC2 *":
        """GetOutput(tubeCropImageIUC2IUC2 self) -> itkImageUC2"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_GetOutput(self)

    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIUC2IUC2

    def cast(obj: 'itkLightObject') -> "tubeCropImageIUC2IUC2 *":
        """cast(itkLightObject obj) -> tubeCropImageIUC2IUC2"""
        return _tubeCropImagePython.tubeCropImageIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIUC2IUC2

        Create a new object of the class tubeCropImageIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeCropImageIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeCropImageIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeCropImageIUC2IUC2.Clone = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_Clone, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.SetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetMin, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.GetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetMin, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.SetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetMax, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.GetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetMax, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.SetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetSize, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.GetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetSize, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.SetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetCenter, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.GetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetCenter, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.SetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetBoundary, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.GetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetBoundary, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.SetMatchVolume = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetMatchVolume, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.SetMatchMask = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetMatchMask, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.SetSplitInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetSplitInput, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.SetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetInput, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.GetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetInput, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2.GetOutput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetOutput, None, tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2_swigregister = _tubeCropImagePython.tubeCropImageIUC2IUC2_swigregister
tubeCropImageIUC2IUC2_swigregister(tubeCropImageIUC2IUC2)

def tubeCropImageIUC2IUC2___New_orig__() -> "tubeCropImageIUC2IUC2_Pointer":
    """tubeCropImageIUC2IUC2___New_orig__() -> tubeCropImageIUC2IUC2_Pointer"""
    return _tubeCropImagePython.tubeCropImageIUC2IUC2___New_orig__()

def tubeCropImageIUC2IUC2_cast(obj: 'itkLightObject') -> "tubeCropImageIUC2IUC2 *":
    """tubeCropImageIUC2IUC2_cast(itkLightObject obj) -> tubeCropImageIUC2IUC2"""
    return _tubeCropImagePython.tubeCropImageIUC2IUC2_cast(obj)

class tubeCropImageIUC3IUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeCropImageIUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeCropImageIUC3IUC3_Pointer":
        """__New_orig__() -> tubeCropImageIUC3IUC3_Pointer"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeCropImageIUC3IUC3_Pointer":
        """Clone(tubeCropImageIUC3IUC3 self) -> tubeCropImageIUC3IUC3_Pointer"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_Clone(self)


    def SetMin(self, value: 'itkIndex3') -> "void":
        """SetMin(tubeCropImageIUC3IUC3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_SetMin(self, value)


    def GetMin(self) -> "itkIndex3":
        """GetMin(tubeCropImageIUC3IUC3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_GetMin(self)


    def SetMax(self, value: 'itkIndex3') -> "void":
        """SetMax(tubeCropImageIUC3IUC3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_SetMax(self, value)


    def GetMax(self) -> "itkIndex3":
        """GetMax(tubeCropImageIUC3IUC3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_GetMax(self)


    def SetSize(self, value: 'itkSize3') -> "void":
        """SetSize(tubeCropImageIUC3IUC3 self, itkSize3 value)"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_SetSize(self, value)


    def GetSize(self) -> "itkSize3":
        """GetSize(tubeCropImageIUC3IUC3 self) -> itkSize3"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_GetSize(self)


    def SetCenter(self, value: 'itkIndex3') -> "void":
        """SetCenter(tubeCropImageIUC3IUC3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_SetCenter(self, value)


    def GetCenter(self) -> "itkIndex3":
        """GetCenter(tubeCropImageIUC3IUC3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_GetCenter(self)


    def SetBoundary(self, value: 'itkIndex3') -> "void":
        """SetBoundary(tubeCropImageIUC3IUC3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_SetBoundary(self, value)


    def GetBoundary(self) -> "itkIndex3":
        """GetBoundary(tubeCropImageIUC3IUC3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_GetBoundary(self)


    def SetMatchVolume(self, value: 'itkImageUC3') -> "void":
        """SetMatchVolume(tubeCropImageIUC3IUC3 self, itkImageUC3 value)"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_SetMatchVolume(self, value)


    def SetMatchMask(self, value: 'itkImageUC3') -> "void":
        """SetMatchMask(tubeCropImageIUC3IUC3 self, itkImageUC3 value)"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_SetMatchMask(self, value)


    def SetSplitInput(self, splitIndex: 'itkIndex3', roiIndex: 'itkIndex3') -> "void":
        """SetSplitInput(tubeCropImageIUC3IUC3 self, itkIndex3 splitIndex, itkIndex3 roiIndex)"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_SetSplitInput(self, splitIndex, roiIndex)


    def SetInput(self, value: 'itkImageUC3') -> "void":
        """SetInput(tubeCropImageIUC3IUC3 self, itkImageUC3 value)"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_SetInput(self, value)


    def GetInput(self) -> "itkImageUC3 const *":
        """GetInput(tubeCropImageIUC3IUC3 self) -> itkImageUC3"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_GetInput(self)


    def GetOutput(self) -> "itkImageUC3 *":
        """GetOutput(tubeCropImageIUC3IUC3 self) -> itkImageUC3"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_GetOutput(self)

    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIUC3IUC3

    def cast(obj: 'itkLightObject') -> "tubeCropImageIUC3IUC3 *":
        """cast(itkLightObject obj) -> tubeCropImageIUC3IUC3"""
        return _tubeCropImagePython.tubeCropImageIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIUC3IUC3

        Create a new object of the class tubeCropImageIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeCropImageIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeCropImageIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeCropImageIUC3IUC3.Clone = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_Clone, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.SetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetMin, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.GetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetMin, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.SetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetMax, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.GetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetMax, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.SetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetSize, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.GetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetSize, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.SetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetCenter, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.GetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetCenter, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.SetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetBoundary, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.GetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetBoundary, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.SetMatchVolume = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetMatchVolume, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.SetMatchMask = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetMatchMask, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.SetSplitInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetSplitInput, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.SetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetInput, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.GetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetInput, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3.GetOutput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetOutput, None, tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3_swigregister = _tubeCropImagePython.tubeCropImageIUC3IUC3_swigregister
tubeCropImageIUC3IUC3_swigregister(tubeCropImageIUC3IUC3)

def tubeCropImageIUC3IUC3___New_orig__() -> "tubeCropImageIUC3IUC3_Pointer":
    """tubeCropImageIUC3IUC3___New_orig__() -> tubeCropImageIUC3IUC3_Pointer"""
    return _tubeCropImagePython.tubeCropImageIUC3IUC3___New_orig__()

def tubeCropImageIUC3IUC3_cast(obj: 'itkLightObject') -> "tubeCropImageIUC3IUC3 *":
    """tubeCropImageIUC3IUC3_cast(itkLightObject obj) -> tubeCropImageIUC3IUC3"""
    return _tubeCropImagePython.tubeCropImageIUC3IUC3_cast(obj)

class tubeCropImageIUS2IUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeCropImageIUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeCropImageIUS2IUS2_Pointer":
        """__New_orig__() -> tubeCropImageIUS2IUS2_Pointer"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeCropImageIUS2IUS2_Pointer":
        """Clone(tubeCropImageIUS2IUS2 self) -> tubeCropImageIUS2IUS2_Pointer"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_Clone(self)


    def SetMin(self, value: 'itkIndex2') -> "void":
        """SetMin(tubeCropImageIUS2IUS2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_SetMin(self, value)


    def GetMin(self) -> "itkIndex2":
        """GetMin(tubeCropImageIUS2IUS2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_GetMin(self)


    def SetMax(self, value: 'itkIndex2') -> "void":
        """SetMax(tubeCropImageIUS2IUS2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_SetMax(self, value)


    def GetMax(self) -> "itkIndex2":
        """GetMax(tubeCropImageIUS2IUS2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_GetMax(self)


    def SetSize(self, value: 'itkSize2') -> "void":
        """SetSize(tubeCropImageIUS2IUS2 self, itkSize2 value)"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_SetSize(self, value)


    def GetSize(self) -> "itkSize2":
        """GetSize(tubeCropImageIUS2IUS2 self) -> itkSize2"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_GetSize(self)


    def SetCenter(self, value: 'itkIndex2') -> "void":
        """SetCenter(tubeCropImageIUS2IUS2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_SetCenter(self, value)


    def GetCenter(self) -> "itkIndex2":
        """GetCenter(tubeCropImageIUS2IUS2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_GetCenter(self)


    def SetBoundary(self, value: 'itkIndex2') -> "void":
        """SetBoundary(tubeCropImageIUS2IUS2 self, itkIndex2 value)"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_SetBoundary(self, value)


    def GetBoundary(self) -> "itkIndex2":
        """GetBoundary(tubeCropImageIUS2IUS2 self) -> itkIndex2"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_GetBoundary(self)


    def SetMatchVolume(self, value: 'itkImageUS2') -> "void":
        """SetMatchVolume(tubeCropImageIUS2IUS2 self, itkImageUS2 value)"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_SetMatchVolume(self, value)


    def SetMatchMask(self, value: 'itkImageUS2') -> "void":
        """SetMatchMask(tubeCropImageIUS2IUS2 self, itkImageUS2 value)"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_SetMatchMask(self, value)


    def SetSplitInput(self, splitIndex: 'itkIndex2', roiIndex: 'itkIndex2') -> "void":
        """SetSplitInput(tubeCropImageIUS2IUS2 self, itkIndex2 splitIndex, itkIndex2 roiIndex)"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_SetSplitInput(self, splitIndex, roiIndex)


    def SetInput(self, value: 'itkImageUS2') -> "void":
        """SetInput(tubeCropImageIUS2IUS2 self, itkImageUS2 value)"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_SetInput(self, value)


    def GetInput(self) -> "itkImageUS2 const *":
        """GetInput(tubeCropImageIUS2IUS2 self) -> itkImageUS2"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_GetInput(self)


    def GetOutput(self) -> "itkImageUS2 *":
        """GetOutput(tubeCropImageIUS2IUS2 self) -> itkImageUS2"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_GetOutput(self)

    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIUS2IUS2

    def cast(obj: 'itkLightObject') -> "tubeCropImageIUS2IUS2 *":
        """cast(itkLightObject obj) -> tubeCropImageIUS2IUS2"""
        return _tubeCropImagePython.tubeCropImageIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIUS2IUS2

        Create a new object of the class tubeCropImageIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeCropImageIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeCropImageIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeCropImageIUS2IUS2.Clone = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_Clone, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.SetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetMin, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.GetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetMin, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.SetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetMax, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.GetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetMax, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.SetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetSize, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.GetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetSize, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.SetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetCenter, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.GetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetCenter, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.SetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetBoundary, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.GetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetBoundary, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.SetMatchVolume = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetMatchVolume, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.SetMatchMask = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetMatchMask, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.SetSplitInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetSplitInput, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.SetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetInput, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.GetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetInput, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2.GetOutput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetOutput, None, tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2_swigregister = _tubeCropImagePython.tubeCropImageIUS2IUS2_swigregister
tubeCropImageIUS2IUS2_swigregister(tubeCropImageIUS2IUS2)

def tubeCropImageIUS2IUS2___New_orig__() -> "tubeCropImageIUS2IUS2_Pointer":
    """tubeCropImageIUS2IUS2___New_orig__() -> tubeCropImageIUS2IUS2_Pointer"""
    return _tubeCropImagePython.tubeCropImageIUS2IUS2___New_orig__()

def tubeCropImageIUS2IUS2_cast(obj: 'itkLightObject') -> "tubeCropImageIUS2IUS2 *":
    """tubeCropImageIUS2IUS2_cast(itkLightObject obj) -> tubeCropImageIUS2IUS2"""
    return _tubeCropImagePython.tubeCropImageIUS2IUS2_cast(obj)

class tubeCropImageIUS3IUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeCropImageIUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeCropImageIUS3IUS3_Pointer":
        """__New_orig__() -> tubeCropImageIUS3IUS3_Pointer"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeCropImageIUS3IUS3_Pointer":
        """Clone(tubeCropImageIUS3IUS3 self) -> tubeCropImageIUS3IUS3_Pointer"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_Clone(self)


    def SetMin(self, value: 'itkIndex3') -> "void":
        """SetMin(tubeCropImageIUS3IUS3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_SetMin(self, value)


    def GetMin(self) -> "itkIndex3":
        """GetMin(tubeCropImageIUS3IUS3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_GetMin(self)


    def SetMax(self, value: 'itkIndex3') -> "void":
        """SetMax(tubeCropImageIUS3IUS3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_SetMax(self, value)


    def GetMax(self) -> "itkIndex3":
        """GetMax(tubeCropImageIUS3IUS3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_GetMax(self)


    def SetSize(self, value: 'itkSize3') -> "void":
        """SetSize(tubeCropImageIUS3IUS3 self, itkSize3 value)"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_SetSize(self, value)


    def GetSize(self) -> "itkSize3":
        """GetSize(tubeCropImageIUS3IUS3 self) -> itkSize3"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_GetSize(self)


    def SetCenter(self, value: 'itkIndex3') -> "void":
        """SetCenter(tubeCropImageIUS3IUS3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_SetCenter(self, value)


    def GetCenter(self) -> "itkIndex3":
        """GetCenter(tubeCropImageIUS3IUS3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_GetCenter(self)


    def SetBoundary(self, value: 'itkIndex3') -> "void":
        """SetBoundary(tubeCropImageIUS3IUS3 self, itkIndex3 value)"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_SetBoundary(self, value)


    def GetBoundary(self) -> "itkIndex3":
        """GetBoundary(tubeCropImageIUS3IUS3 self) -> itkIndex3"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_GetBoundary(self)


    def SetMatchVolume(self, value: 'itkImageUS3') -> "void":
        """SetMatchVolume(tubeCropImageIUS3IUS3 self, itkImageUS3 value)"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_SetMatchVolume(self, value)


    def SetMatchMask(self, value: 'itkImageUS3') -> "void":
        """SetMatchMask(tubeCropImageIUS3IUS3 self, itkImageUS3 value)"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_SetMatchMask(self, value)


    def SetSplitInput(self, splitIndex: 'itkIndex3', roiIndex: 'itkIndex3') -> "void":
        """SetSplitInput(tubeCropImageIUS3IUS3 self, itkIndex3 splitIndex, itkIndex3 roiIndex)"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_SetSplitInput(self, splitIndex, roiIndex)


    def SetInput(self, value: 'itkImageUS3') -> "void":
        """SetInput(tubeCropImageIUS3IUS3 self, itkImageUS3 value)"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_SetInput(self, value)


    def GetInput(self) -> "itkImageUS3 const *":
        """GetInput(tubeCropImageIUS3IUS3 self) -> itkImageUS3"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_GetInput(self)


    def GetOutput(self) -> "itkImageUS3 *":
        """GetOutput(tubeCropImageIUS3IUS3 self) -> itkImageUS3"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_GetOutput(self)

    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIUS3IUS3

    def cast(obj: 'itkLightObject') -> "tubeCropImageIUS3IUS3 *":
        """cast(itkLightObject obj) -> tubeCropImageIUS3IUS3"""
        return _tubeCropImagePython.tubeCropImageIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIUS3IUS3

        Create a new object of the class tubeCropImageIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeCropImageIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeCropImageIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeCropImageIUS3IUS3.Clone = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_Clone, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.SetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetMin, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.GetMin = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetMin, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.SetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetMax, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.GetMax = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetMax, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.SetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetSize, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.GetSize = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetSize, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.SetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetCenter, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.GetCenter = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetCenter, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.SetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetBoundary, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.GetBoundary = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetBoundary, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.SetMatchVolume = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetMatchVolume, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.SetMatchMask = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetMatchMask, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.SetSplitInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetSplitInput, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.SetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetInput, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.GetInput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetInput, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3.GetOutput = new_instancemethod(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetOutput, None, tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3_swigregister = _tubeCropImagePython.tubeCropImageIUS3IUS3_swigregister
tubeCropImageIUS3IUS3_swigregister(tubeCropImageIUS3IUS3)

def tubeCropImageIUS3IUS3___New_orig__() -> "tubeCropImageIUS3IUS3_Pointer":
    """tubeCropImageIUS3IUS3___New_orig__() -> tubeCropImageIUS3IUS3_Pointer"""
    return _tubeCropImagePython.tubeCropImageIUS3IUS3___New_orig__()

def tubeCropImageIUS3IUS3_cast(obj: 'itkLightObject') -> "tubeCropImageIUS3IUS3 *":
    """tubeCropImageIUS3IUS3_cast(itkLightObject obj) -> tubeCropImageIUS3IUS3"""
    return _tubeCropImagePython.tubeCropImageIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def crop_image(*args, **kwargs):
    """Procedural interface for CropImage"""
    import itk
    instance = itk.CropImage.New(*args, **kwargs)
    return instance.__internal_call__()

def crop_image_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.CropImage, itkTemplate.itkTemplate):
        filter_object = itk.CropImage.values()[0]
    else:
        filter_object = itk.CropImage

    crop_image.__doc__ = filter_object.__doc__
    crop_image.__doc__ += "\n Args are Input(s) to the filter.\n"
    crop_image.__doc__ += "Available Keyword Arguments:\n"
    crop_image.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



