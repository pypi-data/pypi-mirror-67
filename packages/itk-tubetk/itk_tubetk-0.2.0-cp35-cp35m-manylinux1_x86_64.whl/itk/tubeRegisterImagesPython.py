# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _tubeRegisterImagesPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_tubeRegisterImagesPython', [dirname(__file__)])
        except ImportError:
            import _tubeRegisterImagesPython
            return _tubeRegisterImagesPython
        if fp is not None:
            try:
                _mod = imp.load_module('_tubeRegisterImagesPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _tubeRegisterImagesPython = swig_import_helper()
    del swig_import_helper
else:
    import _tubeRegisterImagesPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSpatialObjectBasePython
import itkCovariantVectorPython
import itkFixedArrayPython
import pyBasePython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKCommonBasePython
import itkAffineTransformPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkMatrixOffsetTransformBasePython
import itkVariableLengthVectorPython
import itkSymmetricSecondRankTensorPython
import itkTransformBasePython
import itkOptimizerParametersPython
import itkArrayPython
import itkDiffusionTensor3DPython
import itkArray2DPython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import itkImageRegionPython
import itkBSplineTransformPython
import itkBSplineBaseTransformPython
import itkBSplineInterpolationWeightFunctionPython
import itkFunctionBasePython
import itkImagePython
import itkRGBPixelPython

def tubeRegisterImagesD3_New():
  return tubeRegisterImagesD3.New()


def tubeRegisterImagesF3_New():
  return tubeRegisterImagesF3.New()


def tubeRegisterImagesUS3_New():
  return tubeRegisterImagesUS3.New()


def tubeRegisterImagesUC3_New():
  return tubeRegisterImagesUC3.New()


def tubeRegisterImagesSS3_New():
  return tubeRegisterImagesSS3.New()

class tubeRegisterImagesD3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeRegisterImagesD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeRegisterImagesD3_Pointer":
        """__New_orig__() -> tubeRegisterImagesD3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeRegisterImagesD3_Pointer":
        """Clone(tubeRegisterImagesD3 self) -> tubeRegisterImagesD3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_Clone(self)


    def LoadFixedImage(self, value: 'std::string const &') -> "void":
        """LoadFixedImage(tubeRegisterImagesD3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_LoadFixedImage(self, value)


    def SetFixedImage(self, value: 'itkImageD3') -> "void":
        """SetFixedImage(tubeRegisterImagesD3 self, itkImageD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetFixedImage(self, value)


    def LoadMovingImage(self, value: 'std::string const &') -> "void":
        """LoadMovingImage(tubeRegisterImagesD3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_LoadMovingImage(self, value)


    def SetMovingImage(self, value: 'itkImageD3') -> "void":
        """SetMovingImage(tubeRegisterImagesD3 self, itkImageD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetMovingImage(self, value)


    def SetRandomNumberSeed(self, value: 'unsigned int') -> "void":
        """SetRandomNumberSeed(tubeRegisterImagesD3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRandomNumberSeed(self, value)


    def GetRandomNumberSeed(self) -> "unsigned int":
        """GetRandomNumberSeed(tubeRegisterImagesD3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRandomNumberSeed(self)


    def SetUseFixedImageMaskObject(self, value: 'bool') -> "void":
        """SetUseFixedImageMaskObject(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseFixedImageMaskObject(self, value)


    def GetUseFixedImageMaskObject(self) -> "bool":
        """GetUseFixedImageMaskObject(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseFixedImageMaskObject(self)


    def SetFixedImageMaskObject(self, value: 'itkSpatialObject3') -> "void":
        """SetFixedImageMaskObject(tubeRegisterImagesD3 self, itkSpatialObject3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetFixedImageMaskObject(self, value)


    def GetFixedImageMaskObject(self) -> "itkSpatialObject3 const *":
        """GetFixedImageMaskObject(tubeRegisterImagesD3 self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetFixedImageMaskObject(self)


    def SetUseMovingImageMaskObject(self, value: 'bool') -> "void":
        """SetUseMovingImageMaskObject(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseMovingImageMaskObject(self, value)


    def GetUseMovingImageMaskObject(self) -> "bool":
        """GetUseMovingImageMaskObject(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseMovingImageMaskObject(self)


    def SetMovingImageMaskObject(self, value: 'itkSpatialObject3') -> "void":
        """SetMovingImageMaskObject(tubeRegisterImagesD3 self, itkSpatialObject3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetMovingImageMaskObject(self, value)


    def GetMovingImageMaskObject(self) -> "itkSpatialObject3 const *":
        """GetMovingImageMaskObject(tubeRegisterImagesD3 self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetMovingImageMaskObject(self)


    def SetUseRegionOfInterest(self, value: 'bool') -> "void":
        """SetUseRegionOfInterest(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseRegionOfInterest(self, value)


    def GetUseRegionOfInterest(self) -> "bool":
        """GetUseRegionOfInterest(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseRegionOfInterest(self)


    def SetRegionOfInterestPoint1(self, value: 'itkPointD3') -> "void":
        """SetRegionOfInterestPoint1(tubeRegisterImagesD3 self, itkPointD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRegionOfInterestPoint1(self, value)


    def GetRegionOfInterestPoint1(self) -> "itkPointD3":
        """GetRegionOfInterestPoint1(tubeRegisterImagesD3 self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRegionOfInterestPoint1(self)


    def SetRegionOfInterestPoint2(self, value: 'itkPointD3') -> "void":
        """SetRegionOfInterestPoint2(tubeRegisterImagesD3 self, itkPointD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRegionOfInterestPoint2(self, value)


    def GetRegionOfInterestPoint2(self) -> "itkPointD3":
        """GetRegionOfInterestPoint2(tubeRegisterImagesD3 self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRegionOfInterestPoint2(self)


    def SetSampleFromOverlap(self, value: 'bool') -> "void":
        """SetSampleFromOverlap(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetSampleFromOverlap(self, value)


    def GetSampleFromOverlap(self) -> "bool":
        """GetSampleFromOverlap(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetSampleFromOverlap(self)


    def SetSampleIntensityPortion(self, value: 'double') -> "void":
        """SetSampleIntensityPortion(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetSampleIntensityPortion(self, value)


    def GetSampleIntensityPortion(self) -> "double":
        """GetSampleIntensityPortion(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetSampleIntensityPortion(self)


    def Initialize(self) -> "void":
        """Initialize(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_Initialize(self)


    def ResampleImage(self, *args) -> "itkImageD3 const *":
        """
        ResampleImage(tubeRegisterImagesD3 self, std::string interp, itkImageD3 movingImage=None, itkAffineTransformD3 matrixTransform=None, double defaultPixelValue=0, double portionOfTransformToApply=1.) -> itkImageD3
        ResampleImage(tubeRegisterImagesD3 self, std::string interp, itkImageD3 movingImage=None, itkAffineTransformD3 matrixTransform=None, double defaultPixelValue=0) -> itkImageD3
        ResampleImage(tubeRegisterImagesD3 self, std::string interp, itkImageD3 movingImage=None, itkAffineTransformD3 matrixTransform=None) -> itkImageD3
        ResampleImage(tubeRegisterImagesD3 self, std::string interp, itkImageD3 movingImage=None) -> itkImageD3
        ResampleImage(tubeRegisterImagesD3 self, std::string interp) -> itkImageD3
        ResampleImage(tubeRegisterImagesD3 self) -> itkImageD3
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_ResampleImage(self, *args)


    def GetFinalMovingImage(self, interp: 'std::string') -> "itkImageD3 const *":
        """GetFinalMovingImage(tubeRegisterImagesD3 self, std::string interp) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetFinalMovingImage(self, interp)


    def LoadBaselineImage(self, value: 'std::string const &') -> "void":
        """LoadBaselineImage(tubeRegisterImagesD3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_LoadBaselineImage(self, value)


    def SetBaselineImage(self, value: 'itkImageD3') -> "void":
        """SetBaselineImage(tubeRegisterImagesD3 self, itkImageD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineImage(self, value)


    def SetBaselineNumberOfFailedPixelsTolerance(self, value: 'unsigned int') -> "void":
        """SetBaselineNumberOfFailedPixelsTolerance(tubeRegisterImagesD3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineNumberOfFailedPixelsTolerance(self, value)


    def SetBaselineIntensityTolerance(self, value: 'double') -> "void":
        """SetBaselineIntensityTolerance(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineIntensityTolerance(self, value)


    def SetBaselineRadiusTolerance(self, value: 'unsigned int') -> "void":
        """SetBaselineRadiusTolerance(tubeRegisterImagesD3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineRadiusTolerance(self, value)


    def ComputeBaselineDifference(self) -> "void":
        """ComputeBaselineDifference(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_ComputeBaselineDifference(self)


    def GetBaselineDifferenceImage(self) -> "itkImageD3 const *":
        """GetBaselineDifferenceImage(tubeRegisterImagesD3 self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineDifferenceImage(self)


    def GetBaselineResampledMovingImage(self) -> "itkImageD3 const *":
        """GetBaselineResampledMovingImage(tubeRegisterImagesD3 self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineResampledMovingImage(self)


    def GetBaselineNumberOfFailedPixels(self) -> "unsigned int":
        """GetBaselineNumberOfFailedPixels(tubeRegisterImagesD3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineNumberOfFailedPixels(self)


    def GetBaselineTestPassed(self) -> "bool":
        """GetBaselineTestPassed(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineTestPassed(self)


    def SetEnableLoadedRegistration(self, value: 'bool') -> "void":
        """SetEnableLoadedRegistration(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableLoadedRegistration(self, value)


    def GetEnableLoadedRegistration(self) -> "bool":
        """GetEnableLoadedRegistration(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableLoadedRegistration(self)


    def EnableLoadedRegistrationOn(self) -> "void":
        """EnableLoadedRegistrationOn(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableLoadedRegistrationOn(self)


    def EnableLoadedRegistrationOff(self) -> "void":
        """EnableLoadedRegistrationOff(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableLoadedRegistrationOff(self)


    def SetEnableInitialRegistration(self, value: 'bool') -> "void":
        """SetEnableInitialRegistration(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableInitialRegistration(self, value)


    def GetEnableInitialRegistration(self) -> "bool":
        """GetEnableInitialRegistration(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableInitialRegistration(self)


    def EnableInitialRegistrationOn(self) -> "void":
        """EnableInitialRegistrationOn(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableInitialRegistrationOn(self)


    def EnableInitialRegistrationOff(self) -> "void":
        """EnableInitialRegistrationOff(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableInitialRegistrationOff(self)


    def SetEnableRigidRegistration(self, value: 'bool') -> "void":
        """SetEnableRigidRegistration(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableRigidRegistration(self, value)


    def GetEnableRigidRegistration(self) -> "bool":
        """GetEnableRigidRegistration(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableRigidRegistration(self)


    def EnableRigidRegistrationOn(self) -> "void":
        """EnableRigidRegistrationOn(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableRigidRegistrationOn(self)


    def EnableRigidRegistrationOff(self) -> "void":
        """EnableRigidRegistrationOff(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableRigidRegistrationOff(self)


    def SetEnableAffineRegistration(self, value: 'bool') -> "void":
        """SetEnableAffineRegistration(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableAffineRegistration(self, value)


    def GetEnableAffineRegistration(self) -> "bool":
        """GetEnableAffineRegistration(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableAffineRegistration(self)


    def EnableAffineRegistrationOn(self) -> "void":
        """EnableAffineRegistrationOn(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableAffineRegistrationOn(self)


    def EnableAffineRegistrationOff(self) -> "void":
        """EnableAffineRegistrationOff(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableAffineRegistrationOff(self)


    def SetEnableBSplineRegistration(self, value: 'bool') -> "void":
        """SetEnableBSplineRegistration(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableBSplineRegistration(self, value)


    def GetEnableBSplineRegistration(self) -> "bool":
        """GetEnableBSplineRegistration(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableBSplineRegistration(self)


    def EnableBSplineRegistrationOn(self) -> "void":
        """EnableBSplineRegistrationOn(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableBSplineRegistrationOn(self)


    def EnableBSplineRegistrationOff(self) -> "void":
        """EnableBSplineRegistrationOff(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableBSplineRegistrationOff(self)


    def SetRegistration(self, reg: 'std::string const &') -> "void":
        """SetRegistration(tubeRegisterImagesD3 self, std::string const & reg)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRegistration(self, reg)


    def SetInterpolation(self, interp: 'std::string const &') -> "void":
        """SetInterpolation(tubeRegisterImagesD3 self, std::string const & interp)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetInterpolation(self, interp)


    def SetMetric(self, metric: 'std::string const &') -> "void":
        """SetMetric(tubeRegisterImagesD3 self, std::string const & metric)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetMetric(self, metric)


    def SetUseEvolutionaryOptimization(self, value: 'bool') -> "void":
        """SetUseEvolutionaryOptimization(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseEvolutionaryOptimization(self, value)


    def GetUseEvolutionaryOptimization(self) -> "bool":
        """GetUseEvolutionaryOptimization(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseEvolutionaryOptimization(self)


    def SetExpectedOffsetMagnitude(self, value: 'double') -> "void":
        """SetExpectedOffsetMagnitude(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedOffsetMagnitude(self, value)


    def GetExpectedOffsetMagnitude(self) -> "double":
        """GetExpectedOffsetMagnitude(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedOffsetMagnitude(self)


    def SetExpectedRotationMagnitude(self, value: 'double') -> "void":
        """SetExpectedRotationMagnitude(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedRotationMagnitude(self, value)


    def GetExpectedRotationMagnitude(self) -> "double":
        """GetExpectedRotationMagnitude(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedRotationMagnitude(self)


    def SetExpectedScaleMagnitude(self, value: 'double') -> "void":
        """SetExpectedScaleMagnitude(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedScaleMagnitude(self, value)


    def GetExpectedScaleMagnitude(self) -> "double":
        """GetExpectedScaleMagnitude(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedScaleMagnitude(self)


    def SetExpectedSkewMagnitude(self, value: 'double') -> "void":
        """SetExpectedSkewMagnitude(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedSkewMagnitude(self, value)


    def GetExpectedSkewMagnitude(self) -> "double":
        """GetExpectedSkewMagnitude(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedSkewMagnitude(self)


    def SetExpectedDeformationMagnitude(self, value: 'double') -> "void":
        """SetExpectedDeformationMagnitude(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedDeformationMagnitude(self, value)


    def GetExpectedDeformationMagnitude(self) -> "double":
        """GetExpectedDeformationMagnitude(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedDeformationMagnitude(self)


    def GetCurrentMatrixTransform(self) -> "itkAffineTransformD3 const *":
        """GetCurrentMatrixTransform(tubeRegisterImagesD3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetCurrentMatrixTransform(self)


    def GetCurrentBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetCurrentBSplineTransform(tubeRegisterImagesD3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetCurrentBSplineTransform(self)


    def GetCurrentMovingImage(self) -> "itkImageD3 const *":
        """GetCurrentMovingImage(tubeRegisterImagesD3 self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetCurrentMovingImage(self)


    def GetLoadedTransformResampledImage(self) -> "itkImageD3 const *":
        """GetLoadedTransformResampledImage(tubeRegisterImagesD3 self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetLoadedTransformResampledImage(self)


    def GetMatrixTransformResampledImage(self) -> "itkImageD3 const *":
        """GetMatrixTransformResampledImage(tubeRegisterImagesD3 self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetMatrixTransformResampledImage(self)


    def GetBSplineTransformResampledImage(self) -> "itkImageD3 const *":
        """GetBSplineTransformResampledImage(tubeRegisterImagesD3 self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineTransformResampledImage(self)


    def GetFinalMetricValue(self) -> "double":
        """GetFinalMetricValue(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetFinalMetricValue(self)


    def SetReportProgress(self, value: 'bool') -> "void":
        """SetReportProgress(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetReportProgress(self, value)


    def GetReportProgress(self) -> "bool":
        """GetReportProgress(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetReportProgress(self)


    def ReportProgressOn(self) -> "void":
        """ReportProgressOn(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_ReportProgressOn(self)


    def ReportProgressOff(self) -> "void":
        """ReportProgressOff(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_ReportProgressOff(self)


    def SetMinimizeMemory(self, value: 'bool') -> "void":
        """SetMinimizeMemory(tubeRegisterImagesD3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetMinimizeMemory(self, value)


    def GetMinimizeMemory(self) -> "bool":
        """GetMinimizeMemory(tubeRegisterImagesD3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetMinimizeMemory(self)


    def MinimizeMemoryOn(self) -> "void":
        """MinimizeMemoryOn(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_MinimizeMemoryOn(self)


    def MinimizeMemoryOff(self) -> "void":
        """MinimizeMemoryOff(tubeRegisterImagesD3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_MinimizeMemoryOff(self)


    def LoadTransform(self, transform: 'std::string const &', invertLoadedTransform: 'bool'=False) -> "void":
        """
        LoadTransform(tubeRegisterImagesD3 self, std::string const & transform, bool invertLoadedTransform=False)
        LoadTransform(tubeRegisterImagesD3 self, std::string const & transform)
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_LoadTransform(self, transform, invertLoadedTransform)


    def SaveTransform(self, value: 'std::string const &') -> "void":
        """SaveTransform(tubeRegisterImagesD3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SaveTransform(self, value)


    def SaveDisplacementField(self, value: 'std::string const &') -> "void":
        """SaveDisplacementField(tubeRegisterImagesD3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SaveDisplacementField(self, value)


    def SetLoadedMatrixTransform(self, tfm: 'itkAffineTransformD3', invert: 'bool'=False) -> "void":
        """
        SetLoadedMatrixTransform(tubeRegisterImagesD3 self, itkAffineTransformD3 tfm, bool invert=False)
        SetLoadedMatrixTransform(tubeRegisterImagesD3 self, itkAffineTransformD3 tfm)
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetLoadedMatrixTransform(self, tfm, invert)


    def GetLoadedMatrixTransform(self) -> "itkAffineTransformD3 const *":
        """GetLoadedMatrixTransform(tubeRegisterImagesD3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetLoadedMatrixTransform(self)


    def SetLoadedBSplineTransform(self, value: 'itkBSplineTransformD33') -> "void":
        """SetLoadedBSplineTransform(tubeRegisterImagesD3 self, itkBSplineTransformD33 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetLoadedBSplineTransform(self, value)


    def GetLoadedBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetLoadedBSplineTransform(tubeRegisterImagesD3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetLoadedBSplineTransform(self)


    def SetInitialMethodEnum(self, initialMethod: 'std::string const &') -> "void":
        """SetInitialMethodEnum(tubeRegisterImagesD3 self, std::string const & initialMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetInitialMethodEnum(self, initialMethod)


    def GetInitialMethodEnum(self) -> "std::string const":
        """GetInitialMethodEnum(tubeRegisterImagesD3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetInitialMethodEnum(self)


    def SetFixedLandmarks(self, value: 'vectorvectorF') -> "void":
        """SetFixedLandmarks(tubeRegisterImagesD3 self, vectorvectorF value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetFixedLandmarks(self, value)


    def SetMovingLandmarks(self, value: 'vectorvectorF') -> "void":
        """SetMovingLandmarks(tubeRegisterImagesD3 self, vectorvectorF value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetMovingLandmarks(self, value)


    def SetRigidSamplingRatio(self, value: 'double') -> "void":
        """SetRigidSamplingRatio(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidSamplingRatio(self, value)


    def GetRigidSamplingRatio(self) -> "double":
        """GetRigidSamplingRatio(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidSamplingRatio(self)


    def SetRigidTargetError(self, value: 'double') -> "void":
        """SetRigidTargetError(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidTargetError(self, value)


    def GetRigidTargetError(self) -> "double":
        """GetRigidTargetError(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidTargetError(self)


    def SetRigidMaxIterations(self, value: 'unsigned int') -> "void":
        """SetRigidMaxIterations(tubeRegisterImagesD3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidMaxIterations(self, value)


    def GetRigidMaxIterations(self) -> "unsigned int":
        """GetRigidMaxIterations(tubeRegisterImagesD3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidMaxIterations(self)


    def SetRigidMetricMethodEnum(self, rigidMetricMethod: 'std::string const &') -> "void":
        """SetRigidMetricMethodEnum(tubeRegisterImagesD3 self, std::string const & rigidMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidMetricMethodEnum(self, rigidMetricMethod)


    def GetRigidMetricMethodEnum(self) -> "std::string const":
        """GetRigidMetricMethodEnum(tubeRegisterImagesD3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidMetricMethodEnum(self)


    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod: 'std::string const &') -> "void":
        """SetRigidInterpolationMethodEnum(tubeRegisterImagesD3 self, std::string const & rigidInterpolationMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)


    def GetRigidInterpolationMethodEnum(self) -> "std::string const":
        """GetRigidInterpolationMethodEnum(tubeRegisterImagesD3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidInterpolationMethodEnum(self)


    def GetRigidTransform(self) -> "itkMatrixOffsetTransformBaseD33 const *":
        """GetRigidTransform(tubeRegisterImagesD3 self) -> itkMatrixOffsetTransformBaseD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidTransform(self)


    def GetRigidMetricValue(self) -> "double":
        """GetRigidMetricValue(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidMetricValue(self)


    def SetAffineSamplingRatio(self, value: 'double') -> "void":
        """SetAffineSamplingRatio(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineSamplingRatio(self, value)


    def GetAffineSamplingRatio(self) -> "double":
        """GetAffineSamplingRatio(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineSamplingRatio(self)


    def SetAffineTargetError(self, value: 'double') -> "void":
        """SetAffineTargetError(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineTargetError(self, value)


    def GetAffineTargetError(self) -> "double":
        """GetAffineTargetError(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineTargetError(self)


    def SetAffineMaxIterations(self, value: 'unsigned int') -> "void":
        """SetAffineMaxIterations(tubeRegisterImagesD3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineMaxIterations(self, value)


    def GetAffineMaxIterations(self) -> "unsigned int":
        """GetAffineMaxIterations(tubeRegisterImagesD3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineMaxIterations(self)


    def SetAffineMetricMethodEnum(self, rigidMetricMethod: 'std::string const &') -> "void":
        """SetAffineMetricMethodEnum(tubeRegisterImagesD3 self, std::string const & rigidMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineMetricMethodEnum(self, rigidMetricMethod)


    def GetAffineMetricMethodEnum(self) -> "std::string const":
        """GetAffineMetricMethodEnum(tubeRegisterImagesD3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineMetricMethodEnum(self)


    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod: 'std::string const &') -> "void":
        """SetAffineInterpolationMethodEnum(tubeRegisterImagesD3 self, std::string const & rigidInterpolationMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)


    def GetAffineInterpolationMethodEnum(self) -> "std::string const":
        """GetAffineInterpolationMethodEnum(tubeRegisterImagesD3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineInterpolationMethodEnum(self)


    def GetAffineTransform(self) -> "itkAffineTransformD3 const *":
        """GetAffineTransform(tubeRegisterImagesD3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineTransform(self)


    def GetAffineMetricValue(self) -> "double":
        """GetAffineMetricValue(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineMetricValue(self)


    def SetBSplineSamplingRatio(self, value: 'double') -> "void":
        """SetBSplineSamplingRatio(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineSamplingRatio(self, value)


    def GetBSplineSamplingRatio(self) -> "double":
        """GetBSplineSamplingRatio(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineSamplingRatio(self)


    def SetBSplineTargetError(self, value: 'double') -> "void":
        """SetBSplineTargetError(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineTargetError(self, value)


    def GetBSplineTargetError(self) -> "double":
        """GetBSplineTargetError(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineTargetError(self)


    def SetBSplineMaxIterations(self, value: 'unsigned int') -> "void":
        """SetBSplineMaxIterations(tubeRegisterImagesD3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineMaxIterations(self, value)


    def GetBSplineMaxIterations(self) -> "unsigned int":
        """GetBSplineMaxIterations(tubeRegisterImagesD3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineMaxIterations(self)


    def SetBSplineControlPointPixelSpacing(self, value: 'double') -> "void":
        """SetBSplineControlPointPixelSpacing(tubeRegisterImagesD3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineControlPointPixelSpacing(self, value)


    def GetBSplineControlPointPixelSpacing(self) -> "double":
        """GetBSplineControlPointPixelSpacing(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineControlPointPixelSpacing(self)


    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod: 'std::string const &') -> "void":
        """SetBSplineMetricMethodEnum(tubeRegisterImagesD3 self, std::string const & bSplineMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)


    def GetBSplineMetricMethodEnum(self) -> "std::string const":
        """GetBSplineMetricMethodEnum(tubeRegisterImagesD3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineMetricMethodEnum(self)


    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod: 'std::string const &') -> "void":
        """SetBSplineInterpolationMethodEnum(tubeRegisterImagesD3 self, std::string const & bSplineMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)


    def GetBSplineInterpolationMethodEnum(self) -> "std::string const":
        """GetBSplineInterpolationMethodEnum(tubeRegisterImagesD3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineInterpolationMethodEnum(self)


    def GetBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetBSplineTransform(tubeRegisterImagesD3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineTransform(self)


    def GetBSplineMetricValue(self) -> "double":
        """GetBSplineMetricValue(tubeRegisterImagesD3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineMetricValue(self)

    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesD3

    def cast(obj: 'itkLightObject') -> "tubeRegisterImagesD3 *":
        """cast(itkLightObject obj) -> tubeRegisterImagesD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesD3

        Create a new object of the class tubeRegisterImagesD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeRegisterImagesD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeRegisterImagesD3.Clone = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_Clone, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.LoadFixedImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_LoadFixedImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetFixedImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetFixedImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.LoadMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_LoadMovingImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetMovingImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetRandomNumberSeed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetRandomNumberSeed, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetRandomNumberSeed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetRandomNumberSeed, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetUseFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseFixedImageMaskObject, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetUseFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseFixedImageMaskObject, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetFixedImageMaskObject, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetFixedImageMaskObject, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetUseMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseMovingImageMaskObject, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetUseMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseMovingImageMaskObject, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetMovingImageMaskObject, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetMovingImageMaskObject, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetUseRegionOfInterest = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseRegionOfInterest, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetUseRegionOfInterest = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseRegionOfInterest, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetRegionOfInterestPoint1 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetRegionOfInterestPoint1, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetRegionOfInterestPoint1 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetRegionOfInterestPoint1, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetRegionOfInterestPoint2 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetRegionOfInterestPoint2, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetRegionOfInterestPoint2 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetRegionOfInterestPoint2, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetSampleFromOverlap = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetSampleFromOverlap, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetSampleFromOverlap = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetSampleFromOverlap, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetSampleIntensityPortion = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetSampleIntensityPortion, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetSampleIntensityPortion = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetSampleIntensityPortion, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.Initialize = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_Initialize, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.ResampleImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_ResampleImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetFinalMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetFinalMovingImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.LoadBaselineImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_LoadBaselineImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetBaselineImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetBaselineNumberOfFailedPixelsTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineNumberOfFailedPixelsTolerance, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetBaselineIntensityTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineIntensityTolerance, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetBaselineRadiusTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineRadiusTolerance, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.ComputeBaselineDifference = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_ComputeBaselineDifference, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBaselineDifferenceImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineDifferenceImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBaselineResampledMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineResampledMovingImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBaselineNumberOfFailedPixels = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineNumberOfFailedPixels, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBaselineTestPassed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineTestPassed, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetEnableLoadedRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableLoadedRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetEnableLoadedRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableLoadedRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.EnableLoadedRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_EnableLoadedRegistrationOn, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.EnableLoadedRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_EnableLoadedRegistrationOff, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetEnableInitialRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableInitialRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetEnableInitialRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableInitialRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.EnableInitialRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_EnableInitialRegistrationOn, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.EnableInitialRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_EnableInitialRegistrationOff, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetEnableRigidRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableRigidRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetEnableRigidRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableRigidRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.EnableRigidRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_EnableRigidRegistrationOn, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.EnableRigidRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_EnableRigidRegistrationOff, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetEnableAffineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableAffineRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetEnableAffineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableAffineRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.EnableAffineRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_EnableAffineRegistrationOn, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.EnableAffineRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_EnableAffineRegistrationOff, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetEnableBSplineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableBSplineRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetEnableBSplineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableBSplineRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.EnableBSplineRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_EnableBSplineRegistrationOn, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.EnableBSplineRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_EnableBSplineRegistrationOff, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetRegistration, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetInterpolation = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetInterpolation, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetMetric = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetMetric, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetUseEvolutionaryOptimization = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseEvolutionaryOptimization, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetUseEvolutionaryOptimization = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseEvolutionaryOptimization, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetExpectedOffsetMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedOffsetMagnitude, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetExpectedOffsetMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedOffsetMagnitude, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetExpectedRotationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedRotationMagnitude, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetExpectedRotationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedRotationMagnitude, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetExpectedScaleMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedScaleMagnitude, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetExpectedScaleMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedScaleMagnitude, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetExpectedSkewMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedSkewMagnitude, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetExpectedSkewMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedSkewMagnitude, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetExpectedDeformationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedDeformationMagnitude, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetExpectedDeformationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedDeformationMagnitude, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetCurrentMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetCurrentMatrixTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetCurrentBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetCurrentBSplineTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetCurrentMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetCurrentMovingImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetLoadedTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetLoadedTransformResampledImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetMatrixTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetMatrixTransformResampledImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBSplineTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineTransformResampledImage, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetFinalMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetFinalMetricValue, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetReportProgress = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetReportProgress, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetReportProgress = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetReportProgress, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.ReportProgressOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_ReportProgressOn, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.ReportProgressOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_ReportProgressOff, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetMinimizeMemory = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetMinimizeMemory, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetMinimizeMemory = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetMinimizeMemory, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.MinimizeMemoryOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_MinimizeMemoryOn, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.MinimizeMemoryOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_MinimizeMemoryOff, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.LoadTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_LoadTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SaveTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SaveTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SaveDisplacementField = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SaveDisplacementField, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetLoadedMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetLoadedMatrixTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetLoadedMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetLoadedMatrixTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetLoadedBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetLoadedBSplineTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetLoadedBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetLoadedBSplineTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetInitialMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetInitialMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetInitialMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetInitialMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetFixedLandmarks = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetFixedLandmarks, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetMovingLandmarks = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetMovingLandmarks, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetRigidSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidSamplingRatio, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetRigidSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidSamplingRatio, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetRigidTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidTargetError, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetRigidTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidTargetError, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetRigidMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidMaxIterations, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetRigidMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidMaxIterations, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetRigidMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidMetricMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetRigidMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidMetricMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetRigidInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidInterpolationMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetRigidInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidInterpolationMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetRigidTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetRigidMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidMetricValue, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetAffineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineSamplingRatio, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetAffineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineSamplingRatio, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetAffineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineTargetError, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetAffineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineTargetError, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetAffineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineMaxIterations, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetAffineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineMaxIterations, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetAffineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineMetricMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetAffineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineMetricMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetAffineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineInterpolationMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetAffineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineInterpolationMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetAffineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetAffineMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineMetricValue, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetBSplineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineSamplingRatio, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBSplineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineSamplingRatio, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetBSplineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineTargetError, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBSplineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineTargetError, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetBSplineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineMaxIterations, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBSplineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineMaxIterations, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetBSplineControlPointPixelSpacing = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineControlPointPixelSpacing, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBSplineControlPointPixelSpacing = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineControlPointPixelSpacing, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetBSplineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineMetricMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBSplineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineMetricMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.SetBSplineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineInterpolationMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBSplineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineInterpolationMethodEnum, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineTransform, None, tubeRegisterImagesD3)
tubeRegisterImagesD3.GetBSplineMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineMetricValue, None, tubeRegisterImagesD3)
tubeRegisterImagesD3_swigregister = _tubeRegisterImagesPython.tubeRegisterImagesD3_swigregister
tubeRegisterImagesD3_swigregister(tubeRegisterImagesD3)

def tubeRegisterImagesD3___New_orig__() -> "tubeRegisterImagesD3_Pointer":
    """tubeRegisterImagesD3___New_orig__() -> tubeRegisterImagesD3_Pointer"""
    return _tubeRegisterImagesPython.tubeRegisterImagesD3___New_orig__()

def tubeRegisterImagesD3_cast(obj: 'itkLightObject') -> "tubeRegisterImagesD3 *":
    """tubeRegisterImagesD3_cast(itkLightObject obj) -> tubeRegisterImagesD3"""
    return _tubeRegisterImagesPython.tubeRegisterImagesD3_cast(obj)

class tubeRegisterImagesF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeRegisterImagesF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeRegisterImagesF3_Pointer":
        """__New_orig__() -> tubeRegisterImagesF3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeRegisterImagesF3_Pointer":
        """Clone(tubeRegisterImagesF3 self) -> tubeRegisterImagesF3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_Clone(self)


    def LoadFixedImage(self, value: 'std::string const &') -> "void":
        """LoadFixedImage(tubeRegisterImagesF3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_LoadFixedImage(self, value)


    def SetFixedImage(self, value: 'itkImageF3') -> "void":
        """SetFixedImage(tubeRegisterImagesF3 self, itkImageF3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetFixedImage(self, value)


    def LoadMovingImage(self, value: 'std::string const &') -> "void":
        """LoadMovingImage(tubeRegisterImagesF3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_LoadMovingImage(self, value)


    def SetMovingImage(self, value: 'itkImageF3') -> "void":
        """SetMovingImage(tubeRegisterImagesF3 self, itkImageF3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetMovingImage(self, value)


    def SetRandomNumberSeed(self, value: 'unsigned int') -> "void":
        """SetRandomNumberSeed(tubeRegisterImagesF3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRandomNumberSeed(self, value)


    def GetRandomNumberSeed(self) -> "unsigned int":
        """GetRandomNumberSeed(tubeRegisterImagesF3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRandomNumberSeed(self)


    def SetUseFixedImageMaskObject(self, value: 'bool') -> "void":
        """SetUseFixedImageMaskObject(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseFixedImageMaskObject(self, value)


    def GetUseFixedImageMaskObject(self) -> "bool":
        """GetUseFixedImageMaskObject(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseFixedImageMaskObject(self)


    def SetFixedImageMaskObject(self, value: 'itkSpatialObject3') -> "void":
        """SetFixedImageMaskObject(tubeRegisterImagesF3 self, itkSpatialObject3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetFixedImageMaskObject(self, value)


    def GetFixedImageMaskObject(self) -> "itkSpatialObject3 const *":
        """GetFixedImageMaskObject(tubeRegisterImagesF3 self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetFixedImageMaskObject(self)


    def SetUseMovingImageMaskObject(self, value: 'bool') -> "void":
        """SetUseMovingImageMaskObject(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseMovingImageMaskObject(self, value)


    def GetUseMovingImageMaskObject(self) -> "bool":
        """GetUseMovingImageMaskObject(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseMovingImageMaskObject(self)


    def SetMovingImageMaskObject(self, value: 'itkSpatialObject3') -> "void":
        """SetMovingImageMaskObject(tubeRegisterImagesF3 self, itkSpatialObject3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetMovingImageMaskObject(self, value)


    def GetMovingImageMaskObject(self) -> "itkSpatialObject3 const *":
        """GetMovingImageMaskObject(tubeRegisterImagesF3 self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetMovingImageMaskObject(self)


    def SetUseRegionOfInterest(self, value: 'bool') -> "void":
        """SetUseRegionOfInterest(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseRegionOfInterest(self, value)


    def GetUseRegionOfInterest(self) -> "bool":
        """GetUseRegionOfInterest(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseRegionOfInterest(self)


    def SetRegionOfInterestPoint1(self, value: 'itkPointD3') -> "void":
        """SetRegionOfInterestPoint1(tubeRegisterImagesF3 self, itkPointD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRegionOfInterestPoint1(self, value)


    def GetRegionOfInterestPoint1(self) -> "itkPointD3":
        """GetRegionOfInterestPoint1(tubeRegisterImagesF3 self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRegionOfInterestPoint1(self)


    def SetRegionOfInterestPoint2(self, value: 'itkPointD3') -> "void":
        """SetRegionOfInterestPoint2(tubeRegisterImagesF3 self, itkPointD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRegionOfInterestPoint2(self, value)


    def GetRegionOfInterestPoint2(self) -> "itkPointD3":
        """GetRegionOfInterestPoint2(tubeRegisterImagesF3 self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRegionOfInterestPoint2(self)


    def SetSampleFromOverlap(self, value: 'bool') -> "void":
        """SetSampleFromOverlap(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetSampleFromOverlap(self, value)


    def GetSampleFromOverlap(self) -> "bool":
        """GetSampleFromOverlap(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetSampleFromOverlap(self)


    def SetSampleIntensityPortion(self, value: 'double') -> "void":
        """SetSampleIntensityPortion(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetSampleIntensityPortion(self, value)


    def GetSampleIntensityPortion(self) -> "double":
        """GetSampleIntensityPortion(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetSampleIntensityPortion(self)


    def Initialize(self) -> "void":
        """Initialize(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_Initialize(self)


    def ResampleImage(self, *args) -> "itkImageF3 const *":
        """
        ResampleImage(tubeRegisterImagesF3 self, std::string interp, itkImageF3 movingImage=None, itkAffineTransformD3 matrixTransform=None, float defaultPixelValue=0, double portionOfTransformToApply=1.) -> itkImageF3
        ResampleImage(tubeRegisterImagesF3 self, std::string interp, itkImageF3 movingImage=None, itkAffineTransformD3 matrixTransform=None, float defaultPixelValue=0) -> itkImageF3
        ResampleImage(tubeRegisterImagesF3 self, std::string interp, itkImageF3 movingImage=None, itkAffineTransformD3 matrixTransform=None) -> itkImageF3
        ResampleImage(tubeRegisterImagesF3 self, std::string interp, itkImageF3 movingImage=None) -> itkImageF3
        ResampleImage(tubeRegisterImagesF3 self, std::string interp) -> itkImageF3
        ResampleImage(tubeRegisterImagesF3 self) -> itkImageF3
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_ResampleImage(self, *args)


    def GetFinalMovingImage(self, interp: 'std::string') -> "itkImageF3 const *":
        """GetFinalMovingImage(tubeRegisterImagesF3 self, std::string interp) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetFinalMovingImage(self, interp)


    def LoadBaselineImage(self, value: 'std::string const &') -> "void":
        """LoadBaselineImage(tubeRegisterImagesF3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_LoadBaselineImage(self, value)


    def SetBaselineImage(self, value: 'itkImageF3') -> "void":
        """SetBaselineImage(tubeRegisterImagesF3 self, itkImageF3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineImage(self, value)


    def SetBaselineNumberOfFailedPixelsTolerance(self, value: 'unsigned int') -> "void":
        """SetBaselineNumberOfFailedPixelsTolerance(tubeRegisterImagesF3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineNumberOfFailedPixelsTolerance(self, value)


    def SetBaselineIntensityTolerance(self, value: 'float') -> "void":
        """SetBaselineIntensityTolerance(tubeRegisterImagesF3 self, float value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineIntensityTolerance(self, value)


    def SetBaselineRadiusTolerance(self, value: 'unsigned int') -> "void":
        """SetBaselineRadiusTolerance(tubeRegisterImagesF3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineRadiusTolerance(self, value)


    def ComputeBaselineDifference(self) -> "void":
        """ComputeBaselineDifference(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_ComputeBaselineDifference(self)


    def GetBaselineDifferenceImage(self) -> "itkImageF3 const *":
        """GetBaselineDifferenceImage(tubeRegisterImagesF3 self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineDifferenceImage(self)


    def GetBaselineResampledMovingImage(self) -> "itkImageF3 const *":
        """GetBaselineResampledMovingImage(tubeRegisterImagesF3 self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineResampledMovingImage(self)


    def GetBaselineNumberOfFailedPixels(self) -> "unsigned int":
        """GetBaselineNumberOfFailedPixels(tubeRegisterImagesF3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineNumberOfFailedPixels(self)


    def GetBaselineTestPassed(self) -> "bool":
        """GetBaselineTestPassed(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineTestPassed(self)


    def SetEnableLoadedRegistration(self, value: 'bool') -> "void":
        """SetEnableLoadedRegistration(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableLoadedRegistration(self, value)


    def GetEnableLoadedRegistration(self) -> "bool":
        """GetEnableLoadedRegistration(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableLoadedRegistration(self)


    def EnableLoadedRegistrationOn(self) -> "void":
        """EnableLoadedRegistrationOn(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableLoadedRegistrationOn(self)


    def EnableLoadedRegistrationOff(self) -> "void":
        """EnableLoadedRegistrationOff(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableLoadedRegistrationOff(self)


    def SetEnableInitialRegistration(self, value: 'bool') -> "void":
        """SetEnableInitialRegistration(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableInitialRegistration(self, value)


    def GetEnableInitialRegistration(self) -> "bool":
        """GetEnableInitialRegistration(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableInitialRegistration(self)


    def EnableInitialRegistrationOn(self) -> "void":
        """EnableInitialRegistrationOn(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableInitialRegistrationOn(self)


    def EnableInitialRegistrationOff(self) -> "void":
        """EnableInitialRegistrationOff(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableInitialRegistrationOff(self)


    def SetEnableRigidRegistration(self, value: 'bool') -> "void":
        """SetEnableRigidRegistration(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableRigidRegistration(self, value)


    def GetEnableRigidRegistration(self) -> "bool":
        """GetEnableRigidRegistration(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableRigidRegistration(self)


    def EnableRigidRegistrationOn(self) -> "void":
        """EnableRigidRegistrationOn(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableRigidRegistrationOn(self)


    def EnableRigidRegistrationOff(self) -> "void":
        """EnableRigidRegistrationOff(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableRigidRegistrationOff(self)


    def SetEnableAffineRegistration(self, value: 'bool') -> "void":
        """SetEnableAffineRegistration(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableAffineRegistration(self, value)


    def GetEnableAffineRegistration(self) -> "bool":
        """GetEnableAffineRegistration(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableAffineRegistration(self)


    def EnableAffineRegistrationOn(self) -> "void":
        """EnableAffineRegistrationOn(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableAffineRegistrationOn(self)


    def EnableAffineRegistrationOff(self) -> "void":
        """EnableAffineRegistrationOff(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableAffineRegistrationOff(self)


    def SetEnableBSplineRegistration(self, value: 'bool') -> "void":
        """SetEnableBSplineRegistration(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableBSplineRegistration(self, value)


    def GetEnableBSplineRegistration(self) -> "bool":
        """GetEnableBSplineRegistration(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableBSplineRegistration(self)


    def EnableBSplineRegistrationOn(self) -> "void":
        """EnableBSplineRegistrationOn(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableBSplineRegistrationOn(self)


    def EnableBSplineRegistrationOff(self) -> "void":
        """EnableBSplineRegistrationOff(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableBSplineRegistrationOff(self)


    def SetRegistration(self, reg: 'std::string const &') -> "void":
        """SetRegistration(tubeRegisterImagesF3 self, std::string const & reg)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRegistration(self, reg)


    def SetInterpolation(self, interp: 'std::string const &') -> "void":
        """SetInterpolation(tubeRegisterImagesF3 self, std::string const & interp)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetInterpolation(self, interp)


    def SetMetric(self, metric: 'std::string const &') -> "void":
        """SetMetric(tubeRegisterImagesF3 self, std::string const & metric)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetMetric(self, metric)


    def SetUseEvolutionaryOptimization(self, value: 'bool') -> "void":
        """SetUseEvolutionaryOptimization(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseEvolutionaryOptimization(self, value)


    def GetUseEvolutionaryOptimization(self) -> "bool":
        """GetUseEvolutionaryOptimization(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseEvolutionaryOptimization(self)


    def SetExpectedOffsetMagnitude(self, value: 'double') -> "void":
        """SetExpectedOffsetMagnitude(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedOffsetMagnitude(self, value)


    def GetExpectedOffsetMagnitude(self) -> "double":
        """GetExpectedOffsetMagnitude(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedOffsetMagnitude(self)


    def SetExpectedRotationMagnitude(self, value: 'double') -> "void":
        """SetExpectedRotationMagnitude(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedRotationMagnitude(self, value)


    def GetExpectedRotationMagnitude(self) -> "double":
        """GetExpectedRotationMagnitude(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedRotationMagnitude(self)


    def SetExpectedScaleMagnitude(self, value: 'double') -> "void":
        """SetExpectedScaleMagnitude(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedScaleMagnitude(self, value)


    def GetExpectedScaleMagnitude(self) -> "double":
        """GetExpectedScaleMagnitude(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedScaleMagnitude(self)


    def SetExpectedSkewMagnitude(self, value: 'double') -> "void":
        """SetExpectedSkewMagnitude(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedSkewMagnitude(self, value)


    def GetExpectedSkewMagnitude(self) -> "double":
        """GetExpectedSkewMagnitude(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedSkewMagnitude(self)


    def SetExpectedDeformationMagnitude(self, value: 'double') -> "void":
        """SetExpectedDeformationMagnitude(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedDeformationMagnitude(self, value)


    def GetExpectedDeformationMagnitude(self) -> "double":
        """GetExpectedDeformationMagnitude(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedDeformationMagnitude(self)


    def GetCurrentMatrixTransform(self) -> "itkAffineTransformD3 const *":
        """GetCurrentMatrixTransform(tubeRegisterImagesF3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetCurrentMatrixTransform(self)


    def GetCurrentBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetCurrentBSplineTransform(tubeRegisterImagesF3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetCurrentBSplineTransform(self)


    def GetCurrentMovingImage(self) -> "itkImageF3 const *":
        """GetCurrentMovingImage(tubeRegisterImagesF3 self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetCurrentMovingImage(self)


    def GetLoadedTransformResampledImage(self) -> "itkImageF3 const *":
        """GetLoadedTransformResampledImage(tubeRegisterImagesF3 self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetLoadedTransformResampledImage(self)


    def GetMatrixTransformResampledImage(self) -> "itkImageF3 const *":
        """GetMatrixTransformResampledImage(tubeRegisterImagesF3 self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetMatrixTransformResampledImage(self)


    def GetBSplineTransformResampledImage(self) -> "itkImageF3 const *":
        """GetBSplineTransformResampledImage(tubeRegisterImagesF3 self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineTransformResampledImage(self)


    def GetFinalMetricValue(self) -> "double":
        """GetFinalMetricValue(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetFinalMetricValue(self)


    def SetReportProgress(self, value: 'bool') -> "void":
        """SetReportProgress(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetReportProgress(self, value)


    def GetReportProgress(self) -> "bool":
        """GetReportProgress(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetReportProgress(self)


    def ReportProgressOn(self) -> "void":
        """ReportProgressOn(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_ReportProgressOn(self)


    def ReportProgressOff(self) -> "void":
        """ReportProgressOff(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_ReportProgressOff(self)


    def SetMinimizeMemory(self, value: 'bool') -> "void":
        """SetMinimizeMemory(tubeRegisterImagesF3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetMinimizeMemory(self, value)


    def GetMinimizeMemory(self) -> "bool":
        """GetMinimizeMemory(tubeRegisterImagesF3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetMinimizeMemory(self)


    def MinimizeMemoryOn(self) -> "void":
        """MinimizeMemoryOn(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_MinimizeMemoryOn(self)


    def MinimizeMemoryOff(self) -> "void":
        """MinimizeMemoryOff(tubeRegisterImagesF3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_MinimizeMemoryOff(self)


    def LoadTransform(self, transform: 'std::string const &', invertLoadedTransform: 'bool'=False) -> "void":
        """
        LoadTransform(tubeRegisterImagesF3 self, std::string const & transform, bool invertLoadedTransform=False)
        LoadTransform(tubeRegisterImagesF3 self, std::string const & transform)
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_LoadTransform(self, transform, invertLoadedTransform)


    def SaveTransform(self, value: 'std::string const &') -> "void":
        """SaveTransform(tubeRegisterImagesF3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SaveTransform(self, value)


    def SaveDisplacementField(self, value: 'std::string const &') -> "void":
        """SaveDisplacementField(tubeRegisterImagesF3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SaveDisplacementField(self, value)


    def SetLoadedMatrixTransform(self, tfm: 'itkAffineTransformD3', invert: 'bool'=False) -> "void":
        """
        SetLoadedMatrixTransform(tubeRegisterImagesF3 self, itkAffineTransformD3 tfm, bool invert=False)
        SetLoadedMatrixTransform(tubeRegisterImagesF3 self, itkAffineTransformD3 tfm)
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetLoadedMatrixTransform(self, tfm, invert)


    def GetLoadedMatrixTransform(self) -> "itkAffineTransformD3 const *":
        """GetLoadedMatrixTransform(tubeRegisterImagesF3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetLoadedMatrixTransform(self)


    def SetLoadedBSplineTransform(self, value: 'itkBSplineTransformD33') -> "void":
        """SetLoadedBSplineTransform(tubeRegisterImagesF3 self, itkBSplineTransformD33 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetLoadedBSplineTransform(self, value)


    def GetLoadedBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetLoadedBSplineTransform(tubeRegisterImagesF3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetLoadedBSplineTransform(self)


    def SetInitialMethodEnum(self, initialMethod: 'std::string const &') -> "void":
        """SetInitialMethodEnum(tubeRegisterImagesF3 self, std::string const & initialMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetInitialMethodEnum(self, initialMethod)


    def GetInitialMethodEnum(self) -> "std::string const":
        """GetInitialMethodEnum(tubeRegisterImagesF3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetInitialMethodEnum(self)


    def SetFixedLandmarks(self, value: 'vectorvectorF') -> "void":
        """SetFixedLandmarks(tubeRegisterImagesF3 self, vectorvectorF value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetFixedLandmarks(self, value)


    def SetMovingLandmarks(self, value: 'vectorvectorF') -> "void":
        """SetMovingLandmarks(tubeRegisterImagesF3 self, vectorvectorF value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetMovingLandmarks(self, value)


    def SetRigidSamplingRatio(self, value: 'double') -> "void":
        """SetRigidSamplingRatio(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidSamplingRatio(self, value)


    def GetRigidSamplingRatio(self) -> "double":
        """GetRigidSamplingRatio(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidSamplingRatio(self)


    def SetRigidTargetError(self, value: 'double') -> "void":
        """SetRigidTargetError(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidTargetError(self, value)


    def GetRigidTargetError(self) -> "double":
        """GetRigidTargetError(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidTargetError(self)


    def SetRigidMaxIterations(self, value: 'unsigned int') -> "void":
        """SetRigidMaxIterations(tubeRegisterImagesF3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidMaxIterations(self, value)


    def GetRigidMaxIterations(self) -> "unsigned int":
        """GetRigidMaxIterations(tubeRegisterImagesF3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidMaxIterations(self)


    def SetRigidMetricMethodEnum(self, rigidMetricMethod: 'std::string const &') -> "void":
        """SetRigidMetricMethodEnum(tubeRegisterImagesF3 self, std::string const & rigidMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidMetricMethodEnum(self, rigidMetricMethod)


    def GetRigidMetricMethodEnum(self) -> "std::string const":
        """GetRigidMetricMethodEnum(tubeRegisterImagesF3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidMetricMethodEnum(self)


    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod: 'std::string const &') -> "void":
        """SetRigidInterpolationMethodEnum(tubeRegisterImagesF3 self, std::string const & rigidInterpolationMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)


    def GetRigidInterpolationMethodEnum(self) -> "std::string const":
        """GetRigidInterpolationMethodEnum(tubeRegisterImagesF3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidInterpolationMethodEnum(self)


    def GetRigidTransform(self) -> "itkMatrixOffsetTransformBaseD33 const *":
        """GetRigidTransform(tubeRegisterImagesF3 self) -> itkMatrixOffsetTransformBaseD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidTransform(self)


    def GetRigidMetricValue(self) -> "double":
        """GetRigidMetricValue(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidMetricValue(self)


    def SetAffineSamplingRatio(self, value: 'double') -> "void":
        """SetAffineSamplingRatio(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineSamplingRatio(self, value)


    def GetAffineSamplingRatio(self) -> "double":
        """GetAffineSamplingRatio(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineSamplingRatio(self)


    def SetAffineTargetError(self, value: 'double') -> "void":
        """SetAffineTargetError(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineTargetError(self, value)


    def GetAffineTargetError(self) -> "double":
        """GetAffineTargetError(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineTargetError(self)


    def SetAffineMaxIterations(self, value: 'unsigned int') -> "void":
        """SetAffineMaxIterations(tubeRegisterImagesF3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineMaxIterations(self, value)


    def GetAffineMaxIterations(self) -> "unsigned int":
        """GetAffineMaxIterations(tubeRegisterImagesF3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineMaxIterations(self)


    def SetAffineMetricMethodEnum(self, rigidMetricMethod: 'std::string const &') -> "void":
        """SetAffineMetricMethodEnum(tubeRegisterImagesF3 self, std::string const & rigidMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineMetricMethodEnum(self, rigidMetricMethod)


    def GetAffineMetricMethodEnum(self) -> "std::string const":
        """GetAffineMetricMethodEnum(tubeRegisterImagesF3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineMetricMethodEnum(self)


    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod: 'std::string const &') -> "void":
        """SetAffineInterpolationMethodEnum(tubeRegisterImagesF3 self, std::string const & rigidInterpolationMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)


    def GetAffineInterpolationMethodEnum(self) -> "std::string const":
        """GetAffineInterpolationMethodEnum(tubeRegisterImagesF3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineInterpolationMethodEnum(self)


    def GetAffineTransform(self) -> "itkAffineTransformD3 const *":
        """GetAffineTransform(tubeRegisterImagesF3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineTransform(self)


    def GetAffineMetricValue(self) -> "double":
        """GetAffineMetricValue(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineMetricValue(self)


    def SetBSplineSamplingRatio(self, value: 'double') -> "void":
        """SetBSplineSamplingRatio(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineSamplingRatio(self, value)


    def GetBSplineSamplingRatio(self) -> "double":
        """GetBSplineSamplingRatio(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineSamplingRatio(self)


    def SetBSplineTargetError(self, value: 'double') -> "void":
        """SetBSplineTargetError(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineTargetError(self, value)


    def GetBSplineTargetError(self) -> "double":
        """GetBSplineTargetError(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineTargetError(self)


    def SetBSplineMaxIterations(self, value: 'unsigned int') -> "void":
        """SetBSplineMaxIterations(tubeRegisterImagesF3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineMaxIterations(self, value)


    def GetBSplineMaxIterations(self) -> "unsigned int":
        """GetBSplineMaxIterations(tubeRegisterImagesF3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineMaxIterations(self)


    def SetBSplineControlPointPixelSpacing(self, value: 'double') -> "void":
        """SetBSplineControlPointPixelSpacing(tubeRegisterImagesF3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineControlPointPixelSpacing(self, value)


    def GetBSplineControlPointPixelSpacing(self) -> "double":
        """GetBSplineControlPointPixelSpacing(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineControlPointPixelSpacing(self)


    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod: 'std::string const &') -> "void":
        """SetBSplineMetricMethodEnum(tubeRegisterImagesF3 self, std::string const & bSplineMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)


    def GetBSplineMetricMethodEnum(self) -> "std::string const":
        """GetBSplineMetricMethodEnum(tubeRegisterImagesF3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineMetricMethodEnum(self)


    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod: 'std::string const &') -> "void":
        """SetBSplineInterpolationMethodEnum(tubeRegisterImagesF3 self, std::string const & bSplineMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)


    def GetBSplineInterpolationMethodEnum(self) -> "std::string const":
        """GetBSplineInterpolationMethodEnum(tubeRegisterImagesF3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineInterpolationMethodEnum(self)


    def GetBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetBSplineTransform(tubeRegisterImagesF3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineTransform(self)


    def GetBSplineMetricValue(self) -> "double":
        """GetBSplineMetricValue(tubeRegisterImagesF3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineMetricValue(self)

    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesF3

    def cast(obj: 'itkLightObject') -> "tubeRegisterImagesF3 *":
        """cast(itkLightObject obj) -> tubeRegisterImagesF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesF3

        Create a new object of the class tubeRegisterImagesF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeRegisterImagesF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeRegisterImagesF3.Clone = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_Clone, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.LoadFixedImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_LoadFixedImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetFixedImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetFixedImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.LoadMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_LoadMovingImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetMovingImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetRandomNumberSeed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetRandomNumberSeed, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetRandomNumberSeed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetRandomNumberSeed, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetUseFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseFixedImageMaskObject, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetUseFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseFixedImageMaskObject, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetFixedImageMaskObject, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetFixedImageMaskObject, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetUseMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseMovingImageMaskObject, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetUseMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseMovingImageMaskObject, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetMovingImageMaskObject, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetMovingImageMaskObject, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetUseRegionOfInterest = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseRegionOfInterest, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetUseRegionOfInterest = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseRegionOfInterest, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetRegionOfInterestPoint1 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetRegionOfInterestPoint1, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetRegionOfInterestPoint1 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetRegionOfInterestPoint1, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetRegionOfInterestPoint2 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetRegionOfInterestPoint2, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetRegionOfInterestPoint2 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetRegionOfInterestPoint2, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetSampleFromOverlap = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetSampleFromOverlap, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetSampleFromOverlap = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetSampleFromOverlap, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetSampleIntensityPortion = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetSampleIntensityPortion, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetSampleIntensityPortion = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetSampleIntensityPortion, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.Initialize = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_Initialize, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.ResampleImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_ResampleImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetFinalMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetFinalMovingImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.LoadBaselineImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_LoadBaselineImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetBaselineImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetBaselineNumberOfFailedPixelsTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineNumberOfFailedPixelsTolerance, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetBaselineIntensityTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineIntensityTolerance, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetBaselineRadiusTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineRadiusTolerance, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.ComputeBaselineDifference = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_ComputeBaselineDifference, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBaselineDifferenceImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineDifferenceImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBaselineResampledMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineResampledMovingImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBaselineNumberOfFailedPixels = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineNumberOfFailedPixels, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBaselineTestPassed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineTestPassed, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetEnableLoadedRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableLoadedRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetEnableLoadedRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableLoadedRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.EnableLoadedRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_EnableLoadedRegistrationOn, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.EnableLoadedRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_EnableLoadedRegistrationOff, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetEnableInitialRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableInitialRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetEnableInitialRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableInitialRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.EnableInitialRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_EnableInitialRegistrationOn, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.EnableInitialRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_EnableInitialRegistrationOff, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetEnableRigidRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableRigidRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetEnableRigidRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableRigidRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.EnableRigidRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_EnableRigidRegistrationOn, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.EnableRigidRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_EnableRigidRegistrationOff, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetEnableAffineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableAffineRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetEnableAffineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableAffineRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.EnableAffineRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_EnableAffineRegistrationOn, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.EnableAffineRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_EnableAffineRegistrationOff, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetEnableBSplineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableBSplineRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetEnableBSplineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableBSplineRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.EnableBSplineRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_EnableBSplineRegistrationOn, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.EnableBSplineRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_EnableBSplineRegistrationOff, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetRegistration, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetInterpolation = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetInterpolation, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetMetric = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetMetric, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetUseEvolutionaryOptimization = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseEvolutionaryOptimization, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetUseEvolutionaryOptimization = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseEvolutionaryOptimization, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetExpectedOffsetMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedOffsetMagnitude, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetExpectedOffsetMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedOffsetMagnitude, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetExpectedRotationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedRotationMagnitude, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetExpectedRotationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedRotationMagnitude, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetExpectedScaleMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedScaleMagnitude, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetExpectedScaleMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedScaleMagnitude, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetExpectedSkewMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedSkewMagnitude, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetExpectedSkewMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedSkewMagnitude, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetExpectedDeformationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedDeformationMagnitude, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetExpectedDeformationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedDeformationMagnitude, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetCurrentMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetCurrentMatrixTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetCurrentBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetCurrentBSplineTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetCurrentMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetCurrentMovingImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetLoadedTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetLoadedTransformResampledImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetMatrixTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetMatrixTransformResampledImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBSplineTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineTransformResampledImage, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetFinalMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetFinalMetricValue, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetReportProgress = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetReportProgress, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetReportProgress = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetReportProgress, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.ReportProgressOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_ReportProgressOn, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.ReportProgressOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_ReportProgressOff, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetMinimizeMemory = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetMinimizeMemory, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetMinimizeMemory = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetMinimizeMemory, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.MinimizeMemoryOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_MinimizeMemoryOn, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.MinimizeMemoryOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_MinimizeMemoryOff, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.LoadTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_LoadTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SaveTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SaveTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SaveDisplacementField = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SaveDisplacementField, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetLoadedMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetLoadedMatrixTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetLoadedMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetLoadedMatrixTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetLoadedBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetLoadedBSplineTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetLoadedBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetLoadedBSplineTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetInitialMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetInitialMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetInitialMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetInitialMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetFixedLandmarks = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetFixedLandmarks, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetMovingLandmarks = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetMovingLandmarks, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetRigidSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidSamplingRatio, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetRigidSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidSamplingRatio, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetRigidTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidTargetError, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetRigidTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidTargetError, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetRigidMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidMaxIterations, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetRigidMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidMaxIterations, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetRigidMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidMetricMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetRigidMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidMetricMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetRigidInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidInterpolationMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetRigidInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidInterpolationMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetRigidTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetRigidMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidMetricValue, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetAffineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineSamplingRatio, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetAffineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineSamplingRatio, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetAffineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineTargetError, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetAffineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineTargetError, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetAffineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineMaxIterations, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetAffineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineMaxIterations, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetAffineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineMetricMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetAffineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineMetricMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetAffineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineInterpolationMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetAffineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineInterpolationMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetAffineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetAffineMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineMetricValue, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetBSplineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineSamplingRatio, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBSplineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineSamplingRatio, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetBSplineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineTargetError, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBSplineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineTargetError, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetBSplineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineMaxIterations, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBSplineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineMaxIterations, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetBSplineControlPointPixelSpacing = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineControlPointPixelSpacing, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBSplineControlPointPixelSpacing = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineControlPointPixelSpacing, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetBSplineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineMetricMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBSplineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineMetricMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.SetBSplineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineInterpolationMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBSplineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineInterpolationMethodEnum, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineTransform, None, tubeRegisterImagesF3)
tubeRegisterImagesF3.GetBSplineMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineMetricValue, None, tubeRegisterImagesF3)
tubeRegisterImagesF3_swigregister = _tubeRegisterImagesPython.tubeRegisterImagesF3_swigregister
tubeRegisterImagesF3_swigregister(tubeRegisterImagesF3)

def tubeRegisterImagesF3___New_orig__() -> "tubeRegisterImagesF3_Pointer":
    """tubeRegisterImagesF3___New_orig__() -> tubeRegisterImagesF3_Pointer"""
    return _tubeRegisterImagesPython.tubeRegisterImagesF3___New_orig__()

def tubeRegisterImagesF3_cast(obj: 'itkLightObject') -> "tubeRegisterImagesF3 *":
    """tubeRegisterImagesF3_cast(itkLightObject obj) -> tubeRegisterImagesF3"""
    return _tubeRegisterImagesPython.tubeRegisterImagesF3_cast(obj)

class tubeRegisterImagesSS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeRegisterImagesSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeRegisterImagesSS3_Pointer":
        """__New_orig__() -> tubeRegisterImagesSS3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeRegisterImagesSS3_Pointer":
        """Clone(tubeRegisterImagesSS3 self) -> tubeRegisterImagesSS3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_Clone(self)


    def LoadFixedImage(self, value: 'std::string const &') -> "void":
        """LoadFixedImage(tubeRegisterImagesSS3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadFixedImage(self, value)


    def SetFixedImage(self, value: 'itkImageSS3') -> "void":
        """SetFixedImage(tubeRegisterImagesSS3 self, itkImageSS3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetFixedImage(self, value)


    def LoadMovingImage(self, value: 'std::string const &') -> "void":
        """LoadMovingImage(tubeRegisterImagesSS3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadMovingImage(self, value)


    def SetMovingImage(self, value: 'itkImageSS3') -> "void":
        """SetMovingImage(tubeRegisterImagesSS3 self, itkImageSS3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMovingImage(self, value)


    def SetRandomNumberSeed(self, value: 'unsigned int') -> "void":
        """SetRandomNumberSeed(tubeRegisterImagesSS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRandomNumberSeed(self, value)


    def GetRandomNumberSeed(self) -> "unsigned int":
        """GetRandomNumberSeed(tubeRegisterImagesSS3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRandomNumberSeed(self)


    def SetUseFixedImageMaskObject(self, value: 'bool') -> "void":
        """SetUseFixedImageMaskObject(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseFixedImageMaskObject(self, value)


    def GetUseFixedImageMaskObject(self) -> "bool":
        """GetUseFixedImageMaskObject(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseFixedImageMaskObject(self)


    def SetFixedImageMaskObject(self, value: 'itkSpatialObject3') -> "void":
        """SetFixedImageMaskObject(tubeRegisterImagesSS3 self, itkSpatialObject3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetFixedImageMaskObject(self, value)


    def GetFixedImageMaskObject(self) -> "itkSpatialObject3 const *":
        """GetFixedImageMaskObject(tubeRegisterImagesSS3 self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetFixedImageMaskObject(self)


    def SetUseMovingImageMaskObject(self, value: 'bool') -> "void":
        """SetUseMovingImageMaskObject(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseMovingImageMaskObject(self, value)


    def GetUseMovingImageMaskObject(self) -> "bool":
        """GetUseMovingImageMaskObject(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseMovingImageMaskObject(self)


    def SetMovingImageMaskObject(self, value: 'itkSpatialObject3') -> "void":
        """SetMovingImageMaskObject(tubeRegisterImagesSS3 self, itkSpatialObject3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMovingImageMaskObject(self, value)


    def GetMovingImageMaskObject(self) -> "itkSpatialObject3 const *":
        """GetMovingImageMaskObject(tubeRegisterImagesSS3 self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetMovingImageMaskObject(self)


    def SetUseRegionOfInterest(self, value: 'bool') -> "void":
        """SetUseRegionOfInterest(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseRegionOfInterest(self, value)


    def GetUseRegionOfInterest(self) -> "bool":
        """GetUseRegionOfInterest(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseRegionOfInterest(self)


    def SetRegionOfInterestPoint1(self, value: 'itkPointD3') -> "void":
        """SetRegionOfInterestPoint1(tubeRegisterImagesSS3 self, itkPointD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRegionOfInterestPoint1(self, value)


    def GetRegionOfInterestPoint1(self) -> "itkPointD3":
        """GetRegionOfInterestPoint1(tubeRegisterImagesSS3 self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRegionOfInterestPoint1(self)


    def SetRegionOfInterestPoint2(self, value: 'itkPointD3') -> "void":
        """SetRegionOfInterestPoint2(tubeRegisterImagesSS3 self, itkPointD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRegionOfInterestPoint2(self, value)


    def GetRegionOfInterestPoint2(self) -> "itkPointD3":
        """GetRegionOfInterestPoint2(tubeRegisterImagesSS3 self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRegionOfInterestPoint2(self)


    def SetSampleFromOverlap(self, value: 'bool') -> "void":
        """SetSampleFromOverlap(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetSampleFromOverlap(self, value)


    def GetSampleFromOverlap(self) -> "bool":
        """GetSampleFromOverlap(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetSampleFromOverlap(self)


    def SetSampleIntensityPortion(self, value: 'double') -> "void":
        """SetSampleIntensityPortion(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetSampleIntensityPortion(self, value)


    def GetSampleIntensityPortion(self) -> "double":
        """GetSampleIntensityPortion(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetSampleIntensityPortion(self)


    def Initialize(self) -> "void":
        """Initialize(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_Initialize(self)


    def ResampleImage(self, *args) -> "itkImageSS3 const *":
        """
        ResampleImage(tubeRegisterImagesSS3 self, std::string interp, itkImageSS3 movingImage=None, itkAffineTransformD3 matrixTransform=None, short defaultPixelValue=0, double portionOfTransformToApply=1.) -> itkImageSS3
        ResampleImage(tubeRegisterImagesSS3 self, std::string interp, itkImageSS3 movingImage=None, itkAffineTransformD3 matrixTransform=None, short defaultPixelValue=0) -> itkImageSS3
        ResampleImage(tubeRegisterImagesSS3 self, std::string interp, itkImageSS3 movingImage=None, itkAffineTransformD3 matrixTransform=None) -> itkImageSS3
        ResampleImage(tubeRegisterImagesSS3 self, std::string interp, itkImageSS3 movingImage=None) -> itkImageSS3
        ResampleImage(tubeRegisterImagesSS3 self, std::string interp) -> itkImageSS3
        ResampleImage(tubeRegisterImagesSS3 self) -> itkImageSS3
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_ResampleImage(self, *args)


    def GetFinalMovingImage(self, interp: 'std::string') -> "itkImageSS3 const *":
        """GetFinalMovingImage(tubeRegisterImagesSS3 self, std::string interp) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetFinalMovingImage(self, interp)


    def LoadBaselineImage(self, value: 'std::string const &') -> "void":
        """LoadBaselineImage(tubeRegisterImagesSS3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadBaselineImage(self, value)


    def SetBaselineImage(self, value: 'itkImageSS3') -> "void":
        """SetBaselineImage(tubeRegisterImagesSS3 self, itkImageSS3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineImage(self, value)


    def SetBaselineNumberOfFailedPixelsTolerance(self, value: 'unsigned int') -> "void":
        """SetBaselineNumberOfFailedPixelsTolerance(tubeRegisterImagesSS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineNumberOfFailedPixelsTolerance(self, value)


    def SetBaselineIntensityTolerance(self, value: 'short') -> "void":
        """SetBaselineIntensityTolerance(tubeRegisterImagesSS3 self, short value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineIntensityTolerance(self, value)


    def SetBaselineRadiusTolerance(self, value: 'unsigned int') -> "void":
        """SetBaselineRadiusTolerance(tubeRegisterImagesSS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineRadiusTolerance(self, value)


    def ComputeBaselineDifference(self) -> "void":
        """ComputeBaselineDifference(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_ComputeBaselineDifference(self)


    def GetBaselineDifferenceImage(self) -> "itkImageSS3 const *":
        """GetBaselineDifferenceImage(tubeRegisterImagesSS3 self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineDifferenceImage(self)


    def GetBaselineResampledMovingImage(self) -> "itkImageSS3 const *":
        """GetBaselineResampledMovingImage(tubeRegisterImagesSS3 self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineResampledMovingImage(self)


    def GetBaselineNumberOfFailedPixels(self) -> "unsigned int":
        """GetBaselineNumberOfFailedPixels(tubeRegisterImagesSS3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineNumberOfFailedPixels(self)


    def GetBaselineTestPassed(self) -> "bool":
        """GetBaselineTestPassed(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineTestPassed(self)


    def SetEnableLoadedRegistration(self, value: 'bool') -> "void":
        """SetEnableLoadedRegistration(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableLoadedRegistration(self, value)


    def GetEnableLoadedRegistration(self) -> "bool":
        """GetEnableLoadedRegistration(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableLoadedRegistration(self)


    def EnableLoadedRegistrationOn(self) -> "void":
        """EnableLoadedRegistrationOn(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableLoadedRegistrationOn(self)


    def EnableLoadedRegistrationOff(self) -> "void":
        """EnableLoadedRegistrationOff(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableLoadedRegistrationOff(self)


    def SetEnableInitialRegistration(self, value: 'bool') -> "void":
        """SetEnableInitialRegistration(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableInitialRegistration(self, value)


    def GetEnableInitialRegistration(self) -> "bool":
        """GetEnableInitialRegistration(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableInitialRegistration(self)


    def EnableInitialRegistrationOn(self) -> "void":
        """EnableInitialRegistrationOn(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableInitialRegistrationOn(self)


    def EnableInitialRegistrationOff(self) -> "void":
        """EnableInitialRegistrationOff(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableInitialRegistrationOff(self)


    def SetEnableRigidRegistration(self, value: 'bool') -> "void":
        """SetEnableRigidRegistration(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableRigidRegistration(self, value)


    def GetEnableRigidRegistration(self) -> "bool":
        """GetEnableRigidRegistration(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableRigidRegistration(self)


    def EnableRigidRegistrationOn(self) -> "void":
        """EnableRigidRegistrationOn(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableRigidRegistrationOn(self)


    def EnableRigidRegistrationOff(self) -> "void":
        """EnableRigidRegistrationOff(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableRigidRegistrationOff(self)


    def SetEnableAffineRegistration(self, value: 'bool') -> "void":
        """SetEnableAffineRegistration(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableAffineRegistration(self, value)


    def GetEnableAffineRegistration(self) -> "bool":
        """GetEnableAffineRegistration(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableAffineRegistration(self)


    def EnableAffineRegistrationOn(self) -> "void":
        """EnableAffineRegistrationOn(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableAffineRegistrationOn(self)


    def EnableAffineRegistrationOff(self) -> "void":
        """EnableAffineRegistrationOff(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableAffineRegistrationOff(self)


    def SetEnableBSplineRegistration(self, value: 'bool') -> "void":
        """SetEnableBSplineRegistration(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableBSplineRegistration(self, value)


    def GetEnableBSplineRegistration(self) -> "bool":
        """GetEnableBSplineRegistration(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableBSplineRegistration(self)


    def EnableBSplineRegistrationOn(self) -> "void":
        """EnableBSplineRegistrationOn(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableBSplineRegistrationOn(self)


    def EnableBSplineRegistrationOff(self) -> "void":
        """EnableBSplineRegistrationOff(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableBSplineRegistrationOff(self)


    def SetRegistration(self, reg: 'std::string const &') -> "void":
        """SetRegistration(tubeRegisterImagesSS3 self, std::string const & reg)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRegistration(self, reg)


    def SetInterpolation(self, interp: 'std::string const &') -> "void":
        """SetInterpolation(tubeRegisterImagesSS3 self, std::string const & interp)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetInterpolation(self, interp)


    def SetMetric(self, metric: 'std::string const &') -> "void":
        """SetMetric(tubeRegisterImagesSS3 self, std::string const & metric)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMetric(self, metric)


    def SetUseEvolutionaryOptimization(self, value: 'bool') -> "void":
        """SetUseEvolutionaryOptimization(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseEvolutionaryOptimization(self, value)


    def GetUseEvolutionaryOptimization(self) -> "bool":
        """GetUseEvolutionaryOptimization(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseEvolutionaryOptimization(self)


    def SetExpectedOffsetMagnitude(self, value: 'double') -> "void":
        """SetExpectedOffsetMagnitude(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedOffsetMagnitude(self, value)


    def GetExpectedOffsetMagnitude(self) -> "double":
        """GetExpectedOffsetMagnitude(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedOffsetMagnitude(self)


    def SetExpectedRotationMagnitude(self, value: 'double') -> "void":
        """SetExpectedRotationMagnitude(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedRotationMagnitude(self, value)


    def GetExpectedRotationMagnitude(self) -> "double":
        """GetExpectedRotationMagnitude(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedRotationMagnitude(self)


    def SetExpectedScaleMagnitude(self, value: 'double') -> "void":
        """SetExpectedScaleMagnitude(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedScaleMagnitude(self, value)


    def GetExpectedScaleMagnitude(self) -> "double":
        """GetExpectedScaleMagnitude(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedScaleMagnitude(self)


    def SetExpectedSkewMagnitude(self, value: 'double') -> "void":
        """SetExpectedSkewMagnitude(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedSkewMagnitude(self, value)


    def GetExpectedSkewMagnitude(self) -> "double":
        """GetExpectedSkewMagnitude(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedSkewMagnitude(self)


    def SetExpectedDeformationMagnitude(self, value: 'double') -> "void":
        """SetExpectedDeformationMagnitude(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedDeformationMagnitude(self, value)


    def GetExpectedDeformationMagnitude(self) -> "double":
        """GetExpectedDeformationMagnitude(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedDeformationMagnitude(self)


    def GetCurrentMatrixTransform(self) -> "itkAffineTransformD3 const *":
        """GetCurrentMatrixTransform(tubeRegisterImagesSS3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetCurrentMatrixTransform(self)


    def GetCurrentBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetCurrentBSplineTransform(tubeRegisterImagesSS3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetCurrentBSplineTransform(self)


    def GetCurrentMovingImage(self) -> "itkImageSS3 const *":
        """GetCurrentMovingImage(tubeRegisterImagesSS3 self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetCurrentMovingImage(self)


    def GetLoadedTransformResampledImage(self) -> "itkImageSS3 const *":
        """GetLoadedTransformResampledImage(tubeRegisterImagesSS3 self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetLoadedTransformResampledImage(self)


    def GetMatrixTransformResampledImage(self) -> "itkImageSS3 const *":
        """GetMatrixTransformResampledImage(tubeRegisterImagesSS3 self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetMatrixTransformResampledImage(self)


    def GetBSplineTransformResampledImage(self) -> "itkImageSS3 const *":
        """GetBSplineTransformResampledImage(tubeRegisterImagesSS3 self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineTransformResampledImage(self)


    def GetFinalMetricValue(self) -> "double":
        """GetFinalMetricValue(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetFinalMetricValue(self)


    def SetReportProgress(self, value: 'bool') -> "void":
        """SetReportProgress(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetReportProgress(self, value)


    def GetReportProgress(self) -> "bool":
        """GetReportProgress(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetReportProgress(self)


    def ReportProgressOn(self) -> "void":
        """ReportProgressOn(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_ReportProgressOn(self)


    def ReportProgressOff(self) -> "void":
        """ReportProgressOff(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_ReportProgressOff(self)


    def SetMinimizeMemory(self, value: 'bool') -> "void":
        """SetMinimizeMemory(tubeRegisterImagesSS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMinimizeMemory(self, value)


    def GetMinimizeMemory(self) -> "bool":
        """GetMinimizeMemory(tubeRegisterImagesSS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetMinimizeMemory(self)


    def MinimizeMemoryOn(self) -> "void":
        """MinimizeMemoryOn(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_MinimizeMemoryOn(self)


    def MinimizeMemoryOff(self) -> "void":
        """MinimizeMemoryOff(tubeRegisterImagesSS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_MinimizeMemoryOff(self)


    def LoadTransform(self, transform: 'std::string const &', invertLoadedTransform: 'bool'=False) -> "void":
        """
        LoadTransform(tubeRegisterImagesSS3 self, std::string const & transform, bool invertLoadedTransform=False)
        LoadTransform(tubeRegisterImagesSS3 self, std::string const & transform)
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadTransform(self, transform, invertLoadedTransform)


    def SaveTransform(self, value: 'std::string const &') -> "void":
        """SaveTransform(tubeRegisterImagesSS3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SaveTransform(self, value)


    def SaveDisplacementField(self, value: 'std::string const &') -> "void":
        """SaveDisplacementField(tubeRegisterImagesSS3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SaveDisplacementField(self, value)


    def SetLoadedMatrixTransform(self, tfm: 'itkAffineTransformD3', invert: 'bool'=False) -> "void":
        """
        SetLoadedMatrixTransform(tubeRegisterImagesSS3 self, itkAffineTransformD3 tfm, bool invert=False)
        SetLoadedMatrixTransform(tubeRegisterImagesSS3 self, itkAffineTransformD3 tfm)
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetLoadedMatrixTransform(self, tfm, invert)


    def GetLoadedMatrixTransform(self) -> "itkAffineTransformD3 const *":
        """GetLoadedMatrixTransform(tubeRegisterImagesSS3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetLoadedMatrixTransform(self)


    def SetLoadedBSplineTransform(self, value: 'itkBSplineTransformD33') -> "void":
        """SetLoadedBSplineTransform(tubeRegisterImagesSS3 self, itkBSplineTransformD33 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetLoadedBSplineTransform(self, value)


    def GetLoadedBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetLoadedBSplineTransform(tubeRegisterImagesSS3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetLoadedBSplineTransform(self)


    def SetInitialMethodEnum(self, initialMethod: 'std::string const &') -> "void":
        """SetInitialMethodEnum(tubeRegisterImagesSS3 self, std::string const & initialMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetInitialMethodEnum(self, initialMethod)


    def GetInitialMethodEnum(self) -> "std::string const":
        """GetInitialMethodEnum(tubeRegisterImagesSS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetInitialMethodEnum(self)


    def SetFixedLandmarks(self, value: 'vectorvectorF') -> "void":
        """SetFixedLandmarks(tubeRegisterImagesSS3 self, vectorvectorF value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetFixedLandmarks(self, value)


    def SetMovingLandmarks(self, value: 'vectorvectorF') -> "void":
        """SetMovingLandmarks(tubeRegisterImagesSS3 self, vectorvectorF value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMovingLandmarks(self, value)


    def SetRigidSamplingRatio(self, value: 'double') -> "void":
        """SetRigidSamplingRatio(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidSamplingRatio(self, value)


    def GetRigidSamplingRatio(self) -> "double":
        """GetRigidSamplingRatio(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidSamplingRatio(self)


    def SetRigidTargetError(self, value: 'double') -> "void":
        """SetRigidTargetError(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidTargetError(self, value)


    def GetRigidTargetError(self) -> "double":
        """GetRigidTargetError(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidTargetError(self)


    def SetRigidMaxIterations(self, value: 'unsigned int') -> "void":
        """SetRigidMaxIterations(tubeRegisterImagesSS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidMaxIterations(self, value)


    def GetRigidMaxIterations(self) -> "unsigned int":
        """GetRigidMaxIterations(tubeRegisterImagesSS3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidMaxIterations(self)


    def SetRigidMetricMethodEnum(self, rigidMetricMethod: 'std::string const &') -> "void":
        """SetRigidMetricMethodEnum(tubeRegisterImagesSS3 self, std::string const & rigidMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidMetricMethodEnum(self, rigidMetricMethod)


    def GetRigidMetricMethodEnum(self) -> "std::string const":
        """GetRigidMetricMethodEnum(tubeRegisterImagesSS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidMetricMethodEnum(self)


    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod: 'std::string const &') -> "void":
        """SetRigidInterpolationMethodEnum(tubeRegisterImagesSS3 self, std::string const & rigidInterpolationMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)


    def GetRigidInterpolationMethodEnum(self) -> "std::string const":
        """GetRigidInterpolationMethodEnum(tubeRegisterImagesSS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidInterpolationMethodEnum(self)


    def GetRigidTransform(self) -> "itkMatrixOffsetTransformBaseD33 const *":
        """GetRigidTransform(tubeRegisterImagesSS3 self) -> itkMatrixOffsetTransformBaseD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidTransform(self)


    def GetRigidMetricValue(self) -> "double":
        """GetRigidMetricValue(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidMetricValue(self)


    def SetAffineSamplingRatio(self, value: 'double') -> "void":
        """SetAffineSamplingRatio(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineSamplingRatio(self, value)


    def GetAffineSamplingRatio(self) -> "double":
        """GetAffineSamplingRatio(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineSamplingRatio(self)


    def SetAffineTargetError(self, value: 'double') -> "void":
        """SetAffineTargetError(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineTargetError(self, value)


    def GetAffineTargetError(self) -> "double":
        """GetAffineTargetError(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineTargetError(self)


    def SetAffineMaxIterations(self, value: 'unsigned int') -> "void":
        """SetAffineMaxIterations(tubeRegisterImagesSS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineMaxIterations(self, value)


    def GetAffineMaxIterations(self) -> "unsigned int":
        """GetAffineMaxIterations(tubeRegisterImagesSS3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineMaxIterations(self)


    def SetAffineMetricMethodEnum(self, rigidMetricMethod: 'std::string const &') -> "void":
        """SetAffineMetricMethodEnum(tubeRegisterImagesSS3 self, std::string const & rigidMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineMetricMethodEnum(self, rigidMetricMethod)


    def GetAffineMetricMethodEnum(self) -> "std::string const":
        """GetAffineMetricMethodEnum(tubeRegisterImagesSS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineMetricMethodEnum(self)


    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod: 'std::string const &') -> "void":
        """SetAffineInterpolationMethodEnum(tubeRegisterImagesSS3 self, std::string const & rigidInterpolationMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)


    def GetAffineInterpolationMethodEnum(self) -> "std::string const":
        """GetAffineInterpolationMethodEnum(tubeRegisterImagesSS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineInterpolationMethodEnum(self)


    def GetAffineTransform(self) -> "itkAffineTransformD3 const *":
        """GetAffineTransform(tubeRegisterImagesSS3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineTransform(self)


    def GetAffineMetricValue(self) -> "double":
        """GetAffineMetricValue(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineMetricValue(self)


    def SetBSplineSamplingRatio(self, value: 'double') -> "void":
        """SetBSplineSamplingRatio(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineSamplingRatio(self, value)


    def GetBSplineSamplingRatio(self) -> "double":
        """GetBSplineSamplingRatio(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineSamplingRatio(self)


    def SetBSplineTargetError(self, value: 'double') -> "void":
        """SetBSplineTargetError(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineTargetError(self, value)


    def GetBSplineTargetError(self) -> "double":
        """GetBSplineTargetError(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineTargetError(self)


    def SetBSplineMaxIterations(self, value: 'unsigned int') -> "void":
        """SetBSplineMaxIterations(tubeRegisterImagesSS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineMaxIterations(self, value)


    def GetBSplineMaxIterations(self) -> "unsigned int":
        """GetBSplineMaxIterations(tubeRegisterImagesSS3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineMaxIterations(self)


    def SetBSplineControlPointPixelSpacing(self, value: 'double') -> "void":
        """SetBSplineControlPointPixelSpacing(tubeRegisterImagesSS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineControlPointPixelSpacing(self, value)


    def GetBSplineControlPointPixelSpacing(self) -> "double":
        """GetBSplineControlPointPixelSpacing(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineControlPointPixelSpacing(self)


    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod: 'std::string const &') -> "void":
        """SetBSplineMetricMethodEnum(tubeRegisterImagesSS3 self, std::string const & bSplineMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)


    def GetBSplineMetricMethodEnum(self) -> "std::string const":
        """GetBSplineMetricMethodEnum(tubeRegisterImagesSS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineMetricMethodEnum(self)


    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod: 'std::string const &') -> "void":
        """SetBSplineInterpolationMethodEnum(tubeRegisterImagesSS3 self, std::string const & bSplineMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)


    def GetBSplineInterpolationMethodEnum(self) -> "std::string const":
        """GetBSplineInterpolationMethodEnum(tubeRegisterImagesSS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineInterpolationMethodEnum(self)


    def GetBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetBSplineTransform(tubeRegisterImagesSS3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineTransform(self)


    def GetBSplineMetricValue(self) -> "double":
        """GetBSplineMetricValue(tubeRegisterImagesSS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineMetricValue(self)

    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesSS3

    def cast(obj: 'itkLightObject') -> "tubeRegisterImagesSS3 *":
        """cast(itkLightObject obj) -> tubeRegisterImagesSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesSS3

        Create a new object of the class tubeRegisterImagesSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeRegisterImagesSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeRegisterImagesSS3.Clone = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_Clone, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.LoadFixedImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadFixedImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetFixedImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetFixedImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.LoadMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadMovingImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMovingImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetRandomNumberSeed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRandomNumberSeed, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetRandomNumberSeed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRandomNumberSeed, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetUseFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseFixedImageMaskObject, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetUseFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseFixedImageMaskObject, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetFixedImageMaskObject, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetFixedImageMaskObject, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetUseMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseMovingImageMaskObject, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetUseMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseMovingImageMaskObject, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMovingImageMaskObject, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetMovingImageMaskObject, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetUseRegionOfInterest = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseRegionOfInterest, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetUseRegionOfInterest = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseRegionOfInterest, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetRegionOfInterestPoint1 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRegionOfInterestPoint1, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetRegionOfInterestPoint1 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRegionOfInterestPoint1, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetRegionOfInterestPoint2 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRegionOfInterestPoint2, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetRegionOfInterestPoint2 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRegionOfInterestPoint2, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetSampleFromOverlap = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetSampleFromOverlap, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetSampleFromOverlap = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetSampleFromOverlap, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetSampleIntensityPortion = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetSampleIntensityPortion, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetSampleIntensityPortion = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetSampleIntensityPortion, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.Initialize = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_Initialize, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.ResampleImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_ResampleImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetFinalMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetFinalMovingImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.LoadBaselineImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadBaselineImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetBaselineImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetBaselineNumberOfFailedPixelsTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineNumberOfFailedPixelsTolerance, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetBaselineIntensityTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineIntensityTolerance, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetBaselineRadiusTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineRadiusTolerance, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.ComputeBaselineDifference = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_ComputeBaselineDifference, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBaselineDifferenceImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineDifferenceImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBaselineResampledMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineResampledMovingImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBaselineNumberOfFailedPixels = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineNumberOfFailedPixels, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBaselineTestPassed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineTestPassed, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetEnableLoadedRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableLoadedRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetEnableLoadedRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableLoadedRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.EnableLoadedRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableLoadedRegistrationOn, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.EnableLoadedRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableLoadedRegistrationOff, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetEnableInitialRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableInitialRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetEnableInitialRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableInitialRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.EnableInitialRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableInitialRegistrationOn, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.EnableInitialRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableInitialRegistrationOff, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetEnableRigidRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableRigidRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetEnableRigidRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableRigidRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.EnableRigidRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableRigidRegistrationOn, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.EnableRigidRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableRigidRegistrationOff, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetEnableAffineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableAffineRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetEnableAffineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableAffineRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.EnableAffineRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableAffineRegistrationOn, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.EnableAffineRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableAffineRegistrationOff, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetEnableBSplineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableBSplineRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetEnableBSplineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableBSplineRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.EnableBSplineRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableBSplineRegistrationOn, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.EnableBSplineRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableBSplineRegistrationOff, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRegistration, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetInterpolation = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetInterpolation, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetMetric = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMetric, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetUseEvolutionaryOptimization = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseEvolutionaryOptimization, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetUseEvolutionaryOptimization = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseEvolutionaryOptimization, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetExpectedOffsetMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedOffsetMagnitude, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetExpectedOffsetMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedOffsetMagnitude, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetExpectedRotationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedRotationMagnitude, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetExpectedRotationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedRotationMagnitude, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetExpectedScaleMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedScaleMagnitude, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetExpectedScaleMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedScaleMagnitude, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetExpectedSkewMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedSkewMagnitude, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetExpectedSkewMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedSkewMagnitude, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetExpectedDeformationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedDeformationMagnitude, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetExpectedDeformationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedDeformationMagnitude, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetCurrentMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetCurrentMatrixTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetCurrentBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetCurrentBSplineTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetCurrentMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetCurrentMovingImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetLoadedTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetLoadedTransformResampledImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetMatrixTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetMatrixTransformResampledImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBSplineTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineTransformResampledImage, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetFinalMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetFinalMetricValue, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetReportProgress = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetReportProgress, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetReportProgress = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetReportProgress, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.ReportProgressOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_ReportProgressOn, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.ReportProgressOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_ReportProgressOff, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetMinimizeMemory = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMinimizeMemory, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetMinimizeMemory = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetMinimizeMemory, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.MinimizeMemoryOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_MinimizeMemoryOn, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.MinimizeMemoryOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_MinimizeMemoryOff, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.LoadTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SaveTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SaveTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SaveDisplacementField = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SaveDisplacementField, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetLoadedMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetLoadedMatrixTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetLoadedMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetLoadedMatrixTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetLoadedBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetLoadedBSplineTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetLoadedBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetLoadedBSplineTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetInitialMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetInitialMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetInitialMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetInitialMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetFixedLandmarks = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetFixedLandmarks, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetMovingLandmarks = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMovingLandmarks, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetRigidSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidSamplingRatio, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetRigidSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidSamplingRatio, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetRigidTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidTargetError, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetRigidTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidTargetError, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetRigidMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidMaxIterations, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetRigidMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidMaxIterations, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetRigidMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidMetricMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetRigidMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidMetricMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetRigidInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidInterpolationMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetRigidInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidInterpolationMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetRigidTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetRigidMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidMetricValue, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetAffineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineSamplingRatio, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetAffineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineSamplingRatio, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetAffineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineTargetError, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetAffineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineTargetError, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetAffineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineMaxIterations, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetAffineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineMaxIterations, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetAffineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineMetricMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetAffineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineMetricMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetAffineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineInterpolationMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetAffineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineInterpolationMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetAffineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetAffineMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineMetricValue, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetBSplineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineSamplingRatio, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBSplineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineSamplingRatio, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetBSplineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineTargetError, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBSplineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineTargetError, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetBSplineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineMaxIterations, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBSplineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineMaxIterations, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetBSplineControlPointPixelSpacing = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineControlPointPixelSpacing, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBSplineControlPointPixelSpacing = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineControlPointPixelSpacing, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetBSplineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineMetricMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBSplineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineMetricMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.SetBSplineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineInterpolationMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBSplineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineInterpolationMethodEnum, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineTransform, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3.GetBSplineMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineMetricValue, None, tubeRegisterImagesSS3)
tubeRegisterImagesSS3_swigregister = _tubeRegisterImagesPython.tubeRegisterImagesSS3_swigregister
tubeRegisterImagesSS3_swigregister(tubeRegisterImagesSS3)

def tubeRegisterImagesSS3___New_orig__() -> "tubeRegisterImagesSS3_Pointer":
    """tubeRegisterImagesSS3___New_orig__() -> tubeRegisterImagesSS3_Pointer"""
    return _tubeRegisterImagesPython.tubeRegisterImagesSS3___New_orig__()

def tubeRegisterImagesSS3_cast(obj: 'itkLightObject') -> "tubeRegisterImagesSS3 *":
    """tubeRegisterImagesSS3_cast(itkLightObject obj) -> tubeRegisterImagesSS3"""
    return _tubeRegisterImagesPython.tubeRegisterImagesSS3_cast(obj)

class tubeRegisterImagesUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeRegisterImagesUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeRegisterImagesUC3_Pointer":
        """__New_orig__() -> tubeRegisterImagesUC3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeRegisterImagesUC3_Pointer":
        """Clone(tubeRegisterImagesUC3 self) -> tubeRegisterImagesUC3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_Clone(self)


    def LoadFixedImage(self, value: 'std::string const &') -> "void":
        """LoadFixedImage(tubeRegisterImagesUC3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadFixedImage(self, value)


    def SetFixedImage(self, value: 'itkImageUC3') -> "void":
        """SetFixedImage(tubeRegisterImagesUC3 self, itkImageUC3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetFixedImage(self, value)


    def LoadMovingImage(self, value: 'std::string const &') -> "void":
        """LoadMovingImage(tubeRegisterImagesUC3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadMovingImage(self, value)


    def SetMovingImage(self, value: 'itkImageUC3') -> "void":
        """SetMovingImage(tubeRegisterImagesUC3 self, itkImageUC3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMovingImage(self, value)


    def SetRandomNumberSeed(self, value: 'unsigned int') -> "void":
        """SetRandomNumberSeed(tubeRegisterImagesUC3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRandomNumberSeed(self, value)


    def GetRandomNumberSeed(self) -> "unsigned int":
        """GetRandomNumberSeed(tubeRegisterImagesUC3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRandomNumberSeed(self)


    def SetUseFixedImageMaskObject(self, value: 'bool') -> "void":
        """SetUseFixedImageMaskObject(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseFixedImageMaskObject(self, value)


    def GetUseFixedImageMaskObject(self) -> "bool":
        """GetUseFixedImageMaskObject(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseFixedImageMaskObject(self)


    def SetFixedImageMaskObject(self, value: 'itkSpatialObject3') -> "void":
        """SetFixedImageMaskObject(tubeRegisterImagesUC3 self, itkSpatialObject3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetFixedImageMaskObject(self, value)


    def GetFixedImageMaskObject(self) -> "itkSpatialObject3 const *":
        """GetFixedImageMaskObject(tubeRegisterImagesUC3 self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetFixedImageMaskObject(self)


    def SetUseMovingImageMaskObject(self, value: 'bool') -> "void":
        """SetUseMovingImageMaskObject(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseMovingImageMaskObject(self, value)


    def GetUseMovingImageMaskObject(self) -> "bool":
        """GetUseMovingImageMaskObject(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseMovingImageMaskObject(self)


    def SetMovingImageMaskObject(self, value: 'itkSpatialObject3') -> "void":
        """SetMovingImageMaskObject(tubeRegisterImagesUC3 self, itkSpatialObject3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMovingImageMaskObject(self, value)


    def GetMovingImageMaskObject(self) -> "itkSpatialObject3 const *":
        """GetMovingImageMaskObject(tubeRegisterImagesUC3 self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetMovingImageMaskObject(self)


    def SetUseRegionOfInterest(self, value: 'bool') -> "void":
        """SetUseRegionOfInterest(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseRegionOfInterest(self, value)


    def GetUseRegionOfInterest(self) -> "bool":
        """GetUseRegionOfInterest(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseRegionOfInterest(self)


    def SetRegionOfInterestPoint1(self, value: 'itkPointD3') -> "void":
        """SetRegionOfInterestPoint1(tubeRegisterImagesUC3 self, itkPointD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRegionOfInterestPoint1(self, value)


    def GetRegionOfInterestPoint1(self) -> "itkPointD3":
        """GetRegionOfInterestPoint1(tubeRegisterImagesUC3 self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRegionOfInterestPoint1(self)


    def SetRegionOfInterestPoint2(self, value: 'itkPointD3') -> "void":
        """SetRegionOfInterestPoint2(tubeRegisterImagesUC3 self, itkPointD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRegionOfInterestPoint2(self, value)


    def GetRegionOfInterestPoint2(self) -> "itkPointD3":
        """GetRegionOfInterestPoint2(tubeRegisterImagesUC3 self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRegionOfInterestPoint2(self)


    def SetSampleFromOverlap(self, value: 'bool') -> "void":
        """SetSampleFromOverlap(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetSampleFromOverlap(self, value)


    def GetSampleFromOverlap(self) -> "bool":
        """GetSampleFromOverlap(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetSampleFromOverlap(self)


    def SetSampleIntensityPortion(self, value: 'double') -> "void":
        """SetSampleIntensityPortion(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetSampleIntensityPortion(self, value)


    def GetSampleIntensityPortion(self) -> "double":
        """GetSampleIntensityPortion(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetSampleIntensityPortion(self)


    def Initialize(self) -> "void":
        """Initialize(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_Initialize(self)


    def ResampleImage(self, *args) -> "itkImageUC3 const *":
        """
        ResampleImage(tubeRegisterImagesUC3 self, std::string interp, itkImageUC3 movingImage=None, itkAffineTransformD3 matrixTransform=None, unsigned char defaultPixelValue=0, double portionOfTransformToApply=1.) -> itkImageUC3
        ResampleImage(tubeRegisterImagesUC3 self, std::string interp, itkImageUC3 movingImage=None, itkAffineTransformD3 matrixTransform=None, unsigned char defaultPixelValue=0) -> itkImageUC3
        ResampleImage(tubeRegisterImagesUC3 self, std::string interp, itkImageUC3 movingImage=None, itkAffineTransformD3 matrixTransform=None) -> itkImageUC3
        ResampleImage(tubeRegisterImagesUC3 self, std::string interp, itkImageUC3 movingImage=None) -> itkImageUC3
        ResampleImage(tubeRegisterImagesUC3 self, std::string interp) -> itkImageUC3
        ResampleImage(tubeRegisterImagesUC3 self) -> itkImageUC3
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_ResampleImage(self, *args)


    def GetFinalMovingImage(self, interp: 'std::string') -> "itkImageUC3 const *":
        """GetFinalMovingImage(tubeRegisterImagesUC3 self, std::string interp) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetFinalMovingImage(self, interp)


    def LoadBaselineImage(self, value: 'std::string const &') -> "void":
        """LoadBaselineImage(tubeRegisterImagesUC3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadBaselineImage(self, value)


    def SetBaselineImage(self, value: 'itkImageUC3') -> "void":
        """SetBaselineImage(tubeRegisterImagesUC3 self, itkImageUC3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineImage(self, value)


    def SetBaselineNumberOfFailedPixelsTolerance(self, value: 'unsigned int') -> "void":
        """SetBaselineNumberOfFailedPixelsTolerance(tubeRegisterImagesUC3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineNumberOfFailedPixelsTolerance(self, value)


    def SetBaselineIntensityTolerance(self, value: 'unsigned char') -> "void":
        """SetBaselineIntensityTolerance(tubeRegisterImagesUC3 self, unsigned char value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineIntensityTolerance(self, value)


    def SetBaselineRadiusTolerance(self, value: 'unsigned int') -> "void":
        """SetBaselineRadiusTolerance(tubeRegisterImagesUC3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineRadiusTolerance(self, value)


    def ComputeBaselineDifference(self) -> "void":
        """ComputeBaselineDifference(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_ComputeBaselineDifference(self)


    def GetBaselineDifferenceImage(self) -> "itkImageUC3 const *":
        """GetBaselineDifferenceImage(tubeRegisterImagesUC3 self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineDifferenceImage(self)


    def GetBaselineResampledMovingImage(self) -> "itkImageUC3 const *":
        """GetBaselineResampledMovingImage(tubeRegisterImagesUC3 self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineResampledMovingImage(self)


    def GetBaselineNumberOfFailedPixels(self) -> "unsigned int":
        """GetBaselineNumberOfFailedPixels(tubeRegisterImagesUC3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineNumberOfFailedPixels(self)


    def GetBaselineTestPassed(self) -> "bool":
        """GetBaselineTestPassed(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineTestPassed(self)


    def SetEnableLoadedRegistration(self, value: 'bool') -> "void":
        """SetEnableLoadedRegistration(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableLoadedRegistration(self, value)


    def GetEnableLoadedRegistration(self) -> "bool":
        """GetEnableLoadedRegistration(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableLoadedRegistration(self)


    def EnableLoadedRegistrationOn(self) -> "void":
        """EnableLoadedRegistrationOn(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableLoadedRegistrationOn(self)


    def EnableLoadedRegistrationOff(self) -> "void":
        """EnableLoadedRegistrationOff(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableLoadedRegistrationOff(self)


    def SetEnableInitialRegistration(self, value: 'bool') -> "void":
        """SetEnableInitialRegistration(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableInitialRegistration(self, value)


    def GetEnableInitialRegistration(self) -> "bool":
        """GetEnableInitialRegistration(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableInitialRegistration(self)


    def EnableInitialRegistrationOn(self) -> "void":
        """EnableInitialRegistrationOn(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableInitialRegistrationOn(self)


    def EnableInitialRegistrationOff(self) -> "void":
        """EnableInitialRegistrationOff(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableInitialRegistrationOff(self)


    def SetEnableRigidRegistration(self, value: 'bool') -> "void":
        """SetEnableRigidRegistration(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableRigidRegistration(self, value)


    def GetEnableRigidRegistration(self) -> "bool":
        """GetEnableRigidRegistration(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableRigidRegistration(self)


    def EnableRigidRegistrationOn(self) -> "void":
        """EnableRigidRegistrationOn(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableRigidRegistrationOn(self)


    def EnableRigidRegistrationOff(self) -> "void":
        """EnableRigidRegistrationOff(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableRigidRegistrationOff(self)


    def SetEnableAffineRegistration(self, value: 'bool') -> "void":
        """SetEnableAffineRegistration(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableAffineRegistration(self, value)


    def GetEnableAffineRegistration(self) -> "bool":
        """GetEnableAffineRegistration(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableAffineRegistration(self)


    def EnableAffineRegistrationOn(self) -> "void":
        """EnableAffineRegistrationOn(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableAffineRegistrationOn(self)


    def EnableAffineRegistrationOff(self) -> "void":
        """EnableAffineRegistrationOff(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableAffineRegistrationOff(self)


    def SetEnableBSplineRegistration(self, value: 'bool') -> "void":
        """SetEnableBSplineRegistration(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableBSplineRegistration(self, value)


    def GetEnableBSplineRegistration(self) -> "bool":
        """GetEnableBSplineRegistration(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableBSplineRegistration(self)


    def EnableBSplineRegistrationOn(self) -> "void":
        """EnableBSplineRegistrationOn(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableBSplineRegistrationOn(self)


    def EnableBSplineRegistrationOff(self) -> "void":
        """EnableBSplineRegistrationOff(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableBSplineRegistrationOff(self)


    def SetRegistration(self, reg: 'std::string const &') -> "void":
        """SetRegistration(tubeRegisterImagesUC3 self, std::string const & reg)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRegistration(self, reg)


    def SetInterpolation(self, interp: 'std::string const &') -> "void":
        """SetInterpolation(tubeRegisterImagesUC3 self, std::string const & interp)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetInterpolation(self, interp)


    def SetMetric(self, metric: 'std::string const &') -> "void":
        """SetMetric(tubeRegisterImagesUC3 self, std::string const & metric)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMetric(self, metric)


    def SetUseEvolutionaryOptimization(self, value: 'bool') -> "void":
        """SetUseEvolutionaryOptimization(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseEvolutionaryOptimization(self, value)


    def GetUseEvolutionaryOptimization(self) -> "bool":
        """GetUseEvolutionaryOptimization(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseEvolutionaryOptimization(self)


    def SetExpectedOffsetMagnitude(self, value: 'double') -> "void":
        """SetExpectedOffsetMagnitude(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedOffsetMagnitude(self, value)


    def GetExpectedOffsetMagnitude(self) -> "double":
        """GetExpectedOffsetMagnitude(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedOffsetMagnitude(self)


    def SetExpectedRotationMagnitude(self, value: 'double') -> "void":
        """SetExpectedRotationMagnitude(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedRotationMagnitude(self, value)


    def GetExpectedRotationMagnitude(self) -> "double":
        """GetExpectedRotationMagnitude(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedRotationMagnitude(self)


    def SetExpectedScaleMagnitude(self, value: 'double') -> "void":
        """SetExpectedScaleMagnitude(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedScaleMagnitude(self, value)


    def GetExpectedScaleMagnitude(self) -> "double":
        """GetExpectedScaleMagnitude(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedScaleMagnitude(self)


    def SetExpectedSkewMagnitude(self, value: 'double') -> "void":
        """SetExpectedSkewMagnitude(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedSkewMagnitude(self, value)


    def GetExpectedSkewMagnitude(self) -> "double":
        """GetExpectedSkewMagnitude(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedSkewMagnitude(self)


    def SetExpectedDeformationMagnitude(self, value: 'double') -> "void":
        """SetExpectedDeformationMagnitude(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedDeformationMagnitude(self, value)


    def GetExpectedDeformationMagnitude(self) -> "double":
        """GetExpectedDeformationMagnitude(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedDeformationMagnitude(self)


    def GetCurrentMatrixTransform(self) -> "itkAffineTransformD3 const *":
        """GetCurrentMatrixTransform(tubeRegisterImagesUC3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetCurrentMatrixTransform(self)


    def GetCurrentBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetCurrentBSplineTransform(tubeRegisterImagesUC3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetCurrentBSplineTransform(self)


    def GetCurrentMovingImage(self) -> "itkImageUC3 const *":
        """GetCurrentMovingImage(tubeRegisterImagesUC3 self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetCurrentMovingImage(self)


    def GetLoadedTransformResampledImage(self) -> "itkImageUC3 const *":
        """GetLoadedTransformResampledImage(tubeRegisterImagesUC3 self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetLoadedTransformResampledImage(self)


    def GetMatrixTransformResampledImage(self) -> "itkImageUC3 const *":
        """GetMatrixTransformResampledImage(tubeRegisterImagesUC3 self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetMatrixTransformResampledImage(self)


    def GetBSplineTransformResampledImage(self) -> "itkImageUC3 const *":
        """GetBSplineTransformResampledImage(tubeRegisterImagesUC3 self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineTransformResampledImage(self)


    def GetFinalMetricValue(self) -> "double":
        """GetFinalMetricValue(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetFinalMetricValue(self)


    def SetReportProgress(self, value: 'bool') -> "void":
        """SetReportProgress(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetReportProgress(self, value)


    def GetReportProgress(self) -> "bool":
        """GetReportProgress(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetReportProgress(self)


    def ReportProgressOn(self) -> "void":
        """ReportProgressOn(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_ReportProgressOn(self)


    def ReportProgressOff(self) -> "void":
        """ReportProgressOff(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_ReportProgressOff(self)


    def SetMinimizeMemory(self, value: 'bool') -> "void":
        """SetMinimizeMemory(tubeRegisterImagesUC3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMinimizeMemory(self, value)


    def GetMinimizeMemory(self) -> "bool":
        """GetMinimizeMemory(tubeRegisterImagesUC3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetMinimizeMemory(self)


    def MinimizeMemoryOn(self) -> "void":
        """MinimizeMemoryOn(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_MinimizeMemoryOn(self)


    def MinimizeMemoryOff(self) -> "void":
        """MinimizeMemoryOff(tubeRegisterImagesUC3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_MinimizeMemoryOff(self)


    def LoadTransform(self, transform: 'std::string const &', invertLoadedTransform: 'bool'=False) -> "void":
        """
        LoadTransform(tubeRegisterImagesUC3 self, std::string const & transform, bool invertLoadedTransform=False)
        LoadTransform(tubeRegisterImagesUC3 self, std::string const & transform)
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadTransform(self, transform, invertLoadedTransform)


    def SaveTransform(self, value: 'std::string const &') -> "void":
        """SaveTransform(tubeRegisterImagesUC3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SaveTransform(self, value)


    def SaveDisplacementField(self, value: 'std::string const &') -> "void":
        """SaveDisplacementField(tubeRegisterImagesUC3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SaveDisplacementField(self, value)


    def SetLoadedMatrixTransform(self, tfm: 'itkAffineTransformD3', invert: 'bool'=False) -> "void":
        """
        SetLoadedMatrixTransform(tubeRegisterImagesUC3 self, itkAffineTransformD3 tfm, bool invert=False)
        SetLoadedMatrixTransform(tubeRegisterImagesUC3 self, itkAffineTransformD3 tfm)
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetLoadedMatrixTransform(self, tfm, invert)


    def GetLoadedMatrixTransform(self) -> "itkAffineTransformD3 const *":
        """GetLoadedMatrixTransform(tubeRegisterImagesUC3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetLoadedMatrixTransform(self)


    def SetLoadedBSplineTransform(self, value: 'itkBSplineTransformD33') -> "void":
        """SetLoadedBSplineTransform(tubeRegisterImagesUC3 self, itkBSplineTransformD33 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetLoadedBSplineTransform(self, value)


    def GetLoadedBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetLoadedBSplineTransform(tubeRegisterImagesUC3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetLoadedBSplineTransform(self)


    def SetInitialMethodEnum(self, initialMethod: 'std::string const &') -> "void":
        """SetInitialMethodEnum(tubeRegisterImagesUC3 self, std::string const & initialMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetInitialMethodEnum(self, initialMethod)


    def GetInitialMethodEnum(self) -> "std::string const":
        """GetInitialMethodEnum(tubeRegisterImagesUC3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetInitialMethodEnum(self)


    def SetFixedLandmarks(self, value: 'vectorvectorF') -> "void":
        """SetFixedLandmarks(tubeRegisterImagesUC3 self, vectorvectorF value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetFixedLandmarks(self, value)


    def SetMovingLandmarks(self, value: 'vectorvectorF') -> "void":
        """SetMovingLandmarks(tubeRegisterImagesUC3 self, vectorvectorF value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMovingLandmarks(self, value)


    def SetRigidSamplingRatio(self, value: 'double') -> "void":
        """SetRigidSamplingRatio(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidSamplingRatio(self, value)


    def GetRigidSamplingRatio(self) -> "double":
        """GetRigidSamplingRatio(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidSamplingRatio(self)


    def SetRigidTargetError(self, value: 'double') -> "void":
        """SetRigidTargetError(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidTargetError(self, value)


    def GetRigidTargetError(self) -> "double":
        """GetRigidTargetError(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidTargetError(self)


    def SetRigidMaxIterations(self, value: 'unsigned int') -> "void":
        """SetRigidMaxIterations(tubeRegisterImagesUC3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidMaxIterations(self, value)


    def GetRigidMaxIterations(self) -> "unsigned int":
        """GetRigidMaxIterations(tubeRegisterImagesUC3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidMaxIterations(self)


    def SetRigidMetricMethodEnum(self, rigidMetricMethod: 'std::string const &') -> "void":
        """SetRigidMetricMethodEnum(tubeRegisterImagesUC3 self, std::string const & rigidMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidMetricMethodEnum(self, rigidMetricMethod)


    def GetRigidMetricMethodEnum(self) -> "std::string const":
        """GetRigidMetricMethodEnum(tubeRegisterImagesUC3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidMetricMethodEnum(self)


    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod: 'std::string const &') -> "void":
        """SetRigidInterpolationMethodEnum(tubeRegisterImagesUC3 self, std::string const & rigidInterpolationMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)


    def GetRigidInterpolationMethodEnum(self) -> "std::string const":
        """GetRigidInterpolationMethodEnum(tubeRegisterImagesUC3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidInterpolationMethodEnum(self)


    def GetRigidTransform(self) -> "itkMatrixOffsetTransformBaseD33 const *":
        """GetRigidTransform(tubeRegisterImagesUC3 self) -> itkMatrixOffsetTransformBaseD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidTransform(self)


    def GetRigidMetricValue(self) -> "double":
        """GetRigidMetricValue(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidMetricValue(self)


    def SetAffineSamplingRatio(self, value: 'double') -> "void":
        """SetAffineSamplingRatio(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineSamplingRatio(self, value)


    def GetAffineSamplingRatio(self) -> "double":
        """GetAffineSamplingRatio(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineSamplingRatio(self)


    def SetAffineTargetError(self, value: 'double') -> "void":
        """SetAffineTargetError(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineTargetError(self, value)


    def GetAffineTargetError(self) -> "double":
        """GetAffineTargetError(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineTargetError(self)


    def SetAffineMaxIterations(self, value: 'unsigned int') -> "void":
        """SetAffineMaxIterations(tubeRegisterImagesUC3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineMaxIterations(self, value)


    def GetAffineMaxIterations(self) -> "unsigned int":
        """GetAffineMaxIterations(tubeRegisterImagesUC3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineMaxIterations(self)


    def SetAffineMetricMethodEnum(self, rigidMetricMethod: 'std::string const &') -> "void":
        """SetAffineMetricMethodEnum(tubeRegisterImagesUC3 self, std::string const & rigidMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineMetricMethodEnum(self, rigidMetricMethod)


    def GetAffineMetricMethodEnum(self) -> "std::string const":
        """GetAffineMetricMethodEnum(tubeRegisterImagesUC3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineMetricMethodEnum(self)


    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod: 'std::string const &') -> "void":
        """SetAffineInterpolationMethodEnum(tubeRegisterImagesUC3 self, std::string const & rigidInterpolationMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)


    def GetAffineInterpolationMethodEnum(self) -> "std::string const":
        """GetAffineInterpolationMethodEnum(tubeRegisterImagesUC3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineInterpolationMethodEnum(self)


    def GetAffineTransform(self) -> "itkAffineTransformD3 const *":
        """GetAffineTransform(tubeRegisterImagesUC3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineTransform(self)


    def GetAffineMetricValue(self) -> "double":
        """GetAffineMetricValue(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineMetricValue(self)


    def SetBSplineSamplingRatio(self, value: 'double') -> "void":
        """SetBSplineSamplingRatio(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineSamplingRatio(self, value)


    def GetBSplineSamplingRatio(self) -> "double":
        """GetBSplineSamplingRatio(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineSamplingRatio(self)


    def SetBSplineTargetError(self, value: 'double') -> "void":
        """SetBSplineTargetError(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineTargetError(self, value)


    def GetBSplineTargetError(self) -> "double":
        """GetBSplineTargetError(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineTargetError(self)


    def SetBSplineMaxIterations(self, value: 'unsigned int') -> "void":
        """SetBSplineMaxIterations(tubeRegisterImagesUC3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineMaxIterations(self, value)


    def GetBSplineMaxIterations(self) -> "unsigned int":
        """GetBSplineMaxIterations(tubeRegisterImagesUC3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineMaxIterations(self)


    def SetBSplineControlPointPixelSpacing(self, value: 'double') -> "void":
        """SetBSplineControlPointPixelSpacing(tubeRegisterImagesUC3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineControlPointPixelSpacing(self, value)


    def GetBSplineControlPointPixelSpacing(self) -> "double":
        """GetBSplineControlPointPixelSpacing(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineControlPointPixelSpacing(self)


    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod: 'std::string const &') -> "void":
        """SetBSplineMetricMethodEnum(tubeRegisterImagesUC3 self, std::string const & bSplineMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)


    def GetBSplineMetricMethodEnum(self) -> "std::string const":
        """GetBSplineMetricMethodEnum(tubeRegisterImagesUC3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineMetricMethodEnum(self)


    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod: 'std::string const &') -> "void":
        """SetBSplineInterpolationMethodEnum(tubeRegisterImagesUC3 self, std::string const & bSplineMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)


    def GetBSplineInterpolationMethodEnum(self) -> "std::string const":
        """GetBSplineInterpolationMethodEnum(tubeRegisterImagesUC3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineInterpolationMethodEnum(self)


    def GetBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetBSplineTransform(tubeRegisterImagesUC3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineTransform(self)


    def GetBSplineMetricValue(self) -> "double":
        """GetBSplineMetricValue(tubeRegisterImagesUC3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineMetricValue(self)

    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesUC3

    def cast(obj: 'itkLightObject') -> "tubeRegisterImagesUC3 *":
        """cast(itkLightObject obj) -> tubeRegisterImagesUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesUC3

        Create a new object of the class tubeRegisterImagesUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeRegisterImagesUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeRegisterImagesUC3.Clone = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_Clone, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.LoadFixedImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadFixedImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetFixedImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetFixedImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.LoadMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadMovingImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMovingImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetRandomNumberSeed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRandomNumberSeed, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetRandomNumberSeed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRandomNumberSeed, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetUseFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseFixedImageMaskObject, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetUseFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseFixedImageMaskObject, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetFixedImageMaskObject, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetFixedImageMaskObject, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetUseMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseMovingImageMaskObject, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetUseMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseMovingImageMaskObject, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMovingImageMaskObject, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetMovingImageMaskObject, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetUseRegionOfInterest = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseRegionOfInterest, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetUseRegionOfInterest = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseRegionOfInterest, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetRegionOfInterestPoint1 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRegionOfInterestPoint1, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetRegionOfInterestPoint1 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRegionOfInterestPoint1, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetRegionOfInterestPoint2 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRegionOfInterestPoint2, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetRegionOfInterestPoint2 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRegionOfInterestPoint2, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetSampleFromOverlap = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetSampleFromOverlap, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetSampleFromOverlap = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetSampleFromOverlap, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetSampleIntensityPortion = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetSampleIntensityPortion, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetSampleIntensityPortion = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetSampleIntensityPortion, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.Initialize = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_Initialize, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.ResampleImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_ResampleImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetFinalMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetFinalMovingImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.LoadBaselineImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadBaselineImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetBaselineImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetBaselineNumberOfFailedPixelsTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineNumberOfFailedPixelsTolerance, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetBaselineIntensityTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineIntensityTolerance, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetBaselineRadiusTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineRadiusTolerance, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.ComputeBaselineDifference = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_ComputeBaselineDifference, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBaselineDifferenceImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineDifferenceImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBaselineResampledMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineResampledMovingImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBaselineNumberOfFailedPixels = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineNumberOfFailedPixels, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBaselineTestPassed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineTestPassed, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetEnableLoadedRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableLoadedRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetEnableLoadedRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableLoadedRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.EnableLoadedRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableLoadedRegistrationOn, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.EnableLoadedRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableLoadedRegistrationOff, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetEnableInitialRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableInitialRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetEnableInitialRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableInitialRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.EnableInitialRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableInitialRegistrationOn, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.EnableInitialRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableInitialRegistrationOff, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetEnableRigidRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableRigidRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetEnableRigidRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableRigidRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.EnableRigidRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableRigidRegistrationOn, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.EnableRigidRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableRigidRegistrationOff, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetEnableAffineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableAffineRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetEnableAffineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableAffineRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.EnableAffineRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableAffineRegistrationOn, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.EnableAffineRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableAffineRegistrationOff, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetEnableBSplineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableBSplineRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetEnableBSplineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableBSplineRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.EnableBSplineRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableBSplineRegistrationOn, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.EnableBSplineRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableBSplineRegistrationOff, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRegistration, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetInterpolation = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetInterpolation, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetMetric = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMetric, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetUseEvolutionaryOptimization = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseEvolutionaryOptimization, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetUseEvolutionaryOptimization = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseEvolutionaryOptimization, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetExpectedOffsetMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedOffsetMagnitude, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetExpectedOffsetMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedOffsetMagnitude, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetExpectedRotationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedRotationMagnitude, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetExpectedRotationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedRotationMagnitude, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetExpectedScaleMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedScaleMagnitude, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetExpectedScaleMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedScaleMagnitude, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetExpectedSkewMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedSkewMagnitude, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetExpectedSkewMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedSkewMagnitude, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetExpectedDeformationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedDeformationMagnitude, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetExpectedDeformationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedDeformationMagnitude, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetCurrentMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetCurrentMatrixTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetCurrentBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetCurrentBSplineTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetCurrentMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetCurrentMovingImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetLoadedTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetLoadedTransformResampledImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetMatrixTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetMatrixTransformResampledImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBSplineTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineTransformResampledImage, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetFinalMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetFinalMetricValue, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetReportProgress = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetReportProgress, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetReportProgress = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetReportProgress, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.ReportProgressOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_ReportProgressOn, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.ReportProgressOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_ReportProgressOff, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetMinimizeMemory = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMinimizeMemory, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetMinimizeMemory = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetMinimizeMemory, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.MinimizeMemoryOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_MinimizeMemoryOn, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.MinimizeMemoryOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_MinimizeMemoryOff, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.LoadTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SaveTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SaveTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SaveDisplacementField = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SaveDisplacementField, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetLoadedMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetLoadedMatrixTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetLoadedMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetLoadedMatrixTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetLoadedBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetLoadedBSplineTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetLoadedBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetLoadedBSplineTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetInitialMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetInitialMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetInitialMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetInitialMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetFixedLandmarks = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetFixedLandmarks, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetMovingLandmarks = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMovingLandmarks, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetRigidSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidSamplingRatio, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetRigidSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidSamplingRatio, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetRigidTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidTargetError, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetRigidTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidTargetError, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetRigidMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidMaxIterations, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetRigidMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidMaxIterations, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetRigidMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidMetricMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetRigidMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidMetricMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetRigidInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidInterpolationMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetRigidInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidInterpolationMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetRigidTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetRigidMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidMetricValue, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetAffineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineSamplingRatio, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetAffineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineSamplingRatio, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetAffineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineTargetError, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetAffineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineTargetError, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetAffineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineMaxIterations, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetAffineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineMaxIterations, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetAffineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineMetricMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetAffineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineMetricMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetAffineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineInterpolationMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetAffineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineInterpolationMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetAffineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetAffineMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineMetricValue, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetBSplineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineSamplingRatio, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBSplineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineSamplingRatio, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetBSplineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineTargetError, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBSplineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineTargetError, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetBSplineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineMaxIterations, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBSplineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineMaxIterations, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetBSplineControlPointPixelSpacing = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineControlPointPixelSpacing, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBSplineControlPointPixelSpacing = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineControlPointPixelSpacing, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetBSplineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineMetricMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBSplineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineMetricMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.SetBSplineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineInterpolationMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBSplineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineInterpolationMethodEnum, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineTransform, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3.GetBSplineMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineMetricValue, None, tubeRegisterImagesUC3)
tubeRegisterImagesUC3_swigregister = _tubeRegisterImagesPython.tubeRegisterImagesUC3_swigregister
tubeRegisterImagesUC3_swigregister(tubeRegisterImagesUC3)

def tubeRegisterImagesUC3___New_orig__() -> "tubeRegisterImagesUC3_Pointer":
    """tubeRegisterImagesUC3___New_orig__() -> tubeRegisterImagesUC3_Pointer"""
    return _tubeRegisterImagesPython.tubeRegisterImagesUC3___New_orig__()

def tubeRegisterImagesUC3_cast(obj: 'itkLightObject') -> "tubeRegisterImagesUC3 *":
    """tubeRegisterImagesUC3_cast(itkLightObject obj) -> tubeRegisterImagesUC3"""
    return _tubeRegisterImagesPython.tubeRegisterImagesUC3_cast(obj)

class tubeRegisterImagesUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeRegisterImagesUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeRegisterImagesUS3_Pointer":
        """__New_orig__() -> tubeRegisterImagesUS3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeRegisterImagesUS3_Pointer":
        """Clone(tubeRegisterImagesUS3 self) -> tubeRegisterImagesUS3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_Clone(self)


    def LoadFixedImage(self, value: 'std::string const &') -> "void":
        """LoadFixedImage(tubeRegisterImagesUS3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadFixedImage(self, value)


    def SetFixedImage(self, value: 'itkImageUS3') -> "void":
        """SetFixedImage(tubeRegisterImagesUS3 self, itkImageUS3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetFixedImage(self, value)


    def LoadMovingImage(self, value: 'std::string const &') -> "void":
        """LoadMovingImage(tubeRegisterImagesUS3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadMovingImage(self, value)


    def SetMovingImage(self, value: 'itkImageUS3') -> "void":
        """SetMovingImage(tubeRegisterImagesUS3 self, itkImageUS3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMovingImage(self, value)


    def SetRandomNumberSeed(self, value: 'unsigned int') -> "void":
        """SetRandomNumberSeed(tubeRegisterImagesUS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRandomNumberSeed(self, value)


    def GetRandomNumberSeed(self) -> "unsigned int":
        """GetRandomNumberSeed(tubeRegisterImagesUS3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRandomNumberSeed(self)


    def SetUseFixedImageMaskObject(self, value: 'bool') -> "void":
        """SetUseFixedImageMaskObject(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseFixedImageMaskObject(self, value)


    def GetUseFixedImageMaskObject(self) -> "bool":
        """GetUseFixedImageMaskObject(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseFixedImageMaskObject(self)


    def SetFixedImageMaskObject(self, value: 'itkSpatialObject3') -> "void":
        """SetFixedImageMaskObject(tubeRegisterImagesUS3 self, itkSpatialObject3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetFixedImageMaskObject(self, value)


    def GetFixedImageMaskObject(self) -> "itkSpatialObject3 const *":
        """GetFixedImageMaskObject(tubeRegisterImagesUS3 self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetFixedImageMaskObject(self)


    def SetUseMovingImageMaskObject(self, value: 'bool') -> "void":
        """SetUseMovingImageMaskObject(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseMovingImageMaskObject(self, value)


    def GetUseMovingImageMaskObject(self) -> "bool":
        """GetUseMovingImageMaskObject(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseMovingImageMaskObject(self)


    def SetMovingImageMaskObject(self, value: 'itkSpatialObject3') -> "void":
        """SetMovingImageMaskObject(tubeRegisterImagesUS3 self, itkSpatialObject3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMovingImageMaskObject(self, value)


    def GetMovingImageMaskObject(self) -> "itkSpatialObject3 const *":
        """GetMovingImageMaskObject(tubeRegisterImagesUS3 self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetMovingImageMaskObject(self)


    def SetUseRegionOfInterest(self, value: 'bool') -> "void":
        """SetUseRegionOfInterest(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseRegionOfInterest(self, value)


    def GetUseRegionOfInterest(self) -> "bool":
        """GetUseRegionOfInterest(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseRegionOfInterest(self)


    def SetRegionOfInterestPoint1(self, value: 'itkPointD3') -> "void":
        """SetRegionOfInterestPoint1(tubeRegisterImagesUS3 self, itkPointD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRegionOfInterestPoint1(self, value)


    def GetRegionOfInterestPoint1(self) -> "itkPointD3":
        """GetRegionOfInterestPoint1(tubeRegisterImagesUS3 self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRegionOfInterestPoint1(self)


    def SetRegionOfInterestPoint2(self, value: 'itkPointD3') -> "void":
        """SetRegionOfInterestPoint2(tubeRegisterImagesUS3 self, itkPointD3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRegionOfInterestPoint2(self, value)


    def GetRegionOfInterestPoint2(self) -> "itkPointD3":
        """GetRegionOfInterestPoint2(tubeRegisterImagesUS3 self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRegionOfInterestPoint2(self)


    def SetSampleFromOverlap(self, value: 'bool') -> "void":
        """SetSampleFromOverlap(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetSampleFromOverlap(self, value)


    def GetSampleFromOverlap(self) -> "bool":
        """GetSampleFromOverlap(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetSampleFromOverlap(self)


    def SetSampleIntensityPortion(self, value: 'double') -> "void":
        """SetSampleIntensityPortion(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetSampleIntensityPortion(self, value)


    def GetSampleIntensityPortion(self) -> "double":
        """GetSampleIntensityPortion(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetSampleIntensityPortion(self)


    def Initialize(self) -> "void":
        """Initialize(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_Initialize(self)


    def ResampleImage(self, *args) -> "itkImageUS3 const *":
        """
        ResampleImage(tubeRegisterImagesUS3 self, std::string interp, itkImageUS3 movingImage=None, itkAffineTransformD3 matrixTransform=None, unsigned short defaultPixelValue=0, double portionOfTransformToApply=1.) -> itkImageUS3
        ResampleImage(tubeRegisterImagesUS3 self, std::string interp, itkImageUS3 movingImage=None, itkAffineTransformD3 matrixTransform=None, unsigned short defaultPixelValue=0) -> itkImageUS3
        ResampleImage(tubeRegisterImagesUS3 self, std::string interp, itkImageUS3 movingImage=None, itkAffineTransformD3 matrixTransform=None) -> itkImageUS3
        ResampleImage(tubeRegisterImagesUS3 self, std::string interp, itkImageUS3 movingImage=None) -> itkImageUS3
        ResampleImage(tubeRegisterImagesUS3 self, std::string interp) -> itkImageUS3
        ResampleImage(tubeRegisterImagesUS3 self) -> itkImageUS3
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_ResampleImage(self, *args)


    def GetFinalMovingImage(self, interp: 'std::string') -> "itkImageUS3 const *":
        """GetFinalMovingImage(tubeRegisterImagesUS3 self, std::string interp) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetFinalMovingImage(self, interp)


    def LoadBaselineImage(self, value: 'std::string const &') -> "void":
        """LoadBaselineImage(tubeRegisterImagesUS3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadBaselineImage(self, value)


    def SetBaselineImage(self, value: 'itkImageUS3') -> "void":
        """SetBaselineImage(tubeRegisterImagesUS3 self, itkImageUS3 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineImage(self, value)


    def SetBaselineNumberOfFailedPixelsTolerance(self, value: 'unsigned int') -> "void":
        """SetBaselineNumberOfFailedPixelsTolerance(tubeRegisterImagesUS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineNumberOfFailedPixelsTolerance(self, value)


    def SetBaselineIntensityTolerance(self, value: 'unsigned short') -> "void":
        """SetBaselineIntensityTolerance(tubeRegisterImagesUS3 self, unsigned short value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineIntensityTolerance(self, value)


    def SetBaselineRadiusTolerance(self, value: 'unsigned int') -> "void":
        """SetBaselineRadiusTolerance(tubeRegisterImagesUS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineRadiusTolerance(self, value)


    def ComputeBaselineDifference(self) -> "void":
        """ComputeBaselineDifference(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_ComputeBaselineDifference(self)


    def GetBaselineDifferenceImage(self) -> "itkImageUS3 const *":
        """GetBaselineDifferenceImage(tubeRegisterImagesUS3 self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineDifferenceImage(self)


    def GetBaselineResampledMovingImage(self) -> "itkImageUS3 const *":
        """GetBaselineResampledMovingImage(tubeRegisterImagesUS3 self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineResampledMovingImage(self)


    def GetBaselineNumberOfFailedPixels(self) -> "unsigned int":
        """GetBaselineNumberOfFailedPixels(tubeRegisterImagesUS3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineNumberOfFailedPixels(self)


    def GetBaselineTestPassed(self) -> "bool":
        """GetBaselineTestPassed(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineTestPassed(self)


    def SetEnableLoadedRegistration(self, value: 'bool') -> "void":
        """SetEnableLoadedRegistration(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableLoadedRegistration(self, value)


    def GetEnableLoadedRegistration(self) -> "bool":
        """GetEnableLoadedRegistration(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableLoadedRegistration(self)


    def EnableLoadedRegistrationOn(self) -> "void":
        """EnableLoadedRegistrationOn(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableLoadedRegistrationOn(self)


    def EnableLoadedRegistrationOff(self) -> "void":
        """EnableLoadedRegistrationOff(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableLoadedRegistrationOff(self)


    def SetEnableInitialRegistration(self, value: 'bool') -> "void":
        """SetEnableInitialRegistration(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableInitialRegistration(self, value)


    def GetEnableInitialRegistration(self) -> "bool":
        """GetEnableInitialRegistration(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableInitialRegistration(self)


    def EnableInitialRegistrationOn(self) -> "void":
        """EnableInitialRegistrationOn(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableInitialRegistrationOn(self)


    def EnableInitialRegistrationOff(self) -> "void":
        """EnableInitialRegistrationOff(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableInitialRegistrationOff(self)


    def SetEnableRigidRegistration(self, value: 'bool') -> "void":
        """SetEnableRigidRegistration(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableRigidRegistration(self, value)


    def GetEnableRigidRegistration(self) -> "bool":
        """GetEnableRigidRegistration(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableRigidRegistration(self)


    def EnableRigidRegistrationOn(self) -> "void":
        """EnableRigidRegistrationOn(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableRigidRegistrationOn(self)


    def EnableRigidRegistrationOff(self) -> "void":
        """EnableRigidRegistrationOff(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableRigidRegistrationOff(self)


    def SetEnableAffineRegistration(self, value: 'bool') -> "void":
        """SetEnableAffineRegistration(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableAffineRegistration(self, value)


    def GetEnableAffineRegistration(self) -> "bool":
        """GetEnableAffineRegistration(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableAffineRegistration(self)


    def EnableAffineRegistrationOn(self) -> "void":
        """EnableAffineRegistrationOn(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableAffineRegistrationOn(self)


    def EnableAffineRegistrationOff(self) -> "void":
        """EnableAffineRegistrationOff(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableAffineRegistrationOff(self)


    def SetEnableBSplineRegistration(self, value: 'bool') -> "void":
        """SetEnableBSplineRegistration(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableBSplineRegistration(self, value)


    def GetEnableBSplineRegistration(self) -> "bool":
        """GetEnableBSplineRegistration(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableBSplineRegistration(self)


    def EnableBSplineRegistrationOn(self) -> "void":
        """EnableBSplineRegistrationOn(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableBSplineRegistrationOn(self)


    def EnableBSplineRegistrationOff(self) -> "void":
        """EnableBSplineRegistrationOff(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableBSplineRegistrationOff(self)


    def SetRegistration(self, reg: 'std::string const &') -> "void":
        """SetRegistration(tubeRegisterImagesUS3 self, std::string const & reg)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRegistration(self, reg)


    def SetInterpolation(self, interp: 'std::string const &') -> "void":
        """SetInterpolation(tubeRegisterImagesUS3 self, std::string const & interp)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetInterpolation(self, interp)


    def SetMetric(self, metric: 'std::string const &') -> "void":
        """SetMetric(tubeRegisterImagesUS3 self, std::string const & metric)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMetric(self, metric)


    def SetUseEvolutionaryOptimization(self, value: 'bool') -> "void":
        """SetUseEvolutionaryOptimization(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseEvolutionaryOptimization(self, value)


    def GetUseEvolutionaryOptimization(self) -> "bool":
        """GetUseEvolutionaryOptimization(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseEvolutionaryOptimization(self)


    def SetExpectedOffsetMagnitude(self, value: 'double') -> "void":
        """SetExpectedOffsetMagnitude(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedOffsetMagnitude(self, value)


    def GetExpectedOffsetMagnitude(self) -> "double":
        """GetExpectedOffsetMagnitude(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedOffsetMagnitude(self)


    def SetExpectedRotationMagnitude(self, value: 'double') -> "void":
        """SetExpectedRotationMagnitude(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedRotationMagnitude(self, value)


    def GetExpectedRotationMagnitude(self) -> "double":
        """GetExpectedRotationMagnitude(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedRotationMagnitude(self)


    def SetExpectedScaleMagnitude(self, value: 'double') -> "void":
        """SetExpectedScaleMagnitude(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedScaleMagnitude(self, value)


    def GetExpectedScaleMagnitude(self) -> "double":
        """GetExpectedScaleMagnitude(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedScaleMagnitude(self)


    def SetExpectedSkewMagnitude(self, value: 'double') -> "void":
        """SetExpectedSkewMagnitude(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedSkewMagnitude(self, value)


    def GetExpectedSkewMagnitude(self) -> "double":
        """GetExpectedSkewMagnitude(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedSkewMagnitude(self)


    def SetExpectedDeformationMagnitude(self, value: 'double') -> "void":
        """SetExpectedDeformationMagnitude(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedDeformationMagnitude(self, value)


    def GetExpectedDeformationMagnitude(self) -> "double":
        """GetExpectedDeformationMagnitude(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedDeformationMagnitude(self)


    def GetCurrentMatrixTransform(self) -> "itkAffineTransformD3 const *":
        """GetCurrentMatrixTransform(tubeRegisterImagesUS3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetCurrentMatrixTransform(self)


    def GetCurrentBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetCurrentBSplineTransform(tubeRegisterImagesUS3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetCurrentBSplineTransform(self)


    def GetCurrentMovingImage(self) -> "itkImageUS3 const *":
        """GetCurrentMovingImage(tubeRegisterImagesUS3 self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetCurrentMovingImage(self)


    def GetLoadedTransformResampledImage(self) -> "itkImageUS3 const *":
        """GetLoadedTransformResampledImage(tubeRegisterImagesUS3 self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetLoadedTransformResampledImage(self)


    def GetMatrixTransformResampledImage(self) -> "itkImageUS3 const *":
        """GetMatrixTransformResampledImage(tubeRegisterImagesUS3 self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetMatrixTransformResampledImage(self)


    def GetBSplineTransformResampledImage(self) -> "itkImageUS3 const *":
        """GetBSplineTransformResampledImage(tubeRegisterImagesUS3 self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineTransformResampledImage(self)


    def GetFinalMetricValue(self) -> "double":
        """GetFinalMetricValue(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetFinalMetricValue(self)


    def SetReportProgress(self, value: 'bool') -> "void":
        """SetReportProgress(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetReportProgress(self, value)


    def GetReportProgress(self) -> "bool":
        """GetReportProgress(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetReportProgress(self)


    def ReportProgressOn(self) -> "void":
        """ReportProgressOn(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_ReportProgressOn(self)


    def ReportProgressOff(self) -> "void":
        """ReportProgressOff(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_ReportProgressOff(self)


    def SetMinimizeMemory(self, value: 'bool') -> "void":
        """SetMinimizeMemory(tubeRegisterImagesUS3 self, bool value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMinimizeMemory(self, value)


    def GetMinimizeMemory(self) -> "bool":
        """GetMinimizeMemory(tubeRegisterImagesUS3 self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetMinimizeMemory(self)


    def MinimizeMemoryOn(self) -> "void":
        """MinimizeMemoryOn(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_MinimizeMemoryOn(self)


    def MinimizeMemoryOff(self) -> "void":
        """MinimizeMemoryOff(tubeRegisterImagesUS3 self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_MinimizeMemoryOff(self)


    def LoadTransform(self, transform: 'std::string const &', invertLoadedTransform: 'bool'=False) -> "void":
        """
        LoadTransform(tubeRegisterImagesUS3 self, std::string const & transform, bool invertLoadedTransform=False)
        LoadTransform(tubeRegisterImagesUS3 self, std::string const & transform)
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadTransform(self, transform, invertLoadedTransform)


    def SaveTransform(self, value: 'std::string const &') -> "void":
        """SaveTransform(tubeRegisterImagesUS3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SaveTransform(self, value)


    def SaveDisplacementField(self, value: 'std::string const &') -> "void":
        """SaveDisplacementField(tubeRegisterImagesUS3 self, std::string const & value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SaveDisplacementField(self, value)


    def SetLoadedMatrixTransform(self, tfm: 'itkAffineTransformD3', invert: 'bool'=False) -> "void":
        """
        SetLoadedMatrixTransform(tubeRegisterImagesUS3 self, itkAffineTransformD3 tfm, bool invert=False)
        SetLoadedMatrixTransform(tubeRegisterImagesUS3 self, itkAffineTransformD3 tfm)
        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetLoadedMatrixTransform(self, tfm, invert)


    def GetLoadedMatrixTransform(self) -> "itkAffineTransformD3 const *":
        """GetLoadedMatrixTransform(tubeRegisterImagesUS3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetLoadedMatrixTransform(self)


    def SetLoadedBSplineTransform(self, value: 'itkBSplineTransformD33') -> "void":
        """SetLoadedBSplineTransform(tubeRegisterImagesUS3 self, itkBSplineTransformD33 value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetLoadedBSplineTransform(self, value)


    def GetLoadedBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetLoadedBSplineTransform(tubeRegisterImagesUS3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetLoadedBSplineTransform(self)


    def SetInitialMethodEnum(self, initialMethod: 'std::string const &') -> "void":
        """SetInitialMethodEnum(tubeRegisterImagesUS3 self, std::string const & initialMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetInitialMethodEnum(self, initialMethod)


    def GetInitialMethodEnum(self) -> "std::string const":
        """GetInitialMethodEnum(tubeRegisterImagesUS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetInitialMethodEnum(self)


    def SetFixedLandmarks(self, value: 'vectorvectorF') -> "void":
        """SetFixedLandmarks(tubeRegisterImagesUS3 self, vectorvectorF value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetFixedLandmarks(self, value)


    def SetMovingLandmarks(self, value: 'vectorvectorF') -> "void":
        """SetMovingLandmarks(tubeRegisterImagesUS3 self, vectorvectorF value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMovingLandmarks(self, value)


    def SetRigidSamplingRatio(self, value: 'double') -> "void":
        """SetRigidSamplingRatio(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidSamplingRatio(self, value)


    def GetRigidSamplingRatio(self) -> "double":
        """GetRigidSamplingRatio(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidSamplingRatio(self)


    def SetRigidTargetError(self, value: 'double') -> "void":
        """SetRigidTargetError(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidTargetError(self, value)


    def GetRigidTargetError(self) -> "double":
        """GetRigidTargetError(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidTargetError(self)


    def SetRigidMaxIterations(self, value: 'unsigned int') -> "void":
        """SetRigidMaxIterations(tubeRegisterImagesUS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidMaxIterations(self, value)


    def GetRigidMaxIterations(self) -> "unsigned int":
        """GetRigidMaxIterations(tubeRegisterImagesUS3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidMaxIterations(self)


    def SetRigidMetricMethodEnum(self, rigidMetricMethod: 'std::string const &') -> "void":
        """SetRigidMetricMethodEnum(tubeRegisterImagesUS3 self, std::string const & rigidMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidMetricMethodEnum(self, rigidMetricMethod)


    def GetRigidMetricMethodEnum(self) -> "std::string const":
        """GetRigidMetricMethodEnum(tubeRegisterImagesUS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidMetricMethodEnum(self)


    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod: 'std::string const &') -> "void":
        """SetRigidInterpolationMethodEnum(tubeRegisterImagesUS3 self, std::string const & rigidInterpolationMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)


    def GetRigidInterpolationMethodEnum(self) -> "std::string const":
        """GetRigidInterpolationMethodEnum(tubeRegisterImagesUS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidInterpolationMethodEnum(self)


    def GetRigidTransform(self) -> "itkMatrixOffsetTransformBaseD33 const *":
        """GetRigidTransform(tubeRegisterImagesUS3 self) -> itkMatrixOffsetTransformBaseD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidTransform(self)


    def GetRigidMetricValue(self) -> "double":
        """GetRigidMetricValue(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidMetricValue(self)


    def SetAffineSamplingRatio(self, value: 'double') -> "void":
        """SetAffineSamplingRatio(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineSamplingRatio(self, value)


    def GetAffineSamplingRatio(self) -> "double":
        """GetAffineSamplingRatio(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineSamplingRatio(self)


    def SetAffineTargetError(self, value: 'double') -> "void":
        """SetAffineTargetError(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineTargetError(self, value)


    def GetAffineTargetError(self) -> "double":
        """GetAffineTargetError(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineTargetError(self)


    def SetAffineMaxIterations(self, value: 'unsigned int') -> "void":
        """SetAffineMaxIterations(tubeRegisterImagesUS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineMaxIterations(self, value)


    def GetAffineMaxIterations(self) -> "unsigned int":
        """GetAffineMaxIterations(tubeRegisterImagesUS3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineMaxIterations(self)


    def SetAffineMetricMethodEnum(self, rigidMetricMethod: 'std::string const &') -> "void":
        """SetAffineMetricMethodEnum(tubeRegisterImagesUS3 self, std::string const & rigidMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineMetricMethodEnum(self, rigidMetricMethod)


    def GetAffineMetricMethodEnum(self) -> "std::string const":
        """GetAffineMetricMethodEnum(tubeRegisterImagesUS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineMetricMethodEnum(self)


    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod: 'std::string const &') -> "void":
        """SetAffineInterpolationMethodEnum(tubeRegisterImagesUS3 self, std::string const & rigidInterpolationMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)


    def GetAffineInterpolationMethodEnum(self) -> "std::string const":
        """GetAffineInterpolationMethodEnum(tubeRegisterImagesUS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineInterpolationMethodEnum(self)


    def GetAffineTransform(self) -> "itkAffineTransformD3 const *":
        """GetAffineTransform(tubeRegisterImagesUS3 self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineTransform(self)


    def GetAffineMetricValue(self) -> "double":
        """GetAffineMetricValue(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineMetricValue(self)


    def SetBSplineSamplingRatio(self, value: 'double') -> "void":
        """SetBSplineSamplingRatio(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineSamplingRatio(self, value)


    def GetBSplineSamplingRatio(self) -> "double":
        """GetBSplineSamplingRatio(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineSamplingRatio(self)


    def SetBSplineTargetError(self, value: 'double') -> "void":
        """SetBSplineTargetError(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineTargetError(self, value)


    def GetBSplineTargetError(self) -> "double":
        """GetBSplineTargetError(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineTargetError(self)


    def SetBSplineMaxIterations(self, value: 'unsigned int') -> "void":
        """SetBSplineMaxIterations(tubeRegisterImagesUS3 self, unsigned int value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineMaxIterations(self, value)


    def GetBSplineMaxIterations(self) -> "unsigned int":
        """GetBSplineMaxIterations(tubeRegisterImagesUS3 self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineMaxIterations(self)


    def SetBSplineControlPointPixelSpacing(self, value: 'double') -> "void":
        """SetBSplineControlPointPixelSpacing(tubeRegisterImagesUS3 self, double value)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineControlPointPixelSpacing(self, value)


    def GetBSplineControlPointPixelSpacing(self) -> "double":
        """GetBSplineControlPointPixelSpacing(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineControlPointPixelSpacing(self)


    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod: 'std::string const &') -> "void":
        """SetBSplineMetricMethodEnum(tubeRegisterImagesUS3 self, std::string const & bSplineMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)


    def GetBSplineMetricMethodEnum(self) -> "std::string const":
        """GetBSplineMetricMethodEnum(tubeRegisterImagesUS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineMetricMethodEnum(self)


    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod: 'std::string const &') -> "void":
        """SetBSplineInterpolationMethodEnum(tubeRegisterImagesUS3 self, std::string const & bSplineMetricMethod)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)


    def GetBSplineInterpolationMethodEnum(self) -> "std::string const":
        """GetBSplineInterpolationMethodEnum(tubeRegisterImagesUS3 self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineInterpolationMethodEnum(self)


    def GetBSplineTransform(self) -> "itkBSplineTransformD33 const *":
        """GetBSplineTransform(tubeRegisterImagesUS3 self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineTransform(self)


    def GetBSplineMetricValue(self) -> "double":
        """GetBSplineMetricValue(tubeRegisterImagesUS3 self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineMetricValue(self)

    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesUS3

    def cast(obj: 'itkLightObject') -> "tubeRegisterImagesUS3 *":
        """cast(itkLightObject obj) -> tubeRegisterImagesUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesUS3

        Create a new object of the class tubeRegisterImagesUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeRegisterImagesUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeRegisterImagesUS3.Clone = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_Clone, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.LoadFixedImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadFixedImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetFixedImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetFixedImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.LoadMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadMovingImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMovingImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetRandomNumberSeed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRandomNumberSeed, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetRandomNumberSeed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRandomNumberSeed, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetUseFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseFixedImageMaskObject, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetUseFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseFixedImageMaskObject, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetFixedImageMaskObject, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetFixedImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetFixedImageMaskObject, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetUseMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseMovingImageMaskObject, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetUseMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseMovingImageMaskObject, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMovingImageMaskObject, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetMovingImageMaskObject = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetMovingImageMaskObject, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetUseRegionOfInterest = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseRegionOfInterest, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetUseRegionOfInterest = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseRegionOfInterest, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetRegionOfInterestPoint1 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRegionOfInterestPoint1, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetRegionOfInterestPoint1 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRegionOfInterestPoint1, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetRegionOfInterestPoint2 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRegionOfInterestPoint2, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetRegionOfInterestPoint2 = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRegionOfInterestPoint2, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetSampleFromOverlap = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetSampleFromOverlap, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetSampleFromOverlap = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetSampleFromOverlap, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetSampleIntensityPortion = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetSampleIntensityPortion, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetSampleIntensityPortion = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetSampleIntensityPortion, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.Initialize = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_Initialize, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.ResampleImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_ResampleImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetFinalMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetFinalMovingImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.LoadBaselineImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadBaselineImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetBaselineImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetBaselineNumberOfFailedPixelsTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineNumberOfFailedPixelsTolerance, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetBaselineIntensityTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineIntensityTolerance, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetBaselineRadiusTolerance = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineRadiusTolerance, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.ComputeBaselineDifference = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_ComputeBaselineDifference, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBaselineDifferenceImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineDifferenceImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBaselineResampledMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineResampledMovingImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBaselineNumberOfFailedPixels = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineNumberOfFailedPixels, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBaselineTestPassed = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineTestPassed, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetEnableLoadedRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableLoadedRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetEnableLoadedRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableLoadedRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.EnableLoadedRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableLoadedRegistrationOn, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.EnableLoadedRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableLoadedRegistrationOff, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetEnableInitialRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableInitialRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetEnableInitialRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableInitialRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.EnableInitialRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableInitialRegistrationOn, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.EnableInitialRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableInitialRegistrationOff, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetEnableRigidRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableRigidRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetEnableRigidRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableRigidRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.EnableRigidRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableRigidRegistrationOn, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.EnableRigidRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableRigidRegistrationOff, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetEnableAffineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableAffineRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetEnableAffineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableAffineRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.EnableAffineRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableAffineRegistrationOn, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.EnableAffineRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableAffineRegistrationOff, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetEnableBSplineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableBSplineRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetEnableBSplineRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableBSplineRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.EnableBSplineRegistrationOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableBSplineRegistrationOn, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.EnableBSplineRegistrationOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableBSplineRegistrationOff, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetRegistration = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRegistration, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetInterpolation = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetInterpolation, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetMetric = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMetric, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetUseEvolutionaryOptimization = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseEvolutionaryOptimization, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetUseEvolutionaryOptimization = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseEvolutionaryOptimization, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetExpectedOffsetMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedOffsetMagnitude, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetExpectedOffsetMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedOffsetMagnitude, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetExpectedRotationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedRotationMagnitude, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetExpectedRotationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedRotationMagnitude, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetExpectedScaleMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedScaleMagnitude, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetExpectedScaleMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedScaleMagnitude, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetExpectedSkewMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedSkewMagnitude, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetExpectedSkewMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedSkewMagnitude, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetExpectedDeformationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedDeformationMagnitude, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetExpectedDeformationMagnitude = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedDeformationMagnitude, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetCurrentMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetCurrentMatrixTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetCurrentBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetCurrentBSplineTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetCurrentMovingImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetCurrentMovingImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetLoadedTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetLoadedTransformResampledImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetMatrixTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetMatrixTransformResampledImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBSplineTransformResampledImage = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineTransformResampledImage, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetFinalMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetFinalMetricValue, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetReportProgress = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetReportProgress, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetReportProgress = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetReportProgress, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.ReportProgressOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_ReportProgressOn, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.ReportProgressOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_ReportProgressOff, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetMinimizeMemory = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMinimizeMemory, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetMinimizeMemory = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetMinimizeMemory, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.MinimizeMemoryOn = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_MinimizeMemoryOn, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.MinimizeMemoryOff = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_MinimizeMemoryOff, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.LoadTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SaveTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SaveTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SaveDisplacementField = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SaveDisplacementField, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetLoadedMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetLoadedMatrixTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetLoadedMatrixTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetLoadedMatrixTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetLoadedBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetLoadedBSplineTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetLoadedBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetLoadedBSplineTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetInitialMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetInitialMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetInitialMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetInitialMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetFixedLandmarks = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetFixedLandmarks, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetMovingLandmarks = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMovingLandmarks, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetRigidSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidSamplingRatio, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetRigidSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidSamplingRatio, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetRigidTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidTargetError, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetRigidTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidTargetError, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetRigidMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidMaxIterations, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetRigidMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidMaxIterations, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetRigidMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidMetricMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetRigidMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidMetricMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetRigidInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidInterpolationMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetRigidInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidInterpolationMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetRigidTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetRigidMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidMetricValue, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetAffineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineSamplingRatio, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetAffineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineSamplingRatio, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetAffineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineTargetError, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetAffineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineTargetError, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetAffineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineMaxIterations, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetAffineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineMaxIterations, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetAffineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineMetricMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetAffineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineMetricMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetAffineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineInterpolationMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetAffineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineInterpolationMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetAffineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetAffineMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineMetricValue, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetBSplineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineSamplingRatio, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBSplineSamplingRatio = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineSamplingRatio, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetBSplineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineTargetError, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBSplineTargetError = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineTargetError, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetBSplineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineMaxIterations, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBSplineMaxIterations = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineMaxIterations, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetBSplineControlPointPixelSpacing = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineControlPointPixelSpacing, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBSplineControlPointPixelSpacing = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineControlPointPixelSpacing, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetBSplineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineMetricMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBSplineMetricMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineMetricMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.SetBSplineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineInterpolationMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBSplineInterpolationMethodEnum = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineInterpolationMethodEnum, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBSplineTransform = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineTransform, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3.GetBSplineMetricValue = new_instancemethod(_tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineMetricValue, None, tubeRegisterImagesUS3)
tubeRegisterImagesUS3_swigregister = _tubeRegisterImagesPython.tubeRegisterImagesUS3_swigregister
tubeRegisterImagesUS3_swigregister(tubeRegisterImagesUS3)

def tubeRegisterImagesUS3___New_orig__() -> "tubeRegisterImagesUS3_Pointer":
    """tubeRegisterImagesUS3___New_orig__() -> tubeRegisterImagesUS3_Pointer"""
    return _tubeRegisterImagesPython.tubeRegisterImagesUS3___New_orig__()

def tubeRegisterImagesUS3_cast(obj: 'itkLightObject') -> "tubeRegisterImagesUS3 *":
    """tubeRegisterImagesUS3_cast(itkLightObject obj) -> tubeRegisterImagesUS3"""
    return _tubeRegisterImagesPython.tubeRegisterImagesUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def register_images(*args, **kwargs):
    """Procedural interface for RegisterImages"""
    import itk
    instance = itk.RegisterImages.New(*args, **kwargs)
    return instance.__internal_call__()

def register_images_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.RegisterImages, itkTemplate.itkTemplate):
        filter_object = itk.RegisterImages.values()[0]
    else:
        filter_object = itk.RegisterImages

    register_images.__doc__ = filter_object.__doc__
    register_images.__doc__ += "\n Args are Input(s) to the filter.\n"
    register_images.__doc__ += "Available Keyword Arguments:\n"
    register_images.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



