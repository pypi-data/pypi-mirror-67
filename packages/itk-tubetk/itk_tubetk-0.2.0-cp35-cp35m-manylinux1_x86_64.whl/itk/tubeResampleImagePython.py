# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _tubeResampleImagePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_tubeResampleImagePython', [dirname(__file__)])
        except ImportError:
            import _tubeResampleImagePython
            return _tubeResampleImagePython
        if fp is not None:
            try:
                _mod = imp.load_module('_tubeResampleImagePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _tubeResampleImagePython = swig_import_helper()
    del swig_import_helper
else:
    import _tubeResampleImagePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrixPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import ITKCommonBasePython
import itkOffsetPython
import itkSizePython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkOptimizerParametersPython
import itkArrayPython
import itkDiffusionTensor3DPython
import itkArray2DPython

def tubeResampleImageD3_New():
  return tubeResampleImageD3.New()


def tubeResampleImageD2_New():
  return tubeResampleImageD2.New()


def tubeResampleImageF3_New():
  return tubeResampleImageF3.New()


def tubeResampleImageF2_New():
  return tubeResampleImageF2.New()


def tubeResampleImageUS3_New():
  return tubeResampleImageUS3.New()


def tubeResampleImageUS2_New():
  return tubeResampleImageUS2.New()


def tubeResampleImageUC3_New():
  return tubeResampleImageUC3.New()


def tubeResampleImageUC2_New():
  return tubeResampleImageUC2.New()


def tubeResampleImageSS3_New():
  return tubeResampleImageSS3.New()


def tubeResampleImageSS2_New():
  return tubeResampleImageSS2.New()

class tubeResampleImageD2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeResampleImageD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeResampleImageD2_Pointer":
        """__New_orig__() -> tubeResampleImageD2_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeResampleImageD2_Pointer":
        """Clone(tubeResampleImageD2 self) -> tubeResampleImageD2_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageD2_Clone(self)


    def SetInput(self, value: 'itkImageD2') -> "void":
        """SetInput(tubeResampleImageD2 self, itkImageD2 value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetInput(self, value)


    def GetInput(self) -> "itkImageD2 *":
        """GetInput(tubeResampleImageD2 self) -> itkImageD2"""
        return _tubeResampleImagePython.tubeResampleImageD2_GetInput(self)


    def SetMatchImage(self, value: 'itkImageD2') -> "void":
        """SetMatchImage(tubeResampleImageD2 self, itkImageD2 value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetMatchImage(self, value)


    def GetMatchImage(self) -> "itkImageD2 *":
        """GetMatchImage(tubeResampleImageD2 self) -> itkImageD2"""
        return _tubeResampleImagePython.tubeResampleImageD2_GetMatchImage(self)


    def SetMakeIsotropic(self, value: 'bool') -> "void":
        """SetMakeIsotropic(tubeResampleImageD2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetMakeIsotropic(self, value)


    def GetMakeIsotropic(self) -> "bool":
        """GetMakeIsotropic(tubeResampleImageD2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageD2_GetMakeIsotropic(self)


    def SetMakeHighResIso(self, value: 'bool') -> "void":
        """SetMakeHighResIso(tubeResampleImageD2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetMakeHighResIso(self, value)


    def GetMakeHighResIso(self) -> "bool":
        """GetMakeHighResIso(tubeResampleImageD2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageD2_GetMakeHighResIso(self)


    def SetInterpolator(self, value: 'std::string') -> "void":
        """SetInterpolator(tubeResampleImageD2 self, std::string value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetInterpolator(self, value)


    def GetInterpolator(self) -> "std::string":
        """GetInterpolator(tubeResampleImageD2 self) -> std::string"""
        return _tubeResampleImagePython.tubeResampleImageD2_GetInterpolator(self)


    def SetLoadTransform(self, value: 'bool') -> "void":
        """SetLoadTransform(tubeResampleImageD2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetLoadTransform(self, value)


    def GetLoadTransform(self) -> "bool":
        """GetLoadTransform(tubeResampleImageD2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageD2_GetLoadTransform(self)


    def GetOutput(self) -> "itkImageD2 *":
        """GetOutput(tubeResampleImageD2 self) -> itkImageD2"""
        return _tubeResampleImagePython.tubeResampleImageD2_GetOutput(self)


    def SetTransform(self, value: 'itkTransformD22') -> "void":
        """SetTransform(tubeResampleImageD2 self, itkTransformD22 value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetTransform(self, value)


    def SetSpacing(self, value: 'vectorD') -> "void":
        """SetSpacing(tubeResampleImageD2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetSpacing(self, value)


    def SetOrigin(self, value: 'vectorD') -> "void":
        """SetOrigin(tubeResampleImageD2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetOrigin(self, value)


    def SetIndex(self, value: 'vectorI') -> "void":
        """SetIndex(tubeResampleImageD2 self, vectorI value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetIndex(self, value)


    def SetResampleFactor(self, value: 'vectorD') -> "void":
        """SetResampleFactor(tubeResampleImageD2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageD2_SetResampleFactor(self, value)

    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageD2

    def cast(obj: 'itkLightObject') -> "tubeResampleImageD2 *":
        """cast(itkLightObject obj) -> tubeResampleImageD2"""
        return _tubeResampleImagePython.tubeResampleImageD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageD2

        Create a new object of the class tubeResampleImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeResampleImageD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeResampleImageD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeResampleImageD2.Clone = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_Clone, None, tubeResampleImageD2)
tubeResampleImageD2.SetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetInput, None, tubeResampleImageD2)
tubeResampleImageD2.GetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_GetInput, None, tubeResampleImageD2)
tubeResampleImageD2.SetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetMatchImage, None, tubeResampleImageD2)
tubeResampleImageD2.GetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_GetMatchImage, None, tubeResampleImageD2)
tubeResampleImageD2.SetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetMakeIsotropic, None, tubeResampleImageD2)
tubeResampleImageD2.GetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_GetMakeIsotropic, None, tubeResampleImageD2)
tubeResampleImageD2.SetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetMakeHighResIso, None, tubeResampleImageD2)
tubeResampleImageD2.GetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_GetMakeHighResIso, None, tubeResampleImageD2)
tubeResampleImageD2.SetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetInterpolator, None, tubeResampleImageD2)
tubeResampleImageD2.GetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_GetInterpolator, None, tubeResampleImageD2)
tubeResampleImageD2.SetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetLoadTransform, None, tubeResampleImageD2)
tubeResampleImageD2.GetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_GetLoadTransform, None, tubeResampleImageD2)
tubeResampleImageD2.GetOutput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_GetOutput, None, tubeResampleImageD2)
tubeResampleImageD2.SetTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetTransform, None, tubeResampleImageD2)
tubeResampleImageD2.SetSpacing = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetSpacing, None, tubeResampleImageD2)
tubeResampleImageD2.SetOrigin = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetOrigin, None, tubeResampleImageD2)
tubeResampleImageD2.SetIndex = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetIndex, None, tubeResampleImageD2)
tubeResampleImageD2.SetResampleFactor = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD2_SetResampleFactor, None, tubeResampleImageD2)
tubeResampleImageD2_swigregister = _tubeResampleImagePython.tubeResampleImageD2_swigregister
tubeResampleImageD2_swigregister(tubeResampleImageD2)

def tubeResampleImageD2___New_orig__() -> "tubeResampleImageD2_Pointer":
    """tubeResampleImageD2___New_orig__() -> tubeResampleImageD2_Pointer"""
    return _tubeResampleImagePython.tubeResampleImageD2___New_orig__()

def tubeResampleImageD2_cast(obj: 'itkLightObject') -> "tubeResampleImageD2 *":
    """tubeResampleImageD2_cast(itkLightObject obj) -> tubeResampleImageD2"""
    return _tubeResampleImagePython.tubeResampleImageD2_cast(obj)

class tubeResampleImageD3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeResampleImageD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeResampleImageD3_Pointer":
        """__New_orig__() -> tubeResampleImageD3_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeResampleImageD3_Pointer":
        """Clone(tubeResampleImageD3 self) -> tubeResampleImageD3_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageD3_Clone(self)


    def SetInput(self, value: 'itkImageD3') -> "void":
        """SetInput(tubeResampleImageD3 self, itkImageD3 value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetInput(self, value)


    def GetInput(self) -> "itkImageD3 *":
        """GetInput(tubeResampleImageD3 self) -> itkImageD3"""
        return _tubeResampleImagePython.tubeResampleImageD3_GetInput(self)


    def SetMatchImage(self, value: 'itkImageD3') -> "void":
        """SetMatchImage(tubeResampleImageD3 self, itkImageD3 value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetMatchImage(self, value)


    def GetMatchImage(self) -> "itkImageD3 *":
        """GetMatchImage(tubeResampleImageD3 self) -> itkImageD3"""
        return _tubeResampleImagePython.tubeResampleImageD3_GetMatchImage(self)


    def SetMakeIsotropic(self, value: 'bool') -> "void":
        """SetMakeIsotropic(tubeResampleImageD3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetMakeIsotropic(self, value)


    def GetMakeIsotropic(self) -> "bool":
        """GetMakeIsotropic(tubeResampleImageD3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageD3_GetMakeIsotropic(self)


    def SetMakeHighResIso(self, value: 'bool') -> "void":
        """SetMakeHighResIso(tubeResampleImageD3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetMakeHighResIso(self, value)


    def GetMakeHighResIso(self) -> "bool":
        """GetMakeHighResIso(tubeResampleImageD3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageD3_GetMakeHighResIso(self)


    def SetInterpolator(self, value: 'std::string') -> "void":
        """SetInterpolator(tubeResampleImageD3 self, std::string value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetInterpolator(self, value)


    def GetInterpolator(self) -> "std::string":
        """GetInterpolator(tubeResampleImageD3 self) -> std::string"""
        return _tubeResampleImagePython.tubeResampleImageD3_GetInterpolator(self)


    def SetLoadTransform(self, value: 'bool') -> "void":
        """SetLoadTransform(tubeResampleImageD3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetLoadTransform(self, value)


    def GetLoadTransform(self) -> "bool":
        """GetLoadTransform(tubeResampleImageD3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageD3_GetLoadTransform(self)


    def GetOutput(self) -> "itkImageD3 *":
        """GetOutput(tubeResampleImageD3 self) -> itkImageD3"""
        return _tubeResampleImagePython.tubeResampleImageD3_GetOutput(self)


    def SetTransform(self, value: 'itkTransformD33') -> "void":
        """SetTransform(tubeResampleImageD3 self, itkTransformD33 value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetTransform(self, value)


    def SetSpacing(self, value: 'vectorD') -> "void":
        """SetSpacing(tubeResampleImageD3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetSpacing(self, value)


    def SetOrigin(self, value: 'vectorD') -> "void":
        """SetOrigin(tubeResampleImageD3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetOrigin(self, value)


    def SetIndex(self, value: 'vectorI') -> "void":
        """SetIndex(tubeResampleImageD3 self, vectorI value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetIndex(self, value)


    def SetResampleFactor(self, value: 'vectorD') -> "void":
        """SetResampleFactor(tubeResampleImageD3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageD3_SetResampleFactor(self, value)

    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageD3

    def cast(obj: 'itkLightObject') -> "tubeResampleImageD3 *":
        """cast(itkLightObject obj) -> tubeResampleImageD3"""
        return _tubeResampleImagePython.tubeResampleImageD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageD3

        Create a new object of the class tubeResampleImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeResampleImageD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeResampleImageD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeResampleImageD3.Clone = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_Clone, None, tubeResampleImageD3)
tubeResampleImageD3.SetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetInput, None, tubeResampleImageD3)
tubeResampleImageD3.GetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_GetInput, None, tubeResampleImageD3)
tubeResampleImageD3.SetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetMatchImage, None, tubeResampleImageD3)
tubeResampleImageD3.GetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_GetMatchImage, None, tubeResampleImageD3)
tubeResampleImageD3.SetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetMakeIsotropic, None, tubeResampleImageD3)
tubeResampleImageD3.GetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_GetMakeIsotropic, None, tubeResampleImageD3)
tubeResampleImageD3.SetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetMakeHighResIso, None, tubeResampleImageD3)
tubeResampleImageD3.GetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_GetMakeHighResIso, None, tubeResampleImageD3)
tubeResampleImageD3.SetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetInterpolator, None, tubeResampleImageD3)
tubeResampleImageD3.GetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_GetInterpolator, None, tubeResampleImageD3)
tubeResampleImageD3.SetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetLoadTransform, None, tubeResampleImageD3)
tubeResampleImageD3.GetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_GetLoadTransform, None, tubeResampleImageD3)
tubeResampleImageD3.GetOutput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_GetOutput, None, tubeResampleImageD3)
tubeResampleImageD3.SetTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetTransform, None, tubeResampleImageD3)
tubeResampleImageD3.SetSpacing = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetSpacing, None, tubeResampleImageD3)
tubeResampleImageD3.SetOrigin = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetOrigin, None, tubeResampleImageD3)
tubeResampleImageD3.SetIndex = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetIndex, None, tubeResampleImageD3)
tubeResampleImageD3.SetResampleFactor = new_instancemethod(_tubeResampleImagePython.tubeResampleImageD3_SetResampleFactor, None, tubeResampleImageD3)
tubeResampleImageD3_swigregister = _tubeResampleImagePython.tubeResampleImageD3_swigregister
tubeResampleImageD3_swigregister(tubeResampleImageD3)

def tubeResampleImageD3___New_orig__() -> "tubeResampleImageD3_Pointer":
    """tubeResampleImageD3___New_orig__() -> tubeResampleImageD3_Pointer"""
    return _tubeResampleImagePython.tubeResampleImageD3___New_orig__()

def tubeResampleImageD3_cast(obj: 'itkLightObject') -> "tubeResampleImageD3 *":
    """tubeResampleImageD3_cast(itkLightObject obj) -> tubeResampleImageD3"""
    return _tubeResampleImagePython.tubeResampleImageD3_cast(obj)

class tubeResampleImageF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeResampleImageF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeResampleImageF2_Pointer":
        """__New_orig__() -> tubeResampleImageF2_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeResampleImageF2_Pointer":
        """Clone(tubeResampleImageF2 self) -> tubeResampleImageF2_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageF2_Clone(self)


    def SetInput(self, value: 'itkImageF2') -> "void":
        """SetInput(tubeResampleImageF2 self, itkImageF2 value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetInput(self, value)


    def GetInput(self) -> "itkImageF2 *":
        """GetInput(tubeResampleImageF2 self) -> itkImageF2"""
        return _tubeResampleImagePython.tubeResampleImageF2_GetInput(self)


    def SetMatchImage(self, value: 'itkImageF2') -> "void":
        """SetMatchImage(tubeResampleImageF2 self, itkImageF2 value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetMatchImage(self, value)


    def GetMatchImage(self) -> "itkImageF2 *":
        """GetMatchImage(tubeResampleImageF2 self) -> itkImageF2"""
        return _tubeResampleImagePython.tubeResampleImageF2_GetMatchImage(self)


    def SetMakeIsotropic(self, value: 'bool') -> "void":
        """SetMakeIsotropic(tubeResampleImageF2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetMakeIsotropic(self, value)


    def GetMakeIsotropic(self) -> "bool":
        """GetMakeIsotropic(tubeResampleImageF2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageF2_GetMakeIsotropic(self)


    def SetMakeHighResIso(self, value: 'bool') -> "void":
        """SetMakeHighResIso(tubeResampleImageF2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetMakeHighResIso(self, value)


    def GetMakeHighResIso(self) -> "bool":
        """GetMakeHighResIso(tubeResampleImageF2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageF2_GetMakeHighResIso(self)


    def SetInterpolator(self, value: 'std::string') -> "void":
        """SetInterpolator(tubeResampleImageF2 self, std::string value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetInterpolator(self, value)


    def GetInterpolator(self) -> "std::string":
        """GetInterpolator(tubeResampleImageF2 self) -> std::string"""
        return _tubeResampleImagePython.tubeResampleImageF2_GetInterpolator(self)


    def SetLoadTransform(self, value: 'bool') -> "void":
        """SetLoadTransform(tubeResampleImageF2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetLoadTransform(self, value)


    def GetLoadTransform(self) -> "bool":
        """GetLoadTransform(tubeResampleImageF2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageF2_GetLoadTransform(self)


    def GetOutput(self) -> "itkImageF2 *":
        """GetOutput(tubeResampleImageF2 self) -> itkImageF2"""
        return _tubeResampleImagePython.tubeResampleImageF2_GetOutput(self)


    def SetTransform(self, value: 'itkTransformD22') -> "void":
        """SetTransform(tubeResampleImageF2 self, itkTransformD22 value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetTransform(self, value)


    def SetSpacing(self, value: 'vectorD') -> "void":
        """SetSpacing(tubeResampleImageF2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetSpacing(self, value)


    def SetOrigin(self, value: 'vectorD') -> "void":
        """SetOrigin(tubeResampleImageF2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetOrigin(self, value)


    def SetIndex(self, value: 'vectorI') -> "void":
        """SetIndex(tubeResampleImageF2 self, vectorI value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetIndex(self, value)


    def SetResampleFactor(self, value: 'vectorD') -> "void":
        """SetResampleFactor(tubeResampleImageF2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageF2_SetResampleFactor(self, value)

    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageF2

    def cast(obj: 'itkLightObject') -> "tubeResampleImageF2 *":
        """cast(itkLightObject obj) -> tubeResampleImageF2"""
        return _tubeResampleImagePython.tubeResampleImageF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageF2

        Create a new object of the class tubeResampleImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeResampleImageF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeResampleImageF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeResampleImageF2.Clone = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_Clone, None, tubeResampleImageF2)
tubeResampleImageF2.SetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetInput, None, tubeResampleImageF2)
tubeResampleImageF2.GetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_GetInput, None, tubeResampleImageF2)
tubeResampleImageF2.SetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetMatchImage, None, tubeResampleImageF2)
tubeResampleImageF2.GetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_GetMatchImage, None, tubeResampleImageF2)
tubeResampleImageF2.SetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetMakeIsotropic, None, tubeResampleImageF2)
tubeResampleImageF2.GetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_GetMakeIsotropic, None, tubeResampleImageF2)
tubeResampleImageF2.SetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetMakeHighResIso, None, tubeResampleImageF2)
tubeResampleImageF2.GetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_GetMakeHighResIso, None, tubeResampleImageF2)
tubeResampleImageF2.SetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetInterpolator, None, tubeResampleImageF2)
tubeResampleImageF2.GetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_GetInterpolator, None, tubeResampleImageF2)
tubeResampleImageF2.SetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetLoadTransform, None, tubeResampleImageF2)
tubeResampleImageF2.GetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_GetLoadTransform, None, tubeResampleImageF2)
tubeResampleImageF2.GetOutput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_GetOutput, None, tubeResampleImageF2)
tubeResampleImageF2.SetTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetTransform, None, tubeResampleImageF2)
tubeResampleImageF2.SetSpacing = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetSpacing, None, tubeResampleImageF2)
tubeResampleImageF2.SetOrigin = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetOrigin, None, tubeResampleImageF2)
tubeResampleImageF2.SetIndex = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetIndex, None, tubeResampleImageF2)
tubeResampleImageF2.SetResampleFactor = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF2_SetResampleFactor, None, tubeResampleImageF2)
tubeResampleImageF2_swigregister = _tubeResampleImagePython.tubeResampleImageF2_swigregister
tubeResampleImageF2_swigregister(tubeResampleImageF2)

def tubeResampleImageF2___New_orig__() -> "tubeResampleImageF2_Pointer":
    """tubeResampleImageF2___New_orig__() -> tubeResampleImageF2_Pointer"""
    return _tubeResampleImagePython.tubeResampleImageF2___New_orig__()

def tubeResampleImageF2_cast(obj: 'itkLightObject') -> "tubeResampleImageF2 *":
    """tubeResampleImageF2_cast(itkLightObject obj) -> tubeResampleImageF2"""
    return _tubeResampleImagePython.tubeResampleImageF2_cast(obj)

class tubeResampleImageF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeResampleImageF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeResampleImageF3_Pointer":
        """__New_orig__() -> tubeResampleImageF3_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeResampleImageF3_Pointer":
        """Clone(tubeResampleImageF3 self) -> tubeResampleImageF3_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageF3_Clone(self)


    def SetInput(self, value: 'itkImageF3') -> "void":
        """SetInput(tubeResampleImageF3 self, itkImageF3 value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetInput(self, value)


    def GetInput(self) -> "itkImageF3 *":
        """GetInput(tubeResampleImageF3 self) -> itkImageF3"""
        return _tubeResampleImagePython.tubeResampleImageF3_GetInput(self)


    def SetMatchImage(self, value: 'itkImageF3') -> "void":
        """SetMatchImage(tubeResampleImageF3 self, itkImageF3 value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetMatchImage(self, value)


    def GetMatchImage(self) -> "itkImageF3 *":
        """GetMatchImage(tubeResampleImageF3 self) -> itkImageF3"""
        return _tubeResampleImagePython.tubeResampleImageF3_GetMatchImage(self)


    def SetMakeIsotropic(self, value: 'bool') -> "void":
        """SetMakeIsotropic(tubeResampleImageF3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetMakeIsotropic(self, value)


    def GetMakeIsotropic(self) -> "bool":
        """GetMakeIsotropic(tubeResampleImageF3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageF3_GetMakeIsotropic(self)


    def SetMakeHighResIso(self, value: 'bool') -> "void":
        """SetMakeHighResIso(tubeResampleImageF3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetMakeHighResIso(self, value)


    def GetMakeHighResIso(self) -> "bool":
        """GetMakeHighResIso(tubeResampleImageF3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageF3_GetMakeHighResIso(self)


    def SetInterpolator(self, value: 'std::string') -> "void":
        """SetInterpolator(tubeResampleImageF3 self, std::string value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetInterpolator(self, value)


    def GetInterpolator(self) -> "std::string":
        """GetInterpolator(tubeResampleImageF3 self) -> std::string"""
        return _tubeResampleImagePython.tubeResampleImageF3_GetInterpolator(self)


    def SetLoadTransform(self, value: 'bool') -> "void":
        """SetLoadTransform(tubeResampleImageF3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetLoadTransform(self, value)


    def GetLoadTransform(self) -> "bool":
        """GetLoadTransform(tubeResampleImageF3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageF3_GetLoadTransform(self)


    def GetOutput(self) -> "itkImageF3 *":
        """GetOutput(tubeResampleImageF3 self) -> itkImageF3"""
        return _tubeResampleImagePython.tubeResampleImageF3_GetOutput(self)


    def SetTransform(self, value: 'itkTransformD33') -> "void":
        """SetTransform(tubeResampleImageF3 self, itkTransformD33 value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetTransform(self, value)


    def SetSpacing(self, value: 'vectorD') -> "void":
        """SetSpacing(tubeResampleImageF3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetSpacing(self, value)


    def SetOrigin(self, value: 'vectorD') -> "void":
        """SetOrigin(tubeResampleImageF3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetOrigin(self, value)


    def SetIndex(self, value: 'vectorI') -> "void":
        """SetIndex(tubeResampleImageF3 self, vectorI value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetIndex(self, value)


    def SetResampleFactor(self, value: 'vectorD') -> "void":
        """SetResampleFactor(tubeResampleImageF3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageF3_SetResampleFactor(self, value)

    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageF3

    def cast(obj: 'itkLightObject') -> "tubeResampleImageF3 *":
        """cast(itkLightObject obj) -> tubeResampleImageF3"""
        return _tubeResampleImagePython.tubeResampleImageF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageF3

        Create a new object of the class tubeResampleImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeResampleImageF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeResampleImageF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeResampleImageF3.Clone = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_Clone, None, tubeResampleImageF3)
tubeResampleImageF3.SetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetInput, None, tubeResampleImageF3)
tubeResampleImageF3.GetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_GetInput, None, tubeResampleImageF3)
tubeResampleImageF3.SetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetMatchImage, None, tubeResampleImageF3)
tubeResampleImageF3.GetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_GetMatchImage, None, tubeResampleImageF3)
tubeResampleImageF3.SetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetMakeIsotropic, None, tubeResampleImageF3)
tubeResampleImageF3.GetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_GetMakeIsotropic, None, tubeResampleImageF3)
tubeResampleImageF3.SetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetMakeHighResIso, None, tubeResampleImageF3)
tubeResampleImageF3.GetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_GetMakeHighResIso, None, tubeResampleImageF3)
tubeResampleImageF3.SetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetInterpolator, None, tubeResampleImageF3)
tubeResampleImageF3.GetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_GetInterpolator, None, tubeResampleImageF3)
tubeResampleImageF3.SetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetLoadTransform, None, tubeResampleImageF3)
tubeResampleImageF3.GetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_GetLoadTransform, None, tubeResampleImageF3)
tubeResampleImageF3.GetOutput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_GetOutput, None, tubeResampleImageF3)
tubeResampleImageF3.SetTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetTransform, None, tubeResampleImageF3)
tubeResampleImageF3.SetSpacing = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetSpacing, None, tubeResampleImageF3)
tubeResampleImageF3.SetOrigin = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetOrigin, None, tubeResampleImageF3)
tubeResampleImageF3.SetIndex = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetIndex, None, tubeResampleImageF3)
tubeResampleImageF3.SetResampleFactor = new_instancemethod(_tubeResampleImagePython.tubeResampleImageF3_SetResampleFactor, None, tubeResampleImageF3)
tubeResampleImageF3_swigregister = _tubeResampleImagePython.tubeResampleImageF3_swigregister
tubeResampleImageF3_swigregister(tubeResampleImageF3)

def tubeResampleImageF3___New_orig__() -> "tubeResampleImageF3_Pointer":
    """tubeResampleImageF3___New_orig__() -> tubeResampleImageF3_Pointer"""
    return _tubeResampleImagePython.tubeResampleImageF3___New_orig__()

def tubeResampleImageF3_cast(obj: 'itkLightObject') -> "tubeResampleImageF3 *":
    """tubeResampleImageF3_cast(itkLightObject obj) -> tubeResampleImageF3"""
    return _tubeResampleImagePython.tubeResampleImageF3_cast(obj)

class tubeResampleImageSS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeResampleImageSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeResampleImageSS2_Pointer":
        """__New_orig__() -> tubeResampleImageSS2_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageSS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeResampleImageSS2_Pointer":
        """Clone(tubeResampleImageSS2 self) -> tubeResampleImageSS2_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageSS2_Clone(self)


    def SetInput(self, value: 'itkImageSS2') -> "void":
        """SetInput(tubeResampleImageSS2 self, itkImageSS2 value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetInput(self, value)


    def GetInput(self) -> "itkImageSS2 *":
        """GetInput(tubeResampleImageSS2 self) -> itkImageSS2"""
        return _tubeResampleImagePython.tubeResampleImageSS2_GetInput(self)


    def SetMatchImage(self, value: 'itkImageSS2') -> "void":
        """SetMatchImage(tubeResampleImageSS2 self, itkImageSS2 value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetMatchImage(self, value)


    def GetMatchImage(self) -> "itkImageSS2 *":
        """GetMatchImage(tubeResampleImageSS2 self) -> itkImageSS2"""
        return _tubeResampleImagePython.tubeResampleImageSS2_GetMatchImage(self)


    def SetMakeIsotropic(self, value: 'bool') -> "void":
        """SetMakeIsotropic(tubeResampleImageSS2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetMakeIsotropic(self, value)


    def GetMakeIsotropic(self) -> "bool":
        """GetMakeIsotropic(tubeResampleImageSS2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageSS2_GetMakeIsotropic(self)


    def SetMakeHighResIso(self, value: 'bool') -> "void":
        """SetMakeHighResIso(tubeResampleImageSS2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetMakeHighResIso(self, value)


    def GetMakeHighResIso(self) -> "bool":
        """GetMakeHighResIso(tubeResampleImageSS2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageSS2_GetMakeHighResIso(self)


    def SetInterpolator(self, value: 'std::string') -> "void":
        """SetInterpolator(tubeResampleImageSS2 self, std::string value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetInterpolator(self, value)


    def GetInterpolator(self) -> "std::string":
        """GetInterpolator(tubeResampleImageSS2 self) -> std::string"""
        return _tubeResampleImagePython.tubeResampleImageSS2_GetInterpolator(self)


    def SetLoadTransform(self, value: 'bool') -> "void":
        """SetLoadTransform(tubeResampleImageSS2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetLoadTransform(self, value)


    def GetLoadTransform(self) -> "bool":
        """GetLoadTransform(tubeResampleImageSS2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageSS2_GetLoadTransform(self)


    def GetOutput(self) -> "itkImageSS2 *":
        """GetOutput(tubeResampleImageSS2 self) -> itkImageSS2"""
        return _tubeResampleImagePython.tubeResampleImageSS2_GetOutput(self)


    def SetTransform(self, value: 'itkTransformD22') -> "void":
        """SetTransform(tubeResampleImageSS2 self, itkTransformD22 value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetTransform(self, value)


    def SetSpacing(self, value: 'vectorD') -> "void":
        """SetSpacing(tubeResampleImageSS2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetSpacing(self, value)


    def SetOrigin(self, value: 'vectorD') -> "void":
        """SetOrigin(tubeResampleImageSS2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetOrigin(self, value)


    def SetIndex(self, value: 'vectorI') -> "void":
        """SetIndex(tubeResampleImageSS2 self, vectorI value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetIndex(self, value)


    def SetResampleFactor(self, value: 'vectorD') -> "void":
        """SetResampleFactor(tubeResampleImageSS2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageSS2_SetResampleFactor(self, value)

    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageSS2

    def cast(obj: 'itkLightObject') -> "tubeResampleImageSS2 *":
        """cast(itkLightObject obj) -> tubeResampleImageSS2"""
        return _tubeResampleImagePython.tubeResampleImageSS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageSS2

        Create a new object of the class tubeResampleImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeResampleImageSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeResampleImageSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeResampleImageSS2.Clone = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_Clone, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetInput, None, tubeResampleImageSS2)
tubeResampleImageSS2.GetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_GetInput, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetMatchImage, None, tubeResampleImageSS2)
tubeResampleImageSS2.GetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_GetMatchImage, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetMakeIsotropic, None, tubeResampleImageSS2)
tubeResampleImageSS2.GetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_GetMakeIsotropic, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetMakeHighResIso, None, tubeResampleImageSS2)
tubeResampleImageSS2.GetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_GetMakeHighResIso, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetInterpolator, None, tubeResampleImageSS2)
tubeResampleImageSS2.GetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_GetInterpolator, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetLoadTransform, None, tubeResampleImageSS2)
tubeResampleImageSS2.GetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_GetLoadTransform, None, tubeResampleImageSS2)
tubeResampleImageSS2.GetOutput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_GetOutput, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetTransform, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetSpacing = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetSpacing, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetOrigin = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetOrigin, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetIndex = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetIndex, None, tubeResampleImageSS2)
tubeResampleImageSS2.SetResampleFactor = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS2_SetResampleFactor, None, tubeResampleImageSS2)
tubeResampleImageSS2_swigregister = _tubeResampleImagePython.tubeResampleImageSS2_swigregister
tubeResampleImageSS2_swigregister(tubeResampleImageSS2)

def tubeResampleImageSS2___New_orig__() -> "tubeResampleImageSS2_Pointer":
    """tubeResampleImageSS2___New_orig__() -> tubeResampleImageSS2_Pointer"""
    return _tubeResampleImagePython.tubeResampleImageSS2___New_orig__()

def tubeResampleImageSS2_cast(obj: 'itkLightObject') -> "tubeResampleImageSS2 *":
    """tubeResampleImageSS2_cast(itkLightObject obj) -> tubeResampleImageSS2"""
    return _tubeResampleImagePython.tubeResampleImageSS2_cast(obj)

class tubeResampleImageSS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeResampleImageSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeResampleImageSS3_Pointer":
        """__New_orig__() -> tubeResampleImageSS3_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeResampleImageSS3_Pointer":
        """Clone(tubeResampleImageSS3 self) -> tubeResampleImageSS3_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageSS3_Clone(self)


    def SetInput(self, value: 'itkImageSS3') -> "void":
        """SetInput(tubeResampleImageSS3 self, itkImageSS3 value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetInput(self, value)


    def GetInput(self) -> "itkImageSS3 *":
        """GetInput(tubeResampleImageSS3 self) -> itkImageSS3"""
        return _tubeResampleImagePython.tubeResampleImageSS3_GetInput(self)


    def SetMatchImage(self, value: 'itkImageSS3') -> "void":
        """SetMatchImage(tubeResampleImageSS3 self, itkImageSS3 value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetMatchImage(self, value)


    def GetMatchImage(self) -> "itkImageSS3 *":
        """GetMatchImage(tubeResampleImageSS3 self) -> itkImageSS3"""
        return _tubeResampleImagePython.tubeResampleImageSS3_GetMatchImage(self)


    def SetMakeIsotropic(self, value: 'bool') -> "void":
        """SetMakeIsotropic(tubeResampleImageSS3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetMakeIsotropic(self, value)


    def GetMakeIsotropic(self) -> "bool":
        """GetMakeIsotropic(tubeResampleImageSS3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageSS3_GetMakeIsotropic(self)


    def SetMakeHighResIso(self, value: 'bool') -> "void":
        """SetMakeHighResIso(tubeResampleImageSS3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetMakeHighResIso(self, value)


    def GetMakeHighResIso(self) -> "bool":
        """GetMakeHighResIso(tubeResampleImageSS3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageSS3_GetMakeHighResIso(self)


    def SetInterpolator(self, value: 'std::string') -> "void":
        """SetInterpolator(tubeResampleImageSS3 self, std::string value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetInterpolator(self, value)


    def GetInterpolator(self) -> "std::string":
        """GetInterpolator(tubeResampleImageSS3 self) -> std::string"""
        return _tubeResampleImagePython.tubeResampleImageSS3_GetInterpolator(self)


    def SetLoadTransform(self, value: 'bool') -> "void":
        """SetLoadTransform(tubeResampleImageSS3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetLoadTransform(self, value)


    def GetLoadTransform(self) -> "bool":
        """GetLoadTransform(tubeResampleImageSS3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageSS3_GetLoadTransform(self)


    def GetOutput(self) -> "itkImageSS3 *":
        """GetOutput(tubeResampleImageSS3 self) -> itkImageSS3"""
        return _tubeResampleImagePython.tubeResampleImageSS3_GetOutput(self)


    def SetTransform(self, value: 'itkTransformD33') -> "void":
        """SetTransform(tubeResampleImageSS3 self, itkTransformD33 value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetTransform(self, value)


    def SetSpacing(self, value: 'vectorD') -> "void":
        """SetSpacing(tubeResampleImageSS3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetSpacing(self, value)


    def SetOrigin(self, value: 'vectorD') -> "void":
        """SetOrigin(tubeResampleImageSS3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetOrigin(self, value)


    def SetIndex(self, value: 'vectorI') -> "void":
        """SetIndex(tubeResampleImageSS3 self, vectorI value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetIndex(self, value)


    def SetResampleFactor(self, value: 'vectorD') -> "void":
        """SetResampleFactor(tubeResampleImageSS3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageSS3_SetResampleFactor(self, value)

    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageSS3

    def cast(obj: 'itkLightObject') -> "tubeResampleImageSS3 *":
        """cast(itkLightObject obj) -> tubeResampleImageSS3"""
        return _tubeResampleImagePython.tubeResampleImageSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageSS3

        Create a new object of the class tubeResampleImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeResampleImageSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeResampleImageSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeResampleImageSS3.Clone = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_Clone, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetInput, None, tubeResampleImageSS3)
tubeResampleImageSS3.GetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_GetInput, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetMatchImage, None, tubeResampleImageSS3)
tubeResampleImageSS3.GetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_GetMatchImage, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetMakeIsotropic, None, tubeResampleImageSS3)
tubeResampleImageSS3.GetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_GetMakeIsotropic, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetMakeHighResIso, None, tubeResampleImageSS3)
tubeResampleImageSS3.GetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_GetMakeHighResIso, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetInterpolator, None, tubeResampleImageSS3)
tubeResampleImageSS3.GetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_GetInterpolator, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetLoadTransform, None, tubeResampleImageSS3)
tubeResampleImageSS3.GetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_GetLoadTransform, None, tubeResampleImageSS3)
tubeResampleImageSS3.GetOutput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_GetOutput, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetTransform, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetSpacing = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetSpacing, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetOrigin = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetOrigin, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetIndex = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetIndex, None, tubeResampleImageSS3)
tubeResampleImageSS3.SetResampleFactor = new_instancemethod(_tubeResampleImagePython.tubeResampleImageSS3_SetResampleFactor, None, tubeResampleImageSS3)
tubeResampleImageSS3_swigregister = _tubeResampleImagePython.tubeResampleImageSS3_swigregister
tubeResampleImageSS3_swigregister(tubeResampleImageSS3)

def tubeResampleImageSS3___New_orig__() -> "tubeResampleImageSS3_Pointer":
    """tubeResampleImageSS3___New_orig__() -> tubeResampleImageSS3_Pointer"""
    return _tubeResampleImagePython.tubeResampleImageSS3___New_orig__()

def tubeResampleImageSS3_cast(obj: 'itkLightObject') -> "tubeResampleImageSS3 *":
    """tubeResampleImageSS3_cast(itkLightObject obj) -> tubeResampleImageSS3"""
    return _tubeResampleImagePython.tubeResampleImageSS3_cast(obj)

class tubeResampleImageUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeResampleImageUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeResampleImageUC2_Pointer":
        """__New_orig__() -> tubeResampleImageUC2_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeResampleImageUC2_Pointer":
        """Clone(tubeResampleImageUC2 self) -> tubeResampleImageUC2_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageUC2_Clone(self)


    def SetInput(self, value: 'itkImageUC2') -> "void":
        """SetInput(tubeResampleImageUC2 self, itkImageUC2 value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetInput(self, value)


    def GetInput(self) -> "itkImageUC2 *":
        """GetInput(tubeResampleImageUC2 self) -> itkImageUC2"""
        return _tubeResampleImagePython.tubeResampleImageUC2_GetInput(self)


    def SetMatchImage(self, value: 'itkImageUC2') -> "void":
        """SetMatchImage(tubeResampleImageUC2 self, itkImageUC2 value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetMatchImage(self, value)


    def GetMatchImage(self) -> "itkImageUC2 *":
        """GetMatchImage(tubeResampleImageUC2 self) -> itkImageUC2"""
        return _tubeResampleImagePython.tubeResampleImageUC2_GetMatchImage(self)


    def SetMakeIsotropic(self, value: 'bool') -> "void":
        """SetMakeIsotropic(tubeResampleImageUC2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetMakeIsotropic(self, value)


    def GetMakeIsotropic(self) -> "bool":
        """GetMakeIsotropic(tubeResampleImageUC2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUC2_GetMakeIsotropic(self)


    def SetMakeHighResIso(self, value: 'bool') -> "void":
        """SetMakeHighResIso(tubeResampleImageUC2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetMakeHighResIso(self, value)


    def GetMakeHighResIso(self) -> "bool":
        """GetMakeHighResIso(tubeResampleImageUC2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUC2_GetMakeHighResIso(self)


    def SetInterpolator(self, value: 'std::string') -> "void":
        """SetInterpolator(tubeResampleImageUC2 self, std::string value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetInterpolator(self, value)


    def GetInterpolator(self) -> "std::string":
        """GetInterpolator(tubeResampleImageUC2 self) -> std::string"""
        return _tubeResampleImagePython.tubeResampleImageUC2_GetInterpolator(self)


    def SetLoadTransform(self, value: 'bool') -> "void":
        """SetLoadTransform(tubeResampleImageUC2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetLoadTransform(self, value)


    def GetLoadTransform(self) -> "bool":
        """GetLoadTransform(tubeResampleImageUC2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUC2_GetLoadTransform(self)


    def GetOutput(self) -> "itkImageUC2 *":
        """GetOutput(tubeResampleImageUC2 self) -> itkImageUC2"""
        return _tubeResampleImagePython.tubeResampleImageUC2_GetOutput(self)


    def SetTransform(self, value: 'itkTransformD22') -> "void":
        """SetTransform(tubeResampleImageUC2 self, itkTransformD22 value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetTransform(self, value)


    def SetSpacing(self, value: 'vectorD') -> "void":
        """SetSpacing(tubeResampleImageUC2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetSpacing(self, value)


    def SetOrigin(self, value: 'vectorD') -> "void":
        """SetOrigin(tubeResampleImageUC2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetOrigin(self, value)


    def SetIndex(self, value: 'vectorI') -> "void":
        """SetIndex(tubeResampleImageUC2 self, vectorI value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetIndex(self, value)


    def SetResampleFactor(self, value: 'vectorD') -> "void":
        """SetResampleFactor(tubeResampleImageUC2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUC2_SetResampleFactor(self, value)

    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageUC2

    def cast(obj: 'itkLightObject') -> "tubeResampleImageUC2 *":
        """cast(itkLightObject obj) -> tubeResampleImageUC2"""
        return _tubeResampleImagePython.tubeResampleImageUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageUC2

        Create a new object of the class tubeResampleImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeResampleImageUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeResampleImageUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeResampleImageUC2.Clone = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_Clone, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetInput, None, tubeResampleImageUC2)
tubeResampleImageUC2.GetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_GetInput, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetMatchImage, None, tubeResampleImageUC2)
tubeResampleImageUC2.GetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_GetMatchImage, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetMakeIsotropic, None, tubeResampleImageUC2)
tubeResampleImageUC2.GetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_GetMakeIsotropic, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetMakeHighResIso, None, tubeResampleImageUC2)
tubeResampleImageUC2.GetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_GetMakeHighResIso, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetInterpolator, None, tubeResampleImageUC2)
tubeResampleImageUC2.GetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_GetInterpolator, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetLoadTransform, None, tubeResampleImageUC2)
tubeResampleImageUC2.GetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_GetLoadTransform, None, tubeResampleImageUC2)
tubeResampleImageUC2.GetOutput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_GetOutput, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetTransform, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetSpacing = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetSpacing, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetOrigin = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetOrigin, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetIndex = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetIndex, None, tubeResampleImageUC2)
tubeResampleImageUC2.SetResampleFactor = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC2_SetResampleFactor, None, tubeResampleImageUC2)
tubeResampleImageUC2_swigregister = _tubeResampleImagePython.tubeResampleImageUC2_swigregister
tubeResampleImageUC2_swigregister(tubeResampleImageUC2)

def tubeResampleImageUC2___New_orig__() -> "tubeResampleImageUC2_Pointer":
    """tubeResampleImageUC2___New_orig__() -> tubeResampleImageUC2_Pointer"""
    return _tubeResampleImagePython.tubeResampleImageUC2___New_orig__()

def tubeResampleImageUC2_cast(obj: 'itkLightObject') -> "tubeResampleImageUC2 *":
    """tubeResampleImageUC2_cast(itkLightObject obj) -> tubeResampleImageUC2"""
    return _tubeResampleImagePython.tubeResampleImageUC2_cast(obj)

class tubeResampleImageUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeResampleImageUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeResampleImageUC3_Pointer":
        """__New_orig__() -> tubeResampleImageUC3_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeResampleImageUC3_Pointer":
        """Clone(tubeResampleImageUC3 self) -> tubeResampleImageUC3_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageUC3_Clone(self)


    def SetInput(self, value: 'itkImageUC3') -> "void":
        """SetInput(tubeResampleImageUC3 self, itkImageUC3 value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetInput(self, value)


    def GetInput(self) -> "itkImageUC3 *":
        """GetInput(tubeResampleImageUC3 self) -> itkImageUC3"""
        return _tubeResampleImagePython.tubeResampleImageUC3_GetInput(self)


    def SetMatchImage(self, value: 'itkImageUC3') -> "void":
        """SetMatchImage(tubeResampleImageUC3 self, itkImageUC3 value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetMatchImage(self, value)


    def GetMatchImage(self) -> "itkImageUC3 *":
        """GetMatchImage(tubeResampleImageUC3 self) -> itkImageUC3"""
        return _tubeResampleImagePython.tubeResampleImageUC3_GetMatchImage(self)


    def SetMakeIsotropic(self, value: 'bool') -> "void":
        """SetMakeIsotropic(tubeResampleImageUC3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetMakeIsotropic(self, value)


    def GetMakeIsotropic(self) -> "bool":
        """GetMakeIsotropic(tubeResampleImageUC3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUC3_GetMakeIsotropic(self)


    def SetMakeHighResIso(self, value: 'bool') -> "void":
        """SetMakeHighResIso(tubeResampleImageUC3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetMakeHighResIso(self, value)


    def GetMakeHighResIso(self) -> "bool":
        """GetMakeHighResIso(tubeResampleImageUC3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUC3_GetMakeHighResIso(self)


    def SetInterpolator(self, value: 'std::string') -> "void":
        """SetInterpolator(tubeResampleImageUC3 self, std::string value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetInterpolator(self, value)


    def GetInterpolator(self) -> "std::string":
        """GetInterpolator(tubeResampleImageUC3 self) -> std::string"""
        return _tubeResampleImagePython.tubeResampleImageUC3_GetInterpolator(self)


    def SetLoadTransform(self, value: 'bool') -> "void":
        """SetLoadTransform(tubeResampleImageUC3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetLoadTransform(self, value)


    def GetLoadTransform(self) -> "bool":
        """GetLoadTransform(tubeResampleImageUC3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUC3_GetLoadTransform(self)


    def GetOutput(self) -> "itkImageUC3 *":
        """GetOutput(tubeResampleImageUC3 self) -> itkImageUC3"""
        return _tubeResampleImagePython.tubeResampleImageUC3_GetOutput(self)


    def SetTransform(self, value: 'itkTransformD33') -> "void":
        """SetTransform(tubeResampleImageUC3 self, itkTransformD33 value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetTransform(self, value)


    def SetSpacing(self, value: 'vectorD') -> "void":
        """SetSpacing(tubeResampleImageUC3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetSpacing(self, value)


    def SetOrigin(self, value: 'vectorD') -> "void":
        """SetOrigin(tubeResampleImageUC3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetOrigin(self, value)


    def SetIndex(self, value: 'vectorI') -> "void":
        """SetIndex(tubeResampleImageUC3 self, vectorI value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetIndex(self, value)


    def SetResampleFactor(self, value: 'vectorD') -> "void":
        """SetResampleFactor(tubeResampleImageUC3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUC3_SetResampleFactor(self, value)

    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageUC3

    def cast(obj: 'itkLightObject') -> "tubeResampleImageUC3 *":
        """cast(itkLightObject obj) -> tubeResampleImageUC3"""
        return _tubeResampleImagePython.tubeResampleImageUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageUC3

        Create a new object of the class tubeResampleImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeResampleImageUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeResampleImageUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeResampleImageUC3.Clone = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_Clone, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetInput, None, tubeResampleImageUC3)
tubeResampleImageUC3.GetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_GetInput, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetMatchImage, None, tubeResampleImageUC3)
tubeResampleImageUC3.GetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_GetMatchImage, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetMakeIsotropic, None, tubeResampleImageUC3)
tubeResampleImageUC3.GetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_GetMakeIsotropic, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetMakeHighResIso, None, tubeResampleImageUC3)
tubeResampleImageUC3.GetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_GetMakeHighResIso, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetInterpolator, None, tubeResampleImageUC3)
tubeResampleImageUC3.GetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_GetInterpolator, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetLoadTransform, None, tubeResampleImageUC3)
tubeResampleImageUC3.GetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_GetLoadTransform, None, tubeResampleImageUC3)
tubeResampleImageUC3.GetOutput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_GetOutput, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetTransform, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetSpacing = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetSpacing, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetOrigin = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetOrigin, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetIndex = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetIndex, None, tubeResampleImageUC3)
tubeResampleImageUC3.SetResampleFactor = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUC3_SetResampleFactor, None, tubeResampleImageUC3)
tubeResampleImageUC3_swigregister = _tubeResampleImagePython.tubeResampleImageUC3_swigregister
tubeResampleImageUC3_swigregister(tubeResampleImageUC3)

def tubeResampleImageUC3___New_orig__() -> "tubeResampleImageUC3_Pointer":
    """tubeResampleImageUC3___New_orig__() -> tubeResampleImageUC3_Pointer"""
    return _tubeResampleImagePython.tubeResampleImageUC3___New_orig__()

def tubeResampleImageUC3_cast(obj: 'itkLightObject') -> "tubeResampleImageUC3 *":
    """tubeResampleImageUC3_cast(itkLightObject obj) -> tubeResampleImageUC3"""
    return _tubeResampleImagePython.tubeResampleImageUC3_cast(obj)

class tubeResampleImageUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeResampleImageUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeResampleImageUS2_Pointer":
        """__New_orig__() -> tubeResampleImageUS2_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeResampleImageUS2_Pointer":
        """Clone(tubeResampleImageUS2 self) -> tubeResampleImageUS2_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageUS2_Clone(self)


    def SetInput(self, value: 'itkImageUS2') -> "void":
        """SetInput(tubeResampleImageUS2 self, itkImageUS2 value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetInput(self, value)


    def GetInput(self) -> "itkImageUS2 *":
        """GetInput(tubeResampleImageUS2 self) -> itkImageUS2"""
        return _tubeResampleImagePython.tubeResampleImageUS2_GetInput(self)


    def SetMatchImage(self, value: 'itkImageUS2') -> "void":
        """SetMatchImage(tubeResampleImageUS2 self, itkImageUS2 value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetMatchImage(self, value)


    def GetMatchImage(self) -> "itkImageUS2 *":
        """GetMatchImage(tubeResampleImageUS2 self) -> itkImageUS2"""
        return _tubeResampleImagePython.tubeResampleImageUS2_GetMatchImage(self)


    def SetMakeIsotropic(self, value: 'bool') -> "void":
        """SetMakeIsotropic(tubeResampleImageUS2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetMakeIsotropic(self, value)


    def GetMakeIsotropic(self) -> "bool":
        """GetMakeIsotropic(tubeResampleImageUS2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUS2_GetMakeIsotropic(self)


    def SetMakeHighResIso(self, value: 'bool') -> "void":
        """SetMakeHighResIso(tubeResampleImageUS2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetMakeHighResIso(self, value)


    def GetMakeHighResIso(self) -> "bool":
        """GetMakeHighResIso(tubeResampleImageUS2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUS2_GetMakeHighResIso(self)


    def SetInterpolator(self, value: 'std::string') -> "void":
        """SetInterpolator(tubeResampleImageUS2 self, std::string value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetInterpolator(self, value)


    def GetInterpolator(self) -> "std::string":
        """GetInterpolator(tubeResampleImageUS2 self) -> std::string"""
        return _tubeResampleImagePython.tubeResampleImageUS2_GetInterpolator(self)


    def SetLoadTransform(self, value: 'bool') -> "void":
        """SetLoadTransform(tubeResampleImageUS2 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetLoadTransform(self, value)


    def GetLoadTransform(self) -> "bool":
        """GetLoadTransform(tubeResampleImageUS2 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUS2_GetLoadTransform(self)


    def GetOutput(self) -> "itkImageUS2 *":
        """GetOutput(tubeResampleImageUS2 self) -> itkImageUS2"""
        return _tubeResampleImagePython.tubeResampleImageUS2_GetOutput(self)


    def SetTransform(self, value: 'itkTransformD22') -> "void":
        """SetTransform(tubeResampleImageUS2 self, itkTransformD22 value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetTransform(self, value)


    def SetSpacing(self, value: 'vectorD') -> "void":
        """SetSpacing(tubeResampleImageUS2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetSpacing(self, value)


    def SetOrigin(self, value: 'vectorD') -> "void":
        """SetOrigin(tubeResampleImageUS2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetOrigin(self, value)


    def SetIndex(self, value: 'vectorI') -> "void":
        """SetIndex(tubeResampleImageUS2 self, vectorI value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetIndex(self, value)


    def SetResampleFactor(self, value: 'vectorD') -> "void":
        """SetResampleFactor(tubeResampleImageUS2 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUS2_SetResampleFactor(self, value)

    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageUS2

    def cast(obj: 'itkLightObject') -> "tubeResampleImageUS2 *":
        """cast(itkLightObject obj) -> tubeResampleImageUS2"""
        return _tubeResampleImagePython.tubeResampleImageUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageUS2

        Create a new object of the class tubeResampleImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeResampleImageUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeResampleImageUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeResampleImageUS2.Clone = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_Clone, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetInput, None, tubeResampleImageUS2)
tubeResampleImageUS2.GetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_GetInput, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetMatchImage, None, tubeResampleImageUS2)
tubeResampleImageUS2.GetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_GetMatchImage, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetMakeIsotropic, None, tubeResampleImageUS2)
tubeResampleImageUS2.GetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_GetMakeIsotropic, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetMakeHighResIso, None, tubeResampleImageUS2)
tubeResampleImageUS2.GetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_GetMakeHighResIso, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetInterpolator, None, tubeResampleImageUS2)
tubeResampleImageUS2.GetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_GetInterpolator, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetLoadTransform, None, tubeResampleImageUS2)
tubeResampleImageUS2.GetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_GetLoadTransform, None, tubeResampleImageUS2)
tubeResampleImageUS2.GetOutput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_GetOutput, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetTransform, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetSpacing = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetSpacing, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetOrigin = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetOrigin, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetIndex = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetIndex, None, tubeResampleImageUS2)
tubeResampleImageUS2.SetResampleFactor = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS2_SetResampleFactor, None, tubeResampleImageUS2)
tubeResampleImageUS2_swigregister = _tubeResampleImagePython.tubeResampleImageUS2_swigregister
tubeResampleImageUS2_swigregister(tubeResampleImageUS2)

def tubeResampleImageUS2___New_orig__() -> "tubeResampleImageUS2_Pointer":
    """tubeResampleImageUS2___New_orig__() -> tubeResampleImageUS2_Pointer"""
    return _tubeResampleImagePython.tubeResampleImageUS2___New_orig__()

def tubeResampleImageUS2_cast(obj: 'itkLightObject') -> "tubeResampleImageUS2 *":
    """tubeResampleImageUS2_cast(itkLightObject obj) -> tubeResampleImageUS2"""
    return _tubeResampleImagePython.tubeResampleImageUS2_cast(obj)

class tubeResampleImageUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeResampleImageUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeResampleImageUS3_Pointer":
        """__New_orig__() -> tubeResampleImageUS3_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeResampleImageUS3_Pointer":
        """Clone(tubeResampleImageUS3 self) -> tubeResampleImageUS3_Pointer"""
        return _tubeResampleImagePython.tubeResampleImageUS3_Clone(self)


    def SetInput(self, value: 'itkImageUS3') -> "void":
        """SetInput(tubeResampleImageUS3 self, itkImageUS3 value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetInput(self, value)


    def GetInput(self) -> "itkImageUS3 *":
        """GetInput(tubeResampleImageUS3 self) -> itkImageUS3"""
        return _tubeResampleImagePython.tubeResampleImageUS3_GetInput(self)


    def SetMatchImage(self, value: 'itkImageUS3') -> "void":
        """SetMatchImage(tubeResampleImageUS3 self, itkImageUS3 value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetMatchImage(self, value)


    def GetMatchImage(self) -> "itkImageUS3 *":
        """GetMatchImage(tubeResampleImageUS3 self) -> itkImageUS3"""
        return _tubeResampleImagePython.tubeResampleImageUS3_GetMatchImage(self)


    def SetMakeIsotropic(self, value: 'bool') -> "void":
        """SetMakeIsotropic(tubeResampleImageUS3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetMakeIsotropic(self, value)


    def GetMakeIsotropic(self) -> "bool":
        """GetMakeIsotropic(tubeResampleImageUS3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUS3_GetMakeIsotropic(self)


    def SetMakeHighResIso(self, value: 'bool') -> "void":
        """SetMakeHighResIso(tubeResampleImageUS3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetMakeHighResIso(self, value)


    def GetMakeHighResIso(self) -> "bool":
        """GetMakeHighResIso(tubeResampleImageUS3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUS3_GetMakeHighResIso(self)


    def SetInterpolator(self, value: 'std::string') -> "void":
        """SetInterpolator(tubeResampleImageUS3 self, std::string value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetInterpolator(self, value)


    def GetInterpolator(self) -> "std::string":
        """GetInterpolator(tubeResampleImageUS3 self) -> std::string"""
        return _tubeResampleImagePython.tubeResampleImageUS3_GetInterpolator(self)


    def SetLoadTransform(self, value: 'bool') -> "void":
        """SetLoadTransform(tubeResampleImageUS3 self, bool value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetLoadTransform(self, value)


    def GetLoadTransform(self) -> "bool":
        """GetLoadTransform(tubeResampleImageUS3 self) -> bool"""
        return _tubeResampleImagePython.tubeResampleImageUS3_GetLoadTransform(self)


    def GetOutput(self) -> "itkImageUS3 *":
        """GetOutput(tubeResampleImageUS3 self) -> itkImageUS3"""
        return _tubeResampleImagePython.tubeResampleImageUS3_GetOutput(self)


    def SetTransform(self, value: 'itkTransformD33') -> "void":
        """SetTransform(tubeResampleImageUS3 self, itkTransformD33 value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetTransform(self, value)


    def SetSpacing(self, value: 'vectorD') -> "void":
        """SetSpacing(tubeResampleImageUS3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetSpacing(self, value)


    def SetOrigin(self, value: 'vectorD') -> "void":
        """SetOrigin(tubeResampleImageUS3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetOrigin(self, value)


    def SetIndex(self, value: 'vectorI') -> "void":
        """SetIndex(tubeResampleImageUS3 self, vectorI value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetIndex(self, value)


    def SetResampleFactor(self, value: 'vectorD') -> "void":
        """SetResampleFactor(tubeResampleImageUS3 self, vectorD value)"""
        return _tubeResampleImagePython.tubeResampleImageUS3_SetResampleFactor(self, value)

    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageUS3

    def cast(obj: 'itkLightObject') -> "tubeResampleImageUS3 *":
        """cast(itkLightObject obj) -> tubeResampleImageUS3"""
        return _tubeResampleImagePython.tubeResampleImageUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageUS3

        Create a new object of the class tubeResampleImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeResampleImageUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeResampleImageUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeResampleImageUS3.Clone = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_Clone, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetInput, None, tubeResampleImageUS3)
tubeResampleImageUS3.GetInput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_GetInput, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetMatchImage, None, tubeResampleImageUS3)
tubeResampleImageUS3.GetMatchImage = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_GetMatchImage, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetMakeIsotropic, None, tubeResampleImageUS3)
tubeResampleImageUS3.GetMakeIsotropic = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_GetMakeIsotropic, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetMakeHighResIso, None, tubeResampleImageUS3)
tubeResampleImageUS3.GetMakeHighResIso = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_GetMakeHighResIso, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetInterpolator, None, tubeResampleImageUS3)
tubeResampleImageUS3.GetInterpolator = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_GetInterpolator, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetLoadTransform, None, tubeResampleImageUS3)
tubeResampleImageUS3.GetLoadTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_GetLoadTransform, None, tubeResampleImageUS3)
tubeResampleImageUS3.GetOutput = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_GetOutput, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetTransform = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetTransform, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetSpacing = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetSpacing, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetOrigin = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetOrigin, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetIndex = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetIndex, None, tubeResampleImageUS3)
tubeResampleImageUS3.SetResampleFactor = new_instancemethod(_tubeResampleImagePython.tubeResampleImageUS3_SetResampleFactor, None, tubeResampleImageUS3)
tubeResampleImageUS3_swigregister = _tubeResampleImagePython.tubeResampleImageUS3_swigregister
tubeResampleImageUS3_swigregister(tubeResampleImageUS3)

def tubeResampleImageUS3___New_orig__() -> "tubeResampleImageUS3_Pointer":
    """tubeResampleImageUS3___New_orig__() -> tubeResampleImageUS3_Pointer"""
    return _tubeResampleImagePython.tubeResampleImageUS3___New_orig__()

def tubeResampleImageUS3_cast(obj: 'itkLightObject') -> "tubeResampleImageUS3 *":
    """tubeResampleImageUS3_cast(itkLightObject obj) -> tubeResampleImageUS3"""
    return _tubeResampleImagePython.tubeResampleImageUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def resample_image(*args, **kwargs):
    """Procedural interface for ResampleImage"""
    import itk
    instance = itk.ResampleImage.New(*args, **kwargs)
    return instance.__internal_call__()

def resample_image_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ResampleImage, itkTemplate.itkTemplate):
        filter_object = itk.ResampleImage.values()[0]
    else:
        filter_object = itk.ResampleImage

    resample_image.__doc__ = filter_object.__doc__
    resample_image.__doc__ += "\n Args are Input(s) to the filter.\n"
    resample_image.__doc__ += "Available Keyword Arguments:\n"
    resample_image.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



