# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _tubeConvertTubesToImagePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_tubeConvertTubesToImagePython', [dirname(__file__)])
        except ImportError:
            import _tubeConvertTubesToImagePython
            return _tubeConvertTubesToImagePython
        if fp is not None:
            try:
                _mod = imp.load_module('_tubeConvertTubesToImagePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _tubeConvertTubesToImagePython = swig_import_helper()
    del swig_import_helper
else:
    import _tubeConvertTubesToImagePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSpatialObjectBasePython
import itkVectorPython
import vnl_vector_refPython
import stdcomplexPython
import pyBasePython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkAffineTransformPython
import itkTransformBasePython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkCovariantVectorPython
import itkPointPython
import itkDiffusionTensor3DPython
import ITKCommonBasePython
import itkArrayPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkVariableLengthVectorPython
import itkMatrixOffsetTransformBasePython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkImageRegionPython
import itkImagePython
import itkRGBPixelPython

def tubeConvertTubesToImageD3_New():
  return tubeConvertTubesToImageD3.New()


def tubeConvertTubesToImageF3_New():
  return tubeConvertTubesToImageF3.New()


def tubeConvertTubesToImageUS3_New():
  return tubeConvertTubesToImageUS3.New()


def tubeConvertTubesToImageUC3_New():
  return tubeConvertTubesToImageUC3.New()


def tubeConvertTubesToImageSS3_New():
  return tubeConvertTubesToImageSS3.New()


def tubeConvertTubesToImageD2_New():
  return tubeConvertTubesToImageD2.New()


def tubeConvertTubesToImageF2_New():
  return tubeConvertTubesToImageF2.New()


def tubeConvertTubesToImageUS2_New():
  return tubeConvertTubesToImageUS2.New()


def tubeConvertTubesToImageUC2_New():
  return tubeConvertTubesToImageUC2.New()


def tubeConvertTubesToImageSS2_New():
  return tubeConvertTubesToImageSS2.New()

class tubeConvertTubesToImageD2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToImageD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToImageD2_Pointer":
        """__New_orig__() -> tubeConvertTubesToImageD2_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToImageD2_Pointer":
        """Clone(tubeConvertTubesToImageD2 self) -> tubeConvertTubesToImageD2_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_Clone(self)


    def SetUseRadius(self, value: 'bool') -> "void":
        """SetUseRadius(tubeConvertTubesToImageD2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetUseRadius(self, value)


    def GetUseRadius(self) -> "bool":
        """GetUseRadius(tubeConvertTubesToImageD2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetUseRadius(self)


    def SetColorByTubeID(self, value: 'bool') -> "void":
        """SetColorByTubeID(tubeConvertTubesToImageD2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByTubeID(self, value)


    def SetColorByRadius(self, value: 'bool') -> "void":
        """SetColorByRadius(tubeConvertTubesToImageD2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByRadius(self, value)


    def SetColorByRidgeness(self, value: 'bool') -> "void":
        """SetColorByRidgeness(tubeConvertTubesToImageD2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByRidgeness(self, value)


    def SetColorByMedialness(self, value: 'bool') -> "void":
        """SetColorByMedialness(tubeConvertTubesToImageD2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByMedialness(self, value)


    def SetColorByBranchness(self, value: 'bool') -> "void":
        """SetColorByBranchness(tubeConvertTubesToImageD2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByBranchness(self, value)


    def SetColorByCurvature(self, value: 'bool') -> "void":
        """SetColorByCurvature(tubeConvertTubesToImageD2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByCurvature(self, value)


    def SetColorByLevelness(self, value: 'bool') -> "void":
        """SetColorByLevelness(tubeConvertTubesToImageD2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByLevelness(self, value)


    def SetColorByRoundness(self, value: 'bool') -> "void":
        """SetColorByRoundness(tubeConvertTubesToImageD2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByRoundness(self, value)


    def SetColorByIntensity(self, value: 'bool') -> "void":
        """SetColorByIntensity(tubeConvertTubesToImageD2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByIntensity(self, value)


    def GetColorByTubeID(self) -> "bool":
        """GetColorByTubeID(tubeConvertTubesToImageD2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByTubeID(self)


    def GetColorByRadius(self) -> "bool":
        """GetColorByRadius(tubeConvertTubesToImageD2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByRadius(self)


    def GetColorByRidgeness(self) -> "bool":
        """GetColorByRidgeness(tubeConvertTubesToImageD2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByRidgeness(self)


    def GetColorByMedialness(self) -> "bool":
        """GetColorByMedialness(tubeConvertTubesToImageD2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByMedialness(self)


    def GetColorByBranchness(self) -> "bool":
        """GetColorByBranchness(tubeConvertTubesToImageD2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByBranchness(self)


    def GetColorByCurvature(self) -> "bool":
        """GetColorByCurvature(tubeConvertTubesToImageD2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByCurvature(self)


    def GetColorByLevelness(self) -> "bool":
        """GetColorByLevelness(tubeConvertTubesToImageD2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByLevelness(self)


    def GetColorByRoundness(self) -> "bool":
        """GetColorByRoundness(tubeConvertTubesToImageD2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByRoundness(self)


    def GetColorByIntensity(self) -> "bool":
        """GetColorByIntensity(tubeConvertTubesToImageD2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByIntensity(self)


    def SetTemplateImage(self, pTemplateImage: 'itkImageD2') -> "void":
        """SetTemplateImage(tubeConvertTubesToImageD2 self, itkImageD2 pTemplateImage)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetTemplateImage(self, pTemplateImage)


    def GetTemplateImage(self) -> "itkImageD2 const *":
        """GetTemplateImage(tubeConvertTubesToImageD2 self) -> itkImageD2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetTemplateImage(self)


    def SetInput(self, value: 'itkSpatialObject2') -> "void":
        """SetInput(tubeConvertTubesToImageD2 self, itkSpatialObject2 value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetInput(self, value)


    def GetInput(self) -> "itkSpatialObject2 const *":
        """GetInput(tubeConvertTubesToImageD2 self) -> itkSpatialObject2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetInput(self)


    def GetOutput(self) -> "itkImageD2 *":
        """GetOutput(tubeConvertTubesToImageD2 self) -> itkImageD2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetOutput(self)

    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageD2

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageD2 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToImageD2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageD2

        Create a new object of the class tubeConvertTubesToImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToImageD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToImageD2.Clone = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_Clone, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetUseRadius, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetUseRadius, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByTubeID, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByRadius, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByRidgeness, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByMedialness, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByBranchness, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByCurvature, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByLevelness, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByRoundness, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByIntensity, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByTubeID, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByRadius, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByRidgeness, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByMedialness, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByBranchness, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByCurvature, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByLevelness, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByRoundness, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByIntensity, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetTemplateImage, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetTemplateImage, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.SetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetInput, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetInput, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2.GetOutput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetOutput, None, tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2_swigregister = _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_swigregister
tubeConvertTubesToImageD2_swigregister(tubeConvertTubesToImageD2)

def tubeConvertTubesToImageD2___New_orig__() -> "tubeConvertTubesToImageD2_Pointer":
    """tubeConvertTubesToImageD2___New_orig__() -> tubeConvertTubesToImageD2_Pointer"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2___New_orig__()

def tubeConvertTubesToImageD2_cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageD2 *":
    """tubeConvertTubesToImageD2_cast(itkLightObject obj) -> tubeConvertTubesToImageD2"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_cast(obj)

class tubeConvertTubesToImageD3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToImageD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToImageD3_Pointer":
        """__New_orig__() -> tubeConvertTubesToImageD3_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToImageD3_Pointer":
        """Clone(tubeConvertTubesToImageD3 self) -> tubeConvertTubesToImageD3_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_Clone(self)


    def SetUseRadius(self, value: 'bool') -> "void":
        """SetUseRadius(tubeConvertTubesToImageD3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetUseRadius(self, value)


    def GetUseRadius(self) -> "bool":
        """GetUseRadius(tubeConvertTubesToImageD3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetUseRadius(self)


    def SetColorByTubeID(self, value: 'bool') -> "void":
        """SetColorByTubeID(tubeConvertTubesToImageD3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByTubeID(self, value)


    def SetColorByRadius(self, value: 'bool') -> "void":
        """SetColorByRadius(tubeConvertTubesToImageD3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByRadius(self, value)


    def SetColorByRidgeness(self, value: 'bool') -> "void":
        """SetColorByRidgeness(tubeConvertTubesToImageD3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByRidgeness(self, value)


    def SetColorByMedialness(self, value: 'bool') -> "void":
        """SetColorByMedialness(tubeConvertTubesToImageD3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByMedialness(self, value)


    def SetColorByBranchness(self, value: 'bool') -> "void":
        """SetColorByBranchness(tubeConvertTubesToImageD3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByBranchness(self, value)


    def SetColorByCurvature(self, value: 'bool') -> "void":
        """SetColorByCurvature(tubeConvertTubesToImageD3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByCurvature(self, value)


    def SetColorByLevelness(self, value: 'bool') -> "void":
        """SetColorByLevelness(tubeConvertTubesToImageD3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByLevelness(self, value)


    def SetColorByRoundness(self, value: 'bool') -> "void":
        """SetColorByRoundness(tubeConvertTubesToImageD3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByRoundness(self, value)


    def SetColorByIntensity(self, value: 'bool') -> "void":
        """SetColorByIntensity(tubeConvertTubesToImageD3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByIntensity(self, value)


    def GetColorByTubeID(self) -> "bool":
        """GetColorByTubeID(tubeConvertTubesToImageD3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByTubeID(self)


    def GetColorByRadius(self) -> "bool":
        """GetColorByRadius(tubeConvertTubesToImageD3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByRadius(self)


    def GetColorByRidgeness(self) -> "bool":
        """GetColorByRidgeness(tubeConvertTubesToImageD3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByRidgeness(self)


    def GetColorByMedialness(self) -> "bool":
        """GetColorByMedialness(tubeConvertTubesToImageD3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByMedialness(self)


    def GetColorByBranchness(self) -> "bool":
        """GetColorByBranchness(tubeConvertTubesToImageD3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByBranchness(self)


    def GetColorByCurvature(self) -> "bool":
        """GetColorByCurvature(tubeConvertTubesToImageD3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByCurvature(self)


    def GetColorByLevelness(self) -> "bool":
        """GetColorByLevelness(tubeConvertTubesToImageD3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByLevelness(self)


    def GetColorByRoundness(self) -> "bool":
        """GetColorByRoundness(tubeConvertTubesToImageD3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByRoundness(self)


    def GetColorByIntensity(self) -> "bool":
        """GetColorByIntensity(tubeConvertTubesToImageD3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByIntensity(self)


    def SetTemplateImage(self, pTemplateImage: 'itkImageD3') -> "void":
        """SetTemplateImage(tubeConvertTubesToImageD3 self, itkImageD3 pTemplateImage)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetTemplateImage(self, pTemplateImage)


    def GetTemplateImage(self) -> "itkImageD3 const *":
        """GetTemplateImage(tubeConvertTubesToImageD3 self) -> itkImageD3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetTemplateImage(self)


    def SetInput(self, value: 'itkSpatialObject3') -> "void":
        """SetInput(tubeConvertTubesToImageD3 self, itkSpatialObject3 value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetInput(self, value)


    def GetInput(self) -> "itkSpatialObject3 const *":
        """GetInput(tubeConvertTubesToImageD3 self) -> itkSpatialObject3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetInput(self)


    def GetOutput(self) -> "itkImageD3 *":
        """GetOutput(tubeConvertTubesToImageD3 self) -> itkImageD3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetOutput(self)

    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageD3

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageD3 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToImageD3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageD3

        Create a new object of the class tubeConvertTubesToImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToImageD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToImageD3.Clone = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_Clone, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetUseRadius, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetUseRadius, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByTubeID, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByRadius, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByRidgeness, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByMedialness, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByBranchness, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByCurvature, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByLevelness, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByRoundness, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByIntensity, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByTubeID, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByRadius, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByRidgeness, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByMedialness, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByBranchness, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByCurvature, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByLevelness, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByRoundness, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByIntensity, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetTemplateImage, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetTemplateImage, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.SetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetInput, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetInput, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3.GetOutput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetOutput, None, tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3_swigregister = _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_swigregister
tubeConvertTubesToImageD3_swigregister(tubeConvertTubesToImageD3)

def tubeConvertTubesToImageD3___New_orig__() -> "tubeConvertTubesToImageD3_Pointer":
    """tubeConvertTubesToImageD3___New_orig__() -> tubeConvertTubesToImageD3_Pointer"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3___New_orig__()

def tubeConvertTubesToImageD3_cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageD3 *":
    """tubeConvertTubesToImageD3_cast(itkLightObject obj) -> tubeConvertTubesToImageD3"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_cast(obj)

class tubeConvertTubesToImageF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToImageF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToImageF2_Pointer":
        """__New_orig__() -> tubeConvertTubesToImageF2_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToImageF2_Pointer":
        """Clone(tubeConvertTubesToImageF2 self) -> tubeConvertTubesToImageF2_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_Clone(self)


    def SetUseRadius(self, value: 'bool') -> "void":
        """SetUseRadius(tubeConvertTubesToImageF2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetUseRadius(self, value)


    def GetUseRadius(self) -> "bool":
        """GetUseRadius(tubeConvertTubesToImageF2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetUseRadius(self)


    def SetColorByTubeID(self, value: 'bool') -> "void":
        """SetColorByTubeID(tubeConvertTubesToImageF2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByTubeID(self, value)


    def SetColorByRadius(self, value: 'bool') -> "void":
        """SetColorByRadius(tubeConvertTubesToImageF2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByRadius(self, value)


    def SetColorByRidgeness(self, value: 'bool') -> "void":
        """SetColorByRidgeness(tubeConvertTubesToImageF2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByRidgeness(self, value)


    def SetColorByMedialness(self, value: 'bool') -> "void":
        """SetColorByMedialness(tubeConvertTubesToImageF2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByMedialness(self, value)


    def SetColorByBranchness(self, value: 'bool') -> "void":
        """SetColorByBranchness(tubeConvertTubesToImageF2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByBranchness(self, value)


    def SetColorByCurvature(self, value: 'bool') -> "void":
        """SetColorByCurvature(tubeConvertTubesToImageF2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByCurvature(self, value)


    def SetColorByLevelness(self, value: 'bool') -> "void":
        """SetColorByLevelness(tubeConvertTubesToImageF2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByLevelness(self, value)


    def SetColorByRoundness(self, value: 'bool') -> "void":
        """SetColorByRoundness(tubeConvertTubesToImageF2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByRoundness(self, value)


    def SetColorByIntensity(self, value: 'bool') -> "void":
        """SetColorByIntensity(tubeConvertTubesToImageF2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByIntensity(self, value)


    def GetColorByTubeID(self) -> "bool":
        """GetColorByTubeID(tubeConvertTubesToImageF2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByTubeID(self)


    def GetColorByRadius(self) -> "bool":
        """GetColorByRadius(tubeConvertTubesToImageF2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByRadius(self)


    def GetColorByRidgeness(self) -> "bool":
        """GetColorByRidgeness(tubeConvertTubesToImageF2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByRidgeness(self)


    def GetColorByMedialness(self) -> "bool":
        """GetColorByMedialness(tubeConvertTubesToImageF2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByMedialness(self)


    def GetColorByBranchness(self) -> "bool":
        """GetColorByBranchness(tubeConvertTubesToImageF2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByBranchness(self)


    def GetColorByCurvature(self) -> "bool":
        """GetColorByCurvature(tubeConvertTubesToImageF2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByCurvature(self)


    def GetColorByLevelness(self) -> "bool":
        """GetColorByLevelness(tubeConvertTubesToImageF2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByLevelness(self)


    def GetColorByRoundness(self) -> "bool":
        """GetColorByRoundness(tubeConvertTubesToImageF2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByRoundness(self)


    def GetColorByIntensity(self) -> "bool":
        """GetColorByIntensity(tubeConvertTubesToImageF2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByIntensity(self)


    def SetTemplateImage(self, pTemplateImage: 'itkImageF2') -> "void":
        """SetTemplateImage(tubeConvertTubesToImageF2 self, itkImageF2 pTemplateImage)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetTemplateImage(self, pTemplateImage)


    def GetTemplateImage(self) -> "itkImageF2 const *":
        """GetTemplateImage(tubeConvertTubesToImageF2 self) -> itkImageF2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetTemplateImage(self)


    def SetInput(self, value: 'itkSpatialObject2') -> "void":
        """SetInput(tubeConvertTubesToImageF2 self, itkSpatialObject2 value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetInput(self, value)


    def GetInput(self) -> "itkSpatialObject2 const *":
        """GetInput(tubeConvertTubesToImageF2 self) -> itkSpatialObject2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetInput(self)


    def GetOutput(self) -> "itkImageF2 *":
        """GetOutput(tubeConvertTubesToImageF2 self) -> itkImageF2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetOutput(self)

    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageF2

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageF2 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToImageF2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageF2

        Create a new object of the class tubeConvertTubesToImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToImageF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToImageF2.Clone = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_Clone, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetUseRadius, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetUseRadius, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByTubeID, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByRadius, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByRidgeness, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByMedialness, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByBranchness, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByCurvature, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByLevelness, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByRoundness, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByIntensity, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByTubeID, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByRadius, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByRidgeness, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByMedialness, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByBranchness, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByCurvature, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByLevelness, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByRoundness, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByIntensity, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetTemplateImage, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetTemplateImage, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.SetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetInput, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetInput, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2.GetOutput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetOutput, None, tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2_swigregister = _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_swigregister
tubeConvertTubesToImageF2_swigregister(tubeConvertTubesToImageF2)

def tubeConvertTubesToImageF2___New_orig__() -> "tubeConvertTubesToImageF2_Pointer":
    """tubeConvertTubesToImageF2___New_orig__() -> tubeConvertTubesToImageF2_Pointer"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2___New_orig__()

def tubeConvertTubesToImageF2_cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageF2 *":
    """tubeConvertTubesToImageF2_cast(itkLightObject obj) -> tubeConvertTubesToImageF2"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_cast(obj)

class tubeConvertTubesToImageF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToImageF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToImageF3_Pointer":
        """__New_orig__() -> tubeConvertTubesToImageF3_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToImageF3_Pointer":
        """Clone(tubeConvertTubesToImageF3 self) -> tubeConvertTubesToImageF3_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_Clone(self)


    def SetUseRadius(self, value: 'bool') -> "void":
        """SetUseRadius(tubeConvertTubesToImageF3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetUseRadius(self, value)


    def GetUseRadius(self) -> "bool":
        """GetUseRadius(tubeConvertTubesToImageF3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetUseRadius(self)


    def SetColorByTubeID(self, value: 'bool') -> "void":
        """SetColorByTubeID(tubeConvertTubesToImageF3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByTubeID(self, value)


    def SetColorByRadius(self, value: 'bool') -> "void":
        """SetColorByRadius(tubeConvertTubesToImageF3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByRadius(self, value)


    def SetColorByRidgeness(self, value: 'bool') -> "void":
        """SetColorByRidgeness(tubeConvertTubesToImageF3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByRidgeness(self, value)


    def SetColorByMedialness(self, value: 'bool') -> "void":
        """SetColorByMedialness(tubeConvertTubesToImageF3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByMedialness(self, value)


    def SetColorByBranchness(self, value: 'bool') -> "void":
        """SetColorByBranchness(tubeConvertTubesToImageF3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByBranchness(self, value)


    def SetColorByCurvature(self, value: 'bool') -> "void":
        """SetColorByCurvature(tubeConvertTubesToImageF3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByCurvature(self, value)


    def SetColorByLevelness(self, value: 'bool') -> "void":
        """SetColorByLevelness(tubeConvertTubesToImageF3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByLevelness(self, value)


    def SetColorByRoundness(self, value: 'bool') -> "void":
        """SetColorByRoundness(tubeConvertTubesToImageF3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByRoundness(self, value)


    def SetColorByIntensity(self, value: 'bool') -> "void":
        """SetColorByIntensity(tubeConvertTubesToImageF3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByIntensity(self, value)


    def GetColorByTubeID(self) -> "bool":
        """GetColorByTubeID(tubeConvertTubesToImageF3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByTubeID(self)


    def GetColorByRadius(self) -> "bool":
        """GetColorByRadius(tubeConvertTubesToImageF3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByRadius(self)


    def GetColorByRidgeness(self) -> "bool":
        """GetColorByRidgeness(tubeConvertTubesToImageF3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByRidgeness(self)


    def GetColorByMedialness(self) -> "bool":
        """GetColorByMedialness(tubeConvertTubesToImageF3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByMedialness(self)


    def GetColorByBranchness(self) -> "bool":
        """GetColorByBranchness(tubeConvertTubesToImageF3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByBranchness(self)


    def GetColorByCurvature(self) -> "bool":
        """GetColorByCurvature(tubeConvertTubesToImageF3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByCurvature(self)


    def GetColorByLevelness(self) -> "bool":
        """GetColorByLevelness(tubeConvertTubesToImageF3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByLevelness(self)


    def GetColorByRoundness(self) -> "bool":
        """GetColorByRoundness(tubeConvertTubesToImageF3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByRoundness(self)


    def GetColorByIntensity(self) -> "bool":
        """GetColorByIntensity(tubeConvertTubesToImageF3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByIntensity(self)


    def SetTemplateImage(self, pTemplateImage: 'itkImageF3') -> "void":
        """SetTemplateImage(tubeConvertTubesToImageF3 self, itkImageF3 pTemplateImage)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetTemplateImage(self, pTemplateImage)


    def GetTemplateImage(self) -> "itkImageF3 const *":
        """GetTemplateImage(tubeConvertTubesToImageF3 self) -> itkImageF3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetTemplateImage(self)


    def SetInput(self, value: 'itkSpatialObject3') -> "void":
        """SetInput(tubeConvertTubesToImageF3 self, itkSpatialObject3 value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetInput(self, value)


    def GetInput(self) -> "itkSpatialObject3 const *":
        """GetInput(tubeConvertTubesToImageF3 self) -> itkSpatialObject3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetInput(self)


    def GetOutput(self) -> "itkImageF3 *":
        """GetOutput(tubeConvertTubesToImageF3 self) -> itkImageF3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetOutput(self)

    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageF3

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageF3 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToImageF3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageF3

        Create a new object of the class tubeConvertTubesToImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToImageF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToImageF3.Clone = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_Clone, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetUseRadius, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetUseRadius, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByTubeID, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByRadius, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByRidgeness, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByMedialness, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByBranchness, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByCurvature, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByLevelness, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByRoundness, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByIntensity, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByTubeID, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByRadius, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByRidgeness, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByMedialness, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByBranchness, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByCurvature, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByLevelness, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByRoundness, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByIntensity, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetTemplateImage, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetTemplateImage, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.SetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetInput, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetInput, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3.GetOutput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetOutput, None, tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3_swigregister = _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_swigregister
tubeConvertTubesToImageF3_swigregister(tubeConvertTubesToImageF3)

def tubeConvertTubesToImageF3___New_orig__() -> "tubeConvertTubesToImageF3_Pointer":
    """tubeConvertTubesToImageF3___New_orig__() -> tubeConvertTubesToImageF3_Pointer"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3___New_orig__()

def tubeConvertTubesToImageF3_cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageF3 *":
    """tubeConvertTubesToImageF3_cast(itkLightObject obj) -> tubeConvertTubesToImageF3"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_cast(obj)

class tubeConvertTubesToImageSS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToImageSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToImageSS2_Pointer":
        """__New_orig__() -> tubeConvertTubesToImageSS2_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToImageSS2_Pointer":
        """Clone(tubeConvertTubesToImageSS2 self) -> tubeConvertTubesToImageSS2_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_Clone(self)


    def SetUseRadius(self, value: 'bool') -> "void":
        """SetUseRadius(tubeConvertTubesToImageSS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetUseRadius(self, value)


    def GetUseRadius(self) -> "bool":
        """GetUseRadius(tubeConvertTubesToImageSS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetUseRadius(self)


    def SetColorByTubeID(self, value: 'bool') -> "void":
        """SetColorByTubeID(tubeConvertTubesToImageSS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByTubeID(self, value)


    def SetColorByRadius(self, value: 'bool') -> "void":
        """SetColorByRadius(tubeConvertTubesToImageSS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByRadius(self, value)


    def SetColorByRidgeness(self, value: 'bool') -> "void":
        """SetColorByRidgeness(tubeConvertTubesToImageSS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByRidgeness(self, value)


    def SetColorByMedialness(self, value: 'bool') -> "void":
        """SetColorByMedialness(tubeConvertTubesToImageSS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByMedialness(self, value)


    def SetColorByBranchness(self, value: 'bool') -> "void":
        """SetColorByBranchness(tubeConvertTubesToImageSS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByBranchness(self, value)


    def SetColorByCurvature(self, value: 'bool') -> "void":
        """SetColorByCurvature(tubeConvertTubesToImageSS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByCurvature(self, value)


    def SetColorByLevelness(self, value: 'bool') -> "void":
        """SetColorByLevelness(tubeConvertTubesToImageSS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByLevelness(self, value)


    def SetColorByRoundness(self, value: 'bool') -> "void":
        """SetColorByRoundness(tubeConvertTubesToImageSS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByRoundness(self, value)


    def SetColorByIntensity(self, value: 'bool') -> "void":
        """SetColorByIntensity(tubeConvertTubesToImageSS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByIntensity(self, value)


    def GetColorByTubeID(self) -> "bool":
        """GetColorByTubeID(tubeConvertTubesToImageSS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByTubeID(self)


    def GetColorByRadius(self) -> "bool":
        """GetColorByRadius(tubeConvertTubesToImageSS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByRadius(self)


    def GetColorByRidgeness(self) -> "bool":
        """GetColorByRidgeness(tubeConvertTubesToImageSS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByRidgeness(self)


    def GetColorByMedialness(self) -> "bool":
        """GetColorByMedialness(tubeConvertTubesToImageSS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByMedialness(self)


    def GetColorByBranchness(self) -> "bool":
        """GetColorByBranchness(tubeConvertTubesToImageSS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByBranchness(self)


    def GetColorByCurvature(self) -> "bool":
        """GetColorByCurvature(tubeConvertTubesToImageSS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByCurvature(self)


    def GetColorByLevelness(self) -> "bool":
        """GetColorByLevelness(tubeConvertTubesToImageSS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByLevelness(self)


    def GetColorByRoundness(self) -> "bool":
        """GetColorByRoundness(tubeConvertTubesToImageSS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByRoundness(self)


    def GetColorByIntensity(self) -> "bool":
        """GetColorByIntensity(tubeConvertTubesToImageSS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByIntensity(self)


    def SetTemplateImage(self, pTemplateImage: 'itkImageSS2') -> "void":
        """SetTemplateImage(tubeConvertTubesToImageSS2 self, itkImageSS2 pTemplateImage)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetTemplateImage(self, pTemplateImage)


    def GetTemplateImage(self) -> "itkImageSS2 const *":
        """GetTemplateImage(tubeConvertTubesToImageSS2 self) -> itkImageSS2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetTemplateImage(self)


    def SetInput(self, value: 'itkSpatialObject2') -> "void":
        """SetInput(tubeConvertTubesToImageSS2 self, itkSpatialObject2 value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetInput(self, value)


    def GetInput(self) -> "itkSpatialObject2 const *":
        """GetInput(tubeConvertTubesToImageSS2 self) -> itkSpatialObject2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetInput(self)


    def GetOutput(self) -> "itkImageSS2 *":
        """GetOutput(tubeConvertTubesToImageSS2 self) -> itkImageSS2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetOutput(self)

    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageSS2

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageSS2 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToImageSS2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageSS2

        Create a new object of the class tubeConvertTubesToImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToImageSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToImageSS2.Clone = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_Clone, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetUseRadius, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetUseRadius, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByTubeID, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByRadius, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByRidgeness, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByMedialness, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByBranchness, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByCurvature, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByLevelness, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByRoundness, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByIntensity, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByTubeID, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByRadius, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByRidgeness, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByMedialness, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByBranchness, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByCurvature, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByLevelness, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByRoundness, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByIntensity, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetTemplateImage, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetTemplateImage, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.SetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetInput, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetInput, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2.GetOutput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetOutput, None, tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2_swigregister = _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_swigregister
tubeConvertTubesToImageSS2_swigregister(tubeConvertTubesToImageSS2)

def tubeConvertTubesToImageSS2___New_orig__() -> "tubeConvertTubesToImageSS2_Pointer":
    """tubeConvertTubesToImageSS2___New_orig__() -> tubeConvertTubesToImageSS2_Pointer"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2___New_orig__()

def tubeConvertTubesToImageSS2_cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageSS2 *":
    """tubeConvertTubesToImageSS2_cast(itkLightObject obj) -> tubeConvertTubesToImageSS2"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_cast(obj)

class tubeConvertTubesToImageSS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToImageSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToImageSS3_Pointer":
        """__New_orig__() -> tubeConvertTubesToImageSS3_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToImageSS3_Pointer":
        """Clone(tubeConvertTubesToImageSS3 self) -> tubeConvertTubesToImageSS3_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_Clone(self)


    def SetUseRadius(self, value: 'bool') -> "void":
        """SetUseRadius(tubeConvertTubesToImageSS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetUseRadius(self, value)


    def GetUseRadius(self) -> "bool":
        """GetUseRadius(tubeConvertTubesToImageSS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetUseRadius(self)


    def SetColorByTubeID(self, value: 'bool') -> "void":
        """SetColorByTubeID(tubeConvertTubesToImageSS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByTubeID(self, value)


    def SetColorByRadius(self, value: 'bool') -> "void":
        """SetColorByRadius(tubeConvertTubesToImageSS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByRadius(self, value)


    def SetColorByRidgeness(self, value: 'bool') -> "void":
        """SetColorByRidgeness(tubeConvertTubesToImageSS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByRidgeness(self, value)


    def SetColorByMedialness(self, value: 'bool') -> "void":
        """SetColorByMedialness(tubeConvertTubesToImageSS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByMedialness(self, value)


    def SetColorByBranchness(self, value: 'bool') -> "void":
        """SetColorByBranchness(tubeConvertTubesToImageSS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByBranchness(self, value)


    def SetColorByCurvature(self, value: 'bool') -> "void":
        """SetColorByCurvature(tubeConvertTubesToImageSS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByCurvature(self, value)


    def SetColorByLevelness(self, value: 'bool') -> "void":
        """SetColorByLevelness(tubeConvertTubesToImageSS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByLevelness(self, value)


    def SetColorByRoundness(self, value: 'bool') -> "void":
        """SetColorByRoundness(tubeConvertTubesToImageSS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByRoundness(self, value)


    def SetColorByIntensity(self, value: 'bool') -> "void":
        """SetColorByIntensity(tubeConvertTubesToImageSS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByIntensity(self, value)


    def GetColorByTubeID(self) -> "bool":
        """GetColorByTubeID(tubeConvertTubesToImageSS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByTubeID(self)


    def GetColorByRadius(self) -> "bool":
        """GetColorByRadius(tubeConvertTubesToImageSS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByRadius(self)


    def GetColorByRidgeness(self) -> "bool":
        """GetColorByRidgeness(tubeConvertTubesToImageSS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByRidgeness(self)


    def GetColorByMedialness(self) -> "bool":
        """GetColorByMedialness(tubeConvertTubesToImageSS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByMedialness(self)


    def GetColorByBranchness(self) -> "bool":
        """GetColorByBranchness(tubeConvertTubesToImageSS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByBranchness(self)


    def GetColorByCurvature(self) -> "bool":
        """GetColorByCurvature(tubeConvertTubesToImageSS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByCurvature(self)


    def GetColorByLevelness(self) -> "bool":
        """GetColorByLevelness(tubeConvertTubesToImageSS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByLevelness(self)


    def GetColorByRoundness(self) -> "bool":
        """GetColorByRoundness(tubeConvertTubesToImageSS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByRoundness(self)


    def GetColorByIntensity(self) -> "bool":
        """GetColorByIntensity(tubeConvertTubesToImageSS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByIntensity(self)


    def SetTemplateImage(self, pTemplateImage: 'itkImageSS3') -> "void":
        """SetTemplateImage(tubeConvertTubesToImageSS3 self, itkImageSS3 pTemplateImage)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetTemplateImage(self, pTemplateImage)


    def GetTemplateImage(self) -> "itkImageSS3 const *":
        """GetTemplateImage(tubeConvertTubesToImageSS3 self) -> itkImageSS3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetTemplateImage(self)


    def SetInput(self, value: 'itkSpatialObject3') -> "void":
        """SetInput(tubeConvertTubesToImageSS3 self, itkSpatialObject3 value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetInput(self, value)


    def GetInput(self) -> "itkSpatialObject3 const *":
        """GetInput(tubeConvertTubesToImageSS3 self) -> itkSpatialObject3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetInput(self)


    def GetOutput(self) -> "itkImageSS3 *":
        """GetOutput(tubeConvertTubesToImageSS3 self) -> itkImageSS3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetOutput(self)

    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageSS3

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageSS3 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToImageSS3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageSS3

        Create a new object of the class tubeConvertTubesToImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToImageSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToImageSS3.Clone = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_Clone, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetUseRadius, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetUseRadius, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByTubeID, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByRadius, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByRidgeness, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByMedialness, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByBranchness, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByCurvature, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByLevelness, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByRoundness, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByIntensity, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByTubeID, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByRadius, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByRidgeness, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByMedialness, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByBranchness, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByCurvature, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByLevelness, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByRoundness, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByIntensity, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetTemplateImage, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetTemplateImage, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.SetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetInput, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetInput, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3.GetOutput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetOutput, None, tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3_swigregister = _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_swigregister
tubeConvertTubesToImageSS3_swigregister(tubeConvertTubesToImageSS3)

def tubeConvertTubesToImageSS3___New_orig__() -> "tubeConvertTubesToImageSS3_Pointer":
    """tubeConvertTubesToImageSS3___New_orig__() -> tubeConvertTubesToImageSS3_Pointer"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3___New_orig__()

def tubeConvertTubesToImageSS3_cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageSS3 *":
    """tubeConvertTubesToImageSS3_cast(itkLightObject obj) -> tubeConvertTubesToImageSS3"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_cast(obj)

class tubeConvertTubesToImageUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToImageUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToImageUC2_Pointer":
        """__New_orig__() -> tubeConvertTubesToImageUC2_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToImageUC2_Pointer":
        """Clone(tubeConvertTubesToImageUC2 self) -> tubeConvertTubesToImageUC2_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_Clone(self)


    def SetUseRadius(self, value: 'bool') -> "void":
        """SetUseRadius(tubeConvertTubesToImageUC2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetUseRadius(self, value)


    def GetUseRadius(self) -> "bool":
        """GetUseRadius(tubeConvertTubesToImageUC2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetUseRadius(self)


    def SetColorByTubeID(self, value: 'bool') -> "void":
        """SetColorByTubeID(tubeConvertTubesToImageUC2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByTubeID(self, value)


    def SetColorByRadius(self, value: 'bool') -> "void":
        """SetColorByRadius(tubeConvertTubesToImageUC2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByRadius(self, value)


    def SetColorByRidgeness(self, value: 'bool') -> "void":
        """SetColorByRidgeness(tubeConvertTubesToImageUC2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByRidgeness(self, value)


    def SetColorByMedialness(self, value: 'bool') -> "void":
        """SetColorByMedialness(tubeConvertTubesToImageUC2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByMedialness(self, value)


    def SetColorByBranchness(self, value: 'bool') -> "void":
        """SetColorByBranchness(tubeConvertTubesToImageUC2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByBranchness(self, value)


    def SetColorByCurvature(self, value: 'bool') -> "void":
        """SetColorByCurvature(tubeConvertTubesToImageUC2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByCurvature(self, value)


    def SetColorByLevelness(self, value: 'bool') -> "void":
        """SetColorByLevelness(tubeConvertTubesToImageUC2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByLevelness(self, value)


    def SetColorByRoundness(self, value: 'bool') -> "void":
        """SetColorByRoundness(tubeConvertTubesToImageUC2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByRoundness(self, value)


    def SetColorByIntensity(self, value: 'bool') -> "void":
        """SetColorByIntensity(tubeConvertTubesToImageUC2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByIntensity(self, value)


    def GetColorByTubeID(self) -> "bool":
        """GetColorByTubeID(tubeConvertTubesToImageUC2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByTubeID(self)


    def GetColorByRadius(self) -> "bool":
        """GetColorByRadius(tubeConvertTubesToImageUC2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByRadius(self)


    def GetColorByRidgeness(self) -> "bool":
        """GetColorByRidgeness(tubeConvertTubesToImageUC2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByRidgeness(self)


    def GetColorByMedialness(self) -> "bool":
        """GetColorByMedialness(tubeConvertTubesToImageUC2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByMedialness(self)


    def GetColorByBranchness(self) -> "bool":
        """GetColorByBranchness(tubeConvertTubesToImageUC2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByBranchness(self)


    def GetColorByCurvature(self) -> "bool":
        """GetColorByCurvature(tubeConvertTubesToImageUC2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByCurvature(self)


    def GetColorByLevelness(self) -> "bool":
        """GetColorByLevelness(tubeConvertTubesToImageUC2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByLevelness(self)


    def GetColorByRoundness(self) -> "bool":
        """GetColorByRoundness(tubeConvertTubesToImageUC2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByRoundness(self)


    def GetColorByIntensity(self) -> "bool":
        """GetColorByIntensity(tubeConvertTubesToImageUC2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByIntensity(self)


    def SetTemplateImage(self, pTemplateImage: 'itkImageUC2') -> "void":
        """SetTemplateImage(tubeConvertTubesToImageUC2 self, itkImageUC2 pTemplateImage)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetTemplateImage(self, pTemplateImage)


    def GetTemplateImage(self) -> "itkImageUC2 const *":
        """GetTemplateImage(tubeConvertTubesToImageUC2 self) -> itkImageUC2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetTemplateImage(self)


    def SetInput(self, value: 'itkSpatialObject2') -> "void":
        """SetInput(tubeConvertTubesToImageUC2 self, itkSpatialObject2 value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetInput(self, value)


    def GetInput(self) -> "itkSpatialObject2 const *":
        """GetInput(tubeConvertTubesToImageUC2 self) -> itkSpatialObject2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetInput(self)


    def GetOutput(self) -> "itkImageUC2 *":
        """GetOutput(tubeConvertTubesToImageUC2 self) -> itkImageUC2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetOutput(self)

    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageUC2

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageUC2 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToImageUC2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageUC2

        Create a new object of the class tubeConvertTubesToImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToImageUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToImageUC2.Clone = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_Clone, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetUseRadius, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetUseRadius, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByTubeID, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByRadius, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByRidgeness, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByMedialness, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByBranchness, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByCurvature, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByLevelness, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByRoundness, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByIntensity, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByTubeID, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByRadius, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByRidgeness, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByMedialness, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByBranchness, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByCurvature, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByLevelness, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByRoundness, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByIntensity, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetTemplateImage, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetTemplateImage, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.SetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetInput, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetInput, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2.GetOutput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetOutput, None, tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2_swigregister = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_swigregister
tubeConvertTubesToImageUC2_swigregister(tubeConvertTubesToImageUC2)

def tubeConvertTubesToImageUC2___New_orig__() -> "tubeConvertTubesToImageUC2_Pointer":
    """tubeConvertTubesToImageUC2___New_orig__() -> tubeConvertTubesToImageUC2_Pointer"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2___New_orig__()

def tubeConvertTubesToImageUC2_cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageUC2 *":
    """tubeConvertTubesToImageUC2_cast(itkLightObject obj) -> tubeConvertTubesToImageUC2"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_cast(obj)

class tubeConvertTubesToImageUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToImageUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToImageUC3_Pointer":
        """__New_orig__() -> tubeConvertTubesToImageUC3_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToImageUC3_Pointer":
        """Clone(tubeConvertTubesToImageUC3 self) -> tubeConvertTubesToImageUC3_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_Clone(self)


    def SetUseRadius(self, value: 'bool') -> "void":
        """SetUseRadius(tubeConvertTubesToImageUC3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetUseRadius(self, value)


    def GetUseRadius(self) -> "bool":
        """GetUseRadius(tubeConvertTubesToImageUC3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetUseRadius(self)


    def SetColorByTubeID(self, value: 'bool') -> "void":
        """SetColorByTubeID(tubeConvertTubesToImageUC3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByTubeID(self, value)


    def SetColorByRadius(self, value: 'bool') -> "void":
        """SetColorByRadius(tubeConvertTubesToImageUC3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByRadius(self, value)


    def SetColorByRidgeness(self, value: 'bool') -> "void":
        """SetColorByRidgeness(tubeConvertTubesToImageUC3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByRidgeness(self, value)


    def SetColorByMedialness(self, value: 'bool') -> "void":
        """SetColorByMedialness(tubeConvertTubesToImageUC3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByMedialness(self, value)


    def SetColorByBranchness(self, value: 'bool') -> "void":
        """SetColorByBranchness(tubeConvertTubesToImageUC3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByBranchness(self, value)


    def SetColorByCurvature(self, value: 'bool') -> "void":
        """SetColorByCurvature(tubeConvertTubesToImageUC3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByCurvature(self, value)


    def SetColorByLevelness(self, value: 'bool') -> "void":
        """SetColorByLevelness(tubeConvertTubesToImageUC3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByLevelness(self, value)


    def SetColorByRoundness(self, value: 'bool') -> "void":
        """SetColorByRoundness(tubeConvertTubesToImageUC3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByRoundness(self, value)


    def SetColorByIntensity(self, value: 'bool') -> "void":
        """SetColorByIntensity(tubeConvertTubesToImageUC3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByIntensity(self, value)


    def GetColorByTubeID(self) -> "bool":
        """GetColorByTubeID(tubeConvertTubesToImageUC3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByTubeID(self)


    def GetColorByRadius(self) -> "bool":
        """GetColorByRadius(tubeConvertTubesToImageUC3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByRadius(self)


    def GetColorByRidgeness(self) -> "bool":
        """GetColorByRidgeness(tubeConvertTubesToImageUC3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByRidgeness(self)


    def GetColorByMedialness(self) -> "bool":
        """GetColorByMedialness(tubeConvertTubesToImageUC3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByMedialness(self)


    def GetColorByBranchness(self) -> "bool":
        """GetColorByBranchness(tubeConvertTubesToImageUC3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByBranchness(self)


    def GetColorByCurvature(self) -> "bool":
        """GetColorByCurvature(tubeConvertTubesToImageUC3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByCurvature(self)


    def GetColorByLevelness(self) -> "bool":
        """GetColorByLevelness(tubeConvertTubesToImageUC3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByLevelness(self)


    def GetColorByRoundness(self) -> "bool":
        """GetColorByRoundness(tubeConvertTubesToImageUC3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByRoundness(self)


    def GetColorByIntensity(self) -> "bool":
        """GetColorByIntensity(tubeConvertTubesToImageUC3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByIntensity(self)


    def SetTemplateImage(self, pTemplateImage: 'itkImageUC3') -> "void":
        """SetTemplateImage(tubeConvertTubesToImageUC3 self, itkImageUC3 pTemplateImage)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetTemplateImage(self, pTemplateImage)


    def GetTemplateImage(self) -> "itkImageUC3 const *":
        """GetTemplateImage(tubeConvertTubesToImageUC3 self) -> itkImageUC3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetTemplateImage(self)


    def SetInput(self, value: 'itkSpatialObject3') -> "void":
        """SetInput(tubeConvertTubesToImageUC3 self, itkSpatialObject3 value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetInput(self, value)


    def GetInput(self) -> "itkSpatialObject3 const *":
        """GetInput(tubeConvertTubesToImageUC3 self) -> itkSpatialObject3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetInput(self)


    def GetOutput(self) -> "itkImageUC3 *":
        """GetOutput(tubeConvertTubesToImageUC3 self) -> itkImageUC3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetOutput(self)

    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageUC3

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageUC3 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToImageUC3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageUC3

        Create a new object of the class tubeConvertTubesToImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToImageUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToImageUC3.Clone = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_Clone, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetUseRadius, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetUseRadius, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByTubeID, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByRadius, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByRidgeness, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByMedialness, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByBranchness, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByCurvature, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByLevelness, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByRoundness, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByIntensity, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByTubeID, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByRadius, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByRidgeness, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByMedialness, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByBranchness, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByCurvature, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByLevelness, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByRoundness, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByIntensity, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetTemplateImage, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetTemplateImage, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.SetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetInput, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetInput, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3.GetOutput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetOutput, None, tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3_swigregister = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_swigregister
tubeConvertTubesToImageUC3_swigregister(tubeConvertTubesToImageUC3)

def tubeConvertTubesToImageUC3___New_orig__() -> "tubeConvertTubesToImageUC3_Pointer":
    """tubeConvertTubesToImageUC3___New_orig__() -> tubeConvertTubesToImageUC3_Pointer"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3___New_orig__()

def tubeConvertTubesToImageUC3_cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageUC3 *":
    """tubeConvertTubesToImageUC3_cast(itkLightObject obj) -> tubeConvertTubesToImageUC3"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_cast(obj)

class tubeConvertTubesToImageUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToImageUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToImageUS2_Pointer":
        """__New_orig__() -> tubeConvertTubesToImageUS2_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToImageUS2_Pointer":
        """Clone(tubeConvertTubesToImageUS2 self) -> tubeConvertTubesToImageUS2_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_Clone(self)


    def SetUseRadius(self, value: 'bool') -> "void":
        """SetUseRadius(tubeConvertTubesToImageUS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetUseRadius(self, value)


    def GetUseRadius(self) -> "bool":
        """GetUseRadius(tubeConvertTubesToImageUS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetUseRadius(self)


    def SetColorByTubeID(self, value: 'bool') -> "void":
        """SetColorByTubeID(tubeConvertTubesToImageUS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByTubeID(self, value)


    def SetColorByRadius(self, value: 'bool') -> "void":
        """SetColorByRadius(tubeConvertTubesToImageUS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByRadius(self, value)


    def SetColorByRidgeness(self, value: 'bool') -> "void":
        """SetColorByRidgeness(tubeConvertTubesToImageUS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByRidgeness(self, value)


    def SetColorByMedialness(self, value: 'bool') -> "void":
        """SetColorByMedialness(tubeConvertTubesToImageUS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByMedialness(self, value)


    def SetColorByBranchness(self, value: 'bool') -> "void":
        """SetColorByBranchness(tubeConvertTubesToImageUS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByBranchness(self, value)


    def SetColorByCurvature(self, value: 'bool') -> "void":
        """SetColorByCurvature(tubeConvertTubesToImageUS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByCurvature(self, value)


    def SetColorByLevelness(self, value: 'bool') -> "void":
        """SetColorByLevelness(tubeConvertTubesToImageUS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByLevelness(self, value)


    def SetColorByRoundness(self, value: 'bool') -> "void":
        """SetColorByRoundness(tubeConvertTubesToImageUS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByRoundness(self, value)


    def SetColorByIntensity(self, value: 'bool') -> "void":
        """SetColorByIntensity(tubeConvertTubesToImageUS2 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByIntensity(self, value)


    def GetColorByTubeID(self) -> "bool":
        """GetColorByTubeID(tubeConvertTubesToImageUS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByTubeID(self)


    def GetColorByRadius(self) -> "bool":
        """GetColorByRadius(tubeConvertTubesToImageUS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByRadius(self)


    def GetColorByRidgeness(self) -> "bool":
        """GetColorByRidgeness(tubeConvertTubesToImageUS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByRidgeness(self)


    def GetColorByMedialness(self) -> "bool":
        """GetColorByMedialness(tubeConvertTubesToImageUS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByMedialness(self)


    def GetColorByBranchness(self) -> "bool":
        """GetColorByBranchness(tubeConvertTubesToImageUS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByBranchness(self)


    def GetColorByCurvature(self) -> "bool":
        """GetColorByCurvature(tubeConvertTubesToImageUS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByCurvature(self)


    def GetColorByLevelness(self) -> "bool":
        """GetColorByLevelness(tubeConvertTubesToImageUS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByLevelness(self)


    def GetColorByRoundness(self) -> "bool":
        """GetColorByRoundness(tubeConvertTubesToImageUS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByRoundness(self)


    def GetColorByIntensity(self) -> "bool":
        """GetColorByIntensity(tubeConvertTubesToImageUS2 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByIntensity(self)


    def SetTemplateImage(self, pTemplateImage: 'itkImageUS2') -> "void":
        """SetTemplateImage(tubeConvertTubesToImageUS2 self, itkImageUS2 pTemplateImage)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetTemplateImage(self, pTemplateImage)


    def GetTemplateImage(self) -> "itkImageUS2 const *":
        """GetTemplateImage(tubeConvertTubesToImageUS2 self) -> itkImageUS2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetTemplateImage(self)


    def SetInput(self, value: 'itkSpatialObject2') -> "void":
        """SetInput(tubeConvertTubesToImageUS2 self, itkSpatialObject2 value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetInput(self, value)


    def GetInput(self) -> "itkSpatialObject2 const *":
        """GetInput(tubeConvertTubesToImageUS2 self) -> itkSpatialObject2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetInput(self)


    def GetOutput(self) -> "itkImageUS2 *":
        """GetOutput(tubeConvertTubesToImageUS2 self) -> itkImageUS2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetOutput(self)

    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageUS2

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageUS2 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToImageUS2"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageUS2

        Create a new object of the class tubeConvertTubesToImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToImageUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToImageUS2.Clone = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_Clone, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetUseRadius, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetUseRadius, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByTubeID, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByRadius, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByRidgeness, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByMedialness, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByBranchness, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByCurvature, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByLevelness, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByRoundness, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByIntensity, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByTubeID, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByRadius, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByRidgeness, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByMedialness, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByBranchness, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByCurvature, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByLevelness, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByRoundness, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByIntensity, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetTemplateImage, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetTemplateImage, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.SetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetInput, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetInput, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2.GetOutput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetOutput, None, tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2_swigregister = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_swigregister
tubeConvertTubesToImageUS2_swigregister(tubeConvertTubesToImageUS2)

def tubeConvertTubesToImageUS2___New_orig__() -> "tubeConvertTubesToImageUS2_Pointer":
    """tubeConvertTubesToImageUS2___New_orig__() -> tubeConvertTubesToImageUS2_Pointer"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2___New_orig__()

def tubeConvertTubesToImageUS2_cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageUS2 *":
    """tubeConvertTubesToImageUS2_cast(itkLightObject obj) -> tubeConvertTubesToImageUS2"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_cast(obj)

class tubeConvertTubesToImageUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ tubeConvertTubesToImageUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "tubeConvertTubesToImageUS3_Pointer":
        """__New_orig__() -> tubeConvertTubesToImageUS3_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "tubeConvertTubesToImageUS3_Pointer":
        """Clone(tubeConvertTubesToImageUS3 self) -> tubeConvertTubesToImageUS3_Pointer"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_Clone(self)


    def SetUseRadius(self, value: 'bool') -> "void":
        """SetUseRadius(tubeConvertTubesToImageUS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetUseRadius(self, value)


    def GetUseRadius(self) -> "bool":
        """GetUseRadius(tubeConvertTubesToImageUS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetUseRadius(self)


    def SetColorByTubeID(self, value: 'bool') -> "void":
        """SetColorByTubeID(tubeConvertTubesToImageUS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByTubeID(self, value)


    def SetColorByRadius(self, value: 'bool') -> "void":
        """SetColorByRadius(tubeConvertTubesToImageUS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByRadius(self, value)


    def SetColorByRidgeness(self, value: 'bool') -> "void":
        """SetColorByRidgeness(tubeConvertTubesToImageUS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByRidgeness(self, value)


    def SetColorByMedialness(self, value: 'bool') -> "void":
        """SetColorByMedialness(tubeConvertTubesToImageUS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByMedialness(self, value)


    def SetColorByBranchness(self, value: 'bool') -> "void":
        """SetColorByBranchness(tubeConvertTubesToImageUS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByBranchness(self, value)


    def SetColorByCurvature(self, value: 'bool') -> "void":
        """SetColorByCurvature(tubeConvertTubesToImageUS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByCurvature(self, value)


    def SetColorByLevelness(self, value: 'bool') -> "void":
        """SetColorByLevelness(tubeConvertTubesToImageUS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByLevelness(self, value)


    def SetColorByRoundness(self, value: 'bool') -> "void":
        """SetColorByRoundness(tubeConvertTubesToImageUS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByRoundness(self, value)


    def SetColorByIntensity(self, value: 'bool') -> "void":
        """SetColorByIntensity(tubeConvertTubesToImageUS3 self, bool value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByIntensity(self, value)


    def GetColorByTubeID(self) -> "bool":
        """GetColorByTubeID(tubeConvertTubesToImageUS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByTubeID(self)


    def GetColorByRadius(self) -> "bool":
        """GetColorByRadius(tubeConvertTubesToImageUS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByRadius(self)


    def GetColorByRidgeness(self) -> "bool":
        """GetColorByRidgeness(tubeConvertTubesToImageUS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByRidgeness(self)


    def GetColorByMedialness(self) -> "bool":
        """GetColorByMedialness(tubeConvertTubesToImageUS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByMedialness(self)


    def GetColorByBranchness(self) -> "bool":
        """GetColorByBranchness(tubeConvertTubesToImageUS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByBranchness(self)


    def GetColorByCurvature(self) -> "bool":
        """GetColorByCurvature(tubeConvertTubesToImageUS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByCurvature(self)


    def GetColorByLevelness(self) -> "bool":
        """GetColorByLevelness(tubeConvertTubesToImageUS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByLevelness(self)


    def GetColorByRoundness(self) -> "bool":
        """GetColorByRoundness(tubeConvertTubesToImageUS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByRoundness(self)


    def GetColorByIntensity(self) -> "bool":
        """GetColorByIntensity(tubeConvertTubesToImageUS3 self) -> bool"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByIntensity(self)


    def SetTemplateImage(self, pTemplateImage: 'itkImageUS3') -> "void":
        """SetTemplateImage(tubeConvertTubesToImageUS3 self, itkImageUS3 pTemplateImage)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetTemplateImage(self, pTemplateImage)


    def GetTemplateImage(self) -> "itkImageUS3 const *":
        """GetTemplateImage(tubeConvertTubesToImageUS3 self) -> itkImageUS3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetTemplateImage(self)


    def SetInput(self, value: 'itkSpatialObject3') -> "void":
        """SetInput(tubeConvertTubesToImageUS3 self, itkSpatialObject3 value)"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetInput(self, value)


    def GetInput(self) -> "itkSpatialObject3 const *":
        """GetInput(tubeConvertTubesToImageUS3 self) -> itkSpatialObject3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetInput(self)


    def GetOutput(self) -> "itkImageUS3 *":
        """GetOutput(tubeConvertTubesToImageUS3 self) -> itkImageUS3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetOutput(self)

    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageUS3

    def cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageUS3 *":
        """cast(itkLightObject obj) -> tubeConvertTubesToImageUS3"""
        return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageUS3

        Create a new object of the class tubeConvertTubesToImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeConvertTubesToImageUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

tubeConvertTubesToImageUS3.Clone = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_Clone, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetUseRadius, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetUseRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetUseRadius, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByTubeID, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByRadius, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByRidgeness, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByMedialness, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByBranchness, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByCurvature, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByLevelness, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByRoundness, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByIntensity, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetColorByTubeID = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByTubeID, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetColorByRadius = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByRadius, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetColorByRidgeness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByRidgeness, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetColorByMedialness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByMedialness, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetColorByBranchness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByBranchness, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetColorByCurvature = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByCurvature, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetColorByLevelness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByLevelness, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetColorByRoundness = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByRoundness, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetColorByIntensity = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByIntensity, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetTemplateImage, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetTemplateImage = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetTemplateImage, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.SetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetInput, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetInput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetInput, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3.GetOutput = new_instancemethod(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetOutput, None, tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3_swigregister = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_swigregister
tubeConvertTubesToImageUS3_swigregister(tubeConvertTubesToImageUS3)

def tubeConvertTubesToImageUS3___New_orig__() -> "tubeConvertTubesToImageUS3_Pointer":
    """tubeConvertTubesToImageUS3___New_orig__() -> tubeConvertTubesToImageUS3_Pointer"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3___New_orig__()

def tubeConvertTubesToImageUS3_cast(obj: 'itkLightObject') -> "tubeConvertTubesToImageUS3 *":
    """tubeConvertTubesToImageUS3_cast(itkLightObject obj) -> tubeConvertTubesToImageUS3"""
    return _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def convert_tubes_to_image(*args, **kwargs):
    """Procedural interface for ConvertTubesToImage"""
    import itk
    instance = itk.ConvertTubesToImage.New(*args, **kwargs)
    return instance.__internal_call__()

def convert_tubes_to_image_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ConvertTubesToImage, itkTemplate.itkTemplate):
        filter_object = itk.ConvertTubesToImage.values()[0]
    else:
        filter_object = itk.ConvertTubesToImage

    convert_tubes_to_image.__doc__ = filter_object.__doc__
    convert_tubes_to_image.__doc__ += "\n Args are Input(s) to the filter.\n"
    convert_tubes_to_image.__doc__ += "Available Keyword Arguments:\n"
    convert_tubes_to_image.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



