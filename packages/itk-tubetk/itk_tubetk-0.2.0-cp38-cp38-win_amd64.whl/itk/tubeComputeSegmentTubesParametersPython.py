# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeComputeSegmentTubesParametersPython
else:
    import _tubeComputeSegmentTubesParametersPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeComputeSegmentTubesParametersPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeComputeSegmentTubesParametersPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vectorPython
import itkCovariantVectorPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkVectorPython
import itkPointPython
import vnl_matrix_fixedPython
import itkRGBPixelPython
import itkSizePython
import itkRGBAPixelPython
import itkIndexPython
import itkOffsetPython
import itkImageRegionPython
import itkContinuousIndexPython

def tubeComputeSegmentTubesParametersD3_New():
  return tubeComputeSegmentTubesParametersD3.New()


def tubeComputeSegmentTubesParametersF3_New():
  return tubeComputeSegmentTubesParametersF3.New()


def tubeComputeSegmentTubesParametersUS3_New():
  return tubeComputeSegmentTubesParametersUS3.New()


def tubeComputeSegmentTubesParametersUC3_New():
  return tubeComputeSegmentTubesParametersUC3.New()


def tubeComputeSegmentTubesParametersSS3_New():
  return tubeComputeSegmentTubesParametersSS3.New()


def tubeComputeSegmentTubesParametersD2_New():
  return tubeComputeSegmentTubesParametersD2.New()


def tubeComputeSegmentTubesParametersF2_New():
  return tubeComputeSegmentTubesParametersF2.New()


def tubeComputeSegmentTubesParametersUS2_New():
  return tubeComputeSegmentTubesParametersUS2.New()


def tubeComputeSegmentTubesParametersUC2_New():
  return tubeComputeSegmentTubesParametersUC2.New()


def tubeComputeSegmentTubesParametersSS2_New():
  return tubeComputeSegmentTubesParametersSS2.New()

class tubeComputeSegmentTubesParametersD2(ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeComputeSegmentTubesParametersD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_Clone)
    SetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_SetInputImage)
    GetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetInputImage)
    SetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_SetMaskInputImage)
    GetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetMaskInputImage)
    SetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_SetScaleInputImage)
    GetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetScaleInputImage)
    SetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_SetMaskBackGroundId)
    GetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetMaskBackGroundId)
    SetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_SetMaskTubeId)
    GetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetMaskTubeId)
    SetParameterFile = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_SetParameterFile)
    GetSeedData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetSeedData)
    GetTubeData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetTubeData)
    GetBkgData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetBkgData)
    GetSeedDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetSeedDataIndexList)
    GetTubeDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetTubeDataIndexList)
    GetBkgDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_GetBkgDataIndexList)
    __swig_destroy__ = _tubeComputeSegmentTubesParametersPython.delete_tubeComputeSegmentTubesParametersD2
    cast = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_cast)

    def New(*args, **kargs):
        """New() -> tubeComputeSegmentTubesParametersD2

        Create a new object of the class tubeComputeSegmentTubesParametersD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeSegmentTubesParametersD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeSegmentTubesParametersD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeSegmentTubesParametersD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeComputeSegmentTubesParametersD2 in _tubeComputeSegmentTubesParametersPython:
_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_swigregister(tubeComputeSegmentTubesParametersD2)
tubeComputeSegmentTubesParametersD2___New_orig__ = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2___New_orig__
tubeComputeSegmentTubesParametersD2_cast = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD2_cast

class tubeComputeSegmentTubesParametersD3(ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeComputeSegmentTubesParametersD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_Clone)
    SetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_SetInputImage)
    GetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetInputImage)
    SetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_SetMaskInputImage)
    GetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetMaskInputImage)
    SetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_SetScaleInputImage)
    GetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetScaleInputImage)
    SetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_SetMaskBackGroundId)
    GetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetMaskBackGroundId)
    SetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_SetMaskTubeId)
    GetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetMaskTubeId)
    SetParameterFile = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_SetParameterFile)
    GetSeedData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetSeedData)
    GetTubeData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetTubeData)
    GetBkgData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetBkgData)
    GetSeedDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetSeedDataIndexList)
    GetTubeDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetTubeDataIndexList)
    GetBkgDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_GetBkgDataIndexList)
    __swig_destroy__ = _tubeComputeSegmentTubesParametersPython.delete_tubeComputeSegmentTubesParametersD3
    cast = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_cast)

    def New(*args, **kargs):
        """New() -> tubeComputeSegmentTubesParametersD3

        Create a new object of the class tubeComputeSegmentTubesParametersD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeSegmentTubesParametersD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeSegmentTubesParametersD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeSegmentTubesParametersD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeComputeSegmentTubesParametersD3 in _tubeComputeSegmentTubesParametersPython:
_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_swigregister(tubeComputeSegmentTubesParametersD3)
tubeComputeSegmentTubesParametersD3___New_orig__ = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3___New_orig__
tubeComputeSegmentTubesParametersD3_cast = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersD3_cast

class tubeComputeSegmentTubesParametersF2(ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeComputeSegmentTubesParametersF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_Clone)
    SetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_SetInputImage)
    GetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetInputImage)
    SetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_SetMaskInputImage)
    GetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetMaskInputImage)
    SetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_SetScaleInputImage)
    GetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetScaleInputImage)
    SetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_SetMaskBackGroundId)
    GetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetMaskBackGroundId)
    SetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_SetMaskTubeId)
    GetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetMaskTubeId)
    SetParameterFile = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_SetParameterFile)
    GetSeedData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetSeedData)
    GetTubeData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetTubeData)
    GetBkgData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetBkgData)
    GetSeedDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetSeedDataIndexList)
    GetTubeDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetTubeDataIndexList)
    GetBkgDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_GetBkgDataIndexList)
    __swig_destroy__ = _tubeComputeSegmentTubesParametersPython.delete_tubeComputeSegmentTubesParametersF2
    cast = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_cast)

    def New(*args, **kargs):
        """New() -> tubeComputeSegmentTubesParametersF2

        Create a new object of the class tubeComputeSegmentTubesParametersF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeSegmentTubesParametersF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeSegmentTubesParametersF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeSegmentTubesParametersF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeComputeSegmentTubesParametersF2 in _tubeComputeSegmentTubesParametersPython:
_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_swigregister(tubeComputeSegmentTubesParametersF2)
tubeComputeSegmentTubesParametersF2___New_orig__ = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2___New_orig__
tubeComputeSegmentTubesParametersF2_cast = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF2_cast

class tubeComputeSegmentTubesParametersF3(ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeComputeSegmentTubesParametersF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_Clone)
    SetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_SetInputImage)
    GetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetInputImage)
    SetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_SetMaskInputImage)
    GetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetMaskInputImage)
    SetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_SetScaleInputImage)
    GetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetScaleInputImage)
    SetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_SetMaskBackGroundId)
    GetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetMaskBackGroundId)
    SetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_SetMaskTubeId)
    GetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetMaskTubeId)
    SetParameterFile = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_SetParameterFile)
    GetSeedData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetSeedData)
    GetTubeData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetTubeData)
    GetBkgData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetBkgData)
    GetSeedDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetSeedDataIndexList)
    GetTubeDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetTubeDataIndexList)
    GetBkgDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_GetBkgDataIndexList)
    __swig_destroy__ = _tubeComputeSegmentTubesParametersPython.delete_tubeComputeSegmentTubesParametersF3
    cast = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_cast)

    def New(*args, **kargs):
        """New() -> tubeComputeSegmentTubesParametersF3

        Create a new object of the class tubeComputeSegmentTubesParametersF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeSegmentTubesParametersF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeSegmentTubesParametersF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeSegmentTubesParametersF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeComputeSegmentTubesParametersF3 in _tubeComputeSegmentTubesParametersPython:
_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_swigregister(tubeComputeSegmentTubesParametersF3)
tubeComputeSegmentTubesParametersF3___New_orig__ = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3___New_orig__
tubeComputeSegmentTubesParametersF3_cast = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersF3_cast

class tubeComputeSegmentTubesParametersSS2(ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeComputeSegmentTubesParametersSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_Clone)
    SetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_SetInputImage)
    GetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetInputImage)
    SetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_SetMaskInputImage)
    GetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetMaskInputImage)
    SetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_SetScaleInputImage)
    GetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetScaleInputImage)
    SetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_SetMaskBackGroundId)
    GetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetMaskBackGroundId)
    SetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_SetMaskTubeId)
    GetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetMaskTubeId)
    SetParameterFile = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_SetParameterFile)
    GetSeedData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetSeedData)
    GetTubeData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetTubeData)
    GetBkgData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetBkgData)
    GetSeedDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetSeedDataIndexList)
    GetTubeDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetTubeDataIndexList)
    GetBkgDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_GetBkgDataIndexList)
    __swig_destroy__ = _tubeComputeSegmentTubesParametersPython.delete_tubeComputeSegmentTubesParametersSS2
    cast = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeComputeSegmentTubesParametersSS2

        Create a new object of the class tubeComputeSegmentTubesParametersSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeSegmentTubesParametersSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeSegmentTubesParametersSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeSegmentTubesParametersSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeComputeSegmentTubesParametersSS2 in _tubeComputeSegmentTubesParametersPython:
_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_swigregister(tubeComputeSegmentTubesParametersSS2)
tubeComputeSegmentTubesParametersSS2___New_orig__ = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2___New_orig__
tubeComputeSegmentTubesParametersSS2_cast = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS2_cast

class tubeComputeSegmentTubesParametersSS3(ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeComputeSegmentTubesParametersSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_Clone)
    SetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_SetInputImage)
    GetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetInputImage)
    SetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_SetMaskInputImage)
    GetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetMaskInputImage)
    SetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_SetScaleInputImage)
    GetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetScaleInputImage)
    SetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_SetMaskBackGroundId)
    GetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetMaskBackGroundId)
    SetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_SetMaskTubeId)
    GetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetMaskTubeId)
    SetParameterFile = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_SetParameterFile)
    GetSeedData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetSeedData)
    GetTubeData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetTubeData)
    GetBkgData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetBkgData)
    GetSeedDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetSeedDataIndexList)
    GetTubeDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetTubeDataIndexList)
    GetBkgDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_GetBkgDataIndexList)
    __swig_destroy__ = _tubeComputeSegmentTubesParametersPython.delete_tubeComputeSegmentTubesParametersSS3
    cast = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeComputeSegmentTubesParametersSS3

        Create a new object of the class tubeComputeSegmentTubesParametersSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeSegmentTubesParametersSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeSegmentTubesParametersSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeSegmentTubesParametersSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeComputeSegmentTubesParametersSS3 in _tubeComputeSegmentTubesParametersPython:
_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_swigregister(tubeComputeSegmentTubesParametersSS3)
tubeComputeSegmentTubesParametersSS3___New_orig__ = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3___New_orig__
tubeComputeSegmentTubesParametersSS3_cast = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersSS3_cast

class tubeComputeSegmentTubesParametersUC2(ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeComputeSegmentTubesParametersUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_Clone)
    SetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_SetInputImage)
    GetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetInputImage)
    SetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_SetMaskInputImage)
    GetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetMaskInputImage)
    SetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_SetScaleInputImage)
    GetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetScaleInputImage)
    SetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_SetMaskBackGroundId)
    GetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetMaskBackGroundId)
    SetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_SetMaskTubeId)
    GetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetMaskTubeId)
    SetParameterFile = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_SetParameterFile)
    GetSeedData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetSeedData)
    GetTubeData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetTubeData)
    GetBkgData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetBkgData)
    GetSeedDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetSeedDataIndexList)
    GetTubeDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetTubeDataIndexList)
    GetBkgDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_GetBkgDataIndexList)
    __swig_destroy__ = _tubeComputeSegmentTubesParametersPython.delete_tubeComputeSegmentTubesParametersUC2
    cast = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeComputeSegmentTubesParametersUC2

        Create a new object of the class tubeComputeSegmentTubesParametersUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeSegmentTubesParametersUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeSegmentTubesParametersUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeSegmentTubesParametersUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeComputeSegmentTubesParametersUC2 in _tubeComputeSegmentTubesParametersPython:
_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_swigregister(tubeComputeSegmentTubesParametersUC2)
tubeComputeSegmentTubesParametersUC2___New_orig__ = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2___New_orig__
tubeComputeSegmentTubesParametersUC2_cast = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC2_cast

class tubeComputeSegmentTubesParametersUC3(ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeComputeSegmentTubesParametersUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_Clone)
    SetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_SetInputImage)
    GetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetInputImage)
    SetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_SetMaskInputImage)
    GetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetMaskInputImage)
    SetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_SetScaleInputImage)
    GetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetScaleInputImage)
    SetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_SetMaskBackGroundId)
    GetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetMaskBackGroundId)
    SetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_SetMaskTubeId)
    GetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetMaskTubeId)
    SetParameterFile = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_SetParameterFile)
    GetSeedData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetSeedData)
    GetTubeData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetTubeData)
    GetBkgData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetBkgData)
    GetSeedDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetSeedDataIndexList)
    GetTubeDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetTubeDataIndexList)
    GetBkgDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_GetBkgDataIndexList)
    __swig_destroy__ = _tubeComputeSegmentTubesParametersPython.delete_tubeComputeSegmentTubesParametersUC3
    cast = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeComputeSegmentTubesParametersUC3

        Create a new object of the class tubeComputeSegmentTubesParametersUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeSegmentTubesParametersUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeSegmentTubesParametersUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeSegmentTubesParametersUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeComputeSegmentTubesParametersUC3 in _tubeComputeSegmentTubesParametersPython:
_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_swigregister(tubeComputeSegmentTubesParametersUC3)
tubeComputeSegmentTubesParametersUC3___New_orig__ = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3___New_orig__
tubeComputeSegmentTubesParametersUC3_cast = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUC3_cast

class tubeComputeSegmentTubesParametersUS2(ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeComputeSegmentTubesParametersUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_Clone)
    SetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_SetInputImage)
    GetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetInputImage)
    SetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_SetMaskInputImage)
    GetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetMaskInputImage)
    SetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_SetScaleInputImage)
    GetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetScaleInputImage)
    SetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_SetMaskBackGroundId)
    GetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetMaskBackGroundId)
    SetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_SetMaskTubeId)
    GetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetMaskTubeId)
    SetParameterFile = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_SetParameterFile)
    GetSeedData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetSeedData)
    GetTubeData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetTubeData)
    GetBkgData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetBkgData)
    GetSeedDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetSeedDataIndexList)
    GetTubeDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetTubeDataIndexList)
    GetBkgDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_GetBkgDataIndexList)
    __swig_destroy__ = _tubeComputeSegmentTubesParametersPython.delete_tubeComputeSegmentTubesParametersUS2
    cast = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeComputeSegmentTubesParametersUS2

        Create a new object of the class tubeComputeSegmentTubesParametersUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeSegmentTubesParametersUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeSegmentTubesParametersUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeSegmentTubesParametersUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeComputeSegmentTubesParametersUS2 in _tubeComputeSegmentTubesParametersPython:
_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_swigregister(tubeComputeSegmentTubesParametersUS2)
tubeComputeSegmentTubesParametersUS2___New_orig__ = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2___New_orig__
tubeComputeSegmentTubesParametersUS2_cast = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS2_cast

class tubeComputeSegmentTubesParametersUS3(ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeComputeSegmentTubesParametersUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_Clone)
    SetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_SetInputImage)
    GetInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetInputImage)
    SetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_SetMaskInputImage)
    GetMaskInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetMaskInputImage)
    SetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_SetScaleInputImage)
    GetScaleInputImage = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetScaleInputImage)
    SetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_SetMaskBackGroundId)
    GetMaskBackGroundId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetMaskBackGroundId)
    SetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_SetMaskTubeId)
    GetMaskTubeId = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetMaskTubeId)
    SetParameterFile = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_SetParameterFile)
    GetSeedData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetSeedData)
    GetTubeData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetTubeData)
    GetBkgData = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetBkgData)
    GetSeedDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetSeedDataIndexList)
    GetTubeDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetTubeDataIndexList)
    GetBkgDataIndexList = _swig_new_instance_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_GetBkgDataIndexList)
    __swig_destroy__ = _tubeComputeSegmentTubesParametersPython.delete_tubeComputeSegmentTubesParametersUS3
    cast = _swig_new_static_method(_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeComputeSegmentTubesParametersUS3

        Create a new object of the class tubeComputeSegmentTubesParametersUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeComputeSegmentTubesParametersUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = tubeComputeSegmentTubesParametersUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = tubeComputeSegmentTubesParametersUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeComputeSegmentTubesParametersUS3 in _tubeComputeSegmentTubesParametersPython:
_tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_swigregister(tubeComputeSegmentTubesParametersUS3)
tubeComputeSegmentTubesParametersUS3___New_orig__ = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3___New_orig__
tubeComputeSegmentTubesParametersUS3_cast = _tubeComputeSegmentTubesParametersPython.tubeComputeSegmentTubesParametersUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def compute_segment_tubes_parameters(*args, **kwargs):
    """Procedural interface for ComputeSegmentTubesParameters"""
    import itk
    instance = itk.ComputeSegmentTubesParameters.New(*args, **kwargs)
    return instance.__internal_call__()

def compute_segment_tubes_parameters_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ComputeSegmentTubesParameters, itkTemplate.itkTemplate):
        filter_object = itk.ComputeSegmentTubesParameters.values()[0]
    else:
        filter_object = itk.ComputeSegmentTubesParameters

    compute_segment_tubes_parameters.__doc__ = filter_object.__doc__
    compute_segment_tubes_parameters.__doc__ += "\n Args are Input(s) to the filter.\n"
    compute_segment_tubes_parameters.__doc__ += "Available Keyword Arguments:\n"
    compute_segment_tubes_parameters.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



