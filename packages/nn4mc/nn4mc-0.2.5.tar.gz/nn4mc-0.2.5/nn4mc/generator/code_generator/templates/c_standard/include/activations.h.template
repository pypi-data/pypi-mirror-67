<%BEGIN_DEFINITION_TEMPLATE>
/********************
    activations.h

    Code generated using nn4mc.

    This file defines possible activation functions.

*/

#ifndef __ACTIVATION_H__
#define __ACTIVATION_H__

<%LAYER_DATATYPE_DELIMITER> activate(<%LAYER_DATATYPE_DELIMITER> input, <%INDEX_DATATYPE_DELIMITER> output_shape, char type);

<%ACTIVATIONS>

#endif
<%END_DEFINITION_TEMPLATE>

<%SIGMOID_BEGIN>
<%LAYER_DATATYPE_DELIMITER> sigmoid(<%LAYER_DATATYPE_DELIMITER> input);
<%SIGMOID_END>

<%SOFTPLUS_BEGIN>
<%LAYER_DATATYPE_DELIMITER> softplus(<%LAYER_DATATYPE_DELIMITER> input);
<%SOFTPLUS_END>

<%SOFTSIGN_BEGIN>
<%LAYER_DATATYPE_DELIMITER> softsign(<%LAYER_DATATYPE_DELIMITER> input);
<%SOFTSIGN_END>

<%HARD_SIGMOID_BEGIN>
<%LAYER_DATATYPE_DELIMITER> hard_sigmoid(<%LAYER_DATATYPE_DELIMITER> input);
<%HARD_SIGMOID_END>

<%EXPONENTIAL_BEGIN>
<%LAYER_DATATYPE_DELIMITER> exponential(<%LAYER_DATATYPE_DELIMITER> input);
<%EXPONENTIAL_END>

<%RELU_BEGIN>
<%LAYER_DATATYPE_DELIMITER> relu(<%LAYER_DATATYPE_DELIMITER> input);
<%RELU_END>

<%HYPER_TAN_BEGIN>
<%LAYER_DATATYPE_DELIMITER> hyper_tan(<%LAYER_DATATYPE_DELIMITER> input);
<%HYPER_TAN_END>

<%SOFTMAX_BEGIN>
<%LAYER_DATATYPE_DELIMITER> softmax(<%LAYER_DATATYPE_DELIMITER> input, <%INDEX_DATATYPE_DELIMITER> output_shape);
<%SOFTMAX_END>
