<%BEGIN_DEFINITION_TEMPLATE>
/********************
    simplernn.h

    Code generated using nn4mc.

    This file defines a simple recurrent layer.

*/

#ifndef __SIMPLERNN_H__
#define __SIMPLERNN_H__

struct SimpleRNN {

	// Weights and biases defining the layer
	<%WEIGHT_DATATYPE_DELIMITER>* weights;			// Pointer to constant weight array
    <%WEIGHT_DATATYPE_DELIMITER>* w_rec;
	<%WEIGHT_DATATYPE_DELIMITER>* biases;			// Pointer to constant bias

    <%INDEX_DATATYPE_DELIMITER> input_shape[2];
    <%INDEX_DATATYPE_DELIMITER> output_shape[2];

    <%ACTIVATION_DATATYPE_DELIMITER> activation;
    <%ACTIVATION_DATATYPE_DELIMITER> recurrent_activation;    
    bool go_backwards;

    <%LAYER_DATATYPE_DELIMITER> * prev_h;
};

struct SimpleRNN buildSimpleRNN(<%WEIGHT_DATATYPE_DELIMITER>*, <%WEIGHT_DATATYPE_DELIMITER>*, <%WEIGHT_DATATYPE_DELIMITER> * , <%INDEX_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER>, <%ACTIVATION_DATATYPE_DELIMITER>, <%ACTIVATION_DATATYPE_DELIMITER>, bool);

<%LAYER_DATATYPE_DELIMITER> * fwdSimpleRNN(struct SimpleRNN, <%LAYER_DATATYPE_DELIMITER>* );

#endif
<%END_DEFINITION_TEMPLATE>
