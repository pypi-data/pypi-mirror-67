<%BEGIN_DEFINITION_TEMPLATE>
/********************
    conv2d.h

    Code generated using nn4mc.

    This file defines an 2 dimensional convolution layer.

*/

#ifndef __CONV2D_H__
#define __CONV2D_H__

struct Conv2D {
	// Weights and biases defining the layer
	<%WEIGHT_DATATYPE_DELIMITER>* weights;			// Pointer to constant weight array
	<%WEIGHT_DATATYPE_DELIMITER>* bias;				// Pointer to constant bias

	// Kernel information
	<%INDEX_DATATYPE_DELIMITER> weight_shape[4];	// (NUM_INPUT_CHANNELS x KERNEL_WIDTH x KERNEL_HEIGHT x NUM_OUTPUT_CHANNELS)

    <%INDEX_DATATYPE_DELIMITER> strides[2];			// (STRIDE_WIDTH x STRIDE_HEIGHT)

    <%INDEX_DATATYPE_DELIMITER> filters;

    <%INDEX_DATATYPE_DELIMITER> dilation_rate[2];

    <%ACTIVATION_DATATYPE_DELIMITER> activation;
    <%ACTIVATION_DATATYPE_DELIMITER> padding;
    <%ACTIVATION_DATATYPE_DELIMITER> data_format;

    <%INDEX_DATATYPE_DELIMITER> kernel_shape[2];

	// Shape of the input and output
	<%INDEX_DATATYPE_DELIMITER> input_shape[3];		// (INPUT_WIDTH x INPUT_HEIGHT x NUM_INPUT_CHANNELS)
	<%INDEX_DATATYPE_DELIMITER> output_shape[3];	// (OUTPUT_WIDTH x OUTPUT_HEIGHT x NUM_OUTPUT_CHANNELS)
};

struct Conv2D buildConv2D(<%WEIGHT_DATATYPE_DELIMITER>*, <%WEIGHT_DATATYPE_DELIMITER>*, <%INDEX_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER>,
<%ACTIVATION_DATATYPE_DELIMITER>,<%ACTIVATION_DATATYPE_DELIMITER>,<%ACTIVATION_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER> , <%INDEX_DATATYPE_DELIMITER>);

<%LAYER_DATATYPE_DELIMITER>* fwdConv2D(struct Conv2D, <%LAYER_DATATYPE_DELIMITER>*);

#endif
<%END_DEFINITION_TEMPLATE>
