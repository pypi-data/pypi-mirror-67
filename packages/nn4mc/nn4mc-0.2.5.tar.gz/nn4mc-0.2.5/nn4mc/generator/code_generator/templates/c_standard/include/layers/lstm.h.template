<%BEGIN_DEFINITION_TEMPLATE>
/***************************
    lstm.h

    Code generated using nn4mc.

    This file defines a long short term memory layer.

*/

#ifndef __LSTM_H__
#define __LSTM_H__

struct LSTM {
	
    // Weights and biases defining the layer
    <%WEIGHT_DATATYPE_DELIMITER>* weights;			// Pointer to constant weight array
	<%WEIGHT_DATATYPE_DELIMITER>* biases;				// Pointer to constant bias
    <%WEIGHT_DATATYPE_DELIMITER>* wrec;

    <%LAYER_DATATYPE_DELIMITER> * prev_h;
    <%LAYER_DATATYPE_DELIMITER> * prev_c;

    <%INDEX_DATATYPE_DELIMITER> input_shape[2];
    <%INDEX_DATATYPE_DELIMITER> output_size;
    
    <%ACTIVATION_DATATYPE_DELIMITER> activation;
    <%ACTIVATION_DATATYPE_DELIMITER> recurrent_activation;

    <%LAYER_DATATYPE_DELIMITER> dropout;
    <%LAYER_DATATYPE_DELIMITER> recurrent_dropout;

    bool go_backwards;
};

struct LSTM buildLSTM(<%WEIGHT_DATATYPE_DELIMITER>*, <%WEIGHT_DATATYPE_DELIMITER> *, <%WEIGHT_DATATYPE_DELIMITER> *, <%INDEX_DATATYPE_DELIMITER>, <%INDEX_DATATYPE_DELIMITER> , <%INDEX_DATATYPE_DELIMITER> , <%ACTIVATION_DATATYPE_DELIMITER> , <%ACTIVATION_DATATYPE_DELIMITER>, <%LAYER_DATATYPE_DELIMITER> , <%LAYER_DATATYPE_DELIMITER> , bool);

<%LAYER_DATATYPE_DELIMITER> * fwdLSTM(struct LSTM, <%LAYER_DATATYPE_DELIMITER>*);

#endif
<%END_DEFINITION_TEMPLATE>
