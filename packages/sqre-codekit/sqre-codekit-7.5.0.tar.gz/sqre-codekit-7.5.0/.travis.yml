---
# yamllint disable rule:line-length
sudo: false
matrix:
  include:
    - env: TEST='pytest'
      language: python
      python: &pyver '3.6'
      install: pip install --upgrade 'pip>=9' setuptools_scm
      script: python setup.py test

    - env: TEST='github-tag-release'
      language: python
      python: *pyver
      install: &codekit_install
        - pip install --upgrade 'pip>=9' setuptools_scm
        - python setup.py sdist
        - pip install dist/sqre-codekit-*.tar.gz
      script: |
        set -e

        # check argparse help formatting for errors
        "$TEST" -h

        if [[ $TRAVIS_SECURE_ENV_VARS == true ]]; then
          # verify a past weekly tag -- the eups tag name and git tag names are
          # in sync except for s/_/-/
          "$TEST" \
            --verify \
            --debug \
            --limit 10 \
            --org 'lsst' \
            --allow-team 'Data Management' \
            --allow-team 'DM Externals' \
            --external-team 'DM Externals' \
            --deny-team 'DM Auxilliaries' \
            --email 'sqre-admin@lists.lsst.org' \
            --user 'sqreadmin' \
            --token "$SQREADMIN_TOKEN" \
            --ignore-git-tagger \
            --ignore-git-message \
            --manifest 'b3595' \
            'w.2018.18'

          # verify a past official release where the git tag was generated from
          # an rcX eups tag.  This validates the location of the git tags but
          # does not inspect the official eups release tag at all.
          "$TEST" \
            --verify \
            --debug \
            --limit 10 \
            --org 'lsst' \
            --allow-team 'Data Management' \
            --allow-team 'DM Externals' \
            --external-team 'DM Externals' \
            --deny-team 'DM Auxilliaries' \
            --email 'sqre-admin@lists.lsst.org' \
            --user 'sqreadmin' \
            --token "$SQREADMIN_TOKEN" \
            --ignore-git-tagger \
            --ignore-git-message \
            --eups-tag 'v15_0_rc3' \
            --manifest 'b3504' \
            '15.0'

          # verify a past official release using the eups tag. As the eups
          # product version strings will be out of sync between the versiondb
          # manifest it was based on and the eups tag, the eups product version
          # strings have to be ignored.
          "$TEST" \
            --verify \
            --debug \
            --limit 10 \
            --org 'lsst' \
            --allow-team 'Data Management' \
            --allow-team 'DM Externals' \
            --external-team 'DM Externals' \
            --deny-team 'DM Auxilliaries' \
            --email 'sqre-admin@lists.lsst.org' \
            --user 'sqreadmin' \
            --token "$SQREADMIN_TOKEN" \
            --ignore-manifest-versions \
            --ignore-git-tagger \
            --ignore-git-message \
            --manifest 'b3504' \
            '15.0'

          "$TEST" \
            --dry-run \
            --debug \
            --limit 10 \
            --org 'lsst' \
            --allow-team 'Data Management' \
            --allow-team 'DM Externals' \
            --external-team 'DM Externals' \
            --deny-team 'DM Auxilliaries' \
            --email 'sqre-admin@lists.lsst.org' \
            --user 'sqreadmin' \
            --token "$SQREADMIN_TOKEN" \
            --ignore-manifest-versions \
            --ignore-git-tagger \
            --ignore-git-message \
            --manifest 'b3595' \
            --manifest-only \
            'w.2018.18'
        else
          echo "Unable to test without travis secure env vars."
        fi

    - env: TEST='github-tag-teams'
      language: python
      python: *pyver
      install: *codekit_install
      script: |
        set -e

        # check argparse help formatting for errors
        "$TEST" -h

        if [[ $TRAVIS_SECURE_ENV_VARS == true ]]; then
          # create
          "$TEST" \
            --debug \
            --dry-run \
            --org 'lsst' \
            --allow-team 'DM Auxilliaries' \
            --deny-team 'DM Externals' \
            --token "$SQREADMIN_TOKEN" \
            --user 'sqreadmin' \
            --email 'sqre-admin@lists.lsst.org' \
            --tag 'foo' \
            --tag 'bar'

          # --delete
          "$TEST" \
            --debug \
            --dry-run \
            --delete \
            --org 'lsst' \
            --allow-team 'DM Auxilliaries' \
            --deny-team 'DM Externals' \
            --token "$SQREADMIN_TOKEN" \
            --user 'sqreadmin' \
            --email 'sqre-admin@lists.lsst.org' \
            --tag 'foo' \
            --tag 'bar'
        else
          echo "Unable to test without travis secure env vars."
        fi

    - env: TEST='github-decimate-org'
      language: python
      python: *pyver
      install: *codekit_install
      script: |
        set -e

        # check argparse help formatting for errors
        "$TEST" -h

        if [[ $TRAVIS_SECURE_ENV_VARS == true ]]; then
          "$TEST" \
            --dry-run \
            --debug \
            --org 'batmanuel-sandbox' \
            --token "$SQREADMIN_TOKEN" \
            --delete-repos \
            --delete-repos-limit 3 \
            --delete-teams \
            --delete-teams-limit 3
        else
          echo "Unable to test without travis secure env vars."
        fi

    - env: TEST='github-fork-org'
      language: python
      python: *pyver
      install: *codekit_install
      script: |
        set -e

        # check argparse help formatting for errors
        "$TEST" -h

        if [[ $TRAVIS_SECURE_ENV_VARS == true ]]; then
          "$TEST" \
            --dry-run \
            --debug \
            --src-org 'lsst' \
            --dst-org 'batmanuel-sandbox' \
            --token "$SQREADMIN_TOKEN" \
            --team 'DM Auxilliaries' \
            --team 'DM Externals' \
            --team 'Data Management' \
            --limit 10
            #--copy-teams
        else
          echo "Unable to test without travis secure env vars."
        fi

    - env: TEST='github-get-ratelimit'
      language: python
      python: *pyver
      install: *codekit_install
      script: |
        set -e

        # check argparse help formatting for errors
        "$TEST" -h

        if [[ $TRAVIS_SECURE_ENV_VARS == true ]]; then
          "$TEST" \
            --debug \
            --token "$SQREADMIN_TOKEN"
        else
          echo "Unable to test without travis secure env vars."
        fi

    - env: TEST='github-auth'
      language: python
      python: *pyver
      install: *codekit_install
      script: |
        set -e

        # check argparse help formatting for errors
        "$TEST" -h

    - env: TEST='github-list-repos'
      language: python
      python: *pyver
      install: *codekit_install
      script: |
        set -e

        # check argparse help formatting for errors
        "$TEST" -h

    - env: TEST='github-mv-repos-to-team'
      language: python
      python: *pyver
      install: *codekit_install
      script: |
        set -e

        # check argparse help formatting for errors
        "$TEST" -h

    - env:
        TEST='github-auth'
        DM_SQUARE_DEBUG='bogus_non_int_able_value'
      language: python
      python: *pyver
      install: *codekit_install
      script: |
        # should fail
        "$TEST" -u foo
        [[ $? == 1 ]]

    - env: TEST=markdownlint
      language: c
      services:
        - docker
      script: ./tests/mdl.sh

    - env: TEST=make
      language: c
      script: ./tests/make.sh

    - env: TEST=hadolint
      language: c
      services:
        - docker
      script: ./tests/hadolint.sh

    - env: TEST=yamllint
      language: c
      services:
        - docker
      script: ./tests/yamllint.sh

    - env: TEST=shellcheck
      language: c
      services:
        - docker
      script: ./tests/shellcheck.sh

    - stage: pypi release
      if: (NOT type IN (pull_request)) AND (tag IS present)
      language: python
      python: &pyver '3.6'
      install: *codekit_install
      script: skip
      deploy:
        provider: pypi
        user: sqre-admin
        skip_upload_docs: true
        distributions: sdist bdist_wheel
        password:
          secure: f88F6UgUAxe73pQuX5yGHdl96e/dcQIFClBc6mNgzAVDjxWXskQ/YRCcbO81yxdjsQRfBJsOiiQKcuM76k1iaOQTazQtdG2Wc/S29qzLlReBNTvo4iMBTg1TDSkT5RnDKrxG4omphlgJP2C9i+b0TjDcKJ26uh8t6m6eUs/Mffw=
        # yamllint disable-line rule:truthy
        on:
          tags: true
          branch: master
          repo: lsst-sqre/sqre-codekit
env:
  global:
    - secure: WEvb3zfO3XL0vUqIyckr3qZ7RWP5Iw9Pxbgw2Ei8tB8FSqz5DzU99xwl+ucTDQXIGYs4M1ROnf0hpCPP9OM0eSZaRPTf8BEK0SNjDEIQO4Rc89dskNqhf1CFQnCauJhk2ZJ/q0i4J9dV/igN6Ub/3kMRHov6i1UTfqs6ixfo3Fg=
branches:
  only:
    - master
    # also matched against tag pushes
    - /^\d+\.\d+\.\d+$/
notifications:
  email: false
