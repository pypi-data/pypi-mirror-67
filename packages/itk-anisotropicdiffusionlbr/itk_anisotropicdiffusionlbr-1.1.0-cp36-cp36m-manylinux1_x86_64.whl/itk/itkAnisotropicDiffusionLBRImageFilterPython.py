# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkAnisotropicDiffusionLBRImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkAnisotropicDiffusionLBRImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkAnisotropicDiffusionLBRImageFilterPython
            return _itkAnisotropicDiffusionLBRImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkAnisotropicDiffusionLBRImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkAnisotropicDiffusionLBRImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkAnisotropicDiffusionLBRImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkCovariantVectorPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkRGBAPixelPython
import itkImageRegionPython
import itkRGBPixelPython
import itkImageToImageFilterAPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython

def itkAnisotropicDiffusionLBRImageFilterID3_New():
  return itkAnisotropicDiffusionLBRImageFilterID3.New()


def itkAnisotropicDiffusionLBRImageFilterID2_New():
  return itkAnisotropicDiffusionLBRImageFilterID2.New()


def itkAnisotropicDiffusionLBRImageFilterIF3_New():
  return itkAnisotropicDiffusionLBRImageFilterIF3.New()


def itkAnisotropicDiffusionLBRImageFilterIF2_New():
  return itkAnisotropicDiffusionLBRImageFilterIF2.New()


def itkAnisotropicDiffusionLBRImageFilterIUS3_New():
  return itkAnisotropicDiffusionLBRImageFilterIUS3.New()


def itkAnisotropicDiffusionLBRImageFilterIUS2_New():
  return itkAnisotropicDiffusionLBRImageFilterIUS2.New()


def itkAnisotropicDiffusionLBRImageFilterIUC3_New():
  return itkAnisotropicDiffusionLBRImageFilterIUC3.New()


def itkAnisotropicDiffusionLBRImageFilterIUC2_New():
  return itkAnisotropicDiffusionLBRImageFilterIUC2.New()


def itkAnisotropicDiffusionLBRImageFilterISS3_New():
  return itkAnisotropicDiffusionLBRImageFilterISS3.New()


def itkAnisotropicDiffusionLBRImageFilterISS2_New():
  return itkAnisotropicDiffusionLBRImageFilterISS2.New()

class itkAnisotropicDiffusionLBRImageFilterID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkAnisotropicDiffusionLBRImageFilterID2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterID2_Pointer":
        """__New_orig__() -> itkAnisotropicDiffusionLBRImageFilterID2_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAnisotropicDiffusionLBRImageFilterID2_Pointer":
        """Clone(itkAnisotropicDiffusionLBRImageFilterID2 self) -> itkAnisotropicDiffusionLBRImageFilterID2_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_Clone(self)


    def SetNoiseScale(self, _arg: 'double const') -> "void":
        """SetNoiseScale(itkAnisotropicDiffusionLBRImageFilterID2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetNoiseScale(self, _arg)


    def GetNoiseScale(self) -> "double":
        """GetNoiseScale(itkAnisotropicDiffusionLBRImageFilterID2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetNoiseScale(self)


    def SetFeatureScale(self, _arg: 'double const') -> "void":
        """SetFeatureScale(itkAnisotropicDiffusionLBRImageFilterID2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetFeatureScale(self, _arg)


    def GetFeatureScale(self) -> "double":
        """GetFeatureScale(itkAnisotropicDiffusionLBRImageFilterID2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetFeatureScale(self)


    def SetRatioToMaxStableTimeStep(self, _arg: 'double const') -> "void":
        """SetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterID2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetRatioToMaxStableTimeStep(self, _arg)


    def GetRatioToMaxStableTimeStep(self) -> "double":
        """GetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterID2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetRatioToMaxStableTimeStep(self)


    def SetMaxTimeStepsBetweenTensorUpdates(self, _arg: 'int const') -> "void":
        """SetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterID2 self, int const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetMaxTimeStepsBetweenTensorUpdates(self, _arg)


    def GetMaxTimeStepsBetweenTensorUpdates(self) -> "int":
        """GetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterID2 self) -> int"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetMaxTimeStepsBetweenTensorUpdates(self)


    def SetDiffusionTime(self, _arg: 'double const') -> "void":
        """SetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterID2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetDiffusionTime(self, _arg)


    def GetDiffusionTime(self) -> "double":
        """GetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterID2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetDiffusionTime(self)


    def SetAdimensionize(self, _arg: 'bool const') -> "void":
        """SetAdimensionize(itkAnisotropicDiffusionLBRImageFilterID2 self, bool const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetAdimensionize(self, _arg)


    def GetAdimensionize(self) -> "bool":
        """GetAdimensionize(itkAnisotropicDiffusionLBRImageFilterID2 self) -> bool"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetAdimensionize(self)


    def EigenValuesTransform(self, arg0: 'itkFixedArrayD2') -> "itkFixedArrayD2":
        """EigenValuesTransform(itkAnisotropicDiffusionLBRImageFilterID2 self, itkFixedArrayD2 arg0) -> itkFixedArrayD2"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_EigenValuesTransform(self, arg0)


    def GetLastTensorImage(self) -> "itkImageSSRTD22_Pointer":
        """GetLastTensorImage(itkAnisotropicDiffusionLBRImageFilterID2 self) -> itkImageSSRTD22_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetLastTensorImage(self)


    def GetLinearFilterEffectiveTimesAndIterations(self) -> "std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &":
        """GetLinearFilterEffectiveTimesAndIterations(itkAnisotropicDiffusionLBRImageFilterID2 self) -> std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetLinearFilterEffectiveTimesAndIterations(self)

    __swig_destroy__ = _itkAnisotropicDiffusionLBRImageFilterPython.delete_itkAnisotropicDiffusionLBRImageFilterID2

    def cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterID2 *":
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterID2"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionLBRImageFilterID2

        Create a new object of the class itkAnisotropicDiffusionLBRImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAnisotropicDiffusionLBRImageFilterID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAnisotropicDiffusionLBRImageFilterID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionLBRImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionLBRImageFilterID2.Clone = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_Clone, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.SetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.GetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.SetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.GetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.SetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.GetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.SetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.GetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.SetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.GetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.SetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_SetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.GetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.EigenValuesTransform = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_EigenValuesTransform, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.GetLastTensorImage = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetLastTensorImage, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2.GetLinearFilterEffectiveTimesAndIterations = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_GetLinearFilterEffectiveTimesAndIterations, None, itkAnisotropicDiffusionLBRImageFilterID2)
itkAnisotropicDiffusionLBRImageFilterID2_swigregister = _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_swigregister
itkAnisotropicDiffusionLBRImageFilterID2_swigregister(itkAnisotropicDiffusionLBRImageFilterID2)

def itkAnisotropicDiffusionLBRImageFilterID2___New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterID2_Pointer":
    """itkAnisotropicDiffusionLBRImageFilterID2___New_orig__() -> itkAnisotropicDiffusionLBRImageFilterID2_Pointer"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2___New_orig__()

def itkAnisotropicDiffusionLBRImageFilterID2_cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterID2 *":
    """itkAnisotropicDiffusionLBRImageFilterID2_cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterID2"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID2_cast(obj)

class itkAnisotropicDiffusionLBRImageFilterID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkAnisotropicDiffusionLBRImageFilterID3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterID3_Pointer":
        """__New_orig__() -> itkAnisotropicDiffusionLBRImageFilterID3_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAnisotropicDiffusionLBRImageFilterID3_Pointer":
        """Clone(itkAnisotropicDiffusionLBRImageFilterID3 self) -> itkAnisotropicDiffusionLBRImageFilterID3_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_Clone(self)


    def SetNoiseScale(self, _arg: 'double const') -> "void":
        """SetNoiseScale(itkAnisotropicDiffusionLBRImageFilterID3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetNoiseScale(self, _arg)


    def GetNoiseScale(self) -> "double":
        """GetNoiseScale(itkAnisotropicDiffusionLBRImageFilterID3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetNoiseScale(self)


    def SetFeatureScale(self, _arg: 'double const') -> "void":
        """SetFeatureScale(itkAnisotropicDiffusionLBRImageFilterID3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetFeatureScale(self, _arg)


    def GetFeatureScale(self) -> "double":
        """GetFeatureScale(itkAnisotropicDiffusionLBRImageFilterID3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetFeatureScale(self)


    def SetRatioToMaxStableTimeStep(self, _arg: 'double const') -> "void":
        """SetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterID3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetRatioToMaxStableTimeStep(self, _arg)


    def GetRatioToMaxStableTimeStep(self) -> "double":
        """GetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterID3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetRatioToMaxStableTimeStep(self)


    def SetMaxTimeStepsBetweenTensorUpdates(self, _arg: 'int const') -> "void":
        """SetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterID3 self, int const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetMaxTimeStepsBetweenTensorUpdates(self, _arg)


    def GetMaxTimeStepsBetweenTensorUpdates(self) -> "int":
        """GetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterID3 self) -> int"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetMaxTimeStepsBetweenTensorUpdates(self)


    def SetDiffusionTime(self, _arg: 'double const') -> "void":
        """SetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterID3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetDiffusionTime(self, _arg)


    def GetDiffusionTime(self) -> "double":
        """GetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterID3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetDiffusionTime(self)


    def SetAdimensionize(self, _arg: 'bool const') -> "void":
        """SetAdimensionize(itkAnisotropicDiffusionLBRImageFilterID3 self, bool const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetAdimensionize(self, _arg)


    def GetAdimensionize(self) -> "bool":
        """GetAdimensionize(itkAnisotropicDiffusionLBRImageFilterID3 self) -> bool"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetAdimensionize(self)


    def EigenValuesTransform(self, arg0: 'itkFixedArrayD3') -> "itkFixedArrayD3":
        """EigenValuesTransform(itkAnisotropicDiffusionLBRImageFilterID3 self, itkFixedArrayD3 arg0) -> itkFixedArrayD3"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_EigenValuesTransform(self, arg0)


    def GetLastTensorImage(self) -> "itkImageSSRTD33_Pointer":
        """GetLastTensorImage(itkAnisotropicDiffusionLBRImageFilterID3 self) -> itkImageSSRTD33_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetLastTensorImage(self)


    def GetLinearFilterEffectiveTimesAndIterations(self) -> "std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &":
        """GetLinearFilterEffectiveTimesAndIterations(itkAnisotropicDiffusionLBRImageFilterID3 self) -> std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetLinearFilterEffectiveTimesAndIterations(self)

    __swig_destroy__ = _itkAnisotropicDiffusionLBRImageFilterPython.delete_itkAnisotropicDiffusionLBRImageFilterID3

    def cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterID3 *":
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterID3"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionLBRImageFilterID3

        Create a new object of the class itkAnisotropicDiffusionLBRImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAnisotropicDiffusionLBRImageFilterID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAnisotropicDiffusionLBRImageFilterID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionLBRImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionLBRImageFilterID3.Clone = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_Clone, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.SetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.GetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.SetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.GetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.SetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.GetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.SetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.GetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.SetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.GetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.SetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_SetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.GetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.EigenValuesTransform = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_EigenValuesTransform, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.GetLastTensorImage = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetLastTensorImage, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3.GetLinearFilterEffectiveTimesAndIterations = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_GetLinearFilterEffectiveTimesAndIterations, None, itkAnisotropicDiffusionLBRImageFilterID3)
itkAnisotropicDiffusionLBRImageFilterID3_swigregister = _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_swigregister
itkAnisotropicDiffusionLBRImageFilterID3_swigregister(itkAnisotropicDiffusionLBRImageFilterID3)

def itkAnisotropicDiffusionLBRImageFilterID3___New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterID3_Pointer":
    """itkAnisotropicDiffusionLBRImageFilterID3___New_orig__() -> itkAnisotropicDiffusionLBRImageFilterID3_Pointer"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3___New_orig__()

def itkAnisotropicDiffusionLBRImageFilterID3_cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterID3 *":
    """itkAnisotropicDiffusionLBRImageFilterID3_cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterID3"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterID3_cast(obj)

class itkAnisotropicDiffusionLBRImageFilterIF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkAnisotropicDiffusionLBRImageFilterIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIF2_Pointer":
        """__New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIF2_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAnisotropicDiffusionLBRImageFilterIF2_Pointer":
        """Clone(itkAnisotropicDiffusionLBRImageFilterIF2 self) -> itkAnisotropicDiffusionLBRImageFilterIF2_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_Clone(self)


    def SetNoiseScale(self, _arg: 'double const') -> "void":
        """SetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIF2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetNoiseScale(self, _arg)


    def GetNoiseScale(self) -> "double":
        """GetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIF2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetNoiseScale(self)


    def SetFeatureScale(self, _arg: 'double const') -> "void":
        """SetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIF2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetFeatureScale(self, _arg)


    def GetFeatureScale(self) -> "double":
        """GetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIF2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetFeatureScale(self)


    def SetRatioToMaxStableTimeStep(self, _arg: 'double const') -> "void":
        """SetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIF2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetRatioToMaxStableTimeStep(self, _arg)


    def GetRatioToMaxStableTimeStep(self) -> "double":
        """GetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIF2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetRatioToMaxStableTimeStep(self)


    def SetMaxTimeStepsBetweenTensorUpdates(self, _arg: 'int const') -> "void":
        """SetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIF2 self, int const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetMaxTimeStepsBetweenTensorUpdates(self, _arg)


    def GetMaxTimeStepsBetweenTensorUpdates(self) -> "int":
        """GetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIF2 self) -> int"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetMaxTimeStepsBetweenTensorUpdates(self)


    def SetDiffusionTime(self, _arg: 'double const') -> "void":
        """SetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIF2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetDiffusionTime(self, _arg)


    def GetDiffusionTime(self) -> "double":
        """GetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIF2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetDiffusionTime(self)


    def SetAdimensionize(self, _arg: 'bool const') -> "void":
        """SetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIF2 self, bool const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetAdimensionize(self, _arg)


    def GetAdimensionize(self) -> "bool":
        """GetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIF2 self) -> bool"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetAdimensionize(self)


    def EigenValuesTransform(self, arg0: 'itkFixedArrayD2') -> "itkFixedArrayD2":
        """EigenValuesTransform(itkAnisotropicDiffusionLBRImageFilterIF2 self, itkFixedArrayD2 arg0) -> itkFixedArrayD2"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_EigenValuesTransform(self, arg0)


    def GetLastTensorImage(self) -> "itkImageSSRTD22_Pointer":
        """GetLastTensorImage(itkAnisotropicDiffusionLBRImageFilterIF2 self) -> itkImageSSRTD22_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetLastTensorImage(self)


    def GetLinearFilterEffectiveTimesAndIterations(self) -> "std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &":
        """GetLinearFilterEffectiveTimesAndIterations(itkAnisotropicDiffusionLBRImageFilterIF2 self) -> std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetLinearFilterEffectiveTimesAndIterations(self)

    __swig_destroy__ = _itkAnisotropicDiffusionLBRImageFilterPython.delete_itkAnisotropicDiffusionLBRImageFilterIF2

    def cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIF2 *":
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIF2"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionLBRImageFilterIF2

        Create a new object of the class itkAnisotropicDiffusionLBRImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAnisotropicDiffusionLBRImageFilterIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAnisotropicDiffusionLBRImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionLBRImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionLBRImageFilterIF2.Clone = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_Clone, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.SetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.GetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.SetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.GetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.SetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.GetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.SetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.GetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.SetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.GetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.SetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_SetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.GetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.EigenValuesTransform = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_EigenValuesTransform, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.GetLastTensorImage = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetLastTensorImage, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2.GetLinearFilterEffectiveTimesAndIterations = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_GetLinearFilterEffectiveTimesAndIterations, None, itkAnisotropicDiffusionLBRImageFilterIF2)
itkAnisotropicDiffusionLBRImageFilterIF2_swigregister = _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_swigregister
itkAnisotropicDiffusionLBRImageFilterIF2_swigregister(itkAnisotropicDiffusionLBRImageFilterIF2)

def itkAnisotropicDiffusionLBRImageFilterIF2___New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIF2_Pointer":
    """itkAnisotropicDiffusionLBRImageFilterIF2___New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIF2_Pointer"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2___New_orig__()

def itkAnisotropicDiffusionLBRImageFilterIF2_cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIF2 *":
    """itkAnisotropicDiffusionLBRImageFilterIF2_cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIF2"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF2_cast(obj)

class itkAnisotropicDiffusionLBRImageFilterIF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkAnisotropicDiffusionLBRImageFilterIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIF3_Pointer":
        """__New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIF3_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAnisotropicDiffusionLBRImageFilterIF3_Pointer":
        """Clone(itkAnisotropicDiffusionLBRImageFilterIF3 self) -> itkAnisotropicDiffusionLBRImageFilterIF3_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_Clone(self)


    def SetNoiseScale(self, _arg: 'double const') -> "void":
        """SetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIF3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetNoiseScale(self, _arg)


    def GetNoiseScale(self) -> "double":
        """GetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIF3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetNoiseScale(self)


    def SetFeatureScale(self, _arg: 'double const') -> "void":
        """SetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIF3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetFeatureScale(self, _arg)


    def GetFeatureScale(self) -> "double":
        """GetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIF3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetFeatureScale(self)


    def SetRatioToMaxStableTimeStep(self, _arg: 'double const') -> "void":
        """SetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIF3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetRatioToMaxStableTimeStep(self, _arg)


    def GetRatioToMaxStableTimeStep(self) -> "double":
        """GetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIF3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetRatioToMaxStableTimeStep(self)


    def SetMaxTimeStepsBetweenTensorUpdates(self, _arg: 'int const') -> "void":
        """SetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIF3 self, int const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetMaxTimeStepsBetweenTensorUpdates(self, _arg)


    def GetMaxTimeStepsBetweenTensorUpdates(self) -> "int":
        """GetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIF3 self) -> int"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetMaxTimeStepsBetweenTensorUpdates(self)


    def SetDiffusionTime(self, _arg: 'double const') -> "void":
        """SetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIF3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetDiffusionTime(self, _arg)


    def GetDiffusionTime(self) -> "double":
        """GetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIF3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetDiffusionTime(self)


    def SetAdimensionize(self, _arg: 'bool const') -> "void":
        """SetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIF3 self, bool const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetAdimensionize(self, _arg)


    def GetAdimensionize(self) -> "bool":
        """GetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIF3 self) -> bool"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetAdimensionize(self)


    def EigenValuesTransform(self, arg0: 'itkFixedArrayD3') -> "itkFixedArrayD3":
        """EigenValuesTransform(itkAnisotropicDiffusionLBRImageFilterIF3 self, itkFixedArrayD3 arg0) -> itkFixedArrayD3"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_EigenValuesTransform(self, arg0)


    def GetLastTensorImage(self) -> "itkImageSSRTD33_Pointer":
        """GetLastTensorImage(itkAnisotropicDiffusionLBRImageFilterIF3 self) -> itkImageSSRTD33_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetLastTensorImage(self)


    def GetLinearFilterEffectiveTimesAndIterations(self) -> "std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &":
        """GetLinearFilterEffectiveTimesAndIterations(itkAnisotropicDiffusionLBRImageFilterIF3 self) -> std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetLinearFilterEffectiveTimesAndIterations(self)

    __swig_destroy__ = _itkAnisotropicDiffusionLBRImageFilterPython.delete_itkAnisotropicDiffusionLBRImageFilterIF3

    def cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIF3 *":
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIF3"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionLBRImageFilterIF3

        Create a new object of the class itkAnisotropicDiffusionLBRImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAnisotropicDiffusionLBRImageFilterIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAnisotropicDiffusionLBRImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionLBRImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionLBRImageFilterIF3.Clone = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_Clone, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.SetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.GetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.SetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.GetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.SetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.GetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.SetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.GetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.SetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.GetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.SetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_SetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.GetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.EigenValuesTransform = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_EigenValuesTransform, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.GetLastTensorImage = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetLastTensorImage, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3.GetLinearFilterEffectiveTimesAndIterations = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_GetLinearFilterEffectiveTimesAndIterations, None, itkAnisotropicDiffusionLBRImageFilterIF3)
itkAnisotropicDiffusionLBRImageFilterIF3_swigregister = _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_swigregister
itkAnisotropicDiffusionLBRImageFilterIF3_swigregister(itkAnisotropicDiffusionLBRImageFilterIF3)

def itkAnisotropicDiffusionLBRImageFilterIF3___New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIF3_Pointer":
    """itkAnisotropicDiffusionLBRImageFilterIF3___New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIF3_Pointer"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3___New_orig__()

def itkAnisotropicDiffusionLBRImageFilterIF3_cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIF3 *":
    """itkAnisotropicDiffusionLBRImageFilterIF3_cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIF3"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIF3_cast(obj)

class itkAnisotropicDiffusionLBRImageFilterISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkAnisotropicDiffusionLBRImageFilterISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterISS2_Pointer":
        """__New_orig__() -> itkAnisotropicDiffusionLBRImageFilterISS2_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAnisotropicDiffusionLBRImageFilterISS2_Pointer":
        """Clone(itkAnisotropicDiffusionLBRImageFilterISS2 self) -> itkAnisotropicDiffusionLBRImageFilterISS2_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_Clone(self)


    def SetNoiseScale(self, _arg: 'double const') -> "void":
        """SetNoiseScale(itkAnisotropicDiffusionLBRImageFilterISS2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetNoiseScale(self, _arg)


    def GetNoiseScale(self) -> "double":
        """GetNoiseScale(itkAnisotropicDiffusionLBRImageFilterISS2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetNoiseScale(self)


    def SetFeatureScale(self, _arg: 'double const') -> "void":
        """SetFeatureScale(itkAnisotropicDiffusionLBRImageFilterISS2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetFeatureScale(self, _arg)


    def GetFeatureScale(self) -> "double":
        """GetFeatureScale(itkAnisotropicDiffusionLBRImageFilterISS2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetFeatureScale(self)


    def SetRatioToMaxStableTimeStep(self, _arg: 'double const') -> "void":
        """SetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterISS2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetRatioToMaxStableTimeStep(self, _arg)


    def GetRatioToMaxStableTimeStep(self) -> "double":
        """GetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterISS2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetRatioToMaxStableTimeStep(self)


    def SetMaxTimeStepsBetweenTensorUpdates(self, _arg: 'int const') -> "void":
        """SetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterISS2 self, int const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetMaxTimeStepsBetweenTensorUpdates(self, _arg)


    def GetMaxTimeStepsBetweenTensorUpdates(self) -> "int":
        """GetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterISS2 self) -> int"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetMaxTimeStepsBetweenTensorUpdates(self)


    def SetDiffusionTime(self, _arg: 'double const') -> "void":
        """SetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterISS2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetDiffusionTime(self, _arg)


    def GetDiffusionTime(self) -> "double":
        """GetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterISS2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetDiffusionTime(self)


    def SetAdimensionize(self, _arg: 'bool const') -> "void":
        """SetAdimensionize(itkAnisotropicDiffusionLBRImageFilterISS2 self, bool const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetAdimensionize(self, _arg)


    def GetAdimensionize(self) -> "bool":
        """GetAdimensionize(itkAnisotropicDiffusionLBRImageFilterISS2 self) -> bool"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetAdimensionize(self)


    def EigenValuesTransform(self, arg0: 'itkFixedArrayD2') -> "itkFixedArrayD2":
        """EigenValuesTransform(itkAnisotropicDiffusionLBRImageFilterISS2 self, itkFixedArrayD2 arg0) -> itkFixedArrayD2"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_EigenValuesTransform(self, arg0)


    def GetLastTensorImage(self) -> "itkImageSSRTD22_Pointer":
        """GetLastTensorImage(itkAnisotropicDiffusionLBRImageFilterISS2 self) -> itkImageSSRTD22_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetLastTensorImage(self)


    def GetLinearFilterEffectiveTimesAndIterations(self) -> "std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &":
        """GetLinearFilterEffectiveTimesAndIterations(itkAnisotropicDiffusionLBRImageFilterISS2 self) -> std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetLinearFilterEffectiveTimesAndIterations(self)

    __swig_destroy__ = _itkAnisotropicDiffusionLBRImageFilterPython.delete_itkAnisotropicDiffusionLBRImageFilterISS2

    def cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterISS2 *":
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterISS2"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionLBRImageFilterISS2

        Create a new object of the class itkAnisotropicDiffusionLBRImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAnisotropicDiffusionLBRImageFilterISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAnisotropicDiffusionLBRImageFilterISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionLBRImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionLBRImageFilterISS2.Clone = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_Clone, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.SetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.GetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.SetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.GetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.SetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.GetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.SetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.GetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.SetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.GetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.SetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_SetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.GetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.EigenValuesTransform = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_EigenValuesTransform, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.GetLastTensorImage = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetLastTensorImage, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2.GetLinearFilterEffectiveTimesAndIterations = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_GetLinearFilterEffectiveTimesAndIterations, None, itkAnisotropicDiffusionLBRImageFilterISS2)
itkAnisotropicDiffusionLBRImageFilterISS2_swigregister = _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_swigregister
itkAnisotropicDiffusionLBRImageFilterISS2_swigregister(itkAnisotropicDiffusionLBRImageFilterISS2)

def itkAnisotropicDiffusionLBRImageFilterISS2___New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterISS2_Pointer":
    """itkAnisotropicDiffusionLBRImageFilterISS2___New_orig__() -> itkAnisotropicDiffusionLBRImageFilterISS2_Pointer"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2___New_orig__()

def itkAnisotropicDiffusionLBRImageFilterISS2_cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterISS2 *":
    """itkAnisotropicDiffusionLBRImageFilterISS2_cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterISS2"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS2_cast(obj)

class itkAnisotropicDiffusionLBRImageFilterISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkAnisotropicDiffusionLBRImageFilterISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterISS3_Pointer":
        """__New_orig__() -> itkAnisotropicDiffusionLBRImageFilterISS3_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAnisotropicDiffusionLBRImageFilterISS3_Pointer":
        """Clone(itkAnisotropicDiffusionLBRImageFilterISS3 self) -> itkAnisotropicDiffusionLBRImageFilterISS3_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_Clone(self)


    def SetNoiseScale(self, _arg: 'double const') -> "void":
        """SetNoiseScale(itkAnisotropicDiffusionLBRImageFilterISS3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetNoiseScale(self, _arg)


    def GetNoiseScale(self) -> "double":
        """GetNoiseScale(itkAnisotropicDiffusionLBRImageFilterISS3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetNoiseScale(self)


    def SetFeatureScale(self, _arg: 'double const') -> "void":
        """SetFeatureScale(itkAnisotropicDiffusionLBRImageFilterISS3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetFeatureScale(self, _arg)


    def GetFeatureScale(self) -> "double":
        """GetFeatureScale(itkAnisotropicDiffusionLBRImageFilterISS3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetFeatureScale(self)


    def SetRatioToMaxStableTimeStep(self, _arg: 'double const') -> "void":
        """SetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterISS3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetRatioToMaxStableTimeStep(self, _arg)


    def GetRatioToMaxStableTimeStep(self) -> "double":
        """GetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterISS3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetRatioToMaxStableTimeStep(self)


    def SetMaxTimeStepsBetweenTensorUpdates(self, _arg: 'int const') -> "void":
        """SetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterISS3 self, int const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetMaxTimeStepsBetweenTensorUpdates(self, _arg)


    def GetMaxTimeStepsBetweenTensorUpdates(self) -> "int":
        """GetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterISS3 self) -> int"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetMaxTimeStepsBetweenTensorUpdates(self)


    def SetDiffusionTime(self, _arg: 'double const') -> "void":
        """SetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterISS3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetDiffusionTime(self, _arg)


    def GetDiffusionTime(self) -> "double":
        """GetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterISS3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetDiffusionTime(self)


    def SetAdimensionize(self, _arg: 'bool const') -> "void":
        """SetAdimensionize(itkAnisotropicDiffusionLBRImageFilterISS3 self, bool const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetAdimensionize(self, _arg)


    def GetAdimensionize(self) -> "bool":
        """GetAdimensionize(itkAnisotropicDiffusionLBRImageFilterISS3 self) -> bool"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetAdimensionize(self)


    def EigenValuesTransform(self, arg0: 'itkFixedArrayD3') -> "itkFixedArrayD3":
        """EigenValuesTransform(itkAnisotropicDiffusionLBRImageFilterISS3 self, itkFixedArrayD3 arg0) -> itkFixedArrayD3"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_EigenValuesTransform(self, arg0)


    def GetLastTensorImage(self) -> "itkImageSSRTD33_Pointer":
        """GetLastTensorImage(itkAnisotropicDiffusionLBRImageFilterISS3 self) -> itkImageSSRTD33_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetLastTensorImage(self)


    def GetLinearFilterEffectiveTimesAndIterations(self) -> "std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &":
        """GetLinearFilterEffectiveTimesAndIterations(itkAnisotropicDiffusionLBRImageFilterISS3 self) -> std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetLinearFilterEffectiveTimesAndIterations(self)

    __swig_destroy__ = _itkAnisotropicDiffusionLBRImageFilterPython.delete_itkAnisotropicDiffusionLBRImageFilterISS3

    def cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterISS3 *":
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterISS3"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionLBRImageFilterISS3

        Create a new object of the class itkAnisotropicDiffusionLBRImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAnisotropicDiffusionLBRImageFilterISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAnisotropicDiffusionLBRImageFilterISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionLBRImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionLBRImageFilterISS3.Clone = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_Clone, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.SetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.GetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.SetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.GetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.SetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.GetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.SetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.GetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.SetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.GetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.SetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_SetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.GetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.EigenValuesTransform = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_EigenValuesTransform, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.GetLastTensorImage = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetLastTensorImage, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3.GetLinearFilterEffectiveTimesAndIterations = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_GetLinearFilterEffectiveTimesAndIterations, None, itkAnisotropicDiffusionLBRImageFilterISS3)
itkAnisotropicDiffusionLBRImageFilterISS3_swigregister = _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_swigregister
itkAnisotropicDiffusionLBRImageFilterISS3_swigregister(itkAnisotropicDiffusionLBRImageFilterISS3)

def itkAnisotropicDiffusionLBRImageFilterISS3___New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterISS3_Pointer":
    """itkAnisotropicDiffusionLBRImageFilterISS3___New_orig__() -> itkAnisotropicDiffusionLBRImageFilterISS3_Pointer"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3___New_orig__()

def itkAnisotropicDiffusionLBRImageFilterISS3_cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterISS3 *":
    """itkAnisotropicDiffusionLBRImageFilterISS3_cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterISS3"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterISS3_cast(obj)

class itkAnisotropicDiffusionLBRImageFilterIUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkAnisotropicDiffusionLBRImageFilterIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIUC2_Pointer":
        """__New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIUC2_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAnisotropicDiffusionLBRImageFilterIUC2_Pointer":
        """Clone(itkAnisotropicDiffusionLBRImageFilterIUC2 self) -> itkAnisotropicDiffusionLBRImageFilterIUC2_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_Clone(self)


    def SetNoiseScale(self, _arg: 'double const') -> "void":
        """SetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIUC2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetNoiseScale(self, _arg)


    def GetNoiseScale(self) -> "double":
        """GetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIUC2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetNoiseScale(self)


    def SetFeatureScale(self, _arg: 'double const') -> "void":
        """SetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIUC2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetFeatureScale(self, _arg)


    def GetFeatureScale(self) -> "double":
        """GetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIUC2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetFeatureScale(self)


    def SetRatioToMaxStableTimeStep(self, _arg: 'double const') -> "void":
        """SetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIUC2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetRatioToMaxStableTimeStep(self, _arg)


    def GetRatioToMaxStableTimeStep(self) -> "double":
        """GetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIUC2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetRatioToMaxStableTimeStep(self)


    def SetMaxTimeStepsBetweenTensorUpdates(self, _arg: 'int const') -> "void":
        """SetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIUC2 self, int const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetMaxTimeStepsBetweenTensorUpdates(self, _arg)


    def GetMaxTimeStepsBetweenTensorUpdates(self) -> "int":
        """GetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIUC2 self) -> int"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetMaxTimeStepsBetweenTensorUpdates(self)


    def SetDiffusionTime(self, _arg: 'double const') -> "void":
        """SetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIUC2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetDiffusionTime(self, _arg)


    def GetDiffusionTime(self) -> "double":
        """GetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIUC2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetDiffusionTime(self)


    def SetAdimensionize(self, _arg: 'bool const') -> "void":
        """SetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIUC2 self, bool const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetAdimensionize(self, _arg)


    def GetAdimensionize(self) -> "bool":
        """GetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIUC2 self) -> bool"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetAdimensionize(self)


    def EigenValuesTransform(self, arg0: 'itkFixedArrayD2') -> "itkFixedArrayD2":
        """EigenValuesTransform(itkAnisotropicDiffusionLBRImageFilterIUC2 self, itkFixedArrayD2 arg0) -> itkFixedArrayD2"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_EigenValuesTransform(self, arg0)


    def GetLastTensorImage(self) -> "itkImageSSRTD22_Pointer":
        """GetLastTensorImage(itkAnisotropicDiffusionLBRImageFilterIUC2 self) -> itkImageSSRTD22_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetLastTensorImage(self)


    def GetLinearFilterEffectiveTimesAndIterations(self) -> "std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &":
        """GetLinearFilterEffectiveTimesAndIterations(itkAnisotropicDiffusionLBRImageFilterIUC2 self) -> std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetLinearFilterEffectiveTimesAndIterations(self)

    __swig_destroy__ = _itkAnisotropicDiffusionLBRImageFilterPython.delete_itkAnisotropicDiffusionLBRImageFilterIUC2

    def cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIUC2 *":
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIUC2"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionLBRImageFilterIUC2

        Create a new object of the class itkAnisotropicDiffusionLBRImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAnisotropicDiffusionLBRImageFilterIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAnisotropicDiffusionLBRImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionLBRImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionLBRImageFilterIUC2.Clone = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_Clone, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.SetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.GetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.SetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.GetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.SetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.GetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.SetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.GetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.SetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.GetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.SetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_SetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.GetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.EigenValuesTransform = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_EigenValuesTransform, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.GetLastTensorImage = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetLastTensorImage, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2.GetLinearFilterEffectiveTimesAndIterations = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_GetLinearFilterEffectiveTimesAndIterations, None, itkAnisotropicDiffusionLBRImageFilterIUC2)
itkAnisotropicDiffusionLBRImageFilterIUC2_swigregister = _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_swigregister
itkAnisotropicDiffusionLBRImageFilterIUC2_swigregister(itkAnisotropicDiffusionLBRImageFilterIUC2)

def itkAnisotropicDiffusionLBRImageFilterIUC2___New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIUC2_Pointer":
    """itkAnisotropicDiffusionLBRImageFilterIUC2___New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIUC2_Pointer"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2___New_orig__()

def itkAnisotropicDiffusionLBRImageFilterIUC2_cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIUC2 *":
    """itkAnisotropicDiffusionLBRImageFilterIUC2_cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIUC2"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC2_cast(obj)

class itkAnisotropicDiffusionLBRImageFilterIUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkAnisotropicDiffusionLBRImageFilterIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIUC3_Pointer":
        """__New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIUC3_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAnisotropicDiffusionLBRImageFilterIUC3_Pointer":
        """Clone(itkAnisotropicDiffusionLBRImageFilterIUC3 self) -> itkAnisotropicDiffusionLBRImageFilterIUC3_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_Clone(self)


    def SetNoiseScale(self, _arg: 'double const') -> "void":
        """SetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIUC3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetNoiseScale(self, _arg)


    def GetNoiseScale(self) -> "double":
        """GetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIUC3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetNoiseScale(self)


    def SetFeatureScale(self, _arg: 'double const') -> "void":
        """SetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIUC3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetFeatureScale(self, _arg)


    def GetFeatureScale(self) -> "double":
        """GetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIUC3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetFeatureScale(self)


    def SetRatioToMaxStableTimeStep(self, _arg: 'double const') -> "void":
        """SetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIUC3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetRatioToMaxStableTimeStep(self, _arg)


    def GetRatioToMaxStableTimeStep(self) -> "double":
        """GetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIUC3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetRatioToMaxStableTimeStep(self)


    def SetMaxTimeStepsBetweenTensorUpdates(self, _arg: 'int const') -> "void":
        """SetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIUC3 self, int const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetMaxTimeStepsBetweenTensorUpdates(self, _arg)


    def GetMaxTimeStepsBetweenTensorUpdates(self) -> "int":
        """GetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIUC3 self) -> int"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetMaxTimeStepsBetweenTensorUpdates(self)


    def SetDiffusionTime(self, _arg: 'double const') -> "void":
        """SetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIUC3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetDiffusionTime(self, _arg)


    def GetDiffusionTime(self) -> "double":
        """GetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIUC3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetDiffusionTime(self)


    def SetAdimensionize(self, _arg: 'bool const') -> "void":
        """SetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIUC3 self, bool const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetAdimensionize(self, _arg)


    def GetAdimensionize(self) -> "bool":
        """GetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIUC3 self) -> bool"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetAdimensionize(self)


    def EigenValuesTransform(self, arg0: 'itkFixedArrayD3') -> "itkFixedArrayD3":
        """EigenValuesTransform(itkAnisotropicDiffusionLBRImageFilterIUC3 self, itkFixedArrayD3 arg0) -> itkFixedArrayD3"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_EigenValuesTransform(self, arg0)


    def GetLastTensorImage(self) -> "itkImageSSRTD33_Pointer":
        """GetLastTensorImage(itkAnisotropicDiffusionLBRImageFilterIUC3 self) -> itkImageSSRTD33_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetLastTensorImage(self)


    def GetLinearFilterEffectiveTimesAndIterations(self) -> "std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &":
        """GetLinearFilterEffectiveTimesAndIterations(itkAnisotropicDiffusionLBRImageFilterIUC3 self) -> std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetLinearFilterEffectiveTimesAndIterations(self)

    __swig_destroy__ = _itkAnisotropicDiffusionLBRImageFilterPython.delete_itkAnisotropicDiffusionLBRImageFilterIUC3

    def cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIUC3 *":
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIUC3"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionLBRImageFilterIUC3

        Create a new object of the class itkAnisotropicDiffusionLBRImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAnisotropicDiffusionLBRImageFilterIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAnisotropicDiffusionLBRImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionLBRImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionLBRImageFilterIUC3.Clone = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_Clone, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.SetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.GetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.SetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.GetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.SetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.GetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.SetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.GetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.SetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.GetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.SetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_SetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.GetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.EigenValuesTransform = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_EigenValuesTransform, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.GetLastTensorImage = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetLastTensorImage, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3.GetLinearFilterEffectiveTimesAndIterations = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_GetLinearFilterEffectiveTimesAndIterations, None, itkAnisotropicDiffusionLBRImageFilterIUC3)
itkAnisotropicDiffusionLBRImageFilterIUC3_swigregister = _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_swigregister
itkAnisotropicDiffusionLBRImageFilterIUC3_swigregister(itkAnisotropicDiffusionLBRImageFilterIUC3)

def itkAnisotropicDiffusionLBRImageFilterIUC3___New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIUC3_Pointer":
    """itkAnisotropicDiffusionLBRImageFilterIUC3___New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIUC3_Pointer"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3___New_orig__()

def itkAnisotropicDiffusionLBRImageFilterIUC3_cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIUC3 *":
    """itkAnisotropicDiffusionLBRImageFilterIUC3_cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIUC3"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUC3_cast(obj)

class itkAnisotropicDiffusionLBRImageFilterIUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkAnisotropicDiffusionLBRImageFilterIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIUS2_Pointer":
        """__New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIUS2_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAnisotropicDiffusionLBRImageFilterIUS2_Pointer":
        """Clone(itkAnisotropicDiffusionLBRImageFilterIUS2 self) -> itkAnisotropicDiffusionLBRImageFilterIUS2_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_Clone(self)


    def SetNoiseScale(self, _arg: 'double const') -> "void":
        """SetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIUS2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetNoiseScale(self, _arg)


    def GetNoiseScale(self) -> "double":
        """GetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIUS2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetNoiseScale(self)


    def SetFeatureScale(self, _arg: 'double const') -> "void":
        """SetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIUS2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetFeatureScale(self, _arg)


    def GetFeatureScale(self) -> "double":
        """GetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIUS2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetFeatureScale(self)


    def SetRatioToMaxStableTimeStep(self, _arg: 'double const') -> "void":
        """SetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIUS2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetRatioToMaxStableTimeStep(self, _arg)


    def GetRatioToMaxStableTimeStep(self) -> "double":
        """GetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIUS2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetRatioToMaxStableTimeStep(self)


    def SetMaxTimeStepsBetweenTensorUpdates(self, _arg: 'int const') -> "void":
        """SetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIUS2 self, int const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetMaxTimeStepsBetweenTensorUpdates(self, _arg)


    def GetMaxTimeStepsBetweenTensorUpdates(self) -> "int":
        """GetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIUS2 self) -> int"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetMaxTimeStepsBetweenTensorUpdates(self)


    def SetDiffusionTime(self, _arg: 'double const') -> "void":
        """SetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIUS2 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetDiffusionTime(self, _arg)


    def GetDiffusionTime(self) -> "double":
        """GetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIUS2 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetDiffusionTime(self)


    def SetAdimensionize(self, _arg: 'bool const') -> "void":
        """SetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIUS2 self, bool const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetAdimensionize(self, _arg)


    def GetAdimensionize(self) -> "bool":
        """GetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIUS2 self) -> bool"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetAdimensionize(self)


    def EigenValuesTransform(self, arg0: 'itkFixedArrayD2') -> "itkFixedArrayD2":
        """EigenValuesTransform(itkAnisotropicDiffusionLBRImageFilterIUS2 self, itkFixedArrayD2 arg0) -> itkFixedArrayD2"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_EigenValuesTransform(self, arg0)


    def GetLastTensorImage(self) -> "itkImageSSRTD22_Pointer":
        """GetLastTensorImage(itkAnisotropicDiffusionLBRImageFilterIUS2 self) -> itkImageSSRTD22_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetLastTensorImage(self)


    def GetLinearFilterEffectiveTimesAndIterations(self) -> "std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &":
        """GetLinearFilterEffectiveTimesAndIterations(itkAnisotropicDiffusionLBRImageFilterIUS2 self) -> std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetLinearFilterEffectiveTimesAndIterations(self)

    __swig_destroy__ = _itkAnisotropicDiffusionLBRImageFilterPython.delete_itkAnisotropicDiffusionLBRImageFilterIUS2

    def cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIUS2 *":
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIUS2"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionLBRImageFilterIUS2

        Create a new object of the class itkAnisotropicDiffusionLBRImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAnisotropicDiffusionLBRImageFilterIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAnisotropicDiffusionLBRImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionLBRImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionLBRImageFilterIUS2.Clone = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_Clone, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.SetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.GetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.SetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.GetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.SetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.GetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.SetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.GetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.SetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.GetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.SetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_SetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.GetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.EigenValuesTransform = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_EigenValuesTransform, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.GetLastTensorImage = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetLastTensorImage, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2.GetLinearFilterEffectiveTimesAndIterations = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_GetLinearFilterEffectiveTimesAndIterations, None, itkAnisotropicDiffusionLBRImageFilterIUS2)
itkAnisotropicDiffusionLBRImageFilterIUS2_swigregister = _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_swigregister
itkAnisotropicDiffusionLBRImageFilterIUS2_swigregister(itkAnisotropicDiffusionLBRImageFilterIUS2)

def itkAnisotropicDiffusionLBRImageFilterIUS2___New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIUS2_Pointer":
    """itkAnisotropicDiffusionLBRImageFilterIUS2___New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIUS2_Pointer"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2___New_orig__()

def itkAnisotropicDiffusionLBRImageFilterIUS2_cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIUS2 *":
    """itkAnisotropicDiffusionLBRImageFilterIUS2_cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIUS2"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS2_cast(obj)

class itkAnisotropicDiffusionLBRImageFilterIUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkAnisotropicDiffusionLBRImageFilterIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIUS3_Pointer":
        """__New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIUS3_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAnisotropicDiffusionLBRImageFilterIUS3_Pointer":
        """Clone(itkAnisotropicDiffusionLBRImageFilterIUS3 self) -> itkAnisotropicDiffusionLBRImageFilterIUS3_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_Clone(self)


    def SetNoiseScale(self, _arg: 'double const') -> "void":
        """SetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIUS3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetNoiseScale(self, _arg)


    def GetNoiseScale(self) -> "double":
        """GetNoiseScale(itkAnisotropicDiffusionLBRImageFilterIUS3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetNoiseScale(self)


    def SetFeatureScale(self, _arg: 'double const') -> "void":
        """SetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIUS3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetFeatureScale(self, _arg)


    def GetFeatureScale(self) -> "double":
        """GetFeatureScale(itkAnisotropicDiffusionLBRImageFilterIUS3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetFeatureScale(self)


    def SetRatioToMaxStableTimeStep(self, _arg: 'double const') -> "void":
        """SetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIUS3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetRatioToMaxStableTimeStep(self, _arg)


    def GetRatioToMaxStableTimeStep(self) -> "double":
        """GetRatioToMaxStableTimeStep(itkAnisotropicDiffusionLBRImageFilterIUS3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetRatioToMaxStableTimeStep(self)


    def SetMaxTimeStepsBetweenTensorUpdates(self, _arg: 'int const') -> "void":
        """SetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIUS3 self, int const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetMaxTimeStepsBetweenTensorUpdates(self, _arg)


    def GetMaxTimeStepsBetweenTensorUpdates(self) -> "int":
        """GetMaxTimeStepsBetweenTensorUpdates(itkAnisotropicDiffusionLBRImageFilterIUS3 self) -> int"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetMaxTimeStepsBetweenTensorUpdates(self)


    def SetDiffusionTime(self, _arg: 'double const') -> "void":
        """SetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIUS3 self, double const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetDiffusionTime(self, _arg)


    def GetDiffusionTime(self) -> "double":
        """GetDiffusionTime(itkAnisotropicDiffusionLBRImageFilterIUS3 self) -> double"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetDiffusionTime(self)


    def SetAdimensionize(self, _arg: 'bool const') -> "void":
        """SetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIUS3 self, bool const _arg)"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetAdimensionize(self, _arg)


    def GetAdimensionize(self) -> "bool":
        """GetAdimensionize(itkAnisotropicDiffusionLBRImageFilterIUS3 self) -> bool"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetAdimensionize(self)


    def EigenValuesTransform(self, arg0: 'itkFixedArrayD3') -> "itkFixedArrayD3":
        """EigenValuesTransform(itkAnisotropicDiffusionLBRImageFilterIUS3 self, itkFixedArrayD3 arg0) -> itkFixedArrayD3"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_EigenValuesTransform(self, arg0)


    def GetLastTensorImage(self) -> "itkImageSSRTD33_Pointer":
        """GetLastTensorImage(itkAnisotropicDiffusionLBRImageFilterIUS3 self) -> itkImageSSRTD33_Pointer"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetLastTensorImage(self)


    def GetLinearFilterEffectiveTimesAndIterations(self) -> "std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &":
        """GetLinearFilterEffectiveTimesAndIterations(itkAnisotropicDiffusionLBRImageFilterIUS3 self) -> std::vector< std::pair< double,int >,std::allocator< std::pair< double,int > > > const &"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetLinearFilterEffectiveTimesAndIterations(self)

    __swig_destroy__ = _itkAnisotropicDiffusionLBRImageFilterPython.delete_itkAnisotropicDiffusionLBRImageFilterIUS3

    def cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIUS3 *":
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIUS3"""
        return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionLBRImageFilterIUS3

        Create a new object of the class itkAnisotropicDiffusionLBRImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAnisotropicDiffusionLBRImageFilterIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAnisotropicDiffusionLBRImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionLBRImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionLBRImageFilterIUS3.Clone = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_Clone, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.SetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.GetNoiseScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetNoiseScale, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.SetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.GetFeatureScale = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetFeatureScale, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.SetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.GetRatioToMaxStableTimeStep = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetRatioToMaxStableTimeStep, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.SetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.GetMaxTimeStepsBetweenTensorUpdates = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetMaxTimeStepsBetweenTensorUpdates, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.SetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.GetDiffusionTime = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetDiffusionTime, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.SetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_SetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.GetAdimensionize = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetAdimensionize, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.EigenValuesTransform = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_EigenValuesTransform, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.GetLastTensorImage = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetLastTensorImage, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3.GetLinearFilterEffectiveTimesAndIterations = new_instancemethod(_itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_GetLinearFilterEffectiveTimesAndIterations, None, itkAnisotropicDiffusionLBRImageFilterIUS3)
itkAnisotropicDiffusionLBRImageFilterIUS3_swigregister = _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_swigregister
itkAnisotropicDiffusionLBRImageFilterIUS3_swigregister(itkAnisotropicDiffusionLBRImageFilterIUS3)

def itkAnisotropicDiffusionLBRImageFilterIUS3___New_orig__() -> "itkAnisotropicDiffusionLBRImageFilterIUS3_Pointer":
    """itkAnisotropicDiffusionLBRImageFilterIUS3___New_orig__() -> itkAnisotropicDiffusionLBRImageFilterIUS3_Pointer"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3___New_orig__()

def itkAnisotropicDiffusionLBRImageFilterIUS3_cast(obj: 'itkLightObject') -> "itkAnisotropicDiffusionLBRImageFilterIUS3 *":
    """itkAnisotropicDiffusionLBRImageFilterIUS3_cast(itkLightObject obj) -> itkAnisotropicDiffusionLBRImageFilterIUS3"""
    return _itkAnisotropicDiffusionLBRImageFilterPython.itkAnisotropicDiffusionLBRImageFilterIUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def anisotropic_diffusion_lbr_image_filter(*args, **kwargs):
    """Procedural interface for AnisotropicDiffusionLBRImageFilter"""
    import itk
    instance = itk.AnisotropicDiffusionLBRImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def anisotropic_diffusion_lbr_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.AnisotropicDiffusionLBRImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.AnisotropicDiffusionLBRImageFilter.values()[0]
    else:
        filter_object = itk.AnisotropicDiffusionLBRImageFilter

    anisotropic_diffusion_lbr_image_filter.__doc__ = filter_object.__doc__
    anisotropic_diffusion_lbr_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    anisotropic_diffusion_lbr_image_filter.__doc__ += "Available Keyword Arguments:\n"
    anisotropic_diffusion_lbr_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



