# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabeledPointSetToPointSetMetricv4Python
else:
    import _itkLabeledPointSetToPointSetMetricv4Python

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkLabeledPointSetToPointSetMetricv4Python.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkLabeledPointSetToPointSetMetricv4Python.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itkPointSetPython
import ITKCommonBasePython
import pyBasePython
import itkVectorContainerPython
import itkVectorPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkPointPython
import itkContinuousIndexPython
import itkIndexPython
import itkOptimizerParameterScalesEstimatorPython
import itkOptimizerParametersPython
import itkArrayPython
import itkTransformBasePython
import itkVariableLengthVectorPython
import itkArray2DPython
import itkDiffusionTensor3DPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkEuclideanDistancePointSetToPointSetMetricPython
import itkObjectToObjectMetricPython
import itkDisplacementFieldTransformPython
import itkImagePython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkObjectToObjectMetricBasePython
import itkSingleValuedCostFunctionv4Python
import itkCostFunctionPython

def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass.New()


def itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_New():
  return itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass.New()


def itkLabeledPointSetToPointSetMetricv4PSUS3_New():
  return itkLabeledPointSetToPointSetMetricv4PSUS3.New()


def itkLabeledPointSetToPointSetMetricv4PSUC3_New():
  return itkLabeledPointSetToPointSetMetricv4PSUC3.New()


def itkLabeledPointSetToPointSetMetricv4PSSS3_New():
  return itkLabeledPointSetToPointSetMetricv4PSSS3.New()


def itkLabeledPointSetToPointSetMetricv4PSUS2_New():
  return itkLabeledPointSetToPointSetMetricv4PSUS2.New()


def itkLabeledPointSetToPointSetMetricv4PSUC2_New():
  return itkLabeledPointSetToPointSetMetricv4PSUC2.New()


def itkLabeledPointSetToPointSetMetricv4PSSS2_New():
  return itkLabeledPointSetToPointSetMetricv4PSSS2.New()

class itkLabeledPointSetToPointSetMetricv4PSSS2(itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS2_Superclass):
    r"""Proxy of C++ itkLabeledPointSetToPointSetMetricv4PSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS2_Clone)
    SetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS2_SetPointSetMetric)
    GetModifiablePointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS2_GetModifiablePointSetMetric)
    GetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS2_GetPointSetMetric)
    LabelTypeIsInteger = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS2_LabelTypeIsInteger
    
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkLabeledPointSetToPointSetMetricv4PSSS2
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabeledPointSetToPointSetMetricv4PSSS2

        Create a new object of the class itkLabeledPointSetToPointSetMetricv4PSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabeledPointSetToPointSetMetricv4PSSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabeledPointSetToPointSetMetricv4PSSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabeledPointSetToPointSetMetricv4PSSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabeledPointSetToPointSetMetricv4PSSS2 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS2_swigregister(itkLabeledPointSetToPointSetMetricv4PSSS2)
itkLabeledPointSetToPointSetMetricv4PSSS2___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS2___New_orig__
itkLabeledPointSetToPointSetMetricv4PSSS2_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS2_cast

class itkLabeledPointSetToPointSetMetricv4PSSS3(itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSSS3_Superclass):
    r"""Proxy of C++ itkLabeledPointSetToPointSetMetricv4PSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS3_Clone)
    SetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS3_SetPointSetMetric)
    GetModifiablePointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS3_GetModifiablePointSetMetric)
    GetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS3_GetPointSetMetric)
    LabelTypeIsInteger = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS3_LabelTypeIsInteger
    
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkLabeledPointSetToPointSetMetricv4PSSS3
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabeledPointSetToPointSetMetricv4PSSS3

        Create a new object of the class itkLabeledPointSetToPointSetMetricv4PSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabeledPointSetToPointSetMetricv4PSSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabeledPointSetToPointSetMetricv4PSSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabeledPointSetToPointSetMetricv4PSSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabeledPointSetToPointSetMetricv4PSSS3 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS3_swigregister(itkLabeledPointSetToPointSetMetricv4PSSS3)
itkLabeledPointSetToPointSetMetricv4PSSS3___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS3___New_orig__
itkLabeledPointSetToPointSetMetricv4PSSS3_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSSS3_cast

class itkLabeledPointSetToPointSetMetricv4PSUC2(itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC2_Superclass):
    r"""Proxy of C++ itkLabeledPointSetToPointSetMetricv4PSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC2_Clone)
    SetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC2_SetPointSetMetric)
    GetModifiablePointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC2_GetModifiablePointSetMetric)
    GetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC2_GetPointSetMetric)
    LabelTypeIsInteger = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC2_LabelTypeIsInteger
    
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkLabeledPointSetToPointSetMetricv4PSUC2
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabeledPointSetToPointSetMetricv4PSUC2

        Create a new object of the class itkLabeledPointSetToPointSetMetricv4PSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabeledPointSetToPointSetMetricv4PSUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabeledPointSetToPointSetMetricv4PSUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabeledPointSetToPointSetMetricv4PSUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabeledPointSetToPointSetMetricv4PSUC2 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC2_swigregister(itkLabeledPointSetToPointSetMetricv4PSUC2)
itkLabeledPointSetToPointSetMetricv4PSUC2___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC2___New_orig__
itkLabeledPointSetToPointSetMetricv4PSUC2_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC2_cast

class itkLabeledPointSetToPointSetMetricv4PSUC3(itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUC3_Superclass):
    r"""Proxy of C++ itkLabeledPointSetToPointSetMetricv4PSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC3_Clone)
    SetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC3_SetPointSetMetric)
    GetModifiablePointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC3_GetModifiablePointSetMetric)
    GetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC3_GetPointSetMetric)
    LabelTypeIsInteger = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC3_LabelTypeIsInteger
    
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkLabeledPointSetToPointSetMetricv4PSUC3
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabeledPointSetToPointSetMetricv4PSUC3

        Create a new object of the class itkLabeledPointSetToPointSetMetricv4PSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabeledPointSetToPointSetMetricv4PSUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabeledPointSetToPointSetMetricv4PSUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabeledPointSetToPointSetMetricv4PSUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabeledPointSetToPointSetMetricv4PSUC3 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC3_swigregister(itkLabeledPointSetToPointSetMetricv4PSUC3)
itkLabeledPointSetToPointSetMetricv4PSUC3___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC3___New_orig__
itkLabeledPointSetToPointSetMetricv4PSUC3_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUC3_cast

class itkLabeledPointSetToPointSetMetricv4PSUS2(itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS2_Superclass):
    r"""Proxy of C++ itkLabeledPointSetToPointSetMetricv4PSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS2_Clone)
    SetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS2_SetPointSetMetric)
    GetModifiablePointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS2_GetModifiablePointSetMetric)
    GetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS2_GetPointSetMetric)
    LabelTypeIsInteger = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS2_LabelTypeIsInteger
    
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkLabeledPointSetToPointSetMetricv4PSUS2
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabeledPointSetToPointSetMetricv4PSUS2

        Create a new object of the class itkLabeledPointSetToPointSetMetricv4PSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabeledPointSetToPointSetMetricv4PSUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabeledPointSetToPointSetMetricv4PSUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabeledPointSetToPointSetMetricv4PSUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabeledPointSetToPointSetMetricv4PSUS2 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS2_swigregister(itkLabeledPointSetToPointSetMetricv4PSUS2)
itkLabeledPointSetToPointSetMetricv4PSUS2___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS2___New_orig__
itkLabeledPointSetToPointSetMetricv4PSUS2_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS2_cast

class itkLabeledPointSetToPointSetMetricv4PSUS3(itkEuclideanDistancePointSetToPointSetMetricPython.itkEuclideanDistancePointSetToPointSetMetricv4PSUS3_Superclass):
    r"""Proxy of C++ itkLabeledPointSetToPointSetMetricv4PSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS3_Clone)
    SetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS3_SetPointSetMetric)
    GetModifiablePointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS3_GetModifiablePointSetMetric)
    GetPointSetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS3_GetPointSetMetric)
    LabelTypeIsInteger = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS3_LabelTypeIsInteger
    
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkLabeledPointSetToPointSetMetricv4PSUS3
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabeledPointSetToPointSetMetricv4PSUS3

        Create a new object of the class itkLabeledPointSetToPointSetMetricv4PSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabeledPointSetToPointSetMetricv4PSUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabeledPointSetToPointSetMetricv4PSUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabeledPointSetToPointSetMetricv4PSUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabeledPointSetToPointSetMetricv4PSUS3 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS3_swigregister(itkLabeledPointSetToPointSetMetricv4PSUS3)
itkLabeledPointSetToPointSetMetricv4PSUS3___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS3___New_orig__
itkLabeledPointSetToPointSetMetricv4PSUS3_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkLabeledPointSetToPointSetMetricv4PSUS3_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass(itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass(itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass(itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass(itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass(itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass(itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_SetMetric)
    SetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_GetTransformForward)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_SetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_SetSmallParameterVariation)
    GetSmallParameterVariation = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_GetSmallParameterVariation)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_Clone)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS2_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_Clone)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSSS3_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_Clone)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC2_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_Clone)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUC3_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_Clone)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS2_cast

class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_Clone)
    __swig_destroy__ = _itkLabeledPointSetToPointSetMetricv4Python.delete_itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3
    cast = _swig_new_static_method(_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3

        Create a new object of the class itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3 in _itkLabeledPointSetToPointSetMetricv4Python:
_itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_swigregister(itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3)
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3___New_orig__ = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3___New_orig__
itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_cast = _itkLabeledPointSetToPointSetMetricv4Python.itkRegistrationParameterScalesFromPhysicalShiftLPSTPSMPSUS3_cast



