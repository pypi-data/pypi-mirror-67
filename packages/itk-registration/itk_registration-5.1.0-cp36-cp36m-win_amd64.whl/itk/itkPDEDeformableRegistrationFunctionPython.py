# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPDEDeformableRegistrationFunctionPython
else:
    import _itkPDEDeformableRegistrationFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkPDEDeformableRegistrationFunctionPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkPDEDeformableRegistrationFunctionPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itkFiniteDifferenceFunctionPython
import itkSizePython
import pyBasePython
import ITKCommonBasePython
import itkVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkCovariantVectorPython
import itkImagePython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkPointPython
import vnl_matrix_fixedPython
import itkIndexPython
import itkOffsetPython
import itkImageRegionPython

def itkPDEDeformableRegistrationFunctionID3ID3IVF43_New():
  return itkPDEDeformableRegistrationFunctionID3ID3IVF43.New()


def itkPDEDeformableRegistrationFunctionID2ID2IVF42_New():
  return itkPDEDeformableRegistrationFunctionID2ID2IVF42.New()


def itkPDEDeformableRegistrationFunctionID3ID3IVF33_New():
  return itkPDEDeformableRegistrationFunctionID3ID3IVF33.New()


def itkPDEDeformableRegistrationFunctionID2ID2IVF32_New():
  return itkPDEDeformableRegistrationFunctionID2ID2IVF32.New()


def itkPDEDeformableRegistrationFunctionID3ID3IVF23_New():
  return itkPDEDeformableRegistrationFunctionID3ID3IVF23.New()


def itkPDEDeformableRegistrationFunctionID2ID2IVF22_New():
  return itkPDEDeformableRegistrationFunctionID2ID2IVF22.New()


def itkPDEDeformableRegistrationFunctionIF3IF3IVF43_New():
  return itkPDEDeformableRegistrationFunctionIF3IF3IVF43.New()


def itkPDEDeformableRegistrationFunctionIF2IF2IVF42_New():
  return itkPDEDeformableRegistrationFunctionIF2IF2IVF42.New()


def itkPDEDeformableRegistrationFunctionIF3IF3IVF33_New():
  return itkPDEDeformableRegistrationFunctionIF3IF3IVF33.New()


def itkPDEDeformableRegistrationFunctionIF2IF2IVF32_New():
  return itkPDEDeformableRegistrationFunctionIF2IF2IVF32.New()


def itkPDEDeformableRegistrationFunctionIF3IF3IVF23_New():
  return itkPDEDeformableRegistrationFunctionIF3IF3IVF23.New()


def itkPDEDeformableRegistrationFunctionIF2IF2IVF22_New():
  return itkPDEDeformableRegistrationFunctionIF2IF2IVF22.New()


def itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_New():
  return itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43.New()


def itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_New():
  return itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42.New()


def itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_New():
  return itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33.New()


def itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_New():
  return itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32.New()


def itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_New():
  return itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23.New()


def itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_New():
  return itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22.New()


def itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_New():
  return itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43.New()


def itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_New():
  return itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42.New()


def itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_New():
  return itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33.New()


def itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_New():
  return itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32.New()


def itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_New():
  return itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23.New()


def itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_New():
  return itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22.New()


def itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_New():
  return itkPDEDeformableRegistrationFunctionISS3ISS3IVF43.New()


def itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_New():
  return itkPDEDeformableRegistrationFunctionISS2ISS2IVF42.New()


def itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_New():
  return itkPDEDeformableRegistrationFunctionISS3ISS3IVF33.New()


def itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_New():
  return itkPDEDeformableRegistrationFunctionISS2ISS2IVF32.New()


def itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_New():
  return itkPDEDeformableRegistrationFunctionISS3ISS3IVF23.New()


def itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_New():
  return itkPDEDeformableRegistrationFunctionISS2ISS2IVF22.New()

class itkPDEDeformableRegistrationFunctionID2ID2IVF22(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF22):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionID2ID2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionID2ID2IVF22
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionID2ID2IVF22

        Create a new object of the class itkPDEDeformableRegistrationFunctionID2ID2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionID2ID2IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionID2ID2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionID2ID2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionID2ID2IVF22 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_swigregister(itkPDEDeformableRegistrationFunctionID2ID2IVF22)
itkPDEDeformableRegistrationFunctionID2ID2IVF22_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22_cast

class itkPDEDeformableRegistrationFunctionID2ID2IVF32(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF32):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionID2ID2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionID2ID2IVF32
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionID2ID2IVF32

        Create a new object of the class itkPDEDeformableRegistrationFunctionID2ID2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionID2ID2IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionID2ID2IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionID2ID2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionID2ID2IVF32 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_swigregister(itkPDEDeformableRegistrationFunctionID2ID2IVF32)
itkPDEDeformableRegistrationFunctionID2ID2IVF32_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF32_cast

class itkPDEDeformableRegistrationFunctionID2ID2IVF42(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF42):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionID2ID2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionID2ID2IVF42
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionID2ID2IVF42

        Create a new object of the class itkPDEDeformableRegistrationFunctionID2ID2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionID2ID2IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionID2ID2IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionID2ID2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionID2ID2IVF42 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_swigregister(itkPDEDeformableRegistrationFunctionID2ID2IVF42)
itkPDEDeformableRegistrationFunctionID2ID2IVF42_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF42_cast

class itkPDEDeformableRegistrationFunctionID3ID3IVF23(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF23):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionID3ID3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionID3ID3IVF23
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionID3ID3IVF23

        Create a new object of the class itkPDEDeformableRegistrationFunctionID3ID3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionID3ID3IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionID3ID3IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionID3ID3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionID3ID3IVF23 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_swigregister(itkPDEDeformableRegistrationFunctionID3ID3IVF23)
itkPDEDeformableRegistrationFunctionID3ID3IVF23_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF23_cast

class itkPDEDeformableRegistrationFunctionID3ID3IVF33(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF33):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionID3ID3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionID3ID3IVF33
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionID3ID3IVF33

        Create a new object of the class itkPDEDeformableRegistrationFunctionID3ID3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionID3ID3IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionID3ID3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionID3ID3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionID3ID3IVF33 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_swigregister(itkPDEDeformableRegistrationFunctionID3ID3IVF33)
itkPDEDeformableRegistrationFunctionID3ID3IVF33_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33_cast

class itkPDEDeformableRegistrationFunctionID3ID3IVF43(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF43):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionID3ID3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionID3ID3IVF43
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionID3ID3IVF43

        Create a new object of the class itkPDEDeformableRegistrationFunctionID3ID3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionID3ID3IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionID3ID3IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionID3ID3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionID3ID3IVF43 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_swigregister(itkPDEDeformableRegistrationFunctionID3ID3IVF43)
itkPDEDeformableRegistrationFunctionID3ID3IVF43_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF43_cast

class itkPDEDeformableRegistrationFunctionIF2IF2IVF22(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF22):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIF2IF2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIF2IF2IVF22
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIF2IF2IVF22

        Create a new object of the class itkPDEDeformableRegistrationFunctionIF2IF2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIF2IF2IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIF2IF2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIF2IF2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIF2IF2IVF22 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_swigregister(itkPDEDeformableRegistrationFunctionIF2IF2IVF22)
itkPDEDeformableRegistrationFunctionIF2IF2IVF22_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22_cast

class itkPDEDeformableRegistrationFunctionIF2IF2IVF32(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF32):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIF2IF2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIF2IF2IVF32
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIF2IF2IVF32

        Create a new object of the class itkPDEDeformableRegistrationFunctionIF2IF2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIF2IF2IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIF2IF2IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIF2IF2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIF2IF2IVF32 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_swigregister(itkPDEDeformableRegistrationFunctionIF2IF2IVF32)
itkPDEDeformableRegistrationFunctionIF2IF2IVF32_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF32_cast

class itkPDEDeformableRegistrationFunctionIF2IF2IVF42(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF42):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIF2IF2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIF2IF2IVF42
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIF2IF2IVF42

        Create a new object of the class itkPDEDeformableRegistrationFunctionIF2IF2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIF2IF2IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIF2IF2IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIF2IF2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIF2IF2IVF42 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_swigregister(itkPDEDeformableRegistrationFunctionIF2IF2IVF42)
itkPDEDeformableRegistrationFunctionIF2IF2IVF42_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF42_cast

class itkPDEDeformableRegistrationFunctionIF3IF3IVF23(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF23):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIF3IF3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIF3IF3IVF23
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIF3IF3IVF23

        Create a new object of the class itkPDEDeformableRegistrationFunctionIF3IF3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIF3IF3IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIF3IF3IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIF3IF3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIF3IF3IVF23 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_swigregister(itkPDEDeformableRegistrationFunctionIF3IF3IVF23)
itkPDEDeformableRegistrationFunctionIF3IF3IVF23_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF23_cast

class itkPDEDeformableRegistrationFunctionIF3IF3IVF33(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF33):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIF3IF3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIF3IF3IVF33
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIF3IF3IVF33

        Create a new object of the class itkPDEDeformableRegistrationFunctionIF3IF3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIF3IF3IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIF3IF3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIF3IF3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIF3IF3IVF33 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_swigregister(itkPDEDeformableRegistrationFunctionIF3IF3IVF33)
itkPDEDeformableRegistrationFunctionIF3IF3IVF33_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33_cast

class itkPDEDeformableRegistrationFunctionIF3IF3IVF43(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF43):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIF3IF3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIF3IF3IVF43
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIF3IF3IVF43

        Create a new object of the class itkPDEDeformableRegistrationFunctionIF3IF3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIF3IF3IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIF3IF3IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIF3IF3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIF3IF3IVF43 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_swigregister(itkPDEDeformableRegistrationFunctionIF3IF3IVF43)
itkPDEDeformableRegistrationFunctionIF3IF3IVF43_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF43_cast

class itkPDEDeformableRegistrationFunctionISS2ISS2IVF22(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF22):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionISS2ISS2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionISS2ISS2IVF22
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionISS2ISS2IVF22

        Create a new object of the class itkPDEDeformableRegistrationFunctionISS2ISS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionISS2ISS2IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionISS2ISS2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionISS2ISS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionISS2ISS2IVF22 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_swigregister(itkPDEDeformableRegistrationFunctionISS2ISS2IVF22)
itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF22_cast

class itkPDEDeformableRegistrationFunctionISS2ISS2IVF32(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF32):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionISS2ISS2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionISS2ISS2IVF32
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionISS2ISS2IVF32

        Create a new object of the class itkPDEDeformableRegistrationFunctionISS2ISS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionISS2ISS2IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionISS2ISS2IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionISS2ISS2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionISS2ISS2IVF32 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_swigregister(itkPDEDeformableRegistrationFunctionISS2ISS2IVF32)
itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF32_cast

class itkPDEDeformableRegistrationFunctionISS2ISS2IVF42(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF42):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionISS2ISS2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionISS2ISS2IVF42
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionISS2ISS2IVF42

        Create a new object of the class itkPDEDeformableRegistrationFunctionISS2ISS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionISS2ISS2IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionISS2ISS2IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionISS2ISS2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionISS2ISS2IVF42 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_swigregister(itkPDEDeformableRegistrationFunctionISS2ISS2IVF42)
itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS2ISS2IVF42_cast

class itkPDEDeformableRegistrationFunctionISS3ISS3IVF23(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF23):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionISS3ISS3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionISS3ISS3IVF23
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionISS3ISS3IVF23

        Create a new object of the class itkPDEDeformableRegistrationFunctionISS3ISS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionISS3ISS3IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionISS3ISS3IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionISS3ISS3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionISS3ISS3IVF23 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_swigregister(itkPDEDeformableRegistrationFunctionISS3ISS3IVF23)
itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF23_cast

class itkPDEDeformableRegistrationFunctionISS3ISS3IVF33(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF33):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionISS3ISS3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionISS3ISS3IVF33
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionISS3ISS3IVF33

        Create a new object of the class itkPDEDeformableRegistrationFunctionISS3ISS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionISS3ISS3IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionISS3ISS3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionISS3ISS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionISS3ISS3IVF33 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_swigregister(itkPDEDeformableRegistrationFunctionISS3ISS3IVF33)
itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF33_cast

class itkPDEDeformableRegistrationFunctionISS3ISS3IVF43(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF43):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionISS3ISS3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionISS3ISS3IVF43
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionISS3ISS3IVF43

        Create a new object of the class itkPDEDeformableRegistrationFunctionISS3ISS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionISS3ISS3IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionISS3ISS3IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionISS3ISS3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionISS3ISS3IVF43 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_swigregister(itkPDEDeformableRegistrationFunctionISS3ISS3IVF43)
itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionISS3ISS3IVF43_cast

class itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF22):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_swigregister(itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22)
itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22_cast

class itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF32):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_swigregister(itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32)
itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF32_cast

class itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF42):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_swigregister(itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42)
itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF42_cast

class itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF23):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_swigregister(itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23)
itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF23_cast

class itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF33):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_swigregister(itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33)
itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33_cast

class itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF43):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_swigregister(itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43)
itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF43_cast

class itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF22):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_swigregister(itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22)
itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22_cast

class itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF32):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_swigregister(itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32)
itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF32_cast

class itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF42):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_swigregister(itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42)
itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF42_cast

class itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF23):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_swigregister(itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23)
itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF23_cast

class itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF33):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_swigregister(itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33)
itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33_cast

class itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIVF43):
    r"""Proxy of C++ itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_GetMovingImage)
    SetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_GetFixedImage)
    SetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_GetDisplacementField)
    SetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_SetEnergy)
    GetEnergy = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_GetEnergy)
    SetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_GetGradientStep)
    SetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_SetNormalizeGradient)
    GetNormalizeGradient = _swig_new_instance_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_GetNormalizeGradient)
    __swig_destroy__ = _itkPDEDeformableRegistrationFunctionPython.delete_itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43
    cast = _swig_new_static_method(_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43

        Create a new object of the class itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43 in _itkPDEDeformableRegistrationFunctionPython:
_itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_swigregister(itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43)
itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_cast = _itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF43_cast



