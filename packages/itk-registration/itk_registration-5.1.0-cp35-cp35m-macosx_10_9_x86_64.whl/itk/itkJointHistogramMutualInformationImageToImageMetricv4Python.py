# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkJointHistogramMutualInformationImageToImageMetricv4Python.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkJointHistogramMutualInformationImageToImageMetricv4Python', [dirname(__file__)])
        except ImportError:
            import _itkJointHistogramMutualInformationImageToImageMetricv4Python
            return _itkJointHistogramMutualInformationImageToImageMetricv4Python
        if fp is not None:
            try:
                _mod = imp.load_module('_itkJointHistogramMutualInformationImageToImageMetricv4Python', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkJointHistogramMutualInformationImageToImageMetricv4Python = swig_import_helper()
    del swig_import_helper
else:
    import _itkJointHistogramMutualInformationImageToImageMetricv4Python
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkRGBAPixelPython
import itkFixedArrayPython
import stdcomplexPython
import itkRGBPixelPython
import itkMatrixPython
import vnl_matrix_fixedPython
import vnl_matrixPython
import vnl_vectorPython
import itkVectorPython
import vnl_vector_refPython
import itkCovariantVectorPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkImageToImageMetricv4Python
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkTransformBasePython
import itkDiffusionTensor3DPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkArrayPython
import itkDisplacementFieldTransformPython
import itkPointSetPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkSpatialObjectBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkAffineTransformPython
import itkMatrixOffsetTransformBasePython
import itkSpatialObjectPropertyPython
import itkObjectToObjectMetricBasePython
import itkSingleValuedCostFunctionv4Python
import itkCostFunctionPython
import itkInterpolateImageFunctionPython
import itkImageFunctionBasePython
import itkFunctionBasePython

def itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_New():
  return itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.New()


def itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_New():
  return itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.New()


def itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_New():
  return itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.New()


def itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_New():
  return itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.New()

class itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2(itkImageToImageMetricv4Python.itkImageToImageMetricv4D2D2):
    """


    Computes the mutual information between two images to be registered
    using the method referenced below.

    References: [1] "Optimization of Mutual Information for
    MultiResolution Image      Registration" P. Thevenaz and M. Unser
    IEEE Transactions in Image Processing, 9(12) December 2000.

    C++ includes: itkJointHistogramMutualInformationImageToImageMetricv4.h

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_Pointer":
        """__New_orig__() -> itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_Pointer"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_Pointer":
        """Clone(itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 self) -> itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_Pointer"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_Clone(self)


    def GetModifiableJointPDF(self) -> "itkImageD2 *":
        """GetModifiableJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 self) -> itkImageD2"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_GetModifiableJointPDF(self)


    def GetJointPDF(self, *args) -> "itkImageD2 *":
        """
        GetJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 self) -> itkImageD2
        GetJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 self) -> itkImageD2
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_GetJointPDF(self, *args)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 self, unsigned long _arg)

        Get/Set
        the number of histogram bins 
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long const &":
        """GetNumberOfHistogramBins(itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 self) -> unsigned long const &"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_GetNumberOfHistogramBins(self)


    def SetVarianceForJointPDFSmoothing(self, _arg: 'double const') -> "void":
        """
        SetVarianceForJointPDFSmoothing(itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 self, double const _arg)

        Get/Set option to smooth the joint pdf after it's updated 
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_SetVarianceForJointPDFSmoothing(self, _arg)


    def GetVarianceForJointPDFSmoothing(self) -> "double":
        """GetVarianceForJointPDFSmoothing(itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 self) -> double"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_GetVarianceForJointPDFSmoothing(self)

    __swig_destroy__ = _itkJointHistogramMutualInformationImageToImageMetricv4Python.delete_itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2

    def cast(obj: 'itkLightObject') -> "itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 *":
        """cast(itkLightObject obj) -> itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2

        Create a new object of the class itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.Clone = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_Clone, None, itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2)
itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.GetModifiableJointPDF = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_GetModifiableJointPDF, None, itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2)
itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.GetJointPDF = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_GetJointPDF, None, itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2)
itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.SetNumberOfHistogramBins = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_SetNumberOfHistogramBins, None, itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2)
itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.GetNumberOfHistogramBins = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_GetNumberOfHistogramBins, None, itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2)
itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.SetVarianceForJointPDFSmoothing = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_SetVarianceForJointPDFSmoothing, None, itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2)
itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2.GetVarianceForJointPDFSmoothing = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_GetVarianceForJointPDFSmoothing, None, itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2)
itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_swigregister = _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_swigregister
itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_swigregister(itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2)

def itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2___New_orig__() -> "itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_Pointer":
    """itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2___New_orig__() -> itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_Pointer"""
    return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2___New_orig__()

def itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_cast(obj: 'itkLightObject') -> "itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 *":
    """itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_cast(itkLightObject obj) -> itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2"""
    return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2_cast(obj)

class itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3(itkImageToImageMetricv4Python.itkImageToImageMetricv4D3D3):
    """


    Computes the mutual information between two images to be registered
    using the method referenced below.

    References: [1] "Optimization of Mutual Information for
    MultiResolution Image      Registration" P. Thevenaz and M. Unser
    IEEE Transactions in Image Processing, 9(12) December 2000.

    C++ includes: itkJointHistogramMutualInformationImageToImageMetricv4.h

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_Pointer":
        """__New_orig__() -> itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_Pointer"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_Pointer":
        """Clone(itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 self) -> itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_Pointer"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_Clone(self)


    def GetModifiableJointPDF(self) -> "itkImageD2 *":
        """GetModifiableJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 self) -> itkImageD2"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_GetModifiableJointPDF(self)


    def GetJointPDF(self, *args) -> "itkImageD2 *":
        """
        GetJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 self) -> itkImageD2
        GetJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 self) -> itkImageD2
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_GetJointPDF(self, *args)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 self, unsigned long _arg)

        Get/Set
        the number of histogram bins 
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long const &":
        """GetNumberOfHistogramBins(itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 self) -> unsigned long const &"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_GetNumberOfHistogramBins(self)


    def SetVarianceForJointPDFSmoothing(self, _arg: 'double const') -> "void":
        """
        SetVarianceForJointPDFSmoothing(itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 self, double const _arg)

        Get/Set option to smooth the joint pdf after it's updated 
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_SetVarianceForJointPDFSmoothing(self, _arg)


    def GetVarianceForJointPDFSmoothing(self) -> "double":
        """GetVarianceForJointPDFSmoothing(itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 self) -> double"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_GetVarianceForJointPDFSmoothing(self)

    __swig_destroy__ = _itkJointHistogramMutualInformationImageToImageMetricv4Python.delete_itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3

    def cast(obj: 'itkLightObject') -> "itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 *":
        """cast(itkLightObject obj) -> itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3

        Create a new object of the class itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.Clone = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_Clone, None, itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3)
itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.GetModifiableJointPDF = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_GetModifiableJointPDF, None, itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3)
itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.GetJointPDF = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_GetJointPDF, None, itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3)
itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.SetNumberOfHistogramBins = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_SetNumberOfHistogramBins, None, itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3)
itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.GetNumberOfHistogramBins = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_GetNumberOfHistogramBins, None, itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3)
itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.SetVarianceForJointPDFSmoothing = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_SetVarianceForJointPDFSmoothing, None, itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3)
itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3.GetVarianceForJointPDFSmoothing = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_GetVarianceForJointPDFSmoothing, None, itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3)
itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_swigregister = _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_swigregister
itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_swigregister(itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3)

def itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3___New_orig__() -> "itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_Pointer":
    """itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3___New_orig__() -> itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_Pointer"""
    return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3___New_orig__()

def itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_cast(obj: 'itkLightObject') -> "itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 *":
    """itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_cast(itkLightObject obj) -> itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3"""
    return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3_cast(obj)

class itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2(itkImageToImageMetricv4Python.itkImageToImageMetricv4F2F2):
    """


    Computes the mutual information between two images to be registered
    using the method referenced below.

    References: [1] "Optimization of Mutual Information for
    MultiResolution Image      Registration" P. Thevenaz and M. Unser
    IEEE Transactions in Image Processing, 9(12) December 2000.

    C++ includes: itkJointHistogramMutualInformationImageToImageMetricv4.h

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_Pointer":
        """__New_orig__() -> itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_Pointer"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_Pointer":
        """Clone(itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 self) -> itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_Pointer"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_Clone(self)


    def GetModifiableJointPDF(self) -> "itkImageD2 *":
        """GetModifiableJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 self) -> itkImageD2"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_GetModifiableJointPDF(self)


    def GetJointPDF(self, *args) -> "itkImageD2 *":
        """
        GetJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 self) -> itkImageD2
        GetJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 self) -> itkImageD2
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_GetJointPDF(self, *args)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 self, unsigned long _arg)

        Get/Set
        the number of histogram bins 
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long const &":
        """GetNumberOfHistogramBins(itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 self) -> unsigned long const &"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_GetNumberOfHistogramBins(self)


    def SetVarianceForJointPDFSmoothing(self, _arg: 'double const') -> "void":
        """
        SetVarianceForJointPDFSmoothing(itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 self, double const _arg)

        Get/Set option to smooth the joint pdf after it's updated 
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_SetVarianceForJointPDFSmoothing(self, _arg)


    def GetVarianceForJointPDFSmoothing(self) -> "double":
        """GetVarianceForJointPDFSmoothing(itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 self) -> double"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_GetVarianceForJointPDFSmoothing(self)

    __swig_destroy__ = _itkJointHistogramMutualInformationImageToImageMetricv4Python.delete_itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2

    def cast(obj: 'itkLightObject') -> "itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 *":
        """cast(itkLightObject obj) -> itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2

        Create a new object of the class itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.Clone = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_Clone, None, itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2)
itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.GetModifiableJointPDF = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_GetModifiableJointPDF, None, itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2)
itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.GetJointPDF = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_GetJointPDF, None, itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2)
itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.SetNumberOfHistogramBins = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_SetNumberOfHistogramBins, None, itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2)
itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.GetNumberOfHistogramBins = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_GetNumberOfHistogramBins, None, itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2)
itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.SetVarianceForJointPDFSmoothing = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_SetVarianceForJointPDFSmoothing, None, itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2)
itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2.GetVarianceForJointPDFSmoothing = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_GetVarianceForJointPDFSmoothing, None, itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2)
itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_swigregister = _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_swigregister
itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_swigregister(itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2)

def itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2___New_orig__() -> "itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_Pointer":
    """itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2___New_orig__() -> itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_Pointer"""
    return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2___New_orig__()

def itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_cast(obj: 'itkLightObject') -> "itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 *":
    """itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_cast(itkLightObject obj) -> itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2"""
    return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2_cast(obj)

class itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3(itkImageToImageMetricv4Python.itkImageToImageMetricv4F3F3):
    """


    Computes the mutual information between two images to be registered
    using the method referenced below.

    References: [1] "Optimization of Mutual Information for
    MultiResolution Image      Registration" P. Thevenaz and M. Unser
    IEEE Transactions in Image Processing, 9(12) December 2000.

    C++ includes: itkJointHistogramMutualInformationImageToImageMetricv4.h

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_Pointer":
        """__New_orig__() -> itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_Pointer"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_Pointer":
        """Clone(itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 self) -> itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_Pointer"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_Clone(self)


    def GetModifiableJointPDF(self) -> "itkImageD2 *":
        """GetModifiableJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 self) -> itkImageD2"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_GetModifiableJointPDF(self)


    def GetJointPDF(self, *args) -> "itkImageD2 *":
        """
        GetJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 self) -> itkImageD2
        GetJointPDF(itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 self) -> itkImageD2
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_GetJointPDF(self, *args)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 self, unsigned long _arg)

        Get/Set
        the number of histogram bins 
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long const &":
        """GetNumberOfHistogramBins(itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 self) -> unsigned long const &"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_GetNumberOfHistogramBins(self)


    def SetVarianceForJointPDFSmoothing(self, _arg: 'double const') -> "void":
        """
        SetVarianceForJointPDFSmoothing(itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 self, double const _arg)

        Get/Set option to smooth the joint pdf after it's updated 
        """
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_SetVarianceForJointPDFSmoothing(self, _arg)


    def GetVarianceForJointPDFSmoothing(self) -> "double":
        """GetVarianceForJointPDFSmoothing(itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 self) -> double"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_GetVarianceForJointPDFSmoothing(self)

    __swig_destroy__ = _itkJointHistogramMutualInformationImageToImageMetricv4Python.delete_itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3

    def cast(obj: 'itkLightObject') -> "itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 *":
        """cast(itkLightObject obj) -> itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3"""
        return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3

        Create a new object of the class itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.Clone = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_Clone, None, itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3)
itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.GetModifiableJointPDF = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_GetModifiableJointPDF, None, itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3)
itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.GetJointPDF = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_GetJointPDF, None, itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3)
itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.SetNumberOfHistogramBins = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_SetNumberOfHistogramBins, None, itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3)
itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.GetNumberOfHistogramBins = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_GetNumberOfHistogramBins, None, itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3)
itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.SetVarianceForJointPDFSmoothing = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_SetVarianceForJointPDFSmoothing, None, itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3)
itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3.GetVarianceForJointPDFSmoothing = new_instancemethod(_itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_GetVarianceForJointPDFSmoothing, None, itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3)
itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_swigregister = _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_swigregister
itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_swigregister(itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3)

def itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3___New_orig__() -> "itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_Pointer":
    """itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3___New_orig__() -> itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_Pointer"""
    return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3___New_orig__()

def itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_cast(obj: 'itkLightObject') -> "itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 *":
    """itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_cast(itkLightObject obj) -> itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3"""
    return _itkJointHistogramMutualInformationImageToImageMetricv4Python.itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3_cast(obj)



