Metadata-Version: 2.1
Name: envbox
Version: 1.2.0
Summary: Detect environment type and work within.
Home-page: https://github.com/idlesign/envbox
Author: Igor `idle sign` Starikov
Author-email: idlesign@yandex.ru
License: BSD 3-Clause License
Description: envbox
        ======
        https://github.com/idlesign/envbox
        
        .. image:: https://idlesign.github.io/lbc/py2-lbc.svg
           :target: https://idlesign.github.io/lbc/
           :alt: LBC Python 2
        
        ----
        
        |release| |lic| |ci| |coverage|
        
        .. |release| image:: https://img.shields.io/pypi/v/envbox.svg
            :target: https://pypi.python.org/pypi/envbox
        
        .. |lic| image:: https://img.shields.io/pypi/l/envbox.svg
            :target: https://pypi.python.org/pypi/envbox
        
        .. |ci| image:: https://img.shields.io/travis/idlesign/envbox/master.svg
            :target: https://travis-ci.org/idlesign/envbox
        
        .. |coverage| image:: https://img.shields.io/coveralls/idlesign/envbox/master.svg
            :target: https://coveralls.io/r/idlesign/envbox
        
        
        Description
        -----------
        
        *Detect environment type and work within.*
        
        
        Features
        ~~~~~~~~
        
        * Environment type detection (extendable system);
        * Support for ``.env`` files;
        * Convenient ``os.environ`` proxying (with optional values casting into Python natives);
        * Automatic submodule-for-environment import tool;
        * Cosy per-thread settings container with environment var support;
        * CLI for environment probing.
        
        
        Code sample
        ~~~~~~~~~~~
        
        .. code-block:: python
        
            from envbox import get_environment
        
            # Detect current environment type
            # and get its object.
            #
            # Default detection sources:
            # 1. ``PYTHON_ENV`` env variable
            # 2. ``environment`` file contents
            #
            # By default this function will also try to read env variables from .env files.
            env = get_environment()
        
            env.name
            # >> development
        
            env.is_production
            # >> False
        
            env.get('HOME')
            # The same as env['HOME'] and env.HOME
            # >> /home/idle/
        
            env.getmany('PYTHON')
            # {'UNBUFFERED': '1', 'IOENCODING': 'UTF-8', 'PATH': ...}
        
        
        Read the docs for more examples.
        
        CLI
        ~~~
        
        .. code-block:: bash
        
            $ envbox probe
            # >> Detected environment type: development (Development)
        
            $ envbox show
            # >> [...]
            # >> SHELL = /bin/bash
            # >> [...]
        
        
        **Note:** ``envbox`` CLI requires ``click`` package available.
        
        
        Documentation
        -------------
        
        http://envbox.readthedocs.org/
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: License :: OSI Approved :: BSD License
Provides-Extra: cli
