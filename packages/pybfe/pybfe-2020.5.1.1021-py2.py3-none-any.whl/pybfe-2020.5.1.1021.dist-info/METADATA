Metadata-Version: 2.1
Name: pybfe
Version: 2020.5.1.1021
Summary: Python client and utilities for Batfish Enterprise
Home-page: UNKNOWN
License: UNKNOWN
Keywords: network configuration verification
Platform: UNKNOWN
Requires-Python: >=3.5
Description-Content-Type: text/markdown
Requires-Dist: attrs (>=18.1.0)
Requires-Dist: deepdiff
Requires-Dist: deprecated
Requires-Dist: netconan (>=0.9.2)
Requires-Dist: pandas (>=0.24.1)
Requires-Dist: python-dateutil
Requires-Dist: pytz
Requires-Dist: PyYAML
Requires-Dist: requests
Requires-Dist: requests-toolbelt
Requires-Dist: simplejson
Requires-Dist: six
Provides-Extra: capirca
Requires-Dist: capirca ; extra == 'capirca'
Provides-Extra: dev
Requires-Dist: capirca ; extra == 'dev'
Requires-Dist: check-manifest ; extra == 'dev'
Requires-Dist: coverage ; extra == 'dev'
Requires-Dist: decorator ; extra == 'dev'
Requires-Dist: jupyter ; extra == 'dev'
Requires-Dist: mypy ; extra == 'dev'
Requires-Dist: nbformat ; extra == 'dev'
Requires-Dist: nbconvert ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: pytz ; extra == 'dev'
Requires-Dist: requests-mock ; extra == 'dev'
Requires-Dist: responses ; extra == 'dev'
Requires-Dist: sphinx (>=1.8.0) ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme ; extra == 'dev'
Requires-Dist: black ; (python_version >= "3.6.0") and extra == 'dev'

# Pybatfish Enterprise

Pybatfish Enterprise is a Python client for [Batfish Enterprise](https://www.intentionet.com/product/batfish-enterprise/).

For the Python client for open-source Batfish, see [Pybatfish](https://github.com/batfish/pybatfish).

## Getting Started

### Prerequisites

Pybatfish Enterprise requires a [Batfish Enterprise](https://www.intentionet.com/product/batfish-enterprise/) backend to work.

### Install Pybatfish Enterprise

We highly recommend that you install Pybatfish Enterprise in a Python 3 virtual environment. Details on how to set one up can be found [here](https://docs.python.org/3/library/venv.html). Once your virtual environment is setup and activated, run:

```
python3 -m pip install pybfe
```

### Using Pybatfish Enterprise

After Pybatfish Enterprise is installed, you can use it in place of Pybatfish in your Ansible plays (which use [Batfish Roles](https://github.com/batfish/ansible)).

In your Ansible task that sets up a Batfish service connection, simply add `session_type: bfe` under `parameters`, e.g. change your setup task from:
```
    - name: Setup connection to service
      bf_session:
        host: localhost
        name: local_batfish
```
to:
```
    - name: Setup connection to service
      bf_session:
        host: localhost
        name: local_batfish
        parameters:
          session_type: bfe
```

After this change, Batfish tasks will benefit from Batfish Enterprise features, and allow you to do things like view the results of your Batfish assertions or fact validation on the Enterprise Dashboard.


