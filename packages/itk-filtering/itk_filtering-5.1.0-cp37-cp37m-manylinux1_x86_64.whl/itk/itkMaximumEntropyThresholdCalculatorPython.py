# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMaximumEntropyThresholdCalculatorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMaximumEntropyThresholdCalculatorPython', [dirname(__file__)])
        except ImportError:
            import _itkMaximumEntropyThresholdCalculatorPython
            return _itkMaximumEntropyThresholdCalculatorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMaximumEntropyThresholdCalculatorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMaximumEntropyThresholdCalculatorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMaximumEntropyThresholdCalculatorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdCalculatorPython
import itkHistogramPython
import ITKCommonBasePython
import pyBasePython
import itkSamplePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import itkSimpleDataObjectDecoratorPython
import itkRGBAPixelPython
import itkCovariantVectorPython
import itkRGBPixelPython

def itkMaximumEntropyThresholdCalculatorHFD_New():
  return itkMaximumEntropyThresholdCalculatorHFD.New()


def itkMaximumEntropyThresholdCalculatorHDD_New():
  return itkMaximumEntropyThresholdCalculatorHDD.New()


def itkMaximumEntropyThresholdCalculatorHFF_New():
  return itkMaximumEntropyThresholdCalculatorHFF.New()


def itkMaximumEntropyThresholdCalculatorHDF_New():
  return itkMaximumEntropyThresholdCalculatorHDF.New()


def itkMaximumEntropyThresholdCalculatorHFUS_New():
  return itkMaximumEntropyThresholdCalculatorHFUS.New()


def itkMaximumEntropyThresholdCalculatorHDUS_New():
  return itkMaximumEntropyThresholdCalculatorHDUS.New()


def itkMaximumEntropyThresholdCalculatorHFUC_New():
  return itkMaximumEntropyThresholdCalculatorHFUC.New()


def itkMaximumEntropyThresholdCalculatorHDUC_New():
  return itkMaximumEntropyThresholdCalculatorHDUC.New()


def itkMaximumEntropyThresholdCalculatorHFSS_New():
  return itkMaximumEntropyThresholdCalculatorHFSS.New()


def itkMaximumEntropyThresholdCalculatorHDSS_New():
  return itkMaximumEntropyThresholdCalculatorHDSS.New()

class itkMaximumEntropyThresholdCalculatorHDD(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDD):
    """


    Computes the MaximumEntropy's threshold for an image.

    Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method
    Kapur J.N., Sahoo P.K., and Wong A.K.C. (1985) "A New Method for
    Gray-Level Picture Thresholding Using the Entropy of the Histogram"
    Graphical Models and Image Processing, 29(3): 273-285 M. Emre Celebi
    06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkMaximumEntropyThresholdCalculator.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMaximumEntropyThresholdCalculatorHDD_Pointer":
        """__New_orig__() -> itkMaximumEntropyThresholdCalculatorHDD_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMaximumEntropyThresholdCalculatorHDD_Pointer":
        """Clone(itkMaximumEntropyThresholdCalculatorHDD self) -> itkMaximumEntropyThresholdCalculatorHDD_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD_Clone(self)

    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHDD

    def cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHDD *":
        """cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHDD"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHDD

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHDD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMaximumEntropyThresholdCalculatorHDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMaximumEntropyThresholdCalculatorHDD.Clone = new_instancemethod(_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD_Clone, None, itkMaximumEntropyThresholdCalculatorHDD)
itkMaximumEntropyThresholdCalculatorHDD_swigregister = _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD_swigregister
itkMaximumEntropyThresholdCalculatorHDD_swigregister(itkMaximumEntropyThresholdCalculatorHDD)

def itkMaximumEntropyThresholdCalculatorHDD___New_orig__() -> "itkMaximumEntropyThresholdCalculatorHDD_Pointer":
    """itkMaximumEntropyThresholdCalculatorHDD___New_orig__() -> itkMaximumEntropyThresholdCalculatorHDD_Pointer"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD___New_orig__()

def itkMaximumEntropyThresholdCalculatorHDD_cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHDD *":
    """itkMaximumEntropyThresholdCalculatorHDD_cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHDD"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD_cast(obj)

class itkMaximumEntropyThresholdCalculatorHDF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDF):
    """


    Computes the MaximumEntropy's threshold for an image.

    Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method
    Kapur J.N., Sahoo P.K., and Wong A.K.C. (1985) "A New Method for
    Gray-Level Picture Thresholding Using the Entropy of the Histogram"
    Graphical Models and Image Processing, 29(3): 273-285 M. Emre Celebi
    06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkMaximumEntropyThresholdCalculator.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMaximumEntropyThresholdCalculatorHDF_Pointer":
        """__New_orig__() -> itkMaximumEntropyThresholdCalculatorHDF_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMaximumEntropyThresholdCalculatorHDF_Pointer":
        """Clone(itkMaximumEntropyThresholdCalculatorHDF self) -> itkMaximumEntropyThresholdCalculatorHDF_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF_Clone(self)

    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHDF

    def cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHDF *":
        """cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHDF"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHDF

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHDF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHDF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHDF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMaximumEntropyThresholdCalculatorHDF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMaximumEntropyThresholdCalculatorHDF.Clone = new_instancemethod(_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF_Clone, None, itkMaximumEntropyThresholdCalculatorHDF)
itkMaximumEntropyThresholdCalculatorHDF_swigregister = _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF_swigregister
itkMaximumEntropyThresholdCalculatorHDF_swigregister(itkMaximumEntropyThresholdCalculatorHDF)

def itkMaximumEntropyThresholdCalculatorHDF___New_orig__() -> "itkMaximumEntropyThresholdCalculatorHDF_Pointer":
    """itkMaximumEntropyThresholdCalculatorHDF___New_orig__() -> itkMaximumEntropyThresholdCalculatorHDF_Pointer"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF___New_orig__()

def itkMaximumEntropyThresholdCalculatorHDF_cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHDF *":
    """itkMaximumEntropyThresholdCalculatorHDF_cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHDF"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF_cast(obj)

class itkMaximumEntropyThresholdCalculatorHDSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDSS):
    """


    Computes the MaximumEntropy's threshold for an image.

    Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method
    Kapur J.N., Sahoo P.K., and Wong A.K.C. (1985) "A New Method for
    Gray-Level Picture Thresholding Using the Entropy of the Histogram"
    Graphical Models and Image Processing, 29(3): 273-285 M. Emre Celebi
    06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkMaximumEntropyThresholdCalculator.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMaximumEntropyThresholdCalculatorHDSS_Pointer":
        """__New_orig__() -> itkMaximumEntropyThresholdCalculatorHDSS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMaximumEntropyThresholdCalculatorHDSS_Pointer":
        """Clone(itkMaximumEntropyThresholdCalculatorHDSS self) -> itkMaximumEntropyThresholdCalculatorHDSS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS_Clone(self)

    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHDSS

    def cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHDSS *":
        """cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHDSS"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHDSS

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHDSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHDSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHDSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMaximumEntropyThresholdCalculatorHDSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMaximumEntropyThresholdCalculatorHDSS.Clone = new_instancemethod(_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS_Clone, None, itkMaximumEntropyThresholdCalculatorHDSS)
itkMaximumEntropyThresholdCalculatorHDSS_swigregister = _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS_swigregister
itkMaximumEntropyThresholdCalculatorHDSS_swigregister(itkMaximumEntropyThresholdCalculatorHDSS)

def itkMaximumEntropyThresholdCalculatorHDSS___New_orig__() -> "itkMaximumEntropyThresholdCalculatorHDSS_Pointer":
    """itkMaximumEntropyThresholdCalculatorHDSS___New_orig__() -> itkMaximumEntropyThresholdCalculatorHDSS_Pointer"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS___New_orig__()

def itkMaximumEntropyThresholdCalculatorHDSS_cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHDSS *":
    """itkMaximumEntropyThresholdCalculatorHDSS_cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHDSS"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS_cast(obj)

class itkMaximumEntropyThresholdCalculatorHDUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUC):
    """


    Computes the MaximumEntropy's threshold for an image.

    Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method
    Kapur J.N., Sahoo P.K., and Wong A.K.C. (1985) "A New Method for
    Gray-Level Picture Thresholding Using the Entropy of the Histogram"
    Graphical Models and Image Processing, 29(3): 273-285 M. Emre Celebi
    06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkMaximumEntropyThresholdCalculator.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMaximumEntropyThresholdCalculatorHDUC_Pointer":
        """__New_orig__() -> itkMaximumEntropyThresholdCalculatorHDUC_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMaximumEntropyThresholdCalculatorHDUC_Pointer":
        """Clone(itkMaximumEntropyThresholdCalculatorHDUC self) -> itkMaximumEntropyThresholdCalculatorHDUC_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC_Clone(self)

    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHDUC

    def cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHDUC *":
        """cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHDUC"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHDUC

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHDUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHDUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHDUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMaximumEntropyThresholdCalculatorHDUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMaximumEntropyThresholdCalculatorHDUC.Clone = new_instancemethod(_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC_Clone, None, itkMaximumEntropyThresholdCalculatorHDUC)
itkMaximumEntropyThresholdCalculatorHDUC_swigregister = _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC_swigregister
itkMaximumEntropyThresholdCalculatorHDUC_swigregister(itkMaximumEntropyThresholdCalculatorHDUC)

def itkMaximumEntropyThresholdCalculatorHDUC___New_orig__() -> "itkMaximumEntropyThresholdCalculatorHDUC_Pointer":
    """itkMaximumEntropyThresholdCalculatorHDUC___New_orig__() -> itkMaximumEntropyThresholdCalculatorHDUC_Pointer"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC___New_orig__()

def itkMaximumEntropyThresholdCalculatorHDUC_cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHDUC *":
    """itkMaximumEntropyThresholdCalculatorHDUC_cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHDUC"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC_cast(obj)

class itkMaximumEntropyThresholdCalculatorHDUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUS):
    """


    Computes the MaximumEntropy's threshold for an image.

    Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method
    Kapur J.N., Sahoo P.K., and Wong A.K.C. (1985) "A New Method for
    Gray-Level Picture Thresholding Using the Entropy of the Histogram"
    Graphical Models and Image Processing, 29(3): 273-285 M. Emre Celebi
    06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkMaximumEntropyThresholdCalculator.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMaximumEntropyThresholdCalculatorHDUS_Pointer":
        """__New_orig__() -> itkMaximumEntropyThresholdCalculatorHDUS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMaximumEntropyThresholdCalculatorHDUS_Pointer":
        """Clone(itkMaximumEntropyThresholdCalculatorHDUS self) -> itkMaximumEntropyThresholdCalculatorHDUS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS_Clone(self)

    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHDUS

    def cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHDUS *":
        """cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHDUS"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHDUS

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHDUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHDUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHDUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMaximumEntropyThresholdCalculatorHDUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMaximumEntropyThresholdCalculatorHDUS.Clone = new_instancemethod(_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS_Clone, None, itkMaximumEntropyThresholdCalculatorHDUS)
itkMaximumEntropyThresholdCalculatorHDUS_swigregister = _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS_swigregister
itkMaximumEntropyThresholdCalculatorHDUS_swigregister(itkMaximumEntropyThresholdCalculatorHDUS)

def itkMaximumEntropyThresholdCalculatorHDUS___New_orig__() -> "itkMaximumEntropyThresholdCalculatorHDUS_Pointer":
    """itkMaximumEntropyThresholdCalculatorHDUS___New_orig__() -> itkMaximumEntropyThresholdCalculatorHDUS_Pointer"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS___New_orig__()

def itkMaximumEntropyThresholdCalculatorHDUS_cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHDUS *":
    """itkMaximumEntropyThresholdCalculatorHDUS_cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHDUS"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS_cast(obj)

class itkMaximumEntropyThresholdCalculatorHFD(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFD):
    """


    Computes the MaximumEntropy's threshold for an image.

    Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method
    Kapur J.N., Sahoo P.K., and Wong A.K.C. (1985) "A New Method for
    Gray-Level Picture Thresholding Using the Entropy of the Histogram"
    Graphical Models and Image Processing, 29(3): 273-285 M. Emre Celebi
    06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkMaximumEntropyThresholdCalculator.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMaximumEntropyThresholdCalculatorHFD_Pointer":
        """__New_orig__() -> itkMaximumEntropyThresholdCalculatorHFD_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMaximumEntropyThresholdCalculatorHFD_Pointer":
        """Clone(itkMaximumEntropyThresholdCalculatorHFD self) -> itkMaximumEntropyThresholdCalculatorHFD_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD_Clone(self)

    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHFD

    def cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHFD *":
        """cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHFD"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHFD

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHFD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHFD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHFD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMaximumEntropyThresholdCalculatorHFD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMaximumEntropyThresholdCalculatorHFD.Clone = new_instancemethod(_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD_Clone, None, itkMaximumEntropyThresholdCalculatorHFD)
itkMaximumEntropyThresholdCalculatorHFD_swigregister = _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD_swigregister
itkMaximumEntropyThresholdCalculatorHFD_swigregister(itkMaximumEntropyThresholdCalculatorHFD)

def itkMaximumEntropyThresholdCalculatorHFD___New_orig__() -> "itkMaximumEntropyThresholdCalculatorHFD_Pointer":
    """itkMaximumEntropyThresholdCalculatorHFD___New_orig__() -> itkMaximumEntropyThresholdCalculatorHFD_Pointer"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD___New_orig__()

def itkMaximumEntropyThresholdCalculatorHFD_cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHFD *":
    """itkMaximumEntropyThresholdCalculatorHFD_cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHFD"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD_cast(obj)

class itkMaximumEntropyThresholdCalculatorHFF(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFF):
    """


    Computes the MaximumEntropy's threshold for an image.

    Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method
    Kapur J.N., Sahoo P.K., and Wong A.K.C. (1985) "A New Method for
    Gray-Level Picture Thresholding Using the Entropy of the Histogram"
    Graphical Models and Image Processing, 29(3): 273-285 M. Emre Celebi
    06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkMaximumEntropyThresholdCalculator.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMaximumEntropyThresholdCalculatorHFF_Pointer":
        """__New_orig__() -> itkMaximumEntropyThresholdCalculatorHFF_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMaximumEntropyThresholdCalculatorHFF_Pointer":
        """Clone(itkMaximumEntropyThresholdCalculatorHFF self) -> itkMaximumEntropyThresholdCalculatorHFF_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF_Clone(self)

    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHFF

    def cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHFF *":
        """cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHFF"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHFF

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMaximumEntropyThresholdCalculatorHFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMaximumEntropyThresholdCalculatorHFF.Clone = new_instancemethod(_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF_Clone, None, itkMaximumEntropyThresholdCalculatorHFF)
itkMaximumEntropyThresholdCalculatorHFF_swigregister = _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF_swigregister
itkMaximumEntropyThresholdCalculatorHFF_swigregister(itkMaximumEntropyThresholdCalculatorHFF)

def itkMaximumEntropyThresholdCalculatorHFF___New_orig__() -> "itkMaximumEntropyThresholdCalculatorHFF_Pointer":
    """itkMaximumEntropyThresholdCalculatorHFF___New_orig__() -> itkMaximumEntropyThresholdCalculatorHFF_Pointer"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF___New_orig__()

def itkMaximumEntropyThresholdCalculatorHFF_cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHFF *":
    """itkMaximumEntropyThresholdCalculatorHFF_cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHFF"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF_cast(obj)

class itkMaximumEntropyThresholdCalculatorHFSS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFSS):
    """


    Computes the MaximumEntropy's threshold for an image.

    Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method
    Kapur J.N., Sahoo P.K., and Wong A.K.C. (1985) "A New Method for
    Gray-Level Picture Thresholding Using the Entropy of the Histogram"
    Graphical Models and Image Processing, 29(3): 273-285 M. Emre Celebi
    06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkMaximumEntropyThresholdCalculator.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMaximumEntropyThresholdCalculatorHFSS_Pointer":
        """__New_orig__() -> itkMaximumEntropyThresholdCalculatorHFSS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMaximumEntropyThresholdCalculatorHFSS_Pointer":
        """Clone(itkMaximumEntropyThresholdCalculatorHFSS self) -> itkMaximumEntropyThresholdCalculatorHFSS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS_Clone(self)

    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHFSS

    def cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHFSS *":
        """cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHFSS"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHFSS

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHFSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHFSS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHFSS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMaximumEntropyThresholdCalculatorHFSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMaximumEntropyThresholdCalculatorHFSS.Clone = new_instancemethod(_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS_Clone, None, itkMaximumEntropyThresholdCalculatorHFSS)
itkMaximumEntropyThresholdCalculatorHFSS_swigregister = _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS_swigregister
itkMaximumEntropyThresholdCalculatorHFSS_swigregister(itkMaximumEntropyThresholdCalculatorHFSS)

def itkMaximumEntropyThresholdCalculatorHFSS___New_orig__() -> "itkMaximumEntropyThresholdCalculatorHFSS_Pointer":
    """itkMaximumEntropyThresholdCalculatorHFSS___New_orig__() -> itkMaximumEntropyThresholdCalculatorHFSS_Pointer"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS___New_orig__()

def itkMaximumEntropyThresholdCalculatorHFSS_cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHFSS *":
    """itkMaximumEntropyThresholdCalculatorHFSS_cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHFSS"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS_cast(obj)

class itkMaximumEntropyThresholdCalculatorHFUC(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUC):
    """


    Computes the MaximumEntropy's threshold for an image.

    Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method
    Kapur J.N., Sahoo P.K., and Wong A.K.C. (1985) "A New Method for
    Gray-Level Picture Thresholding Using the Entropy of the Histogram"
    Graphical Models and Image Processing, 29(3): 273-285 M. Emre Celebi
    06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkMaximumEntropyThresholdCalculator.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMaximumEntropyThresholdCalculatorHFUC_Pointer":
        """__New_orig__() -> itkMaximumEntropyThresholdCalculatorHFUC_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMaximumEntropyThresholdCalculatorHFUC_Pointer":
        """Clone(itkMaximumEntropyThresholdCalculatorHFUC self) -> itkMaximumEntropyThresholdCalculatorHFUC_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC_Clone(self)

    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHFUC

    def cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHFUC *":
        """cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHFUC"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHFUC

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHFUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHFUC.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHFUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMaximumEntropyThresholdCalculatorHFUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMaximumEntropyThresholdCalculatorHFUC.Clone = new_instancemethod(_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC_Clone, None, itkMaximumEntropyThresholdCalculatorHFUC)
itkMaximumEntropyThresholdCalculatorHFUC_swigregister = _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC_swigregister
itkMaximumEntropyThresholdCalculatorHFUC_swigregister(itkMaximumEntropyThresholdCalculatorHFUC)

def itkMaximumEntropyThresholdCalculatorHFUC___New_orig__() -> "itkMaximumEntropyThresholdCalculatorHFUC_Pointer":
    """itkMaximumEntropyThresholdCalculatorHFUC___New_orig__() -> itkMaximumEntropyThresholdCalculatorHFUC_Pointer"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC___New_orig__()

def itkMaximumEntropyThresholdCalculatorHFUC_cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHFUC *":
    """itkMaximumEntropyThresholdCalculatorHFUC_cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHFUC"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC_cast(obj)

class itkMaximumEntropyThresholdCalculatorHFUS(itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUS):
    """


    Computes the MaximumEntropy's threshold for an image.

    Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method
    Kapur J.N., Sahoo P.K., and Wong A.K.C. (1985) "A New Method for
    Gray-Level Picture Thresholding Using the Entropy of the Histogram"
    Graphical Models and Image Processing, 29(3): 273-285 M. Emre Celebi
    06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkMaximumEntropyThresholdCalculator.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMaximumEntropyThresholdCalculatorHFUS_Pointer":
        """__New_orig__() -> itkMaximumEntropyThresholdCalculatorHFUS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMaximumEntropyThresholdCalculatorHFUS_Pointer":
        """Clone(itkMaximumEntropyThresholdCalculatorHFUS self) -> itkMaximumEntropyThresholdCalculatorHFUS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS_Clone(self)

    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHFUS

    def cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHFUS *":
        """cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHFUS"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHFUS

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHFUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHFUS.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHFUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMaximumEntropyThresholdCalculatorHFUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMaximumEntropyThresholdCalculatorHFUS.Clone = new_instancemethod(_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS_Clone, None, itkMaximumEntropyThresholdCalculatorHFUS)
itkMaximumEntropyThresholdCalculatorHFUS_swigregister = _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS_swigregister
itkMaximumEntropyThresholdCalculatorHFUS_swigregister(itkMaximumEntropyThresholdCalculatorHFUS)

def itkMaximumEntropyThresholdCalculatorHFUS___New_orig__() -> "itkMaximumEntropyThresholdCalculatorHFUS_Pointer":
    """itkMaximumEntropyThresholdCalculatorHFUS___New_orig__() -> itkMaximumEntropyThresholdCalculatorHFUS_Pointer"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS___New_orig__()

def itkMaximumEntropyThresholdCalculatorHFUS_cast(obj: 'itkLightObject') -> "itkMaximumEntropyThresholdCalculatorHFUS *":
    """itkMaximumEntropyThresholdCalculatorHFUS_cast(itkLightObject obj) -> itkMaximumEntropyThresholdCalculatorHFUS"""
    return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def maximum_entropy_threshold_calculator(*args, **kwargs):
    """Procedural interface for MaximumEntropyThresholdCalculator"""
    import itk
    instance = itk.MaximumEntropyThresholdCalculator.New(*args, **kwargs)
    return instance.__internal_call__()

def maximum_entropy_threshold_calculator_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MaximumEntropyThresholdCalculator, itkTemplate.itkTemplate):
        filter_object = itk.MaximumEntropyThresholdCalculator.values()[0]
    else:
        filter_object = itk.MaximumEntropyThresholdCalculator

    maximum_entropy_threshold_calculator.__doc__ = filter_object.__doc__
    maximum_entropy_threshold_calculator.__doc__ += "\n Args are Input(s) to the filter.\n"
    maximum_entropy_threshold_calculator.__doc__ += "Available Keyword Arguments:\n"
    maximum_entropy_threshold_calculator.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



