# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkBinaryErodeImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBinaryErodeImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBinaryErodeImageFilterPython
            return _itkBinaryErodeImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBinaryErodeImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBinaryErodeImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBinaryErodeImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkBinaryDilateImageFilterPython
import itkOffsetPython
import itkSizePython
import itkFlatStructuringElementPython
import itkNeighborhoodPython
import itkVectorPython
import itkFixedArrayPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkRGBPixelPython
import itkCovariantVectorPython
import itkIndexPython
import itkBoxImageFilterPython
import itkImageToImageFilterAPython
import itkImagePython
import itkRGBAPixelPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkBinaryErodeImageFilterID3ID3SE3_New():
  return itkBinaryErodeImageFilterID3ID3SE3.New()


def itkBinaryErodeImageFilterIF3IF3SE3_New():
  return itkBinaryErodeImageFilterIF3IF3SE3.New()


def itkBinaryErodeImageFilterIUS3IUS3SE3_New():
  return itkBinaryErodeImageFilterIUS3IUS3SE3.New()


def itkBinaryErodeImageFilterIUC3IUC3SE3_New():
  return itkBinaryErodeImageFilterIUC3IUC3SE3.New()


def itkBinaryErodeImageFilterISS3ISS3SE3_New():
  return itkBinaryErodeImageFilterISS3ISS3SE3.New()


def itkBinaryErodeImageFilterID2ID2SE2_New():
  return itkBinaryErodeImageFilterID2ID2SE2.New()


def itkBinaryErodeImageFilterIF2IF2SE2_New():
  return itkBinaryErodeImageFilterIF2IF2SE2.New()


def itkBinaryErodeImageFilterIUS2IUS2SE2_New():
  return itkBinaryErodeImageFilterIUS2IUS2SE2.New()


def itkBinaryErodeImageFilterIUC2IUC2SE2_New():
  return itkBinaryErodeImageFilterIUC2IUC2SE2.New()


def itkBinaryErodeImageFilterISS2ISS2SE2_New():
  return itkBinaryErodeImageFilterISS2ISS2SE2.New()

class itkBinaryErodeImageFilterID2ID2SE2(itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass):
    """


    Fast binary erosion of a single intensity value in the image.

    BinaryErodeImageFilter is a binary erosion morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetErodeValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "ErodeValue"). Pixel values matching the
    erode value are considered the "foreground" and all other pixels are
    "background". This is useful in processing segmented images where
    all pixels in segment #1 have value 1 and pixels in segment #2 have
    value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType. The eroded pixels will receive the BackgroundValue
    (defaults to NumericTraits::NonpositiveMin() ).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryDilateImageFilter
    BinaryMorphologyImageFilter

    C++ includes: itkBinaryErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryErodeImageFilterID2ID2SE2_Pointer":
        """__New_orig__() -> itkBinaryErodeImageFilterID2ID2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryErodeImageFilterID2ID2SE2_Pointer":
        """Clone(itkBinaryErodeImageFilterID2ID2SE2 self) -> itkBinaryErodeImageFilterID2ID2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_Clone(self)


    def SetErodeValue(self, value: 'double const &') -> "void":
        """
        SetErodeValue(itkBinaryErodeImageFilterID2ID2SE2 self, double const & value)

        Set the value in the
        image to consider as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the SetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_SetErodeValue(self, value)


    def GetErodeValue(self) -> "double":
        """
        GetErodeValue(itkBinaryErodeImageFilterID2ID2SE2 self) -> double

        Get the value in the
        image considered as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the GetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_GetErodeValue(self)

    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterID2ID2SE2

    def cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterID2ID2SE2 *":
        """cast(itkLightObject obj) -> itkBinaryErodeImageFilterID2ID2SE2"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterID2ID2SE2

        Create a new object of the class itkBinaryErodeImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterID2ID2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterID2ID2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryErodeImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryErodeImageFilterID2ID2SE2.Clone = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_Clone, None, itkBinaryErodeImageFilterID2ID2SE2)
itkBinaryErodeImageFilterID2ID2SE2.SetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_SetErodeValue, None, itkBinaryErodeImageFilterID2ID2SE2)
itkBinaryErodeImageFilterID2ID2SE2.GetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_GetErodeValue, None, itkBinaryErodeImageFilterID2ID2SE2)
itkBinaryErodeImageFilterID2ID2SE2_swigregister = _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_swigregister
itkBinaryErodeImageFilterID2ID2SE2_swigregister(itkBinaryErodeImageFilterID2ID2SE2)

def itkBinaryErodeImageFilterID2ID2SE2___New_orig__() -> "itkBinaryErodeImageFilterID2ID2SE2_Pointer":
    """itkBinaryErodeImageFilterID2ID2SE2___New_orig__() -> itkBinaryErodeImageFilterID2ID2SE2_Pointer"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2___New_orig__()

def itkBinaryErodeImageFilterID2ID2SE2_cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterID2ID2SE2 *":
    """itkBinaryErodeImageFilterID2ID2SE2_cast(itkLightObject obj) -> itkBinaryErodeImageFilterID2ID2SE2"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_cast(obj)

class itkBinaryErodeImageFilterID3ID3SE3(itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass):
    """


    Fast binary erosion of a single intensity value in the image.

    BinaryErodeImageFilter is a binary erosion morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetErodeValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "ErodeValue"). Pixel values matching the
    erode value are considered the "foreground" and all other pixels are
    "background". This is useful in processing segmented images where
    all pixels in segment #1 have value 1 and pixels in segment #2 have
    value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType. The eroded pixels will receive the BackgroundValue
    (defaults to NumericTraits::NonpositiveMin() ).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryDilateImageFilter
    BinaryMorphologyImageFilter

    C++ includes: itkBinaryErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryErodeImageFilterID3ID3SE3_Pointer":
        """__New_orig__() -> itkBinaryErodeImageFilterID3ID3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryErodeImageFilterID3ID3SE3_Pointer":
        """Clone(itkBinaryErodeImageFilterID3ID3SE3 self) -> itkBinaryErodeImageFilterID3ID3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_Clone(self)


    def SetErodeValue(self, value: 'double const &') -> "void":
        """
        SetErodeValue(itkBinaryErodeImageFilterID3ID3SE3 self, double const & value)

        Set the value in the
        image to consider as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the SetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_SetErodeValue(self, value)


    def GetErodeValue(self) -> "double":
        """
        GetErodeValue(itkBinaryErodeImageFilterID3ID3SE3 self) -> double

        Get the value in the
        image considered as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the GetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_GetErodeValue(self)

    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterID3ID3SE3

    def cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterID3ID3SE3 *":
        """cast(itkLightObject obj) -> itkBinaryErodeImageFilterID3ID3SE3"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterID3ID3SE3

        Create a new object of the class itkBinaryErodeImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterID3ID3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterID3ID3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryErodeImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryErodeImageFilterID3ID3SE3.Clone = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_Clone, None, itkBinaryErodeImageFilterID3ID3SE3)
itkBinaryErodeImageFilterID3ID3SE3.SetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_SetErodeValue, None, itkBinaryErodeImageFilterID3ID3SE3)
itkBinaryErodeImageFilterID3ID3SE3.GetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_GetErodeValue, None, itkBinaryErodeImageFilterID3ID3SE3)
itkBinaryErodeImageFilterID3ID3SE3_swigregister = _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_swigregister
itkBinaryErodeImageFilterID3ID3SE3_swigregister(itkBinaryErodeImageFilterID3ID3SE3)

def itkBinaryErodeImageFilterID3ID3SE3___New_orig__() -> "itkBinaryErodeImageFilterID3ID3SE3_Pointer":
    """itkBinaryErodeImageFilterID3ID3SE3___New_orig__() -> itkBinaryErodeImageFilterID3ID3SE3_Pointer"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3___New_orig__()

def itkBinaryErodeImageFilterID3ID3SE3_cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterID3ID3SE3 *":
    """itkBinaryErodeImageFilterID3ID3SE3_cast(itkLightObject obj) -> itkBinaryErodeImageFilterID3ID3SE3"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_cast(obj)

class itkBinaryErodeImageFilterIF2IF2SE2(itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass):
    """


    Fast binary erosion of a single intensity value in the image.

    BinaryErodeImageFilter is a binary erosion morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetErodeValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "ErodeValue"). Pixel values matching the
    erode value are considered the "foreground" and all other pixels are
    "background". This is useful in processing segmented images where
    all pixels in segment #1 have value 1 and pixels in segment #2 have
    value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType. The eroded pixels will receive the BackgroundValue
    (defaults to NumericTraits::NonpositiveMin() ).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryDilateImageFilter
    BinaryMorphologyImageFilter

    C++ includes: itkBinaryErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryErodeImageFilterIF2IF2SE2_Pointer":
        """__New_orig__() -> itkBinaryErodeImageFilterIF2IF2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryErodeImageFilterIF2IF2SE2_Pointer":
        """Clone(itkBinaryErodeImageFilterIF2IF2SE2 self) -> itkBinaryErodeImageFilterIF2IF2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_Clone(self)


    def SetErodeValue(self, value: 'float const &') -> "void":
        """
        SetErodeValue(itkBinaryErodeImageFilterIF2IF2SE2 self, float const & value)

        Set the value in the
        image to consider as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the SetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_SetErodeValue(self, value)


    def GetErodeValue(self) -> "float":
        """
        GetErodeValue(itkBinaryErodeImageFilterIF2IF2SE2 self) -> float

        Get the value in the
        image considered as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the GetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_GetErodeValue(self)

    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIF2IF2SE2

    def cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIF2IF2SE2 *":
        """cast(itkLightObject obj) -> itkBinaryErodeImageFilterIF2IF2SE2"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIF2IF2SE2

        Create a new object of the class itkBinaryErodeImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIF2IF2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIF2IF2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryErodeImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryErodeImageFilterIF2IF2SE2.Clone = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_Clone, None, itkBinaryErodeImageFilterIF2IF2SE2)
itkBinaryErodeImageFilterIF2IF2SE2.SetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_SetErodeValue, None, itkBinaryErodeImageFilterIF2IF2SE2)
itkBinaryErodeImageFilterIF2IF2SE2.GetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_GetErodeValue, None, itkBinaryErodeImageFilterIF2IF2SE2)
itkBinaryErodeImageFilterIF2IF2SE2_swigregister = _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_swigregister
itkBinaryErodeImageFilterIF2IF2SE2_swigregister(itkBinaryErodeImageFilterIF2IF2SE2)

def itkBinaryErodeImageFilterIF2IF2SE2___New_orig__() -> "itkBinaryErodeImageFilterIF2IF2SE2_Pointer":
    """itkBinaryErodeImageFilterIF2IF2SE2___New_orig__() -> itkBinaryErodeImageFilterIF2IF2SE2_Pointer"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2___New_orig__()

def itkBinaryErodeImageFilterIF2IF2SE2_cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIF2IF2SE2 *":
    """itkBinaryErodeImageFilterIF2IF2SE2_cast(itkLightObject obj) -> itkBinaryErodeImageFilterIF2IF2SE2"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_cast(obj)

class itkBinaryErodeImageFilterIF3IF3SE3(itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass):
    """


    Fast binary erosion of a single intensity value in the image.

    BinaryErodeImageFilter is a binary erosion morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetErodeValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "ErodeValue"). Pixel values matching the
    erode value are considered the "foreground" and all other pixels are
    "background". This is useful in processing segmented images where
    all pixels in segment #1 have value 1 and pixels in segment #2 have
    value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType. The eroded pixels will receive the BackgroundValue
    (defaults to NumericTraits::NonpositiveMin() ).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryDilateImageFilter
    BinaryMorphologyImageFilter

    C++ includes: itkBinaryErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryErodeImageFilterIF3IF3SE3_Pointer":
        """__New_orig__() -> itkBinaryErodeImageFilterIF3IF3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryErodeImageFilterIF3IF3SE3_Pointer":
        """Clone(itkBinaryErodeImageFilterIF3IF3SE3 self) -> itkBinaryErodeImageFilterIF3IF3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_Clone(self)


    def SetErodeValue(self, value: 'float const &') -> "void":
        """
        SetErodeValue(itkBinaryErodeImageFilterIF3IF3SE3 self, float const & value)

        Set the value in the
        image to consider as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the SetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_SetErodeValue(self, value)


    def GetErodeValue(self) -> "float":
        """
        GetErodeValue(itkBinaryErodeImageFilterIF3IF3SE3 self) -> float

        Get the value in the
        image considered as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the GetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_GetErodeValue(self)

    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIF3IF3SE3

    def cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIF3IF3SE3 *":
        """cast(itkLightObject obj) -> itkBinaryErodeImageFilterIF3IF3SE3"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIF3IF3SE3

        Create a new object of the class itkBinaryErodeImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIF3IF3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIF3IF3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryErodeImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryErodeImageFilterIF3IF3SE3.Clone = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_Clone, None, itkBinaryErodeImageFilterIF3IF3SE3)
itkBinaryErodeImageFilterIF3IF3SE3.SetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_SetErodeValue, None, itkBinaryErodeImageFilterIF3IF3SE3)
itkBinaryErodeImageFilterIF3IF3SE3.GetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_GetErodeValue, None, itkBinaryErodeImageFilterIF3IF3SE3)
itkBinaryErodeImageFilterIF3IF3SE3_swigregister = _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_swigregister
itkBinaryErodeImageFilterIF3IF3SE3_swigregister(itkBinaryErodeImageFilterIF3IF3SE3)

def itkBinaryErodeImageFilterIF3IF3SE3___New_orig__() -> "itkBinaryErodeImageFilterIF3IF3SE3_Pointer":
    """itkBinaryErodeImageFilterIF3IF3SE3___New_orig__() -> itkBinaryErodeImageFilterIF3IF3SE3_Pointer"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3___New_orig__()

def itkBinaryErodeImageFilterIF3IF3SE3_cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIF3IF3SE3 *":
    """itkBinaryErodeImageFilterIF3IF3SE3_cast(itkLightObject obj) -> itkBinaryErodeImageFilterIF3IF3SE3"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_cast(obj)

class itkBinaryErodeImageFilterISS2ISS2SE2(itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass):
    """


    Fast binary erosion of a single intensity value in the image.

    BinaryErodeImageFilter is a binary erosion morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetErodeValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "ErodeValue"). Pixel values matching the
    erode value are considered the "foreground" and all other pixels are
    "background". This is useful in processing segmented images where
    all pixels in segment #1 have value 1 and pixels in segment #2 have
    value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType. The eroded pixels will receive the BackgroundValue
    (defaults to NumericTraits::NonpositiveMin() ).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryDilateImageFilter
    BinaryMorphologyImageFilter

    C++ includes: itkBinaryErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryErodeImageFilterISS2ISS2SE2_Pointer":
        """__New_orig__() -> itkBinaryErodeImageFilterISS2ISS2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryErodeImageFilterISS2ISS2SE2_Pointer":
        """Clone(itkBinaryErodeImageFilterISS2ISS2SE2 self) -> itkBinaryErodeImageFilterISS2ISS2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_Clone(self)


    def SetErodeValue(self, value: 'short const &') -> "void":
        """
        SetErodeValue(itkBinaryErodeImageFilterISS2ISS2SE2 self, short const & value)

        Set the value in the
        image to consider as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the SetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_SetErodeValue(self, value)


    def GetErodeValue(self) -> "short":
        """
        GetErodeValue(itkBinaryErodeImageFilterISS2ISS2SE2 self) -> short

        Get the value in the
        image considered as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the GetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_GetErodeValue(self)

    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterISS2ISS2SE2

    def cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterISS2ISS2SE2 *":
        """cast(itkLightObject obj) -> itkBinaryErodeImageFilterISS2ISS2SE2"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterISS2ISS2SE2

        Create a new object of the class itkBinaryErodeImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterISS2ISS2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterISS2ISS2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryErodeImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryErodeImageFilterISS2ISS2SE2.Clone = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_Clone, None, itkBinaryErodeImageFilterISS2ISS2SE2)
itkBinaryErodeImageFilterISS2ISS2SE2.SetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_SetErodeValue, None, itkBinaryErodeImageFilterISS2ISS2SE2)
itkBinaryErodeImageFilterISS2ISS2SE2.GetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_GetErodeValue, None, itkBinaryErodeImageFilterISS2ISS2SE2)
itkBinaryErodeImageFilterISS2ISS2SE2_swigregister = _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_swigregister
itkBinaryErodeImageFilterISS2ISS2SE2_swigregister(itkBinaryErodeImageFilterISS2ISS2SE2)

def itkBinaryErodeImageFilterISS2ISS2SE2___New_orig__() -> "itkBinaryErodeImageFilterISS2ISS2SE2_Pointer":
    """itkBinaryErodeImageFilterISS2ISS2SE2___New_orig__() -> itkBinaryErodeImageFilterISS2ISS2SE2_Pointer"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2___New_orig__()

def itkBinaryErodeImageFilterISS2ISS2SE2_cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterISS2ISS2SE2 *":
    """itkBinaryErodeImageFilterISS2ISS2SE2_cast(itkLightObject obj) -> itkBinaryErodeImageFilterISS2ISS2SE2"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_cast(obj)

class itkBinaryErodeImageFilterISS3ISS3SE3(itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass):
    """


    Fast binary erosion of a single intensity value in the image.

    BinaryErodeImageFilter is a binary erosion morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetErodeValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "ErodeValue"). Pixel values matching the
    erode value are considered the "foreground" and all other pixels are
    "background". This is useful in processing segmented images where
    all pixels in segment #1 have value 1 and pixels in segment #2 have
    value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType. The eroded pixels will receive the BackgroundValue
    (defaults to NumericTraits::NonpositiveMin() ).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryDilateImageFilter
    BinaryMorphologyImageFilter

    C++ includes: itkBinaryErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryErodeImageFilterISS3ISS3SE3_Pointer":
        """__New_orig__() -> itkBinaryErodeImageFilterISS3ISS3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryErodeImageFilterISS3ISS3SE3_Pointer":
        """Clone(itkBinaryErodeImageFilterISS3ISS3SE3 self) -> itkBinaryErodeImageFilterISS3ISS3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_Clone(self)


    def SetErodeValue(self, value: 'short const &') -> "void":
        """
        SetErodeValue(itkBinaryErodeImageFilterISS3ISS3SE3 self, short const & value)

        Set the value in the
        image to consider as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the SetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_SetErodeValue(self, value)


    def GetErodeValue(self) -> "short":
        """
        GetErodeValue(itkBinaryErodeImageFilterISS3ISS3SE3 self) -> short

        Get the value in the
        image considered as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the GetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_GetErodeValue(self)

    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterISS3ISS3SE3

    def cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterISS3ISS3SE3 *":
        """cast(itkLightObject obj) -> itkBinaryErodeImageFilterISS3ISS3SE3"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterISS3ISS3SE3

        Create a new object of the class itkBinaryErodeImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterISS3ISS3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterISS3ISS3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryErodeImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryErodeImageFilterISS3ISS3SE3.Clone = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_Clone, None, itkBinaryErodeImageFilterISS3ISS3SE3)
itkBinaryErodeImageFilterISS3ISS3SE3.SetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_SetErodeValue, None, itkBinaryErodeImageFilterISS3ISS3SE3)
itkBinaryErodeImageFilterISS3ISS3SE3.GetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_GetErodeValue, None, itkBinaryErodeImageFilterISS3ISS3SE3)
itkBinaryErodeImageFilterISS3ISS3SE3_swigregister = _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_swigregister
itkBinaryErodeImageFilterISS3ISS3SE3_swigregister(itkBinaryErodeImageFilterISS3ISS3SE3)

def itkBinaryErodeImageFilterISS3ISS3SE3___New_orig__() -> "itkBinaryErodeImageFilterISS3ISS3SE3_Pointer":
    """itkBinaryErodeImageFilterISS3ISS3SE3___New_orig__() -> itkBinaryErodeImageFilterISS3ISS3SE3_Pointer"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3___New_orig__()

def itkBinaryErodeImageFilterISS3ISS3SE3_cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterISS3ISS3SE3 *":
    """itkBinaryErodeImageFilterISS3ISS3SE3_cast(itkLightObject obj) -> itkBinaryErodeImageFilterISS3ISS3SE3"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_cast(obj)

class itkBinaryErodeImageFilterIUC2IUC2SE2(itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass):
    """


    Fast binary erosion of a single intensity value in the image.

    BinaryErodeImageFilter is a binary erosion morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetErodeValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "ErodeValue"). Pixel values matching the
    erode value are considered the "foreground" and all other pixels are
    "background". This is useful in processing segmented images where
    all pixels in segment #1 have value 1 and pixels in segment #2 have
    value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType. The eroded pixels will receive the BackgroundValue
    (defaults to NumericTraits::NonpositiveMin() ).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryDilateImageFilter
    BinaryMorphologyImageFilter

    C++ includes: itkBinaryErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryErodeImageFilterIUC2IUC2SE2_Pointer":
        """__New_orig__() -> itkBinaryErodeImageFilterIUC2IUC2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryErodeImageFilterIUC2IUC2SE2_Pointer":
        """Clone(itkBinaryErodeImageFilterIUC2IUC2SE2 self) -> itkBinaryErodeImageFilterIUC2IUC2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_Clone(self)


    def SetErodeValue(self, value: 'unsigned char const &') -> "void":
        """
        SetErodeValue(itkBinaryErodeImageFilterIUC2IUC2SE2 self, unsigned char const & value)

        Set the value in the
        image to consider as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the SetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_SetErodeValue(self, value)


    def GetErodeValue(self) -> "unsigned char":
        """
        GetErodeValue(itkBinaryErodeImageFilterIUC2IUC2SE2 self) -> unsigned char

        Get the value in the
        image considered as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the GetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_GetErodeValue(self)

    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIUC2IUC2SE2

    def cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIUC2IUC2SE2 *":
        """cast(itkLightObject obj) -> itkBinaryErodeImageFilterIUC2IUC2SE2"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIUC2IUC2SE2

        Create a new object of the class itkBinaryErodeImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIUC2IUC2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIUC2IUC2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryErodeImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryErodeImageFilterIUC2IUC2SE2.Clone = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_Clone, None, itkBinaryErodeImageFilterIUC2IUC2SE2)
itkBinaryErodeImageFilterIUC2IUC2SE2.SetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_SetErodeValue, None, itkBinaryErodeImageFilterIUC2IUC2SE2)
itkBinaryErodeImageFilterIUC2IUC2SE2.GetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_GetErodeValue, None, itkBinaryErodeImageFilterIUC2IUC2SE2)
itkBinaryErodeImageFilterIUC2IUC2SE2_swigregister = _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_swigregister
itkBinaryErodeImageFilterIUC2IUC2SE2_swigregister(itkBinaryErodeImageFilterIUC2IUC2SE2)

def itkBinaryErodeImageFilterIUC2IUC2SE2___New_orig__() -> "itkBinaryErodeImageFilterIUC2IUC2SE2_Pointer":
    """itkBinaryErodeImageFilterIUC2IUC2SE2___New_orig__() -> itkBinaryErodeImageFilterIUC2IUC2SE2_Pointer"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2___New_orig__()

def itkBinaryErodeImageFilterIUC2IUC2SE2_cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIUC2IUC2SE2 *":
    """itkBinaryErodeImageFilterIUC2IUC2SE2_cast(itkLightObject obj) -> itkBinaryErodeImageFilterIUC2IUC2SE2"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_cast(obj)

class itkBinaryErodeImageFilterIUC3IUC3SE3(itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass):
    """


    Fast binary erosion of a single intensity value in the image.

    BinaryErodeImageFilter is a binary erosion morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetErodeValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "ErodeValue"). Pixel values matching the
    erode value are considered the "foreground" and all other pixels are
    "background". This is useful in processing segmented images where
    all pixels in segment #1 have value 1 and pixels in segment #2 have
    value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType. The eroded pixels will receive the BackgroundValue
    (defaults to NumericTraits::NonpositiveMin() ).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryDilateImageFilter
    BinaryMorphologyImageFilter

    C++ includes: itkBinaryErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryErodeImageFilterIUC3IUC3SE3_Pointer":
        """__New_orig__() -> itkBinaryErodeImageFilterIUC3IUC3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryErodeImageFilterIUC3IUC3SE3_Pointer":
        """Clone(itkBinaryErodeImageFilterIUC3IUC3SE3 self) -> itkBinaryErodeImageFilterIUC3IUC3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_Clone(self)


    def SetErodeValue(self, value: 'unsigned char const &') -> "void":
        """
        SetErodeValue(itkBinaryErodeImageFilterIUC3IUC3SE3 self, unsigned char const & value)

        Set the value in the
        image to consider as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the SetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_SetErodeValue(self, value)


    def GetErodeValue(self) -> "unsigned char":
        """
        GetErodeValue(itkBinaryErodeImageFilterIUC3IUC3SE3 self) -> unsigned char

        Get the value in the
        image considered as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the GetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_GetErodeValue(self)

    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIUC3IUC3SE3

    def cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIUC3IUC3SE3 *":
        """cast(itkLightObject obj) -> itkBinaryErodeImageFilterIUC3IUC3SE3"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIUC3IUC3SE3

        Create a new object of the class itkBinaryErodeImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIUC3IUC3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIUC3IUC3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryErodeImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryErodeImageFilterIUC3IUC3SE3.Clone = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_Clone, None, itkBinaryErodeImageFilterIUC3IUC3SE3)
itkBinaryErodeImageFilterIUC3IUC3SE3.SetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_SetErodeValue, None, itkBinaryErodeImageFilterIUC3IUC3SE3)
itkBinaryErodeImageFilterIUC3IUC3SE3.GetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_GetErodeValue, None, itkBinaryErodeImageFilterIUC3IUC3SE3)
itkBinaryErodeImageFilterIUC3IUC3SE3_swigregister = _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_swigregister
itkBinaryErodeImageFilterIUC3IUC3SE3_swigregister(itkBinaryErodeImageFilterIUC3IUC3SE3)

def itkBinaryErodeImageFilterIUC3IUC3SE3___New_orig__() -> "itkBinaryErodeImageFilterIUC3IUC3SE3_Pointer":
    """itkBinaryErodeImageFilterIUC3IUC3SE3___New_orig__() -> itkBinaryErodeImageFilterIUC3IUC3SE3_Pointer"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3___New_orig__()

def itkBinaryErodeImageFilterIUC3IUC3SE3_cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIUC3IUC3SE3 *":
    """itkBinaryErodeImageFilterIUC3IUC3SE3_cast(itkLightObject obj) -> itkBinaryErodeImageFilterIUC3IUC3SE3"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_cast(obj)

class itkBinaryErodeImageFilterIUS2IUS2SE2(itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass):
    """


    Fast binary erosion of a single intensity value in the image.

    BinaryErodeImageFilter is a binary erosion morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetErodeValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "ErodeValue"). Pixel values matching the
    erode value are considered the "foreground" and all other pixels are
    "background". This is useful in processing segmented images where
    all pixels in segment #1 have value 1 and pixels in segment #2 have
    value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType. The eroded pixels will receive the BackgroundValue
    (defaults to NumericTraits::NonpositiveMin() ).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryDilateImageFilter
    BinaryMorphologyImageFilter

    C++ includes: itkBinaryErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryErodeImageFilterIUS2IUS2SE2_Pointer":
        """__New_orig__() -> itkBinaryErodeImageFilterIUS2IUS2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryErodeImageFilterIUS2IUS2SE2_Pointer":
        """Clone(itkBinaryErodeImageFilterIUS2IUS2SE2 self) -> itkBinaryErodeImageFilterIUS2IUS2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_Clone(self)


    def SetErodeValue(self, value: 'unsigned short const &') -> "void":
        """
        SetErodeValue(itkBinaryErodeImageFilterIUS2IUS2SE2 self, unsigned short const & value)

        Set the value in the
        image to consider as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the SetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_SetErodeValue(self, value)


    def GetErodeValue(self) -> "unsigned short":
        """
        GetErodeValue(itkBinaryErodeImageFilterIUS2IUS2SE2 self) -> unsigned short

        Get the value in the
        image considered as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the GetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_GetErodeValue(self)

    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIUS2IUS2SE2

    def cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIUS2IUS2SE2 *":
        """cast(itkLightObject obj) -> itkBinaryErodeImageFilterIUS2IUS2SE2"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIUS2IUS2SE2

        Create a new object of the class itkBinaryErodeImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIUS2IUS2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIUS2IUS2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryErodeImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryErodeImageFilterIUS2IUS2SE2.Clone = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_Clone, None, itkBinaryErodeImageFilterIUS2IUS2SE2)
itkBinaryErodeImageFilterIUS2IUS2SE2.SetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_SetErodeValue, None, itkBinaryErodeImageFilterIUS2IUS2SE2)
itkBinaryErodeImageFilterIUS2IUS2SE2.GetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_GetErodeValue, None, itkBinaryErodeImageFilterIUS2IUS2SE2)
itkBinaryErodeImageFilterIUS2IUS2SE2_swigregister = _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_swigregister
itkBinaryErodeImageFilterIUS2IUS2SE2_swigregister(itkBinaryErodeImageFilterIUS2IUS2SE2)

def itkBinaryErodeImageFilterIUS2IUS2SE2___New_orig__() -> "itkBinaryErodeImageFilterIUS2IUS2SE2_Pointer":
    """itkBinaryErodeImageFilterIUS2IUS2SE2___New_orig__() -> itkBinaryErodeImageFilterIUS2IUS2SE2_Pointer"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2___New_orig__()

def itkBinaryErodeImageFilterIUS2IUS2SE2_cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIUS2IUS2SE2 *":
    """itkBinaryErodeImageFilterIUS2IUS2SE2_cast(itkLightObject obj) -> itkBinaryErodeImageFilterIUS2IUS2SE2"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_cast(obj)

class itkBinaryErodeImageFilterIUS3IUS3SE3(itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass):
    """


    Fast binary erosion of a single intensity value in the image.

    BinaryErodeImageFilter is a binary erosion morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetErodeValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "ErodeValue"). Pixel values matching the
    erode value are considered the "foreground" and all other pixels are
    "background". This is useful in processing segmented images where
    all pixels in segment #1 have value 1 and pixels in segment #2 have
    value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType. The eroded pixels will receive the BackgroundValue
    (defaults to NumericTraits::NonpositiveMin() ).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryDilateImageFilter
    BinaryMorphologyImageFilter

    C++ includes: itkBinaryErodeImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryErodeImageFilterIUS3IUS3SE3_Pointer":
        """__New_orig__() -> itkBinaryErodeImageFilterIUS3IUS3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryErodeImageFilterIUS3IUS3SE3_Pointer":
        """Clone(itkBinaryErodeImageFilterIUS3IUS3SE3 self) -> itkBinaryErodeImageFilterIUS3IUS3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_Clone(self)


    def SetErodeValue(self, value: 'unsigned short const &') -> "void":
        """
        SetErodeValue(itkBinaryErodeImageFilterIUS3IUS3SE3 self, unsigned short const & value)

        Set the value in the
        image to consider as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the SetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_SetErodeValue(self, value)


    def GetErodeValue(self) -> "unsigned short":
        """
        GetErodeValue(itkBinaryErodeImageFilterIUS3IUS3SE3 self) -> unsigned short

        Get the value in the
        image considered as "foreground". Defaults to maximum value of
        PixelType. This is an alias to the GetForegroundValue in the
        superclass. 
        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_GetErodeValue(self)

    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIUS3IUS3SE3

    def cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIUS3IUS3SE3 *":
        """cast(itkLightObject obj) -> itkBinaryErodeImageFilterIUS3IUS3SE3"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIUS3IUS3SE3

        Create a new object of the class itkBinaryErodeImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIUS3IUS3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIUS3IUS3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryErodeImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryErodeImageFilterIUS3IUS3SE3.Clone = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_Clone, None, itkBinaryErodeImageFilterIUS3IUS3SE3)
itkBinaryErodeImageFilterIUS3IUS3SE3.SetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_SetErodeValue, None, itkBinaryErodeImageFilterIUS3IUS3SE3)
itkBinaryErodeImageFilterIUS3IUS3SE3.GetErodeValue = new_instancemethod(_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_GetErodeValue, None, itkBinaryErodeImageFilterIUS3IUS3SE3)
itkBinaryErodeImageFilterIUS3IUS3SE3_swigregister = _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_swigregister
itkBinaryErodeImageFilterIUS3IUS3SE3_swigregister(itkBinaryErodeImageFilterIUS3IUS3SE3)

def itkBinaryErodeImageFilterIUS3IUS3SE3___New_orig__() -> "itkBinaryErodeImageFilterIUS3IUS3SE3_Pointer":
    """itkBinaryErodeImageFilterIUS3IUS3SE3___New_orig__() -> itkBinaryErodeImageFilterIUS3IUS3SE3_Pointer"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3___New_orig__()

def itkBinaryErodeImageFilterIUS3IUS3SE3_cast(obj: 'itkLightObject') -> "itkBinaryErodeImageFilterIUS3IUS3SE3 *":
    """itkBinaryErodeImageFilterIUS3IUS3SE3_cast(itkLightObject obj) -> itkBinaryErodeImageFilterIUS3IUS3SE3"""
    return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_erode_image_filter(*args, **kwargs):
    """Procedural interface for BinaryErodeImageFilter"""
    import itk
    instance = itk.BinaryErodeImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_erode_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryErodeImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryErodeImageFilter.values()[0]
    else:
        filter_object = itk.BinaryErodeImageFilter

    binary_erode_image_filter.__doc__ = filter_object.__doc__
    binary_erode_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_erode_image_filter.__doc__ += "Available Keyword Arguments:\n"
    binary_erode_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



