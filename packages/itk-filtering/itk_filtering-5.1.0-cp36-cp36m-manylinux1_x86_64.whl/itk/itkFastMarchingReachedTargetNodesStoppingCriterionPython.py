# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkFastMarchingReachedTargetNodesStoppingCriterionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkFastMarchingReachedTargetNodesStoppingCriterionPython', [dirname(__file__)])
        except ImportError:
            import _itkFastMarchingReachedTargetNodesStoppingCriterionPython
            return _itkFastMarchingReachedTargetNodesStoppingCriterionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkFastMarchingReachedTargetNodesStoppingCriterionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkFastMarchingReachedTargetNodesStoppingCriterionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkFastMarchingReachedTargetNodesStoppingCriterionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFastMarchingStoppingCriterionBasePython
import itkNodePairPython
import itkIndexPython
import itkSizePython
import pyBasePython
import itkOffsetPython
import ITKCommonBasePython
import itkImagePython
import itkVectorPython
import itkFixedArrayPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkCovariantVectorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython

def itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_New():
  return itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.New()


def itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_New():
  return itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.New()


def itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_New():
  return itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.New()


def itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_New():
  return itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.New()

class itkFastMarchingReachedTargetNodesStoppingCriterionEnums(object):
    """Proxy of C++ itkFastMarchingReachedTargetNodesStoppingCriterionEnums class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    TargetCondition_OneTarget = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionEnums_TargetCondition_OneTarget
    TargetCondition_SomeTargets = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionEnums_TargetCondition_SomeTargets
    TargetCondition_AllTargets = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionEnums_TargetCondition_AllTargets

    def __init__(self, *args):
        """
        __init__(itkFastMarchingReachedTargetNodesStoppingCriterionEnums self) -> itkFastMarchingReachedTargetNodesStoppingCriterionEnums
        __init__(itkFastMarchingReachedTargetNodesStoppingCriterionEnums self, itkFastMarchingReachedTargetNodesStoppingCriterionEnums arg0) -> itkFastMarchingReachedTargetNodesStoppingCriterionEnums
        """
        _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionEnums_swiginit(self, _itkFastMarchingReachedTargetNodesStoppingCriterionPython.new_itkFastMarchingReachedTargetNodesStoppingCriterionEnums(*args))
    __swig_destroy__ = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.delete_itkFastMarchingReachedTargetNodesStoppingCriterionEnums
itkFastMarchingReachedTargetNodesStoppingCriterionEnums_swigregister = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionEnums_swigregister
itkFastMarchingReachedTargetNodesStoppingCriterionEnums_swigregister(itkFastMarchingReachedTargetNodesStoppingCriterionEnums)

class itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2(itkFastMarchingStoppingCriterionBasePython.itkFastMarchingStoppingCriterionBaseID2ID2):
    """


    Stopping criterion for FastMarchingFilterBase.

    Stopping criterion where the condition is satisfied when the front
    reaches one, several or all target nodes (provided by the user).

    C++ includes: itkFastMarchingReachedTargetNodesStoppingCriterion.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_Pointer":
        """__New_orig__() -> itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_Pointer"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_Pointer":
        """Clone(itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 self) -> itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_Pointer"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_Clone(self)


    def SetTargetCondition(self, iCondition: 'itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &') -> "void":
        """
        SetTargetCondition(itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 self, itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const & iCondition)

        Set/Get
        TargetCondition to indicate if the user wants the front to reach one,
        some or all target nodes. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_SetTargetCondition(self, iCondition)


    def GetTargetCondition(self) -> "itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &":
        """GetTargetCondition(itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 self) -> itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_GetTargetCondition(self)


    def SetTargetOffset(self, _arg: 'double const') -> "void":
        """
        SetTargetOffset(itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 self, double const _arg)

        Set/Get
        TargetOffset 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_SetTargetOffset(self, _arg)


    def GetTargetOffset(self) -> "double":
        """GetTargetOffset(itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 self) -> double"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_GetTargetOffset(self)


    def SetNumberOfTargetsToBeReached(self, iN: 'unsigned long const &') -> "void":
        """
        SetNumberOfTargetsToBeReached(itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 self, unsigned long const & iN)

        Set
        the number of target nodes to be reached. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_SetNumberOfTargetsToBeReached(self, iN)


    def SetTargetNodes(self, iNodes: 'std::vector< itkIndex2,std::allocator< itkIndex2 > > const &') -> "void":
        """
        SetTargetNodes(itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 self, std::vector< itkIndex2,std::allocator< itkIndex2 > > const & iNodes)

        Set Target Nodes. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_SetTargetNodes(self, iNodes)


    def SetCurrentNode(self, iNode: 'itkIndex2') -> "void":
        """
        SetCurrentNode(itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 self, itkIndex2 iNode)

        Set the current
        node. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_SetCurrentNode(self, iNode)

    __swig_destroy__ = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.delete_itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2

    def cast(obj: 'itkLightObject') -> "itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 *":
        """cast(itkLightObject obj) -> itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2

        Create a new object of the class itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.Clone = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_Clone, None, itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2)
itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.SetTargetCondition = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_SetTargetCondition, None, itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2)
itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.GetTargetCondition = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_GetTargetCondition, None, itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2)
itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.SetTargetOffset = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_SetTargetOffset, None, itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2)
itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.GetTargetOffset = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_GetTargetOffset, None, itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2)
itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.SetNumberOfTargetsToBeReached = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_SetNumberOfTargetsToBeReached, None, itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2)
itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.SetTargetNodes = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_SetTargetNodes, None, itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2)
itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2.SetCurrentNode = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_SetCurrentNode, None, itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2)
itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_swigregister = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_swigregister
itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_swigregister(itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2)

def itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2___New_orig__() -> "itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_Pointer":
    """itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2___New_orig__() -> itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_Pointer"""
    return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2___New_orig__()

def itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_cast(obj: 'itkLightObject') -> "itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2 *":
    """itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_cast(itkLightObject obj) -> itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2"""
    return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID2ID2_cast(obj)

class itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3(itkFastMarchingStoppingCriterionBasePython.itkFastMarchingStoppingCriterionBaseID3ID3):
    """


    Stopping criterion for FastMarchingFilterBase.

    Stopping criterion where the condition is satisfied when the front
    reaches one, several or all target nodes (provided by the user).

    C++ includes: itkFastMarchingReachedTargetNodesStoppingCriterion.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_Pointer":
        """__New_orig__() -> itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_Pointer"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_Pointer":
        """Clone(itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 self) -> itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_Pointer"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_Clone(self)


    def SetTargetCondition(self, iCondition: 'itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &') -> "void":
        """
        SetTargetCondition(itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 self, itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const & iCondition)

        Set/Get
        TargetCondition to indicate if the user wants the front to reach one,
        some or all target nodes. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_SetTargetCondition(self, iCondition)


    def GetTargetCondition(self) -> "itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &":
        """GetTargetCondition(itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 self) -> itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_GetTargetCondition(self)


    def SetTargetOffset(self, _arg: 'double const') -> "void":
        """
        SetTargetOffset(itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 self, double const _arg)

        Set/Get
        TargetOffset 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_SetTargetOffset(self, _arg)


    def GetTargetOffset(self) -> "double":
        """GetTargetOffset(itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 self) -> double"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_GetTargetOffset(self)


    def SetNumberOfTargetsToBeReached(self, iN: 'unsigned long const &') -> "void":
        """
        SetNumberOfTargetsToBeReached(itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 self, unsigned long const & iN)

        Set
        the number of target nodes to be reached. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_SetNumberOfTargetsToBeReached(self, iN)


    def SetTargetNodes(self, iNodes: 'std::vector< itkIndex3,std::allocator< itkIndex3 > > const &') -> "void":
        """
        SetTargetNodes(itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 self, std::vector< itkIndex3,std::allocator< itkIndex3 > > const & iNodes)

        Set Target Nodes. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_SetTargetNodes(self, iNodes)


    def SetCurrentNode(self, iNode: 'itkIndex3') -> "void":
        """
        SetCurrentNode(itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 self, itkIndex3 iNode)

        Set the current
        node. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_SetCurrentNode(self, iNode)

    __swig_destroy__ = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.delete_itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3

    def cast(obj: 'itkLightObject') -> "itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 *":
        """cast(itkLightObject obj) -> itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3

        Create a new object of the class itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.Clone = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_Clone, None, itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3)
itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.SetTargetCondition = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_SetTargetCondition, None, itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3)
itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.GetTargetCondition = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_GetTargetCondition, None, itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3)
itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.SetTargetOffset = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_SetTargetOffset, None, itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3)
itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.GetTargetOffset = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_GetTargetOffset, None, itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3)
itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.SetNumberOfTargetsToBeReached = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_SetNumberOfTargetsToBeReached, None, itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3)
itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.SetTargetNodes = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_SetTargetNodes, None, itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3)
itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3.SetCurrentNode = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_SetCurrentNode, None, itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3)
itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_swigregister = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_swigregister
itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_swigregister(itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3)

def itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3___New_orig__() -> "itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_Pointer":
    """itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3___New_orig__() -> itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_Pointer"""
    return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3___New_orig__()

def itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_cast(obj: 'itkLightObject') -> "itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3 *":
    """itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_cast(itkLightObject obj) -> itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3"""
    return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionID3ID3_cast(obj)

class itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2(itkFastMarchingStoppingCriterionBasePython.itkFastMarchingStoppingCriterionBaseIF2IF2):
    """


    Stopping criterion for FastMarchingFilterBase.

    Stopping criterion where the condition is satisfied when the front
    reaches one, several or all target nodes (provided by the user).

    C++ includes: itkFastMarchingReachedTargetNodesStoppingCriterion.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_Pointer":
        """__New_orig__() -> itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_Pointer"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_Pointer":
        """Clone(itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 self) -> itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_Pointer"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_Clone(self)


    def SetTargetCondition(self, iCondition: 'itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &') -> "void":
        """
        SetTargetCondition(itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 self, itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const & iCondition)

        Set/Get
        TargetCondition to indicate if the user wants the front to reach one,
        some or all target nodes. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_SetTargetCondition(self, iCondition)


    def GetTargetCondition(self) -> "itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &":
        """GetTargetCondition(itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 self) -> itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_GetTargetCondition(self)


    def SetTargetOffset(self, _arg: 'float const') -> "void":
        """
        SetTargetOffset(itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 self, float const _arg)

        Set/Get
        TargetOffset 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_SetTargetOffset(self, _arg)


    def GetTargetOffset(self) -> "float":
        """GetTargetOffset(itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 self) -> float"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_GetTargetOffset(self)


    def SetNumberOfTargetsToBeReached(self, iN: 'unsigned long const &') -> "void":
        """
        SetNumberOfTargetsToBeReached(itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 self, unsigned long const & iN)

        Set
        the number of target nodes to be reached. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_SetNumberOfTargetsToBeReached(self, iN)


    def SetTargetNodes(self, iNodes: 'std::vector< itkIndex2,std::allocator< itkIndex2 > > const &') -> "void":
        """
        SetTargetNodes(itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 self, std::vector< itkIndex2,std::allocator< itkIndex2 > > const & iNodes)

        Set Target Nodes. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_SetTargetNodes(self, iNodes)


    def SetCurrentNode(self, iNode: 'itkIndex2') -> "void":
        """
        SetCurrentNode(itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 self, itkIndex2 iNode)

        Set the current
        node. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_SetCurrentNode(self, iNode)

    __swig_destroy__ = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.delete_itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2

    def cast(obj: 'itkLightObject') -> "itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 *":
        """cast(itkLightObject obj) -> itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2

        Create a new object of the class itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.Clone = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_Clone, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2)
itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.SetTargetCondition = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_SetTargetCondition, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2)
itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.GetTargetCondition = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_GetTargetCondition, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2)
itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.SetTargetOffset = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_SetTargetOffset, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2)
itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.GetTargetOffset = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_GetTargetOffset, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2)
itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.SetNumberOfTargetsToBeReached = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_SetNumberOfTargetsToBeReached, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2)
itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.SetTargetNodes = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_SetTargetNodes, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2)
itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2.SetCurrentNode = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_SetCurrentNode, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2)
itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_swigregister = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_swigregister
itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_swigregister(itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2)

def itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2___New_orig__() -> "itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_Pointer":
    """itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2___New_orig__() -> itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_Pointer"""
    return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2___New_orig__()

def itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_cast(obj: 'itkLightObject') -> "itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2 *":
    """itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_cast(itkLightObject obj) -> itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2"""
    return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF2IF2_cast(obj)

class itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3(itkFastMarchingStoppingCriterionBasePython.itkFastMarchingStoppingCriterionBaseIF3IF3):
    """


    Stopping criterion for FastMarchingFilterBase.

    Stopping criterion where the condition is satisfied when the front
    reaches one, several or all target nodes (provided by the user).

    C++ includes: itkFastMarchingReachedTargetNodesStoppingCriterion.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_Pointer":
        """__New_orig__() -> itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_Pointer"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_Pointer":
        """Clone(itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 self) -> itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_Pointer"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_Clone(self)


    def SetTargetCondition(self, iCondition: 'itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &') -> "void":
        """
        SetTargetCondition(itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 self, itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const & iCondition)

        Set/Get
        TargetCondition to indicate if the user wants the front to reach one,
        some or all target nodes. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_SetTargetCondition(self, iCondition)


    def GetTargetCondition(self) -> "itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &":
        """GetTargetCondition(itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 self) -> itkFastMarchingReachedTargetNodesStoppingCriterionEnums::TargetCondition const &"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_GetTargetCondition(self)


    def SetTargetOffset(self, _arg: 'float const') -> "void":
        """
        SetTargetOffset(itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 self, float const _arg)

        Set/Get
        TargetOffset 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_SetTargetOffset(self, _arg)


    def GetTargetOffset(self) -> "float":
        """GetTargetOffset(itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 self) -> float"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_GetTargetOffset(self)


    def SetNumberOfTargetsToBeReached(self, iN: 'unsigned long const &') -> "void":
        """
        SetNumberOfTargetsToBeReached(itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 self, unsigned long const & iN)

        Set
        the number of target nodes to be reached. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_SetNumberOfTargetsToBeReached(self, iN)


    def SetTargetNodes(self, iNodes: 'std::vector< itkIndex3,std::allocator< itkIndex3 > > const &') -> "void":
        """
        SetTargetNodes(itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 self, std::vector< itkIndex3,std::allocator< itkIndex3 > > const & iNodes)

        Set Target Nodes. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_SetTargetNodes(self, iNodes)


    def SetCurrentNode(self, iNode: 'itkIndex3') -> "void":
        """
        SetCurrentNode(itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 self, itkIndex3 iNode)

        Set the current
        node. 
        """
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_SetCurrentNode(self, iNode)

    __swig_destroy__ = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.delete_itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3

    def cast(obj: 'itkLightObject') -> "itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 *":
        """cast(itkLightObject obj) -> itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3"""
        return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3

        Create a new object of the class itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.Clone = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_Clone, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3)
itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.SetTargetCondition = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_SetTargetCondition, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3)
itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.GetTargetCondition = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_GetTargetCondition, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3)
itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.SetTargetOffset = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_SetTargetOffset, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3)
itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.GetTargetOffset = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_GetTargetOffset, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3)
itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.SetNumberOfTargetsToBeReached = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_SetNumberOfTargetsToBeReached, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3)
itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.SetTargetNodes = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_SetTargetNodes, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3)
itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3.SetCurrentNode = new_instancemethod(_itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_SetCurrentNode, None, itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3)
itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_swigregister = _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_swigregister
itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_swigregister(itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3)

def itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3___New_orig__() -> "itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_Pointer":
    """itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3___New_orig__() -> itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_Pointer"""
    return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3___New_orig__()

def itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_cast(obj: 'itkLightObject') -> "itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3 *":
    """itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_cast(itkLightObject obj) -> itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3"""
    return _itkFastMarchingReachedTargetNodesStoppingCriterionPython.itkFastMarchingReachedTargetNodesStoppingCriterionIF3IF3_cast(obj)



