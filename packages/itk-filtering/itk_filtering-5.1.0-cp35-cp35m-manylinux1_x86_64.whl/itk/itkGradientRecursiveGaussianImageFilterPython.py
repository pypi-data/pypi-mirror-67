# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkGradientRecursiveGaussianImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGradientRecursiveGaussianImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkGradientRecursiveGaussianImageFilterPython
            return _itkGradientRecursiveGaussianImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGradientRecursiveGaussianImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGradientRecursiveGaussianImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGradientRecursiveGaussianImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFixedArrayPython
import pyBasePython
import ITKCommonBasePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImagePython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkRGBPixelPython
import stdcomplexPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_vectorPython
import vnl_matrixPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterBPython

def itkGradientRecursiveGaussianImageFilterIVF23ICVF43_New():
  return itkGradientRecursiveGaussianImageFilterIVF23ICVF43.New()


def itkGradientRecursiveGaussianImageFilterID3ICVF23_New():
  return itkGradientRecursiveGaussianImageFilterID3ICVF23.New()


def itkGradientRecursiveGaussianImageFilterIF3ICVF23_New():
  return itkGradientRecursiveGaussianImageFilterIF3ICVF23.New()


def itkGradientRecursiveGaussianImageFilterIUS3ICVF23_New():
  return itkGradientRecursiveGaussianImageFilterIUS3ICVF23.New()


def itkGradientRecursiveGaussianImageFilterIUC3ICVF23_New():
  return itkGradientRecursiveGaussianImageFilterIUC3ICVF23.New()


def itkGradientRecursiveGaussianImageFilterISS3ICVF23_New():
  return itkGradientRecursiveGaussianImageFilterISS3ICVF23.New()


def itkGradientRecursiveGaussianImageFilterIVF22ICVF42_New():
  return itkGradientRecursiveGaussianImageFilterIVF22ICVF42.New()


def itkGradientRecursiveGaussianImageFilterID2ICVF22_New():
  return itkGradientRecursiveGaussianImageFilterID2ICVF22.New()


def itkGradientRecursiveGaussianImageFilterIF2ICVF22_New():
  return itkGradientRecursiveGaussianImageFilterIF2ICVF22.New()


def itkGradientRecursiveGaussianImageFilterIUS2ICVF22_New():
  return itkGradientRecursiveGaussianImageFilterIUS2ICVF22.New()


def itkGradientRecursiveGaussianImageFilterIUC2ICVF22_New():
  return itkGradientRecursiveGaussianImageFilterIUC2ICVF22.New()


def itkGradientRecursiveGaussianImageFilterISS2ICVF22_New():
  return itkGradientRecursiveGaussianImageFilterISS2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterID2ICVF22(itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterID2ICVF22 self) -> itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD2') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterID2ICVF22 self, itkFixedArrayD2 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterID2ICVF22 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD2":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterID2ICVF22 self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterID2ICVF22 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterID2ICVF22 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterID2ICVF22 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterID2ICVF22 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterID2ICVF22 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterID2ICVF22 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterID2ICVF22 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterID2ICVF22 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterID2ICVF22

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterID2ICVF22 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterID2ICVF22"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterID2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterID2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterID2ICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterID2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterID2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterID2ICVF22.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_Clone, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetSigma, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetSigma, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_swigregister
itkGradientRecursiveGaussianImageFilterID2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterID2ICVF22)

def itkGradientRecursiveGaussianImageFilterID2ICVF22___New_orig__() -> "itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer":
    """itkGradientRecursiveGaussianImageFilterID2ICVF22___New_orig__() -> itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22___New_orig__()

def itkGradientRecursiveGaussianImageFilterID2ICVF22_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterID2ICVF22 *":
    """itkGradientRecursiveGaussianImageFilterID2ICVF22_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterID2ICVF22"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_cast(obj)

class itkGradientRecursiveGaussianImageFilterID3ICVF23(itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF23):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterID3ICVF23_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterID3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterID3ICVF23_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterID3ICVF23 self) -> itkGradientRecursiveGaussianImageFilterID3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD3') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterID3ICVF23 self, itkFixedArrayD3 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterID3ICVF23 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD3":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterID3ICVF23 self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterID3ICVF23 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterID3ICVF23 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterID3ICVF23 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterID3ICVF23 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterID3ICVF23 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterID3ICVF23 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterID3ICVF23 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterID3ICVF23 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterID3ICVF23

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterID3ICVF23 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterID3ICVF23"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterID3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterID3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterID3ICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterID3ICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterID3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterID3ICVF23.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_Clone, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetSigma, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetSigma, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_swigregister
itkGradientRecursiveGaussianImageFilterID3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterID3ICVF23)

def itkGradientRecursiveGaussianImageFilterID3ICVF23___New_orig__() -> "itkGradientRecursiveGaussianImageFilterID3ICVF23_Pointer":
    """itkGradientRecursiveGaussianImageFilterID3ICVF23___New_orig__() -> itkGradientRecursiveGaussianImageFilterID3ICVF23_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23___New_orig__()

def itkGradientRecursiveGaussianImageFilterID3ICVF23_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterID3ICVF23 *":
    """itkGradientRecursiveGaussianImageFilterID3ICVF23_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterID3ICVF23"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_cast(obj)

class itkGradientRecursiveGaussianImageFilterIF2ICVF22(itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self) -> itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD2') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self, itkFixedArrayD2 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD2":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterIF2ICVF22 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIF2ICVF22

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIF2ICVF22 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIF2ICVF22"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIF2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIF2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIF2ICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIF2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterIF2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterIF2ICVF22.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_Clone, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetSigma, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetSigma, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_swigregister
itkGradientRecursiveGaussianImageFilterIF2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterIF2ICVF22)

def itkGradientRecursiveGaussianImageFilterIF2ICVF22___New_orig__() -> "itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer":
    """itkGradientRecursiveGaussianImageFilterIF2ICVF22___New_orig__() -> itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22___New_orig__()

def itkGradientRecursiveGaussianImageFilterIF2ICVF22_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIF2ICVF22 *":
    """itkGradientRecursiveGaussianImageFilterIF2ICVF22_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIF2ICVF22"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_cast(obj)

class itkGradientRecursiveGaussianImageFilterIF3ICVF23(itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF23):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterIF3ICVF23_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterIF3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterIF3ICVF23_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self) -> itkGradientRecursiveGaussianImageFilterIF3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD3') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self, itkFixedArrayD3 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD3":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterIF3ICVF23 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIF3ICVF23

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIF3ICVF23 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIF3ICVF23"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIF3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIF3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIF3ICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIF3ICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterIF3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterIF3ICVF23.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_Clone, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetSigma, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetSigma, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_swigregister
itkGradientRecursiveGaussianImageFilterIF3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterIF3ICVF23)

def itkGradientRecursiveGaussianImageFilterIF3ICVF23___New_orig__() -> "itkGradientRecursiveGaussianImageFilterIF3ICVF23_Pointer":
    """itkGradientRecursiveGaussianImageFilterIF3ICVF23___New_orig__() -> itkGradientRecursiveGaussianImageFilterIF3ICVF23_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23___New_orig__()

def itkGradientRecursiveGaussianImageFilterIF3ICVF23_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIF3ICVF23 *":
    """itkGradientRecursiveGaussianImageFilterIF3ICVF23_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIF3ICVF23"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_cast(obj)

class itkGradientRecursiveGaussianImageFilterISS2ICVF22(itkImageToImageFilterBPython.itkImageToImageFilterISS2ICVF22):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterISS2ICVF22_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterISS2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterISS2ICVF22_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self) -> itkGradientRecursiveGaussianImageFilterISS2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD2') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self, itkFixedArrayD2 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD2":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterISS2ICVF22 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterISS2ICVF22

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterISS2ICVF22 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterISS2ICVF22"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterISS2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterISS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterISS2ICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterISS2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterISS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterISS2ICVF22.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_Clone, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetSigma, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetSigma, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_swigregister
itkGradientRecursiveGaussianImageFilterISS2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterISS2ICVF22)

def itkGradientRecursiveGaussianImageFilterISS2ICVF22___New_orig__() -> "itkGradientRecursiveGaussianImageFilterISS2ICVF22_Pointer":
    """itkGradientRecursiveGaussianImageFilterISS2ICVF22___New_orig__() -> itkGradientRecursiveGaussianImageFilterISS2ICVF22_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22___New_orig__()

def itkGradientRecursiveGaussianImageFilterISS2ICVF22_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterISS2ICVF22 *":
    """itkGradientRecursiveGaussianImageFilterISS2ICVF22_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterISS2ICVF22"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_cast(obj)

class itkGradientRecursiveGaussianImageFilterISS3ICVF23(itkImageToImageFilterBPython.itkImageToImageFilterISS3ICVF23):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterISS3ICVF23_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterISS3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterISS3ICVF23_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self) -> itkGradientRecursiveGaussianImageFilterISS3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD3') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self, itkFixedArrayD3 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD3":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterISS3ICVF23 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterISS3ICVF23

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterISS3ICVF23 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterISS3ICVF23"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterISS3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterISS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterISS3ICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterISS3ICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterISS3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterISS3ICVF23.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_Clone, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetSigma, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetSigma, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_swigregister
itkGradientRecursiveGaussianImageFilterISS3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterISS3ICVF23)

def itkGradientRecursiveGaussianImageFilterISS3ICVF23___New_orig__() -> "itkGradientRecursiveGaussianImageFilterISS3ICVF23_Pointer":
    """itkGradientRecursiveGaussianImageFilterISS3ICVF23___New_orig__() -> itkGradientRecursiveGaussianImageFilterISS3ICVF23_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23___New_orig__()

def itkGradientRecursiveGaussianImageFilterISS3ICVF23_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterISS3ICVF23 *":
    """itkGradientRecursiveGaussianImageFilterISS3ICVF23_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterISS3ICVF23"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_cast(obj)

class itkGradientRecursiveGaussianImageFilterIUC2ICVF22(itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self) -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD2') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self, itkFixedArrayD2 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD2":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUC2ICVF22

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIUC2ICVF22 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUC2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUC2ICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUC2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterIUC2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterIUC2ICVF22.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Clone, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetSigma, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetSigma, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_swigregister
itkGradientRecursiveGaussianImageFilterIUC2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterIUC2ICVF22)

def itkGradientRecursiveGaussianImageFilterIUC2ICVF22___New_orig__() -> "itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer":
    """itkGradientRecursiveGaussianImageFilterIUC2ICVF22___New_orig__() -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22___New_orig__()

def itkGradientRecursiveGaussianImageFilterIUC2ICVF22_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIUC2ICVF22 *":
    """itkGradientRecursiveGaussianImageFilterIUC2ICVF22_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_cast(obj)

class itkGradientRecursiveGaussianImageFilterIUC3ICVF23(itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF23):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self) -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD3') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self, itkFixedArrayD3 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD3":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterIUC3ICVF23 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUC3ICVF23

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIUC3ICVF23 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUC3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUC3ICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUC3ICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterIUC3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterIUC3ICVF23.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Clone, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetSigma, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetSigma, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_swigregister
itkGradientRecursiveGaussianImageFilterIUC3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterIUC3ICVF23)

def itkGradientRecursiveGaussianImageFilterIUC3ICVF23___New_orig__() -> "itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Pointer":
    """itkGradientRecursiveGaussianImageFilterIUC3ICVF23___New_orig__() -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23___New_orig__()

def itkGradientRecursiveGaussianImageFilterIUC3ICVF23_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIUC3ICVF23 *":
    """itkGradientRecursiveGaussianImageFilterIUC3ICVF23_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_cast(obj)

class itkGradientRecursiveGaussianImageFilterIUS2ICVF22(itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self) -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD2') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self, itkFixedArrayD2 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD2":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUS2ICVF22

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIUS2ICVF22 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUS2ICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUS2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterIUS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterIUS2ICVF22.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Clone, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetSigma, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetSigma, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_swigregister
itkGradientRecursiveGaussianImageFilterIUS2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterIUS2ICVF22)

def itkGradientRecursiveGaussianImageFilterIUS2ICVF22___New_orig__() -> "itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer":
    """itkGradientRecursiveGaussianImageFilterIUS2ICVF22___New_orig__() -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22___New_orig__()

def itkGradientRecursiveGaussianImageFilterIUS2ICVF22_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIUS2ICVF22 *":
    """itkGradientRecursiveGaussianImageFilterIUS2ICVF22_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_cast(obj)

class itkGradientRecursiveGaussianImageFilterIUS3ICVF23(itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF23):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self) -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD3') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self, itkFixedArrayD3 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD3":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterIUS3ICVF23 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUS3ICVF23

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIUS3ICVF23 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUS3ICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUS3ICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterIUS3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterIUS3ICVF23.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Clone, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetSigma, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetSigma, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_swigregister
itkGradientRecursiveGaussianImageFilterIUS3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterIUS3ICVF23)

def itkGradientRecursiveGaussianImageFilterIUS3ICVF23___New_orig__() -> "itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Pointer":
    """itkGradientRecursiveGaussianImageFilterIUS3ICVF23___New_orig__() -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23___New_orig__()

def itkGradientRecursiveGaussianImageFilterIUS3ICVF23_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIUS3ICVF23 *":
    """itkGradientRecursiveGaussianImageFilterIUS3ICVF23_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_cast(obj)

class itkGradientRecursiveGaussianImageFilterIVF22ICVF42(itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self) -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD2') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self, itkFixedArrayD2 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD2":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterIVF22ICVF42 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIVF22ICVF42

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIVF22ICVF42 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIVF22ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIVF22ICVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIVF22ICVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterIVF22ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterIVF22ICVF42.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Clone, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetSigma, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetSigma, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_swigregister
itkGradientRecursiveGaussianImageFilterIVF22ICVF42_swigregister(itkGradientRecursiveGaussianImageFilterIVF22ICVF42)

def itkGradientRecursiveGaussianImageFilterIVF22ICVF42___New_orig__() -> "itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Pointer":
    """itkGradientRecursiveGaussianImageFilterIVF22ICVF42___New_orig__() -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42___New_orig__()

def itkGradientRecursiveGaussianImageFilterIVF22ICVF42_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIVF22ICVF42 *":
    """itkGradientRecursiveGaussianImageFilterIVF22ICVF42_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_cast(obj)

class itkGradientRecursiveGaussianImageFilterIVF23ICVF43(itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43):
    """


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type}

    C++ includes: itkGradientRecursiveGaussianImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Pointer":
        """__New_orig__() -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Pointer":
        """Clone(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self) -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Clone(self)


    def SetSigmaArray(self, sigmas: 'itkFixedArrayD3') -> "void":
        """
        SetSigmaArray(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self, itkFixedArrayD3 sigmas)

        Set Sigma value.
        Sigma is measured in the units of image spacing. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetSigmaArray(self, sigmas)


    def SetSigma(self, sigma: 'double') -> "void":
        """SetSigma(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self, double sigma)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetSigma(self, sigma)


    def GetSigmaArray(self) -> "itkFixedArrayD3":
        """GetSigmaArray(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetSigmaArray(self)


    def GetSigma(self) -> "double":
        """GetSigma(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetSigma(self)


    def SetNormalizeAcrossScale(self, normalizeInScaleSpace: 'bool') -> "void":
        """
        SetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self, bool normalizeInScaleSpace)

        Define
        which normalization factor will be used for the Gaussian See:
        RecursiveGaussianImageFilter::SetNormalizeAcrossScale 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetNormalizeAcrossScale(self, normalizeInScaleSpace)


    def GetNormalizeAcrossScale(self) -> "bool":
        """GetNormalizeAcrossScale(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetNormalizeAcrossScale(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self)

        GradientRecursiveGaussianImageFilter needs all of the input to produce
        an output. Therefore, GradientRecursiveGaussianImageFilter needs to
        provide an implementation for GenerateInputRequestedRegion in order to
        inform the pipeline execution model. See:
        ImageToImageFilter::GenerateInputRequestedRegion() 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GenerateInputRequestedRegion(self)


    def SetUseImageDirection(self, _arg: 'bool const') -> "void":
        """
        SetUseImageDirection(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self, bool const _arg)

        The
        UseImageDirection flag determines whether the gradients are computed
        with respect to the image grid or with respect to the physical space.
        When this flag is ON the gradients are computed with respect to the
        coordinate system of physical space. The difference is whether we take
        into account the image Direction or not. The flag ON will take into
        account the image direction and will result in an extra matrix
        multiplication compared to the amount of computation performed when
        the flag is OFF. The default value of this flag is On. 
        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetUseImageDirection(self, _arg)


    def GetUseImageDirection(self) -> "bool":
        """GetUseImageDirection(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetUseImageDirection(self)


    def UseImageDirectionOn(self) -> "void":
        """UseImageDirectionOn(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_UseImageDirectionOn(self)


    def UseImageDirectionOff(self) -> "void":
        """UseImageDirectionOff(itkGradientRecursiveGaussianImageFilterIVF23ICVF43 self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_UseImageDirectionOff(self)

    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIVF23ICVF43

    def cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIVF23ICVF43 *":
        """cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIVF23ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIVF23ICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIVF23ICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientRecursiveGaussianImageFilterIVF23ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientRecursiveGaussianImageFilterIVF23ICVF43.Clone = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Clone, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.SetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.SetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetSigma, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.GetSigmaArray = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetSigmaArray, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.GetSigma = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetSigma, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.SetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.GetNormalizeAcrossScale = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetNormalizeAcrossScale, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.GenerateInputRequestedRegion = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GenerateInputRequestedRegion, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.SetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.GetUseImageDirection = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetUseImageDirection, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.UseImageDirectionOn = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_UseImageDirectionOn, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43.UseImageDirectionOff = new_instancemethod(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_UseImageDirectionOff, None, itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43_swigregister = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_swigregister
itkGradientRecursiveGaussianImageFilterIVF23ICVF43_swigregister(itkGradientRecursiveGaussianImageFilterIVF23ICVF43)

def itkGradientRecursiveGaussianImageFilterIVF23ICVF43___New_orig__() -> "itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Pointer":
    """itkGradientRecursiveGaussianImageFilterIVF23ICVF43___New_orig__() -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Pointer"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43___New_orig__()

def itkGradientRecursiveGaussianImageFilterIVF23ICVF43_cast(obj: 'itkLightObject') -> "itkGradientRecursiveGaussianImageFilterIVF23ICVF43 *":
    """itkGradientRecursiveGaussianImageFilterIVF23ICVF43_cast(itkLightObject obj) -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43"""
    return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def gradient_recursive_gaussian_image_filter(*args, **kwargs):
    """Procedural interface for GradientRecursiveGaussianImageFilter"""
    import itk
    instance = itk.GradientRecursiveGaussianImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def gradient_recursive_gaussian_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.GradientRecursiveGaussianImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.GradientRecursiveGaussianImageFilter.values()[0]
    else:
        filter_object = itk.GradientRecursiveGaussianImageFilter

    gradient_recursive_gaussian_image_filter.__doc__ = filter_object.__doc__
    gradient_recursive_gaussian_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    gradient_recursive_gaussian_image_filter.__doc__ += "Available Keyword Arguments:\n"
    gradient_recursive_gaussian_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



