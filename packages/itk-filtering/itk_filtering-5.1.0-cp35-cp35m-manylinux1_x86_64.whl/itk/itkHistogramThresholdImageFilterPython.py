# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkHistogramThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkHistogramThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkHistogramThresholdImageFilterPython
            return _itkHistogramThresholdImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkHistogramThresholdImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkHistogramThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkHistogramThresholdImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdCalculatorPython
import itkSimpleDataObjectDecoratorPython
import itkRGBPixelPython
import itkFixedArrayPython
import pyBasePython
import stdcomplexPython
import ITKCommonBasePython
import itkCovariantVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkVectorPython
import itkArrayPython
import itkRGBAPixelPython
import itkHistogramPython
import itkSamplePython
import itkImageToHistogramFilterPython
import itkImageSinkPython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkPointPython
import vnl_matrix_fixedPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython

def itkHistogramThresholdImageFilterID3IUS3_New():
  return itkHistogramThresholdImageFilterID3IUS3.New()


def itkHistogramThresholdImageFilterID2IUS2_New():
  return itkHistogramThresholdImageFilterID2IUS2.New()


def itkHistogramThresholdImageFilterID3IUC3_New():
  return itkHistogramThresholdImageFilterID3IUC3.New()


def itkHistogramThresholdImageFilterID2IUC2_New():
  return itkHistogramThresholdImageFilterID2IUC2.New()


def itkHistogramThresholdImageFilterID3ISS3_New():
  return itkHistogramThresholdImageFilterID3ISS3.New()


def itkHistogramThresholdImageFilterID2ISS2_New():
  return itkHistogramThresholdImageFilterID2ISS2.New()


def itkHistogramThresholdImageFilterIF3IUS3_New():
  return itkHistogramThresholdImageFilterIF3IUS3.New()


def itkHistogramThresholdImageFilterIF2IUS2_New():
  return itkHistogramThresholdImageFilterIF2IUS2.New()


def itkHistogramThresholdImageFilterIF3IUC3_New():
  return itkHistogramThresholdImageFilterIF3IUC3.New()


def itkHistogramThresholdImageFilterIF2IUC2_New():
  return itkHistogramThresholdImageFilterIF2IUC2.New()


def itkHistogramThresholdImageFilterIF3ISS3_New():
  return itkHistogramThresholdImageFilterIF3ISS3.New()


def itkHistogramThresholdImageFilterIF2ISS2_New():
  return itkHistogramThresholdImageFilterIF2ISS2.New()


def itkHistogramThresholdImageFilterIUS3IUS3_New():
  return itkHistogramThresholdImageFilterIUS3IUS3.New()


def itkHistogramThresholdImageFilterIUS2IUS2_New():
  return itkHistogramThresholdImageFilterIUS2IUS2.New()


def itkHistogramThresholdImageFilterIUS3IUC3_New():
  return itkHistogramThresholdImageFilterIUS3IUC3.New()


def itkHistogramThresholdImageFilterIUS2IUC2_New():
  return itkHistogramThresholdImageFilterIUS2IUC2.New()


def itkHistogramThresholdImageFilterIUS3ISS3_New():
  return itkHistogramThresholdImageFilterIUS3ISS3.New()


def itkHistogramThresholdImageFilterIUS2ISS2_New():
  return itkHistogramThresholdImageFilterIUS2ISS2.New()


def itkHistogramThresholdImageFilterIUC3IUS3_New():
  return itkHistogramThresholdImageFilterIUC3IUS3.New()


def itkHistogramThresholdImageFilterIUC2IUS2_New():
  return itkHistogramThresholdImageFilterIUC2IUS2.New()


def itkHistogramThresholdImageFilterIUC3IUC3_New():
  return itkHistogramThresholdImageFilterIUC3IUC3.New()


def itkHistogramThresholdImageFilterIUC2IUC2_New():
  return itkHistogramThresholdImageFilterIUC2IUC2.New()


def itkHistogramThresholdImageFilterIUC3ISS3_New():
  return itkHistogramThresholdImageFilterIUC3ISS3.New()


def itkHistogramThresholdImageFilterIUC2ISS2_New():
  return itkHistogramThresholdImageFilterIUC2ISS2.New()


def itkHistogramThresholdImageFilterISS3IUS3_New():
  return itkHistogramThresholdImageFilterISS3IUS3.New()


def itkHistogramThresholdImageFilterISS2IUS2_New():
  return itkHistogramThresholdImageFilterISS2IUS2.New()


def itkHistogramThresholdImageFilterISS3IUC3_New():
  return itkHistogramThresholdImageFilterISS3IUC3.New()


def itkHistogramThresholdImageFilterISS2IUC2_New():
  return itkHistogramThresholdImageFilterISS2IUC2.New()


def itkHistogramThresholdImageFilterISS3ISS3_New():
  return itkHistogramThresholdImageFilterISS3ISS3.New()


def itkHistogramThresholdImageFilterISS2ISS2_New():
  return itkHistogramThresholdImageFilterISS2ISS2.New()

class itkHistogramThresholdImageFilterID2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterID2ISS2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterID2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterID2ISS2_Pointer":
        """Clone(itkHistogramThresholdImageFilterID2ISS2 self) -> itkHistogramThresholdImageFilterID2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageSS2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterID2ISS2 self, itkImageSS2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageSS2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterID2ISS2 self) -> itkImageSS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageD2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterID2ISS2 self, itkImageD2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageSS2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterID2ISS2 self, itkImageSS2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterID2ISS2 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterID2ISS2 self) -> short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterID2ISS2 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterID2ISS2 self) -> short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterID2ISS2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterID2ISS2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterID2ISS2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterID2ISS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterID2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterID2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterID2ISS2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterID2ISS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterID2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterID2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterID2ISS2 self, short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "short":
        """GetMaskValue(itkHistogramThresholdImageFilterID2ISS2 self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskValue(self)


    def GetThreshold(self) -> "double":
        """
        GetThreshold(itkHistogramThresholdImageFilterID2ISS2 self) -> double

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDD') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterID2ISS2 self, itkHistogramThresholdCalculatorHDD _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDD *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterID2ISS2 self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDD *":
        """
        GetCalculator(itkHistogramThresholdImageFilterID2ISS2 self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(itkHistogramThresholdImageFilterID2ISS2 self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID2ISS2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID2ISS2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID2ISS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterID2ISS2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_Clone, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskImage, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskImage, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInput1, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInput2, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetOutsideValue, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetOutsideValue, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInsideValue, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetInsideValue, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskOutput, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskOutput, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_MaskOutputOn, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_MaskOutputOff, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskValue, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskValue, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetThreshold, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetCalculator, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetCalculator, None, itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_swigregister
itkHistogramThresholdImageFilterID2ISS2_swigregister(itkHistogramThresholdImageFilterID2ISS2)

def itkHistogramThresholdImageFilterID2ISS2___New_orig__() -> "itkHistogramThresholdImageFilterID2ISS2_Pointer":
    """itkHistogramThresholdImageFilterID2ISS2___New_orig__() -> itkHistogramThresholdImageFilterID2ISS2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2___New_orig__()

def itkHistogramThresholdImageFilterID2ISS2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID2ISS2 *":
    """itkHistogramThresholdImageFilterID2ISS2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID2ISS2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_cast(obj)

class itkHistogramThresholdImageFilterID2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterID2IUC2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterID2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterID2IUC2_Pointer":
        """Clone(itkHistogramThresholdImageFilterID2IUC2 self) -> itkHistogramThresholdImageFilterID2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUC2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterID2IUC2 self, itkImageUC2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUC2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterID2IUC2 self) -> itkImageUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageD2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterID2IUC2 self, itkImageD2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUC2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterID2IUC2 self, itkImageUC2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterID2IUC2 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterID2IUC2 self) -> unsigned char

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterID2IUC2 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """
        GetInsideValue(itkHistogramThresholdImageFilterID2IUC2 self) -> unsigned char

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterID2IUC2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterID2IUC2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterID2IUC2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterID2IUC2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterID2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterID2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterID2IUC2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterID2IUC2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterID2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterID2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterID2IUC2 self, unsigned char const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned char":
        """GetMaskValue(itkHistogramThresholdImageFilterID2IUC2 self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskValue(self)


    def GetThreshold(self) -> "double":
        """
        GetThreshold(itkHistogramThresholdImageFilterID2IUC2 self) -> double

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDD') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterID2IUC2 self, itkHistogramThresholdCalculatorHDD _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDD *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterID2IUC2 self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDD *":
        """
        GetCalculator(itkHistogramThresholdImageFilterID2IUC2 self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(itkHistogramThresholdImageFilterID2IUC2 self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID2IUC2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID2IUC2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID2IUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterID2IUC2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_Clone, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskImage, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskImage, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInput1, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInput2, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetOutsideValue, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetOutsideValue, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInsideValue, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetInsideValue, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskOutput, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskOutput, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_MaskOutputOn, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_MaskOutputOff, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskValue, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskValue, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetThreshold, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetCalculator, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetCalculator, None, itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_swigregister
itkHistogramThresholdImageFilterID2IUC2_swigregister(itkHistogramThresholdImageFilterID2IUC2)

def itkHistogramThresholdImageFilterID2IUC2___New_orig__() -> "itkHistogramThresholdImageFilterID2IUC2_Pointer":
    """itkHistogramThresholdImageFilterID2IUC2___New_orig__() -> itkHistogramThresholdImageFilterID2IUC2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2___New_orig__()

def itkHistogramThresholdImageFilterID2IUC2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID2IUC2 *":
    """itkHistogramThresholdImageFilterID2IUC2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID2IUC2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_cast(obj)

class itkHistogramThresholdImageFilterID2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterID2IUS2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterID2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterID2IUS2_Pointer":
        """Clone(itkHistogramThresholdImageFilterID2IUS2 self) -> itkHistogramThresholdImageFilterID2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUS2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterID2IUS2 self, itkImageUS2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUS2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterID2IUS2 self) -> itkImageUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageD2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterID2IUS2 self, itkImageD2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUS2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterID2IUS2 self, itkImageUS2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterID2IUS2 self, unsigned short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterID2IUS2 self) -> unsigned short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterID2IUS2 self, unsigned short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterID2IUS2 self) -> unsigned short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterID2IUS2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterID2IUS2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterID2IUS2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterID2IUS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterID2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterID2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterID2IUS2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterID2IUS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterID2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterID2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterID2IUS2 self, unsigned short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned short":
        """GetMaskValue(itkHistogramThresholdImageFilterID2IUS2 self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskValue(self)


    def GetThreshold(self) -> "double":
        """
        GetThreshold(itkHistogramThresholdImageFilterID2IUS2 self) -> double

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDD') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterID2IUS2 self, itkHistogramThresholdCalculatorHDD _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDD *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterID2IUS2 self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDD *":
        """
        GetCalculator(itkHistogramThresholdImageFilterID2IUS2 self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(itkHistogramThresholdImageFilterID2IUS2 self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID2IUS2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID2IUS2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID2IUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterID2IUS2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_Clone, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskImage, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskImage, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInput1, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInput2, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetOutsideValue, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetOutsideValue, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInsideValue, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetInsideValue, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskOutput, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskOutput, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_MaskOutputOn, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_MaskOutputOff, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskValue, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskValue, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetThreshold, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetCalculator, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetCalculator, None, itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_swigregister
itkHistogramThresholdImageFilterID2IUS2_swigregister(itkHistogramThresholdImageFilterID2IUS2)

def itkHistogramThresholdImageFilterID2IUS2___New_orig__() -> "itkHistogramThresholdImageFilterID2IUS2_Pointer":
    """itkHistogramThresholdImageFilterID2IUS2___New_orig__() -> itkHistogramThresholdImageFilterID2IUS2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2___New_orig__()

def itkHistogramThresholdImageFilterID2IUS2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID2IUS2 *":
    """itkHistogramThresholdImageFilterID2IUS2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID2IUS2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_cast(obj)

class itkHistogramThresholdImageFilterID3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterID3ISS3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterID3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterID3ISS3_Pointer":
        """Clone(itkHistogramThresholdImageFilterID3ISS3 self) -> itkHistogramThresholdImageFilterID3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageSS3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterID3ISS3 self, itkImageSS3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageSS3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterID3ISS3 self) -> itkImageSS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageD3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterID3ISS3 self, itkImageD3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageSS3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterID3ISS3 self, itkImageSS3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterID3ISS3 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterID3ISS3 self) -> short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterID3ISS3 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterID3ISS3 self) -> short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterID3ISS3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterID3ISS3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterID3ISS3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterID3ISS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterID3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterID3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterID3ISS3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterID3ISS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterID3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterID3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterID3ISS3 self, short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "short":
        """GetMaskValue(itkHistogramThresholdImageFilterID3ISS3 self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskValue(self)


    def GetThreshold(self) -> "double":
        """
        GetThreshold(itkHistogramThresholdImageFilterID3ISS3 self) -> double

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDD') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterID3ISS3 self, itkHistogramThresholdCalculatorHDD _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDD *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterID3ISS3 self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDD *":
        """
        GetCalculator(itkHistogramThresholdImageFilterID3ISS3 self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(itkHistogramThresholdImageFilterID3ISS3 self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID3ISS3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID3ISS3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID3ISS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterID3ISS3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_Clone, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskImage, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskImage, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInput1, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInput2, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetOutsideValue, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetOutsideValue, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInsideValue, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetInsideValue, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskOutput, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskOutput, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_MaskOutputOn, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_MaskOutputOff, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskValue, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskValue, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetThreshold, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetCalculator, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetCalculator, None, itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_swigregister
itkHistogramThresholdImageFilterID3ISS3_swigregister(itkHistogramThresholdImageFilterID3ISS3)

def itkHistogramThresholdImageFilterID3ISS3___New_orig__() -> "itkHistogramThresholdImageFilterID3ISS3_Pointer":
    """itkHistogramThresholdImageFilterID3ISS3___New_orig__() -> itkHistogramThresholdImageFilterID3ISS3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3___New_orig__()

def itkHistogramThresholdImageFilterID3ISS3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID3ISS3 *":
    """itkHistogramThresholdImageFilterID3ISS3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID3ISS3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_cast(obj)

class itkHistogramThresholdImageFilterID3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterID3IUC3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterID3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterID3IUC3_Pointer":
        """Clone(itkHistogramThresholdImageFilterID3IUC3 self) -> itkHistogramThresholdImageFilterID3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUC3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterID3IUC3 self, itkImageUC3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUC3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterID3IUC3 self) -> itkImageUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageD3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterID3IUC3 self, itkImageD3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUC3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterID3IUC3 self, itkImageUC3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterID3IUC3 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterID3IUC3 self) -> unsigned char

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterID3IUC3 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """
        GetInsideValue(itkHistogramThresholdImageFilterID3IUC3 self) -> unsigned char

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterID3IUC3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterID3IUC3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterID3IUC3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterID3IUC3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterID3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterID3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterID3IUC3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterID3IUC3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterID3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterID3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterID3IUC3 self, unsigned char const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned char":
        """GetMaskValue(itkHistogramThresholdImageFilterID3IUC3 self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskValue(self)


    def GetThreshold(self) -> "double":
        """
        GetThreshold(itkHistogramThresholdImageFilterID3IUC3 self) -> double

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDD') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterID3IUC3 self, itkHistogramThresholdCalculatorHDD _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDD *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterID3IUC3 self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDD *":
        """
        GetCalculator(itkHistogramThresholdImageFilterID3IUC3 self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(itkHistogramThresholdImageFilterID3IUC3 self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID3IUC3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID3IUC3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID3IUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterID3IUC3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_Clone, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskImage, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskImage, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInput1, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInput2, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetOutsideValue, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetOutsideValue, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInsideValue, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetInsideValue, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskOutput, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskOutput, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_MaskOutputOn, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_MaskOutputOff, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskValue, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskValue, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetThreshold, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetCalculator, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetCalculator, None, itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_swigregister
itkHistogramThresholdImageFilterID3IUC3_swigregister(itkHistogramThresholdImageFilterID3IUC3)

def itkHistogramThresholdImageFilterID3IUC3___New_orig__() -> "itkHistogramThresholdImageFilterID3IUC3_Pointer":
    """itkHistogramThresholdImageFilterID3IUC3___New_orig__() -> itkHistogramThresholdImageFilterID3IUC3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3___New_orig__()

def itkHistogramThresholdImageFilterID3IUC3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID3IUC3 *":
    """itkHistogramThresholdImageFilterID3IUC3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID3IUC3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_cast(obj)

class itkHistogramThresholdImageFilterID3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterID3IUS3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterID3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterID3IUS3_Pointer":
        """Clone(itkHistogramThresholdImageFilterID3IUS3 self) -> itkHistogramThresholdImageFilterID3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUS3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterID3IUS3 self, itkImageUS3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUS3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterID3IUS3 self) -> itkImageUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageD3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterID3IUS3 self, itkImageD3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUS3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterID3IUS3 self, itkImageUS3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterID3IUS3 self, unsigned short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterID3IUS3 self) -> unsigned short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterID3IUS3 self, unsigned short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterID3IUS3 self) -> unsigned short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterID3IUS3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterID3IUS3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterID3IUS3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterID3IUS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterID3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterID3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterID3IUS3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterID3IUS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterID3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterID3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterID3IUS3 self, unsigned short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned short":
        """GetMaskValue(itkHistogramThresholdImageFilterID3IUS3 self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskValue(self)


    def GetThreshold(self) -> "double":
        """
        GetThreshold(itkHistogramThresholdImageFilterID3IUS3 self) -> double

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDD') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterID3IUS3 self, itkHistogramThresholdCalculatorHDD _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDD *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterID3IUS3 self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDD *":
        """
        GetCalculator(itkHistogramThresholdImageFilterID3IUS3 self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(itkHistogramThresholdImageFilterID3IUS3 self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID3IUS3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID3IUS3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID3IUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterID3IUS3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_Clone, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskImage, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskImage, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInput1, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInput2, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetOutsideValue, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetOutsideValue, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInsideValue, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetInsideValue, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskOutput, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskOutput, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_MaskOutputOn, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_MaskOutputOff, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskValue, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskValue, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetThreshold, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetCalculator, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetCalculator, None, itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_swigregister
itkHistogramThresholdImageFilterID3IUS3_swigregister(itkHistogramThresholdImageFilterID3IUS3)

def itkHistogramThresholdImageFilterID3IUS3___New_orig__() -> "itkHistogramThresholdImageFilterID3IUS3_Pointer":
    """itkHistogramThresholdImageFilterID3IUS3___New_orig__() -> itkHistogramThresholdImageFilterID3IUS3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3___New_orig__()

def itkHistogramThresholdImageFilterID3IUS3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterID3IUS3 *":
    """itkHistogramThresholdImageFilterID3IUS3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterID3IUS3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_cast(obj)

class itkHistogramThresholdImageFilterIF2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIF2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIF2ISS2_Pointer":
        """Clone(itkHistogramThresholdImageFilterIF2ISS2 self) -> itkHistogramThresholdImageFilterIF2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageSS2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIF2ISS2 self, itkImageSS2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageSS2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIF2ISS2 self) -> itkImageSS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageF2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIF2ISS2 self, itkImageF2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageSS2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIF2ISS2 self, itkImageSS2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIF2ISS2 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIF2ISS2 self) -> short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIF2ISS2 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIF2ISS2 self) -> short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF2ISS2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF2ISS2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF2ISS2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF2ISS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIF2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIF2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIF2ISS2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIF2ISS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIF2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIF2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIF2ISS2 self, short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "short":
        """GetMaskValue(itkHistogramThresholdImageFilterIF2ISS2 self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskValue(self)


    def GetThreshold(self) -> "float":
        """
        GetThreshold(itkHistogramThresholdImageFilterIF2ISS2 self) -> float

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDF') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIF2ISS2 self, itkHistogramThresholdCalculatorHDF _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDF *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIF2ISS2 self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDF *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIF2ISS2 self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(itkHistogramThresholdImageFilterIF2ISS2 self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF2ISS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_Clone, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskImage, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskImage, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInput1, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInput2, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetOutsideValue, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetOutsideValue, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInsideValue, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetInsideValue, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskOutput, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskOutput, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_MaskOutputOn, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_MaskOutputOff, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskValue, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskValue, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetThreshold, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetCalculator, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetCalculator, None, itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_swigregister
itkHistogramThresholdImageFilterIF2ISS2_swigregister(itkHistogramThresholdImageFilterIF2ISS2)

def itkHistogramThresholdImageFilterIF2ISS2___New_orig__() -> "itkHistogramThresholdImageFilterIF2ISS2_Pointer":
    """itkHistogramThresholdImageFilterIF2ISS2___New_orig__() -> itkHistogramThresholdImageFilterIF2ISS2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2___New_orig__()

def itkHistogramThresholdImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF2ISS2 *":
    """itkHistogramThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF2ISS2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_cast(obj)

class itkHistogramThresholdImageFilterIF2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIF2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIF2IUC2_Pointer":
        """Clone(itkHistogramThresholdImageFilterIF2IUC2 self) -> itkHistogramThresholdImageFilterIF2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUC2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIF2IUC2 self, itkImageUC2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUC2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIF2IUC2 self) -> itkImageUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageF2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIF2IUC2 self, itkImageF2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUC2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIF2IUC2 self, itkImageUC2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIF2IUC2 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIF2IUC2 self) -> unsigned char

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIF2IUC2 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIF2IUC2 self) -> unsigned char

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF2IUC2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF2IUC2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF2IUC2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF2IUC2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIF2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIF2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIF2IUC2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIF2IUC2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIF2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIF2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIF2IUC2 self, unsigned char const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned char":
        """GetMaskValue(itkHistogramThresholdImageFilterIF2IUC2 self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskValue(self)


    def GetThreshold(self) -> "float":
        """
        GetThreshold(itkHistogramThresholdImageFilterIF2IUC2 self) -> float

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDF') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIF2IUC2 self, itkHistogramThresholdCalculatorHDF _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDF *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIF2IUC2 self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDF *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIF2IUC2 self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(itkHistogramThresholdImageFilterIF2IUC2 self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF2IUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_Clone, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskImage, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskImage, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInput1, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInput2, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetOutsideValue, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetOutsideValue, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInsideValue, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetInsideValue, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskOutput, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskOutput, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_MaskOutputOn, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_MaskOutputOff, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskValue, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskValue, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetThreshold, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetCalculator, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetCalculator, None, itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_swigregister
itkHistogramThresholdImageFilterIF2IUC2_swigregister(itkHistogramThresholdImageFilterIF2IUC2)

def itkHistogramThresholdImageFilterIF2IUC2___New_orig__() -> "itkHistogramThresholdImageFilterIF2IUC2_Pointer":
    """itkHistogramThresholdImageFilterIF2IUC2___New_orig__() -> itkHistogramThresholdImageFilterIF2IUC2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2___New_orig__()

def itkHistogramThresholdImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF2IUC2 *":
    """itkHistogramThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF2IUC2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_cast(obj)

class itkHistogramThresholdImageFilterIF2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIF2IUS2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIF2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIF2IUS2_Pointer":
        """Clone(itkHistogramThresholdImageFilterIF2IUS2 self) -> itkHistogramThresholdImageFilterIF2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUS2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIF2IUS2 self, itkImageUS2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUS2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIF2IUS2 self) -> itkImageUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageF2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIF2IUS2 self, itkImageF2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUS2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIF2IUS2 self, itkImageUS2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIF2IUS2 self, unsigned short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIF2IUS2 self) -> unsigned short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIF2IUS2 self, unsigned short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIF2IUS2 self) -> unsigned short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF2IUS2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF2IUS2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF2IUS2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF2IUS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIF2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIF2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIF2IUS2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIF2IUS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIF2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIF2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIF2IUS2 self, unsigned short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned short":
        """GetMaskValue(itkHistogramThresholdImageFilterIF2IUS2 self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskValue(self)


    def GetThreshold(self) -> "float":
        """
        GetThreshold(itkHistogramThresholdImageFilterIF2IUS2 self) -> float

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDF') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIF2IUS2 self, itkHistogramThresholdCalculatorHDF _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDF *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIF2IUS2 self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDF *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIF2IUS2 self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(itkHistogramThresholdImageFilterIF2IUS2 self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF2IUS2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF2IUS2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF2IUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIF2IUS2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_Clone, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskImage, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskImage, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInput1, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInput2, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetOutsideValue, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetOutsideValue, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInsideValue, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetInsideValue, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskOutput, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskOutput, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_MaskOutputOn, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_MaskOutputOff, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskValue, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskValue, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetThreshold, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetCalculator, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetCalculator, None, itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_swigregister
itkHistogramThresholdImageFilterIF2IUS2_swigregister(itkHistogramThresholdImageFilterIF2IUS2)

def itkHistogramThresholdImageFilterIF2IUS2___New_orig__() -> "itkHistogramThresholdImageFilterIF2IUS2_Pointer":
    """itkHistogramThresholdImageFilterIF2IUS2___New_orig__() -> itkHistogramThresholdImageFilterIF2IUS2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2___New_orig__()

def itkHistogramThresholdImageFilterIF2IUS2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF2IUS2 *":
    """itkHistogramThresholdImageFilterIF2IUS2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF2IUS2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_cast(obj)

class itkHistogramThresholdImageFilterIF3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIF3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIF3ISS3_Pointer":
        """Clone(itkHistogramThresholdImageFilterIF3ISS3 self) -> itkHistogramThresholdImageFilterIF3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageSS3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIF3ISS3 self, itkImageSS3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageSS3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIF3ISS3 self) -> itkImageSS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageF3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIF3ISS3 self, itkImageF3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageSS3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIF3ISS3 self, itkImageSS3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIF3ISS3 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIF3ISS3 self) -> short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIF3ISS3 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIF3ISS3 self) -> short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF3ISS3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF3ISS3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF3ISS3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF3ISS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIF3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIF3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIF3ISS3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIF3ISS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIF3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIF3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIF3ISS3 self, short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "short":
        """GetMaskValue(itkHistogramThresholdImageFilterIF3ISS3 self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskValue(self)


    def GetThreshold(self) -> "float":
        """
        GetThreshold(itkHistogramThresholdImageFilterIF3ISS3 self) -> float

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDF') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIF3ISS3 self, itkHistogramThresholdCalculatorHDF _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDF *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIF3ISS3 self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDF *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIF3ISS3 self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(itkHistogramThresholdImageFilterIF3ISS3 self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF3ISS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_Clone, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskImage, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskImage, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInput1, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInput2, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetOutsideValue, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetOutsideValue, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInsideValue, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetInsideValue, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskOutput, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskOutput, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_MaskOutputOn, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_MaskOutputOff, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskValue, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskValue, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetThreshold, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetCalculator, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetCalculator, None, itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_swigregister
itkHistogramThresholdImageFilterIF3ISS3_swigregister(itkHistogramThresholdImageFilterIF3ISS3)

def itkHistogramThresholdImageFilterIF3ISS3___New_orig__() -> "itkHistogramThresholdImageFilterIF3ISS3_Pointer":
    """itkHistogramThresholdImageFilterIF3ISS3___New_orig__() -> itkHistogramThresholdImageFilterIF3ISS3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3___New_orig__()

def itkHistogramThresholdImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF3ISS3 *":
    """itkHistogramThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF3ISS3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_cast(obj)

class itkHistogramThresholdImageFilterIF3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIF3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIF3IUC3_Pointer":
        """Clone(itkHistogramThresholdImageFilterIF3IUC3 self) -> itkHistogramThresholdImageFilterIF3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUC3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIF3IUC3 self, itkImageUC3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUC3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIF3IUC3 self) -> itkImageUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageF3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIF3IUC3 self, itkImageF3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUC3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIF3IUC3 self, itkImageUC3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIF3IUC3 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIF3IUC3 self) -> unsigned char

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIF3IUC3 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIF3IUC3 self) -> unsigned char

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF3IUC3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF3IUC3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF3IUC3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF3IUC3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIF3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIF3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIF3IUC3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIF3IUC3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIF3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIF3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIF3IUC3 self, unsigned char const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned char":
        """GetMaskValue(itkHistogramThresholdImageFilterIF3IUC3 self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskValue(self)


    def GetThreshold(self) -> "float":
        """
        GetThreshold(itkHistogramThresholdImageFilterIF3IUC3 self) -> float

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDF') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIF3IUC3 self, itkHistogramThresholdCalculatorHDF _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDF *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIF3IUC3 self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDF *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIF3IUC3 self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(itkHistogramThresholdImageFilterIF3IUC3 self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF3IUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_Clone, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskImage, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskImage, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInput1, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInput2, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetOutsideValue, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetOutsideValue, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInsideValue, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetInsideValue, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskOutput, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskOutput, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_MaskOutputOn, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_MaskOutputOff, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskValue, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskValue, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetThreshold, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetCalculator, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetCalculator, None, itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_swigregister
itkHistogramThresholdImageFilterIF3IUC3_swigregister(itkHistogramThresholdImageFilterIF3IUC3)

def itkHistogramThresholdImageFilterIF3IUC3___New_orig__() -> "itkHistogramThresholdImageFilterIF3IUC3_Pointer":
    """itkHistogramThresholdImageFilterIF3IUC3___New_orig__() -> itkHistogramThresholdImageFilterIF3IUC3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3___New_orig__()

def itkHistogramThresholdImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF3IUC3 *":
    """itkHistogramThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF3IUC3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_cast(obj)

class itkHistogramThresholdImageFilterIF3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIF3IUS3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIF3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIF3IUS3_Pointer":
        """Clone(itkHistogramThresholdImageFilterIF3IUS3 self) -> itkHistogramThresholdImageFilterIF3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUS3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIF3IUS3 self, itkImageUS3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUS3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIF3IUS3 self) -> itkImageUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageF3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIF3IUS3 self, itkImageF3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUS3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIF3IUS3 self, itkImageUS3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIF3IUS3 self, unsigned short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIF3IUS3 self) -> unsigned short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIF3IUS3 self, unsigned short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIF3IUS3 self) -> unsigned short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF3IUS3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIF3IUS3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF3IUS3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIF3IUS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIF3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIF3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIF3IUS3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIF3IUS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIF3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIF3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIF3IUS3 self, unsigned short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned short":
        """GetMaskValue(itkHistogramThresholdImageFilterIF3IUS3 self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskValue(self)


    def GetThreshold(self) -> "float":
        """
        GetThreshold(itkHistogramThresholdImageFilterIF3IUS3 self) -> float

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDF') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIF3IUS3 self, itkHistogramThresholdCalculatorHDF _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDF *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIF3IUS3 self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDF *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIF3IUS3 self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(itkHistogramThresholdImageFilterIF3IUS3 self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF3IUS3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF3IUS3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF3IUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIF3IUS3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_Clone, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskImage, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskImage, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInput1, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInput2, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetOutsideValue, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetOutsideValue, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInsideValue, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetInsideValue, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskOutput, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskOutput, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_MaskOutputOn, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_MaskOutputOff, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskValue, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskValue, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetThreshold, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetCalculator, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetCalculator, None, itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_swigregister
itkHistogramThresholdImageFilterIF3IUS3_swigregister(itkHistogramThresholdImageFilterIF3IUS3)

def itkHistogramThresholdImageFilterIF3IUS3___New_orig__() -> "itkHistogramThresholdImageFilterIF3IUS3_Pointer":
    """itkHistogramThresholdImageFilterIF3IUS3___New_orig__() -> itkHistogramThresholdImageFilterIF3IUS3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3___New_orig__()

def itkHistogramThresholdImageFilterIF3IUS3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIF3IUS3 *":
    """itkHistogramThresholdImageFilterIF3IUS3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIF3IUS3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_cast(obj)

class itkHistogramThresholdImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterISS2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterISS2ISS2_Pointer":
        """Clone(itkHistogramThresholdImageFilterISS2ISS2 self) -> itkHistogramThresholdImageFilterISS2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageSS2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterISS2ISS2 self, itkImageSS2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageSS2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterISS2ISS2 self) -> itkImageSS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageSS2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterISS2ISS2 self, itkImageSS2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageSS2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterISS2ISS2 self, itkImageSS2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterISS2ISS2 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterISS2ISS2 self) -> short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterISS2ISS2 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterISS2ISS2 self) -> short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS2ISS2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS2ISS2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS2ISS2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS2ISS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterISS2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterISS2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterISS2ISS2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterISS2ISS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterISS2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterISS2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterISS2ISS2 self, short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "short":
        """GetMaskValue(itkHistogramThresholdImageFilterISS2ISS2 self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskValue(self)


    def GetThreshold(self) -> "short":
        """
        GetThreshold(itkHistogramThresholdImageFilterISS2ISS2 self) -> short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDSS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterISS2ISS2 self, itkHistogramThresholdCalculatorHDSS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDSS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterISS2ISS2 self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDSS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterISS2ISS2 self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(itkHistogramThresholdImageFilterISS2ISS2 self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS2ISS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_Clone, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskImage, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskImage, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInput1, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInput2, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetOutsideValue, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetOutsideValue, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInsideValue, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetInsideValue, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskOutput, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskOutput, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_MaskOutputOn, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_MaskOutputOff, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskValue, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskValue, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetThreshold, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetCalculator, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetCalculator, None, itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_swigregister
itkHistogramThresholdImageFilterISS2ISS2_swigregister(itkHistogramThresholdImageFilterISS2ISS2)

def itkHistogramThresholdImageFilterISS2ISS2___New_orig__() -> "itkHistogramThresholdImageFilterISS2ISS2_Pointer":
    """itkHistogramThresholdImageFilterISS2ISS2___New_orig__() -> itkHistogramThresholdImageFilterISS2ISS2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2___New_orig__()

def itkHistogramThresholdImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS2ISS2 *":
    """itkHistogramThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS2ISS2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_cast(obj)

class itkHistogramThresholdImageFilterISS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterISS2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterISS2IUC2_Pointer":
        """Clone(itkHistogramThresholdImageFilterISS2IUC2 self) -> itkHistogramThresholdImageFilterISS2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUC2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterISS2IUC2 self, itkImageUC2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUC2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterISS2IUC2 self) -> itkImageUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageSS2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterISS2IUC2 self, itkImageSS2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUC2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterISS2IUC2 self, itkImageUC2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterISS2IUC2 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterISS2IUC2 self) -> unsigned char

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterISS2IUC2 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """
        GetInsideValue(itkHistogramThresholdImageFilterISS2IUC2 self) -> unsigned char

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS2IUC2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS2IUC2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS2IUC2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS2IUC2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterISS2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterISS2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterISS2IUC2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterISS2IUC2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterISS2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterISS2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterISS2IUC2 self, unsigned char const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned char":
        """GetMaskValue(itkHistogramThresholdImageFilterISS2IUC2 self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskValue(self)


    def GetThreshold(self) -> "short":
        """
        GetThreshold(itkHistogramThresholdImageFilterISS2IUC2 self) -> short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDSS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterISS2IUC2 self, itkHistogramThresholdCalculatorHDSS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDSS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterISS2IUC2 self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDSS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterISS2IUC2 self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(itkHistogramThresholdImageFilterISS2IUC2 self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS2IUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_Clone, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskImage, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskImage, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInput1, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInput2, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetOutsideValue, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetOutsideValue, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInsideValue, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetInsideValue, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskOutput, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskOutput, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_MaskOutputOn, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_MaskOutputOff, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskValue, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskValue, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetThreshold, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetCalculator, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetCalculator, None, itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_swigregister
itkHistogramThresholdImageFilterISS2IUC2_swigregister(itkHistogramThresholdImageFilterISS2IUC2)

def itkHistogramThresholdImageFilterISS2IUC2___New_orig__() -> "itkHistogramThresholdImageFilterISS2IUC2_Pointer":
    """itkHistogramThresholdImageFilterISS2IUC2___New_orig__() -> itkHistogramThresholdImageFilterISS2IUC2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2___New_orig__()

def itkHistogramThresholdImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS2IUC2 *":
    """itkHistogramThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS2IUC2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_cast(obj)

class itkHistogramThresholdImageFilterISS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterISS2IUS2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterISS2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterISS2IUS2_Pointer":
        """Clone(itkHistogramThresholdImageFilterISS2IUS2 self) -> itkHistogramThresholdImageFilterISS2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUS2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterISS2IUS2 self, itkImageUS2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUS2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterISS2IUS2 self) -> itkImageUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageSS2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterISS2IUS2 self, itkImageSS2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUS2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterISS2IUS2 self, itkImageUS2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterISS2IUS2 self, unsigned short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterISS2IUS2 self) -> unsigned short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterISS2IUS2 self, unsigned short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterISS2IUS2 self) -> unsigned short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS2IUS2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS2IUS2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS2IUS2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS2IUS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterISS2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterISS2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterISS2IUS2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterISS2IUS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterISS2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterISS2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterISS2IUS2 self, unsigned short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned short":
        """GetMaskValue(itkHistogramThresholdImageFilterISS2IUS2 self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskValue(self)


    def GetThreshold(self) -> "short":
        """
        GetThreshold(itkHistogramThresholdImageFilterISS2IUS2 self) -> short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDSS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterISS2IUS2 self, itkHistogramThresholdCalculatorHDSS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDSS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterISS2IUS2 self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDSS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterISS2IUS2 self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(itkHistogramThresholdImageFilterISS2IUS2 self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS2IUS2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS2IUS2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS2IUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterISS2IUS2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_Clone, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskImage, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskImage, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInput1, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInput2, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetOutsideValue, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetOutsideValue, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInsideValue, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetInsideValue, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskOutput, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskOutput, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_MaskOutputOn, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_MaskOutputOff, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskValue, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskValue, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetThreshold, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetCalculator, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetCalculator, None, itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_swigregister
itkHistogramThresholdImageFilterISS2IUS2_swigregister(itkHistogramThresholdImageFilterISS2IUS2)

def itkHistogramThresholdImageFilterISS2IUS2___New_orig__() -> "itkHistogramThresholdImageFilterISS2IUS2_Pointer":
    """itkHistogramThresholdImageFilterISS2IUS2___New_orig__() -> itkHistogramThresholdImageFilterISS2IUS2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2___New_orig__()

def itkHistogramThresholdImageFilterISS2IUS2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS2IUS2 *":
    """itkHistogramThresholdImageFilterISS2IUS2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS2IUS2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_cast(obj)

class itkHistogramThresholdImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterISS3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterISS3ISS3_Pointer":
        """Clone(itkHistogramThresholdImageFilterISS3ISS3 self) -> itkHistogramThresholdImageFilterISS3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageSS3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterISS3ISS3 self, itkImageSS3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageSS3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterISS3ISS3 self) -> itkImageSS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageSS3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterISS3ISS3 self, itkImageSS3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageSS3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterISS3ISS3 self, itkImageSS3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterISS3ISS3 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterISS3ISS3 self) -> short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterISS3ISS3 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterISS3ISS3 self) -> short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS3ISS3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS3ISS3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS3ISS3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS3ISS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterISS3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterISS3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterISS3ISS3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterISS3ISS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterISS3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterISS3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterISS3ISS3 self, short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "short":
        """GetMaskValue(itkHistogramThresholdImageFilterISS3ISS3 self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskValue(self)


    def GetThreshold(self) -> "short":
        """
        GetThreshold(itkHistogramThresholdImageFilterISS3ISS3 self) -> short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDSS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterISS3ISS3 self, itkHistogramThresholdCalculatorHDSS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDSS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterISS3ISS3 self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDSS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterISS3ISS3 self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(itkHistogramThresholdImageFilterISS3ISS3 self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS3ISS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_Clone, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskImage, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskImage, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInput1, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInput2, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetOutsideValue, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetOutsideValue, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInsideValue, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetInsideValue, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskOutput, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskOutput, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_MaskOutputOn, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_MaskOutputOff, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskValue, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskValue, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetThreshold, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetCalculator, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetCalculator, None, itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_swigregister
itkHistogramThresholdImageFilterISS3ISS3_swigregister(itkHistogramThresholdImageFilterISS3ISS3)

def itkHistogramThresholdImageFilterISS3ISS3___New_orig__() -> "itkHistogramThresholdImageFilterISS3ISS3_Pointer":
    """itkHistogramThresholdImageFilterISS3ISS3___New_orig__() -> itkHistogramThresholdImageFilterISS3ISS3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3___New_orig__()

def itkHistogramThresholdImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS3ISS3 *":
    """itkHistogramThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS3ISS3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_cast(obj)

class itkHistogramThresholdImageFilterISS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterISS3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterISS3IUC3_Pointer":
        """Clone(itkHistogramThresholdImageFilterISS3IUC3 self) -> itkHistogramThresholdImageFilterISS3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUC3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterISS3IUC3 self, itkImageUC3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUC3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterISS3IUC3 self) -> itkImageUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageSS3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterISS3IUC3 self, itkImageSS3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUC3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterISS3IUC3 self, itkImageUC3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterISS3IUC3 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterISS3IUC3 self) -> unsigned char

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterISS3IUC3 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """
        GetInsideValue(itkHistogramThresholdImageFilterISS3IUC3 self) -> unsigned char

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS3IUC3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS3IUC3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS3IUC3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS3IUC3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterISS3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterISS3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterISS3IUC3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterISS3IUC3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterISS3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterISS3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterISS3IUC3 self, unsigned char const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned char":
        """GetMaskValue(itkHistogramThresholdImageFilterISS3IUC3 self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskValue(self)


    def GetThreshold(self) -> "short":
        """
        GetThreshold(itkHistogramThresholdImageFilterISS3IUC3 self) -> short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDSS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterISS3IUC3 self, itkHistogramThresholdCalculatorHDSS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDSS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterISS3IUC3 self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDSS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterISS3IUC3 self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(itkHistogramThresholdImageFilterISS3IUC3 self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS3IUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_Clone, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskImage, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskImage, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInput1, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInput2, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetOutsideValue, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetOutsideValue, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInsideValue, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetInsideValue, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskOutput, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskOutput, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_MaskOutputOn, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_MaskOutputOff, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskValue, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskValue, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetThreshold, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetCalculator, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetCalculator, None, itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_swigregister
itkHistogramThresholdImageFilterISS3IUC3_swigregister(itkHistogramThresholdImageFilterISS3IUC3)

def itkHistogramThresholdImageFilterISS3IUC3___New_orig__() -> "itkHistogramThresholdImageFilterISS3IUC3_Pointer":
    """itkHistogramThresholdImageFilterISS3IUC3___New_orig__() -> itkHistogramThresholdImageFilterISS3IUC3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3___New_orig__()

def itkHistogramThresholdImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS3IUC3 *":
    """itkHistogramThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS3IUC3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_cast(obj)

class itkHistogramThresholdImageFilterISS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterISS3IUS3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterISS3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterISS3IUS3_Pointer":
        """Clone(itkHistogramThresholdImageFilterISS3IUS3 self) -> itkHistogramThresholdImageFilterISS3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUS3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterISS3IUS3 self, itkImageUS3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUS3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterISS3IUS3 self) -> itkImageUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageSS3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterISS3IUS3 self, itkImageSS3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUS3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterISS3IUS3 self, itkImageUS3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterISS3IUS3 self, unsigned short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterISS3IUS3 self) -> unsigned short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterISS3IUS3 self, unsigned short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterISS3IUS3 self) -> unsigned short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS3IUS3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterISS3IUS3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS3IUS3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterISS3IUS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterISS3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterISS3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterISS3IUS3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterISS3IUS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterISS3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterISS3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterISS3IUS3 self, unsigned short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned short":
        """GetMaskValue(itkHistogramThresholdImageFilterISS3IUS3 self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskValue(self)


    def GetThreshold(self) -> "short":
        """
        GetThreshold(itkHistogramThresholdImageFilterISS3IUS3 self) -> short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDSS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterISS3IUS3 self, itkHistogramThresholdCalculatorHDSS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDSS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterISS3IUS3 self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDSS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterISS3IUS3 self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(itkHistogramThresholdImageFilterISS3IUS3 self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS3IUS3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS3IUS3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS3IUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterISS3IUS3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_Clone, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskImage, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskImage, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInput1, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInput2, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetOutsideValue, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetOutsideValue, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInsideValue, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetInsideValue, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskOutput, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskOutput, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_MaskOutputOn, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_MaskOutputOff, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskValue, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskValue, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetThreshold, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetCalculator, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetCalculator, None, itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_swigregister
itkHistogramThresholdImageFilterISS3IUS3_swigregister(itkHistogramThresholdImageFilterISS3IUS3)

def itkHistogramThresholdImageFilterISS3IUS3___New_orig__() -> "itkHistogramThresholdImageFilterISS3IUS3_Pointer":
    """itkHistogramThresholdImageFilterISS3IUS3___New_orig__() -> itkHistogramThresholdImageFilterISS3IUS3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3___New_orig__()

def itkHistogramThresholdImageFilterISS3IUS3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterISS3IUS3 *":
    """itkHistogramThresholdImageFilterISS3IUS3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterISS3IUS3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_cast(obj)

class itkHistogramThresholdImageFilterIUC2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUC2ISS2_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUC2ISS2 self) -> itkHistogramThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageSS2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUC2ISS2 self, itkImageSS2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageSS2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUC2ISS2 self) -> itkImageSS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUC2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUC2ISS2 self, itkImageUC2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageSS2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUC2ISS2 self, itkImageSS2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUC2ISS2 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUC2ISS2 self) -> short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUC2ISS2 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUC2ISS2 self) -> short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC2ISS2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC2ISS2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC2ISS2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC2ISS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUC2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUC2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUC2ISS2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUC2ISS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUC2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUC2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUC2ISS2 self, short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "short":
        """GetMaskValue(itkHistogramThresholdImageFilterIUC2ISS2 self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned char":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUC2ISS2 self) -> unsigned char

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUC') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUC2ISS2 self, itkHistogramThresholdCalculatorHDUC _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUC *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUC2ISS2 self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUC *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUC2ISS2 self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(itkHistogramThresholdImageFilterIUC2ISS2 self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC2ISS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUC2ISS2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_Clone, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskImage, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskImage, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInput1, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInput2, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetOutsideValue, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetOutsideValue, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInsideValue, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetInsideValue, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskOutput, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskOutput, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_MaskOutputOn, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_MaskOutputOff, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskValue, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskValue, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetThreshold, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetCalculator, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetCalculator, None, itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_swigregister
itkHistogramThresholdImageFilterIUC2ISS2_swigregister(itkHistogramThresholdImageFilterIUC2ISS2)

def itkHistogramThresholdImageFilterIUC2ISS2___New_orig__() -> "itkHistogramThresholdImageFilterIUC2ISS2_Pointer":
    """itkHistogramThresholdImageFilterIUC2ISS2___New_orig__() -> itkHistogramThresholdImageFilterIUC2ISS2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2___New_orig__()

def itkHistogramThresholdImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC2ISS2 *":
    """itkHistogramThresholdImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC2ISS2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_cast(obj)

class itkHistogramThresholdImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUC2IUC2_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUC2IUC2 self) -> itkHistogramThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUC2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUC2IUC2 self, itkImageUC2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUC2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUC2IUC2 self) -> itkImageUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUC2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUC2IUC2 self, itkImageUC2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUC2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUC2IUC2 self, itkImageUC2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUC2IUC2 self) -> unsigned char

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUC2IUC2 self) -> unsigned char

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC2IUC2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC2IUC2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC2IUC2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC2IUC2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUC2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUC2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUC2IUC2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUC2IUC2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUC2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUC2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUC2IUC2 self, unsigned char const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned char":
        """GetMaskValue(itkHistogramThresholdImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned char":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUC2IUC2 self) -> unsigned char

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUC') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUC2IUC2 self, itkHistogramThresholdCalculatorHDUC _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUC *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUC2IUC2 self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUC *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUC2IUC2 self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(itkHistogramThresholdImageFilterIUC2IUC2 self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC2IUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_Clone, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskImage, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskImage, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInput1, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInput2, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetOutsideValue, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetOutsideValue, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInsideValue, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetInsideValue, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskOutput, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskOutput, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_MaskOutputOn, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_MaskOutputOff, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskValue, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskValue, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetThreshold, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetCalculator, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetCalculator, None, itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_swigregister
itkHistogramThresholdImageFilterIUC2IUC2_swigregister(itkHistogramThresholdImageFilterIUC2IUC2)

def itkHistogramThresholdImageFilterIUC2IUC2___New_orig__() -> "itkHistogramThresholdImageFilterIUC2IUC2_Pointer":
    """itkHistogramThresholdImageFilterIUC2IUC2___New_orig__() -> itkHistogramThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2___New_orig__()

def itkHistogramThresholdImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC2IUC2 *":
    """itkHistogramThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC2IUC2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_cast(obj)

class itkHistogramThresholdImageFilterIUC2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUC2IUS2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUC2IUS2_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUC2IUS2 self) -> itkHistogramThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUS2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUC2IUS2 self, itkImageUS2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUS2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUC2IUS2 self) -> itkImageUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUC2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUC2IUS2 self, itkImageUC2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUS2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUC2IUS2 self, itkImageUS2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUC2IUS2 self, unsigned short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUC2IUS2 self) -> unsigned short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUC2IUS2 self, unsigned short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUC2IUS2 self) -> unsigned short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC2IUS2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC2IUS2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC2IUS2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC2IUS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUC2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUC2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUC2IUS2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUC2IUS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUC2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUC2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUC2IUS2 self, unsigned short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned short":
        """GetMaskValue(itkHistogramThresholdImageFilterIUC2IUS2 self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned char":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUC2IUS2 self) -> unsigned char

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUC') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUC2IUS2 self, itkHistogramThresholdCalculatorHDUC _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUC *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUC2IUS2 self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUC *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUC2IUS2 self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(itkHistogramThresholdImageFilterIUC2IUS2 self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC2IUS2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC2IUS2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC2IUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUC2IUS2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_Clone, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskImage, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskImage, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInput1, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInput2, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetOutsideValue, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetOutsideValue, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInsideValue, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetInsideValue, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskOutput, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskOutput, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_MaskOutputOn, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_MaskOutputOff, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskValue, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskValue, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetThreshold, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetCalculator, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetCalculator, None, itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_swigregister
itkHistogramThresholdImageFilterIUC2IUS2_swigregister(itkHistogramThresholdImageFilterIUC2IUS2)

def itkHistogramThresholdImageFilterIUC2IUS2___New_orig__() -> "itkHistogramThresholdImageFilterIUC2IUS2_Pointer":
    """itkHistogramThresholdImageFilterIUC2IUS2___New_orig__() -> itkHistogramThresholdImageFilterIUC2IUS2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2___New_orig__()

def itkHistogramThresholdImageFilterIUC2IUS2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC2IUS2 *":
    """itkHistogramThresholdImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC2IUS2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_cast(obj)

class itkHistogramThresholdImageFilterIUC3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUC3ISS3_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUC3ISS3 self) -> itkHistogramThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageSS3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUC3ISS3 self, itkImageSS3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageSS3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUC3ISS3 self) -> itkImageSS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUC3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUC3ISS3 self, itkImageUC3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageSS3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUC3ISS3 self, itkImageSS3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUC3ISS3 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUC3ISS3 self) -> short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUC3ISS3 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUC3ISS3 self) -> short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC3ISS3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC3ISS3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC3ISS3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC3ISS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUC3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUC3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUC3ISS3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUC3ISS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUC3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUC3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUC3ISS3 self, short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "short":
        """GetMaskValue(itkHistogramThresholdImageFilterIUC3ISS3 self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned char":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUC3ISS3 self) -> unsigned char

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUC') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUC3ISS3 self, itkHistogramThresholdCalculatorHDUC _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUC *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUC3ISS3 self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUC *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUC3ISS3 self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(itkHistogramThresholdImageFilterIUC3ISS3 self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC3ISS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUC3ISS3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_Clone, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskImage, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskImage, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInput1, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInput2, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetOutsideValue, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetOutsideValue, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInsideValue, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetInsideValue, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskOutput, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskOutput, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_MaskOutputOn, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_MaskOutputOff, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskValue, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskValue, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetThreshold, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetCalculator, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetCalculator, None, itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_swigregister
itkHistogramThresholdImageFilterIUC3ISS3_swigregister(itkHistogramThresholdImageFilterIUC3ISS3)

def itkHistogramThresholdImageFilterIUC3ISS3___New_orig__() -> "itkHistogramThresholdImageFilterIUC3ISS3_Pointer":
    """itkHistogramThresholdImageFilterIUC3ISS3___New_orig__() -> itkHistogramThresholdImageFilterIUC3ISS3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3___New_orig__()

def itkHistogramThresholdImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC3ISS3 *":
    """itkHistogramThresholdImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC3ISS3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_cast(obj)

class itkHistogramThresholdImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUC3IUC3_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUC3IUC3 self) -> itkHistogramThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUC3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUC3IUC3 self, itkImageUC3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUC3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUC3IUC3 self) -> itkImageUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUC3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUC3IUC3 self, itkImageUC3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUC3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUC3IUC3 self, itkImageUC3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUC3IUC3 self) -> unsigned char

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUC3IUC3 self) -> unsigned char

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC3IUC3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC3IUC3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC3IUC3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC3IUC3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUC3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUC3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUC3IUC3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUC3IUC3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUC3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUC3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUC3IUC3 self, unsigned char const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned char":
        """GetMaskValue(itkHistogramThresholdImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned char":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUC3IUC3 self) -> unsigned char

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUC') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUC3IUC3 self, itkHistogramThresholdCalculatorHDUC _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUC *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUC3IUC3 self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUC *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUC3IUC3 self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(itkHistogramThresholdImageFilterIUC3IUC3 self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC3IUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_Clone, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskImage, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskImage, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInput1, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInput2, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetOutsideValue, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetOutsideValue, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInsideValue, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetInsideValue, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskOutput, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskOutput, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_MaskOutputOn, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_MaskOutputOff, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskValue, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskValue, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetThreshold, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetCalculator, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetCalculator, None, itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_swigregister
itkHistogramThresholdImageFilterIUC3IUC3_swigregister(itkHistogramThresholdImageFilterIUC3IUC3)

def itkHistogramThresholdImageFilterIUC3IUC3___New_orig__() -> "itkHistogramThresholdImageFilterIUC3IUC3_Pointer":
    """itkHistogramThresholdImageFilterIUC3IUC3___New_orig__() -> itkHistogramThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3___New_orig__()

def itkHistogramThresholdImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC3IUC3 *":
    """itkHistogramThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC3IUC3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_cast(obj)

class itkHistogramThresholdImageFilterIUC3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUC3IUS3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUC3IUS3_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUC3IUS3 self) -> itkHistogramThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUS3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUC3IUS3 self, itkImageUS3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUS3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUC3IUS3 self) -> itkImageUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUC3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUC3IUS3 self, itkImageUC3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUS3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUC3IUS3 self, itkImageUS3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUC3IUS3 self, unsigned short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUC3IUS3 self) -> unsigned short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUC3IUS3 self, unsigned short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUC3IUS3 self) -> unsigned short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC3IUS3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUC3IUS3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC3IUS3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUC3IUS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUC3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUC3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUC3IUS3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUC3IUS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUC3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUC3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUC3IUS3 self, unsigned short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned short":
        """GetMaskValue(itkHistogramThresholdImageFilterIUC3IUS3 self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned char":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUC3IUS3 self) -> unsigned char

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUC') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUC3IUS3 self, itkHistogramThresholdCalculatorHDUC _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUC *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUC3IUS3 self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUC *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUC3IUS3 self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(itkHistogramThresholdImageFilterIUC3IUS3 self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC3IUS3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC3IUS3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC3IUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUC3IUS3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_Clone, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskImage, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskImage, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInput1, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInput2, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetOutsideValue, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetOutsideValue, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInsideValue, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetInsideValue, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskOutput, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskOutput, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_MaskOutputOn, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_MaskOutputOff, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskValue, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskValue, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetThreshold, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetCalculator, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetCalculator, None, itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_swigregister
itkHistogramThresholdImageFilterIUC3IUS3_swigregister(itkHistogramThresholdImageFilterIUC3IUS3)

def itkHistogramThresholdImageFilterIUC3IUS3___New_orig__() -> "itkHistogramThresholdImageFilterIUC3IUS3_Pointer":
    """itkHistogramThresholdImageFilterIUC3IUS3___New_orig__() -> itkHistogramThresholdImageFilterIUC3IUS3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3___New_orig__()

def itkHistogramThresholdImageFilterIUC3IUS3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUC3IUS3 *":
    """itkHistogramThresholdImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUC3IUS3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_cast(obj)

class itkHistogramThresholdImageFilterIUS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUS2ISS2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUS2ISS2_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUS2ISS2 self) -> itkHistogramThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageSS2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUS2ISS2 self, itkImageSS2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageSS2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUS2ISS2 self) -> itkImageSS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUS2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUS2ISS2 self, itkImageUS2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageSS2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUS2ISS2 self, itkImageSS2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUS2ISS2 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUS2ISS2 self) -> short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUS2ISS2 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUS2ISS2 self) -> short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS2ISS2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS2ISS2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS2ISS2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS2ISS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUS2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUS2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUS2ISS2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUS2ISS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUS2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUS2ISS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUS2ISS2 self, short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "short":
        """GetMaskValue(itkHistogramThresholdImageFilterIUS2ISS2 self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned short":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUS2ISS2 self) -> unsigned short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUS2ISS2 self, itkHistogramThresholdCalculatorHDUS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUS2ISS2 self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUS2ISS2 self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(itkHistogramThresholdImageFilterIUS2ISS2 self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS2ISS2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS2ISS2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS2ISS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUS2ISS2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_Clone, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskImage, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskImage, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInput1, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInput2, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetOutsideValue, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetOutsideValue, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInsideValue, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetInsideValue, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskOutput, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskOutput, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_MaskOutputOn, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_MaskOutputOff, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskValue, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskValue, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetThreshold, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetCalculator, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetCalculator, None, itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_swigregister
itkHistogramThresholdImageFilterIUS2ISS2_swigregister(itkHistogramThresholdImageFilterIUS2ISS2)

def itkHistogramThresholdImageFilterIUS2ISS2___New_orig__() -> "itkHistogramThresholdImageFilterIUS2ISS2_Pointer":
    """itkHistogramThresholdImageFilterIUS2ISS2___New_orig__() -> itkHistogramThresholdImageFilterIUS2ISS2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2___New_orig__()

def itkHistogramThresholdImageFilterIUS2ISS2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS2ISS2 *":
    """itkHistogramThresholdImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS2ISS2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_cast(obj)

class itkHistogramThresholdImageFilterIUS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUS2IUC2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUS2IUC2_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUS2IUC2 self) -> itkHistogramThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUC2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUS2IUC2 self, itkImageUC2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUC2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUS2IUC2 self) -> itkImageUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUS2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUS2IUC2 self, itkImageUS2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUC2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUS2IUC2 self, itkImageUC2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUS2IUC2 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUS2IUC2 self) -> unsigned char

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUS2IUC2 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUS2IUC2 self) -> unsigned char

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS2IUC2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS2IUC2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS2IUC2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS2IUC2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUS2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUS2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUS2IUC2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUS2IUC2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUS2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUS2IUC2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUS2IUC2 self, unsigned char const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned char":
        """GetMaskValue(itkHistogramThresholdImageFilterIUS2IUC2 self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned short":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUS2IUC2 self) -> unsigned short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUS2IUC2 self, itkHistogramThresholdCalculatorHDUS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUS2IUC2 self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUS2IUC2 self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(itkHistogramThresholdImageFilterIUS2IUC2 self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS2IUC2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS2IUC2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS2IUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUS2IUC2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_Clone, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskImage, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskImage, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInput1, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInput2, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetOutsideValue, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetOutsideValue, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInsideValue, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetInsideValue, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskOutput, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskOutput, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_MaskOutputOn, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_MaskOutputOff, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskValue, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskValue, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetThreshold, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetCalculator, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetCalculator, None, itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_swigregister
itkHistogramThresholdImageFilterIUS2IUC2_swigregister(itkHistogramThresholdImageFilterIUS2IUC2)

def itkHistogramThresholdImageFilterIUS2IUC2___New_orig__() -> "itkHistogramThresholdImageFilterIUS2IUC2_Pointer":
    """itkHistogramThresholdImageFilterIUS2IUC2___New_orig__() -> itkHistogramThresholdImageFilterIUS2IUC2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2___New_orig__()

def itkHistogramThresholdImageFilterIUS2IUC2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS2IUC2 *":
    """itkHistogramThresholdImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS2IUC2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_cast(obj)

class itkHistogramThresholdImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUS2IUS2_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUS2IUS2 self) -> itkHistogramThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUS2') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUS2IUS2 self, itkImageUS2 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUS2 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUS2IUS2 self) -> itkImageUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUS2') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUS2IUS2 self, itkImageUS2 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUS2') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUS2IUS2 self, itkImageUS2 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUS2IUS2 self, unsigned short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUS2IUS2 self) -> unsigned short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUS2IUS2 self, unsigned short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUS2IUS2 self) -> unsigned short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS2IUS2 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS2IUS2 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS2IUS2 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS2IUS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUS2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUS2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUS2IUS2 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUS2IUS2 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUS2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUS2IUS2 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUS2IUS2 self, unsigned short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned short":
        """GetMaskValue(itkHistogramThresholdImageFilterIUS2IUS2 self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned short":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUS2IUS2 self) -> unsigned short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUS2IUS2 self, itkHistogramThresholdCalculatorHDUS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUS2IUS2 self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUS2IUS2 self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(itkHistogramThresholdImageFilterIUS2IUS2 self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS2IUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUS2IUS2.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_Clone, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskImage, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskImage, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInput1, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInput2, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetOutsideValue, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetOutsideValue, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInsideValue, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetInsideValue, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskOutput, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskOutput, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_MaskOutputOn, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_MaskOutputOff, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskValue, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskValue, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetThreshold, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetCalculator, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetCalculator, None, itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_swigregister
itkHistogramThresholdImageFilterIUS2IUS2_swigregister(itkHistogramThresholdImageFilterIUS2IUS2)

def itkHistogramThresholdImageFilterIUS2IUS2___New_orig__() -> "itkHistogramThresholdImageFilterIUS2IUS2_Pointer":
    """itkHistogramThresholdImageFilterIUS2IUS2___New_orig__() -> itkHistogramThresholdImageFilterIUS2IUS2_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2___New_orig__()

def itkHistogramThresholdImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS2IUS2 *":
    """itkHistogramThresholdImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS2IUS2"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_cast(obj)

class itkHistogramThresholdImageFilterIUS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUS3ISS3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUS3ISS3_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUS3ISS3 self) -> itkHistogramThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageSS3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUS3ISS3 self, itkImageSS3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageSS3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUS3ISS3 self) -> itkImageSS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUS3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUS3ISS3 self, itkImageUS3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageSS3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUS3ISS3 self, itkImageSS3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUS3ISS3 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUS3ISS3 self) -> short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUS3ISS3 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUS3ISS3 self) -> short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS3ISS3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS3ISS3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS3ISS3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS3ISS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUS3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUS3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUS3ISS3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUS3ISS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUS3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUS3ISS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUS3ISS3 self, short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "short":
        """GetMaskValue(itkHistogramThresholdImageFilterIUS3ISS3 self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned short":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUS3ISS3 self) -> unsigned short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUS3ISS3 self, itkHistogramThresholdCalculatorHDUS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUS3ISS3 self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUS3ISS3 self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(itkHistogramThresholdImageFilterIUS3ISS3 self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS3ISS3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS3ISS3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS3ISS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUS3ISS3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_Clone, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskImage, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskImage, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInput1, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInput2, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetOutsideValue, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetOutsideValue, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInsideValue, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetInsideValue, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskOutput, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskOutput, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_MaskOutputOn, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_MaskOutputOff, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskValue, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskValue, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetThreshold, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetCalculator, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetCalculator, None, itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_swigregister
itkHistogramThresholdImageFilterIUS3ISS3_swigregister(itkHistogramThresholdImageFilterIUS3ISS3)

def itkHistogramThresholdImageFilterIUS3ISS3___New_orig__() -> "itkHistogramThresholdImageFilterIUS3ISS3_Pointer":
    """itkHistogramThresholdImageFilterIUS3ISS3___New_orig__() -> itkHistogramThresholdImageFilterIUS3ISS3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3___New_orig__()

def itkHistogramThresholdImageFilterIUS3ISS3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS3ISS3 *":
    """itkHistogramThresholdImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS3ISS3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_cast(obj)

class itkHistogramThresholdImageFilterIUS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUS3IUC3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUS3IUC3_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUS3IUC3 self) -> itkHistogramThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUC3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUS3IUC3 self, itkImageUC3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUC3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUS3IUC3 self) -> itkImageUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUS3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUS3IUC3 self, itkImageUS3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUC3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUS3IUC3 self, itkImageUC3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUS3IUC3 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUS3IUC3 self) -> unsigned char

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUS3IUC3 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUS3IUC3 self) -> unsigned char

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS3IUC3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS3IUC3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS3IUC3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS3IUC3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUS3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUS3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUS3IUC3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUS3IUC3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUS3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUS3IUC3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUS3IUC3 self, unsigned char const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned char":
        """GetMaskValue(itkHistogramThresholdImageFilterIUS3IUC3 self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned short":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUS3IUC3 self) -> unsigned short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUS3IUC3 self, itkHistogramThresholdCalculatorHDUS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUS3IUC3 self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUS3IUC3 self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(itkHistogramThresholdImageFilterIUS3IUC3 self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS3IUC3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS3IUC3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS3IUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUS3IUC3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_Clone, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskImage, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskImage, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInput1, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInput2, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetOutsideValue, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetOutsideValue, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInsideValue, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetInsideValue, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskOutput, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskOutput, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_MaskOutputOn, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_MaskOutputOff, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskValue, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskValue, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetThreshold, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetCalculator, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetCalculator, None, itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_swigregister
itkHistogramThresholdImageFilterIUS3IUC3_swigregister(itkHistogramThresholdImageFilterIUS3IUC3)

def itkHistogramThresholdImageFilterIUS3IUC3___New_orig__() -> "itkHistogramThresholdImageFilterIUS3IUC3_Pointer":
    """itkHistogramThresholdImageFilterIUS3IUC3___New_orig__() -> itkHistogramThresholdImageFilterIUS3IUC3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3___New_orig__()

def itkHistogramThresholdImageFilterIUS3IUC3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS3IUC3 *":
    """itkHistogramThresholdImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS3IUC3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_cast(obj)

class itkHistogramThresholdImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    C++ includes: itkHistogramThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramThresholdImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkHistogramThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramThresholdImageFilterIUS3IUS3_Pointer":
        """Clone(itkHistogramThresholdImageFilterIUS3IUS3 self) -> itkHistogramThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_Clone(self)


    def SetMaskImage(self, _arg: 'itkImageUS3') -> "void":
        """SetMaskImage(itkHistogramThresholdImageFilterIUS3IUS3 self, itkImageUS3 _arg)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskImage(self, _arg)


    def GetMaskImage(self) -> "itkImageUS3 const *":
        """GetMaskImage(itkHistogramThresholdImageFilterIUS3IUS3 self) -> itkImageUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskImage(self)


    def SetInput1(self, input: 'itkImageUS3') -> "void":
        """
        SetInput1(itkHistogramThresholdImageFilterIUS3IUS3 self, itkImageUS3 input)

        Set the input image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInput1(self, input)


    def SetInput2(self, input: 'itkImageUS3') -> "void":
        """
        SetInput2(itkHistogramThresholdImageFilterIUS3IUS3 self, itkImageUS3 input)

        Set the marker image 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInput2(self, input)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkHistogramThresholdImageFilterIUS3IUS3 self, unsigned short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """
        GetOutsideValue(itkHistogramThresholdImageFilterIUS3IUS3 self) -> unsigned short

        Get the "outside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkHistogramThresholdImageFilterIUS3IUS3 self, unsigned short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """
        GetInsideValue(itkHistogramThresholdImageFilterIUS3IUS3 self) -> unsigned short

        Get the "inside"
        pixel value. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetInsideValue(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS3IUS3 self, unsigned int const _arg)

        Set the
        number of histogram bins 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned int":
        """GetNumberOfHistogramBins(itkHistogramThresholdImageFilterIUS3IUS3 self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetNumberOfHistogramBins(self)


    def SetAutoMinimumMaximum(self, _arg: 'bool const') -> "void":
        """
        SetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS3IUS3 self, bool const _arg)

        Does
        histogram generator compute min and max from data? Default is true for
        all but char types 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetAutoMinimumMaximum(self, _arg)


    def GetAutoMinimumMaximum(self) -> "bool":
        """GetAutoMinimumMaximum(itkHistogramThresholdImageFilterIUS3IUS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetAutoMinimumMaximum(self)


    def AutoMinimumMaximumOn(self) -> "void":
        """AutoMinimumMaximumOn(itkHistogramThresholdImageFilterIUS3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_AutoMinimumMaximumOn(self)


    def AutoMinimumMaximumOff(self) -> "void":
        """AutoMinimumMaximumOff(itkHistogramThresholdImageFilterIUS3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_AutoMinimumMaximumOff(self)


    def SetMaskOutput(self, _arg: 'bool const') -> "void":
        """
        SetMaskOutput(itkHistogramThresholdImageFilterIUS3IUS3 self, bool const _arg)

        Do you want the
        output to be masked by the mask used in histogram construction. Only
        relevant if masking is in use. Default is true. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskOutput(self, _arg)


    def GetMaskOutput(self) -> "bool":
        """GetMaskOutput(itkHistogramThresholdImageFilterIUS3IUS3 self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskOutput(self)


    def MaskOutputOn(self) -> "void":
        """MaskOutputOn(itkHistogramThresholdImageFilterIUS3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_MaskOutputOn(self)


    def MaskOutputOff(self) -> "void":
        """MaskOutputOff(itkHistogramThresholdImageFilterIUS3IUS3 self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_MaskOutputOff(self)


    def SetMaskValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetMaskValue(itkHistogramThresholdImageFilterIUS3IUS3 self, unsigned short const _arg)

        The value in the mask
        image, if used, indicating voxels that should be included. Default is
        the max of pixel type, as in the MaskedImageToHistogramFilter 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskValue(self, _arg)


    def GetMaskValue(self) -> "unsigned short":
        """GetMaskValue(itkHistogramThresholdImageFilterIUS3IUS3 self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskValue(self)


    def GetThreshold(self) -> "unsigned short":
        """
        GetThreshold(itkHistogramThresholdImageFilterIUS3IUS3 self) -> unsigned short

        Get the computed
        threshold. 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetThreshold(self)


    def SetCalculator(self, _arg: 'itkHistogramThresholdCalculatorHDUS') -> "void":
        """
        SetCalculator(itkHistogramThresholdImageFilterIUS3IUS3 self, itkHistogramThresholdCalculatorHDUS _arg)

        Set/Get the
        calculator to use to compute the threshold 
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetCalculator(self, _arg)


    def GetModifiableCalculator(self) -> "itkHistogramThresholdCalculatorHDUS *":
        """GetModifiableCalculator(itkHistogramThresholdImageFilterIUS3IUS3 self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetModifiableCalculator(self)


    def GetCalculator(self, *args) -> "itkHistogramThresholdCalculatorHDUS *":
        """
        GetCalculator(itkHistogramThresholdImageFilterIUS3IUS3 self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(itkHistogramThresholdImageFilterIUS3IUS3 self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetCalculator(self, *args)

    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_OutputEqualityComparableCheck
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS3IUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramThresholdImageFilterIUS3IUS3.Clone = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_Clone, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.SetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskImage, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.GetMaskImage = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskImage, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.SetInput1 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInput1, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.SetInput2 = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInput2, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.SetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetOutsideValue, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.GetOutsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetOutsideValue, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.SetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInsideValue, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.GetInsideValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetInsideValue, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.SetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.GetNumberOfHistogramBins = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetNumberOfHistogramBins, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.SetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.GetAutoMinimumMaximum = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetAutoMinimumMaximum, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.AutoMinimumMaximumOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_AutoMinimumMaximumOn, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.AutoMinimumMaximumOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_AutoMinimumMaximumOff, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.SetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskOutput, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.GetMaskOutput = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskOutput, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.MaskOutputOn = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_MaskOutputOn, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.MaskOutputOff = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_MaskOutputOff, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.SetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskValue, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.GetMaskValue = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskValue, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.GetThreshold = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetThreshold, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.SetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetCalculator, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.GetModifiableCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetModifiableCalculator, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3.GetCalculator = new_instancemethod(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetCalculator, None, itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3_swigregister = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_swigregister
itkHistogramThresholdImageFilterIUS3IUS3_swigregister(itkHistogramThresholdImageFilterIUS3IUS3)

def itkHistogramThresholdImageFilterIUS3IUS3___New_orig__() -> "itkHistogramThresholdImageFilterIUS3IUS3_Pointer":
    """itkHistogramThresholdImageFilterIUS3IUS3___New_orig__() -> itkHistogramThresholdImageFilterIUS3IUS3_Pointer"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3___New_orig__()

def itkHistogramThresholdImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkHistogramThresholdImageFilterIUS3IUS3 *":
    """itkHistogramThresholdImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkHistogramThresholdImageFilterIUS3IUS3"""
    return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def histogram_threshold_image_filter(*args, **kwargs):
    """Procedural interface for HistogramThresholdImageFilter"""
    import itk
    instance = itk.HistogramThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def histogram_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.HistogramThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.HistogramThresholdImageFilter.values()[0]
    else:
        filter_object = itk.HistogramThresholdImageFilter

    histogram_threshold_image_filter.__doc__ = filter_object.__doc__
    histogram_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    histogram_threshold_image_filter.__doc__ += "Available Keyword Arguments:\n"
    histogram_threshold_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



