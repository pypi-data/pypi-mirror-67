# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkGrayscaleDilateImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGrayscaleDilateImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkGrayscaleDilateImageFilterPython
            return _itkGrayscaleDilateImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGrayscaleDilateImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGrayscaleDilateImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGrayscaleDilateImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFlatStructuringElementPython
import itkNeighborhoodPython
import itkRGBPixelPython
import itkFixedArrayPython
import pyBasePython
import itkSizePython
import ITKCommonBasePython
import itkCovariantVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vector_refPython
import itkVectorPython
import itkOffsetPython
import itkIndexPython
import itkImagePython
import itkImageRegionPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkPointPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkBoxImageFilterPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython

def itkGrayscaleDilateImageFilterID3ID3SE3_New():
  return itkGrayscaleDilateImageFilterID3ID3SE3.New()


def itkGrayscaleDilateImageFilterIF3IF3SE3_New():
  return itkGrayscaleDilateImageFilterIF3IF3SE3.New()


def itkGrayscaleDilateImageFilterIUS3IUS3SE3_New():
  return itkGrayscaleDilateImageFilterIUS3IUS3SE3.New()


def itkGrayscaleDilateImageFilterIUC3IUC3SE3_New():
  return itkGrayscaleDilateImageFilterIUC3IUC3SE3.New()


def itkGrayscaleDilateImageFilterISS3ISS3SE3_New():
  return itkGrayscaleDilateImageFilterISS3ISS3SE3.New()


def itkGrayscaleDilateImageFilterID2ID2SE2_New():
  return itkGrayscaleDilateImageFilterID2ID2SE2.New()


def itkGrayscaleDilateImageFilterIF2IF2SE2_New():
  return itkGrayscaleDilateImageFilterIF2IF2SE2.New()


def itkGrayscaleDilateImageFilterIUS2IUS2SE2_New():
  return itkGrayscaleDilateImageFilterIUS2IUS2SE2.New()


def itkGrayscaleDilateImageFilterIUC2IUC2SE2_New():
  return itkGrayscaleDilateImageFilterIUC2IUC2SE2.New()


def itkGrayscaleDilateImageFilterISS2ISS2SE2_New():
  return itkGrayscaleDilateImageFilterISS2ISS2SE2.New()

class itkGrayscaleDilateImageFilterID2ID2SE2(itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    """


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkGrayscaleDilateImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGrayscaleDilateImageFilterID2ID2SE2_Pointer":
        """__New_orig__() -> itkGrayscaleDilateImageFilterID2ID2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGrayscaleDilateImageFilterID2ID2SE2_Pointer":
        """Clone(itkGrayscaleDilateImageFilterID2ID2SE2 self) -> itkGrayscaleDilateImageFilterID2ID2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_Clone(self)


    def SetBoundary(self, value: 'double const') -> "void":
        """
        SetBoundary(itkGrayscaleDilateImageFilterID2ID2SE2 self, double const value)

        Set/Get the boundary
        value. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_SetBoundary(self, value)


    def GetBoundary(self) -> "double":
        """GetBoundary(itkGrayscaleDilateImageFilterID2ID2SE2 self) -> double"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_GetBoundary(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkGrayscaleDilateImageFilterID2ID2SE2 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkGrayscaleDilateImageFilterID2ID2SE2 self) -> int"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_AlgorithmType_VHGW
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterID2ID2SE2

    def cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterID2ID2SE2 *":
        """cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterID2ID2SE2"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterID2ID2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterID2ID2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterID2ID2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleDilateImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleDilateImageFilterID2ID2SE2.Clone = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_Clone, None, itkGrayscaleDilateImageFilterID2ID2SE2)
itkGrayscaleDilateImageFilterID2ID2SE2.SetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_SetBoundary, None, itkGrayscaleDilateImageFilterID2ID2SE2)
itkGrayscaleDilateImageFilterID2ID2SE2.GetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_GetBoundary, None, itkGrayscaleDilateImageFilterID2ID2SE2)
itkGrayscaleDilateImageFilterID2ID2SE2.SetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_SetAlgorithm, None, itkGrayscaleDilateImageFilterID2ID2SE2)
itkGrayscaleDilateImageFilterID2ID2SE2.GetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_GetAlgorithm, None, itkGrayscaleDilateImageFilterID2ID2SE2)
itkGrayscaleDilateImageFilterID2ID2SE2_swigregister = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_swigregister
itkGrayscaleDilateImageFilterID2ID2SE2_swigregister(itkGrayscaleDilateImageFilterID2ID2SE2)

def itkGrayscaleDilateImageFilterID2ID2SE2___New_orig__() -> "itkGrayscaleDilateImageFilterID2ID2SE2_Pointer":
    """itkGrayscaleDilateImageFilterID2ID2SE2___New_orig__() -> itkGrayscaleDilateImageFilterID2ID2SE2_Pointer"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2___New_orig__()

def itkGrayscaleDilateImageFilterID2ID2SE2_cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterID2ID2SE2 *":
    """itkGrayscaleDilateImageFilterID2ID2SE2_cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterID2ID2SE2"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_cast(obj)

class itkGrayscaleDilateImageFilterID3ID3SE3(itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    """


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkGrayscaleDilateImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGrayscaleDilateImageFilterID3ID3SE3_Pointer":
        """__New_orig__() -> itkGrayscaleDilateImageFilterID3ID3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGrayscaleDilateImageFilterID3ID3SE3_Pointer":
        """Clone(itkGrayscaleDilateImageFilterID3ID3SE3 self) -> itkGrayscaleDilateImageFilterID3ID3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_Clone(self)


    def SetBoundary(self, value: 'double const') -> "void":
        """
        SetBoundary(itkGrayscaleDilateImageFilterID3ID3SE3 self, double const value)

        Set/Get the boundary
        value. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_SetBoundary(self, value)


    def GetBoundary(self) -> "double":
        """GetBoundary(itkGrayscaleDilateImageFilterID3ID3SE3 self) -> double"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_GetBoundary(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkGrayscaleDilateImageFilterID3ID3SE3 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkGrayscaleDilateImageFilterID3ID3SE3 self) -> int"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_AlgorithmType_VHGW
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterID3ID3SE3

    def cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterID3ID3SE3 *":
        """cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterID3ID3SE3"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterID3ID3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterID3ID3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterID3ID3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleDilateImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleDilateImageFilterID3ID3SE3.Clone = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_Clone, None, itkGrayscaleDilateImageFilterID3ID3SE3)
itkGrayscaleDilateImageFilterID3ID3SE3.SetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_SetBoundary, None, itkGrayscaleDilateImageFilterID3ID3SE3)
itkGrayscaleDilateImageFilterID3ID3SE3.GetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_GetBoundary, None, itkGrayscaleDilateImageFilterID3ID3SE3)
itkGrayscaleDilateImageFilterID3ID3SE3.SetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_SetAlgorithm, None, itkGrayscaleDilateImageFilterID3ID3SE3)
itkGrayscaleDilateImageFilterID3ID3SE3.GetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_GetAlgorithm, None, itkGrayscaleDilateImageFilterID3ID3SE3)
itkGrayscaleDilateImageFilterID3ID3SE3_swigregister = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_swigregister
itkGrayscaleDilateImageFilterID3ID3SE3_swigregister(itkGrayscaleDilateImageFilterID3ID3SE3)

def itkGrayscaleDilateImageFilterID3ID3SE3___New_orig__() -> "itkGrayscaleDilateImageFilterID3ID3SE3_Pointer":
    """itkGrayscaleDilateImageFilterID3ID3SE3___New_orig__() -> itkGrayscaleDilateImageFilterID3ID3SE3_Pointer"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3___New_orig__()

def itkGrayscaleDilateImageFilterID3ID3SE3_cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterID3ID3SE3 *":
    """itkGrayscaleDilateImageFilterID3ID3SE3_cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterID3ID3SE3"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_cast(obj)

class itkGrayscaleDilateImageFilterIF2IF2SE2(itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    """


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkGrayscaleDilateImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGrayscaleDilateImageFilterIF2IF2SE2_Pointer":
        """__New_orig__() -> itkGrayscaleDilateImageFilterIF2IF2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGrayscaleDilateImageFilterIF2IF2SE2_Pointer":
        """Clone(itkGrayscaleDilateImageFilterIF2IF2SE2 self) -> itkGrayscaleDilateImageFilterIF2IF2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_Clone(self)


    def SetBoundary(self, value: 'float const') -> "void":
        """
        SetBoundary(itkGrayscaleDilateImageFilterIF2IF2SE2 self, float const value)

        Set/Get the boundary
        value. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_SetBoundary(self, value)


    def GetBoundary(self) -> "float":
        """GetBoundary(itkGrayscaleDilateImageFilterIF2IF2SE2 self) -> float"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_GetBoundary(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkGrayscaleDilateImageFilterIF2IF2SE2 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkGrayscaleDilateImageFilterIF2IF2SE2 self) -> int"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_AlgorithmType_VHGW
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIF2IF2SE2

    def cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIF2IF2SE2 *":
        """cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIF2IF2SE2"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIF2IF2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIF2IF2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIF2IF2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleDilateImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleDilateImageFilterIF2IF2SE2.Clone = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_Clone, None, itkGrayscaleDilateImageFilterIF2IF2SE2)
itkGrayscaleDilateImageFilterIF2IF2SE2.SetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_SetBoundary, None, itkGrayscaleDilateImageFilterIF2IF2SE2)
itkGrayscaleDilateImageFilterIF2IF2SE2.GetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_GetBoundary, None, itkGrayscaleDilateImageFilterIF2IF2SE2)
itkGrayscaleDilateImageFilterIF2IF2SE2.SetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_SetAlgorithm, None, itkGrayscaleDilateImageFilterIF2IF2SE2)
itkGrayscaleDilateImageFilterIF2IF2SE2.GetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_GetAlgorithm, None, itkGrayscaleDilateImageFilterIF2IF2SE2)
itkGrayscaleDilateImageFilterIF2IF2SE2_swigregister = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_swigregister
itkGrayscaleDilateImageFilterIF2IF2SE2_swigregister(itkGrayscaleDilateImageFilterIF2IF2SE2)

def itkGrayscaleDilateImageFilterIF2IF2SE2___New_orig__() -> "itkGrayscaleDilateImageFilterIF2IF2SE2_Pointer":
    """itkGrayscaleDilateImageFilterIF2IF2SE2___New_orig__() -> itkGrayscaleDilateImageFilterIF2IF2SE2_Pointer"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2___New_orig__()

def itkGrayscaleDilateImageFilterIF2IF2SE2_cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIF2IF2SE2 *":
    """itkGrayscaleDilateImageFilterIF2IF2SE2_cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIF2IF2SE2"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_cast(obj)

class itkGrayscaleDilateImageFilterIF3IF3SE3(itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    """


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkGrayscaleDilateImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGrayscaleDilateImageFilterIF3IF3SE3_Pointer":
        """__New_orig__() -> itkGrayscaleDilateImageFilterIF3IF3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGrayscaleDilateImageFilterIF3IF3SE3_Pointer":
        """Clone(itkGrayscaleDilateImageFilterIF3IF3SE3 self) -> itkGrayscaleDilateImageFilterIF3IF3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_Clone(self)


    def SetBoundary(self, value: 'float const') -> "void":
        """
        SetBoundary(itkGrayscaleDilateImageFilterIF3IF3SE3 self, float const value)

        Set/Get the boundary
        value. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_SetBoundary(self, value)


    def GetBoundary(self) -> "float":
        """GetBoundary(itkGrayscaleDilateImageFilterIF3IF3SE3 self) -> float"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_GetBoundary(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkGrayscaleDilateImageFilterIF3IF3SE3 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkGrayscaleDilateImageFilterIF3IF3SE3 self) -> int"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_AlgorithmType_VHGW
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIF3IF3SE3

    def cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIF3IF3SE3 *":
        """cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIF3IF3SE3"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIF3IF3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIF3IF3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIF3IF3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleDilateImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleDilateImageFilterIF3IF3SE3.Clone = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_Clone, None, itkGrayscaleDilateImageFilterIF3IF3SE3)
itkGrayscaleDilateImageFilterIF3IF3SE3.SetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_SetBoundary, None, itkGrayscaleDilateImageFilterIF3IF3SE3)
itkGrayscaleDilateImageFilterIF3IF3SE3.GetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_GetBoundary, None, itkGrayscaleDilateImageFilterIF3IF3SE3)
itkGrayscaleDilateImageFilterIF3IF3SE3.SetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_SetAlgorithm, None, itkGrayscaleDilateImageFilterIF3IF3SE3)
itkGrayscaleDilateImageFilterIF3IF3SE3.GetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_GetAlgorithm, None, itkGrayscaleDilateImageFilterIF3IF3SE3)
itkGrayscaleDilateImageFilterIF3IF3SE3_swigregister = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_swigregister
itkGrayscaleDilateImageFilterIF3IF3SE3_swigregister(itkGrayscaleDilateImageFilterIF3IF3SE3)

def itkGrayscaleDilateImageFilterIF3IF3SE3___New_orig__() -> "itkGrayscaleDilateImageFilterIF3IF3SE3_Pointer":
    """itkGrayscaleDilateImageFilterIF3IF3SE3___New_orig__() -> itkGrayscaleDilateImageFilterIF3IF3SE3_Pointer"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3___New_orig__()

def itkGrayscaleDilateImageFilterIF3IF3SE3_cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIF3IF3SE3 *":
    """itkGrayscaleDilateImageFilterIF3IF3SE3_cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIF3IF3SE3"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_cast(obj)

class itkGrayscaleDilateImageFilterISS2ISS2SE2(itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    """


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkGrayscaleDilateImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGrayscaleDilateImageFilterISS2ISS2SE2_Pointer":
        """__New_orig__() -> itkGrayscaleDilateImageFilterISS2ISS2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGrayscaleDilateImageFilterISS2ISS2SE2_Pointer":
        """Clone(itkGrayscaleDilateImageFilterISS2ISS2SE2 self) -> itkGrayscaleDilateImageFilterISS2ISS2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_Clone(self)


    def SetBoundary(self, value: 'short const') -> "void":
        """
        SetBoundary(itkGrayscaleDilateImageFilterISS2ISS2SE2 self, short const value)

        Set/Get the boundary
        value. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_SetBoundary(self, value)


    def GetBoundary(self) -> "short":
        """GetBoundary(itkGrayscaleDilateImageFilterISS2ISS2SE2 self) -> short"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_GetBoundary(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkGrayscaleDilateImageFilterISS2ISS2SE2 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkGrayscaleDilateImageFilterISS2ISS2SE2 self) -> int"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_AlgorithmType_VHGW
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterISS2ISS2SE2

    def cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterISS2ISS2SE2 *":
        """cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterISS2ISS2SE2"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterISS2ISS2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterISS2ISS2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterISS2ISS2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleDilateImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleDilateImageFilterISS2ISS2SE2.Clone = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_Clone, None, itkGrayscaleDilateImageFilterISS2ISS2SE2)
itkGrayscaleDilateImageFilterISS2ISS2SE2.SetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_SetBoundary, None, itkGrayscaleDilateImageFilterISS2ISS2SE2)
itkGrayscaleDilateImageFilterISS2ISS2SE2.GetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_GetBoundary, None, itkGrayscaleDilateImageFilterISS2ISS2SE2)
itkGrayscaleDilateImageFilterISS2ISS2SE2.SetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_SetAlgorithm, None, itkGrayscaleDilateImageFilterISS2ISS2SE2)
itkGrayscaleDilateImageFilterISS2ISS2SE2.GetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_GetAlgorithm, None, itkGrayscaleDilateImageFilterISS2ISS2SE2)
itkGrayscaleDilateImageFilterISS2ISS2SE2_swigregister = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_swigregister
itkGrayscaleDilateImageFilterISS2ISS2SE2_swigregister(itkGrayscaleDilateImageFilterISS2ISS2SE2)

def itkGrayscaleDilateImageFilterISS2ISS2SE2___New_orig__() -> "itkGrayscaleDilateImageFilterISS2ISS2SE2_Pointer":
    """itkGrayscaleDilateImageFilterISS2ISS2SE2___New_orig__() -> itkGrayscaleDilateImageFilterISS2ISS2SE2_Pointer"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2___New_orig__()

def itkGrayscaleDilateImageFilterISS2ISS2SE2_cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterISS2ISS2SE2 *":
    """itkGrayscaleDilateImageFilterISS2ISS2SE2_cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterISS2ISS2SE2"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_cast(obj)

class itkGrayscaleDilateImageFilterISS3ISS3SE3(itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    """


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkGrayscaleDilateImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGrayscaleDilateImageFilterISS3ISS3SE3_Pointer":
        """__New_orig__() -> itkGrayscaleDilateImageFilterISS3ISS3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGrayscaleDilateImageFilterISS3ISS3SE3_Pointer":
        """Clone(itkGrayscaleDilateImageFilterISS3ISS3SE3 self) -> itkGrayscaleDilateImageFilterISS3ISS3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_Clone(self)


    def SetBoundary(self, value: 'short const') -> "void":
        """
        SetBoundary(itkGrayscaleDilateImageFilterISS3ISS3SE3 self, short const value)

        Set/Get the boundary
        value. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_SetBoundary(self, value)


    def GetBoundary(self) -> "short":
        """GetBoundary(itkGrayscaleDilateImageFilterISS3ISS3SE3 self) -> short"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_GetBoundary(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkGrayscaleDilateImageFilterISS3ISS3SE3 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkGrayscaleDilateImageFilterISS3ISS3SE3 self) -> int"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_AlgorithmType_VHGW
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterISS3ISS3SE3

    def cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterISS3ISS3SE3 *":
        """cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterISS3ISS3SE3"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterISS3ISS3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterISS3ISS3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterISS3ISS3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleDilateImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleDilateImageFilterISS3ISS3SE3.Clone = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_Clone, None, itkGrayscaleDilateImageFilterISS3ISS3SE3)
itkGrayscaleDilateImageFilterISS3ISS3SE3.SetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_SetBoundary, None, itkGrayscaleDilateImageFilterISS3ISS3SE3)
itkGrayscaleDilateImageFilterISS3ISS3SE3.GetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_GetBoundary, None, itkGrayscaleDilateImageFilterISS3ISS3SE3)
itkGrayscaleDilateImageFilterISS3ISS3SE3.SetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_SetAlgorithm, None, itkGrayscaleDilateImageFilterISS3ISS3SE3)
itkGrayscaleDilateImageFilterISS3ISS3SE3.GetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_GetAlgorithm, None, itkGrayscaleDilateImageFilterISS3ISS3SE3)
itkGrayscaleDilateImageFilterISS3ISS3SE3_swigregister = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_swigregister
itkGrayscaleDilateImageFilterISS3ISS3SE3_swigregister(itkGrayscaleDilateImageFilterISS3ISS3SE3)

def itkGrayscaleDilateImageFilterISS3ISS3SE3___New_orig__() -> "itkGrayscaleDilateImageFilterISS3ISS3SE3_Pointer":
    """itkGrayscaleDilateImageFilterISS3ISS3SE3___New_orig__() -> itkGrayscaleDilateImageFilterISS3ISS3SE3_Pointer"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3___New_orig__()

def itkGrayscaleDilateImageFilterISS3ISS3SE3_cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterISS3ISS3SE3 *":
    """itkGrayscaleDilateImageFilterISS3ISS3SE3_cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterISS3ISS3SE3"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_cast(obj)

class itkGrayscaleDilateImageFilterIUC2IUC2SE2(itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    """


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkGrayscaleDilateImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGrayscaleDilateImageFilterIUC2IUC2SE2_Pointer":
        """__New_orig__() -> itkGrayscaleDilateImageFilterIUC2IUC2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGrayscaleDilateImageFilterIUC2IUC2SE2_Pointer":
        """Clone(itkGrayscaleDilateImageFilterIUC2IUC2SE2 self) -> itkGrayscaleDilateImageFilterIUC2IUC2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_Clone(self)


    def SetBoundary(self, value: 'unsigned char const') -> "void":
        """
        SetBoundary(itkGrayscaleDilateImageFilterIUC2IUC2SE2 self, unsigned char const value)

        Set/Get the boundary
        value. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_SetBoundary(self, value)


    def GetBoundary(self) -> "unsigned char":
        """GetBoundary(itkGrayscaleDilateImageFilterIUC2IUC2SE2 self) -> unsigned char"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_GetBoundary(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkGrayscaleDilateImageFilterIUC2IUC2SE2 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkGrayscaleDilateImageFilterIUC2IUC2SE2 self) -> int"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_AlgorithmType_VHGW
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUC2IUC2SE2

    def cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIUC2IUC2SE2 *":
        """cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIUC2IUC2SE2"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUC2IUC2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUC2IUC2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUC2IUC2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleDilateImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleDilateImageFilterIUC2IUC2SE2.Clone = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_Clone, None, itkGrayscaleDilateImageFilterIUC2IUC2SE2)
itkGrayscaleDilateImageFilterIUC2IUC2SE2.SetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_SetBoundary, None, itkGrayscaleDilateImageFilterIUC2IUC2SE2)
itkGrayscaleDilateImageFilterIUC2IUC2SE2.GetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_GetBoundary, None, itkGrayscaleDilateImageFilterIUC2IUC2SE2)
itkGrayscaleDilateImageFilterIUC2IUC2SE2.SetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_SetAlgorithm, None, itkGrayscaleDilateImageFilterIUC2IUC2SE2)
itkGrayscaleDilateImageFilterIUC2IUC2SE2.GetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_GetAlgorithm, None, itkGrayscaleDilateImageFilterIUC2IUC2SE2)
itkGrayscaleDilateImageFilterIUC2IUC2SE2_swigregister = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_swigregister
itkGrayscaleDilateImageFilterIUC2IUC2SE2_swigregister(itkGrayscaleDilateImageFilterIUC2IUC2SE2)

def itkGrayscaleDilateImageFilterIUC2IUC2SE2___New_orig__() -> "itkGrayscaleDilateImageFilterIUC2IUC2SE2_Pointer":
    """itkGrayscaleDilateImageFilterIUC2IUC2SE2___New_orig__() -> itkGrayscaleDilateImageFilterIUC2IUC2SE2_Pointer"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2___New_orig__()

def itkGrayscaleDilateImageFilterIUC2IUC2SE2_cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIUC2IUC2SE2 *":
    """itkGrayscaleDilateImageFilterIUC2IUC2SE2_cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIUC2IUC2SE2"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_cast(obj)

class itkGrayscaleDilateImageFilterIUC3IUC3SE3(itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    """


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkGrayscaleDilateImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGrayscaleDilateImageFilterIUC3IUC3SE3_Pointer":
        """__New_orig__() -> itkGrayscaleDilateImageFilterIUC3IUC3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGrayscaleDilateImageFilterIUC3IUC3SE3_Pointer":
        """Clone(itkGrayscaleDilateImageFilterIUC3IUC3SE3 self) -> itkGrayscaleDilateImageFilterIUC3IUC3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_Clone(self)


    def SetBoundary(self, value: 'unsigned char const') -> "void":
        """
        SetBoundary(itkGrayscaleDilateImageFilterIUC3IUC3SE3 self, unsigned char const value)

        Set/Get the boundary
        value. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_SetBoundary(self, value)


    def GetBoundary(self) -> "unsigned char":
        """GetBoundary(itkGrayscaleDilateImageFilterIUC3IUC3SE3 self) -> unsigned char"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_GetBoundary(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkGrayscaleDilateImageFilterIUC3IUC3SE3 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkGrayscaleDilateImageFilterIUC3IUC3SE3 self) -> int"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_AlgorithmType_VHGW
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUC3IUC3SE3

    def cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIUC3IUC3SE3 *":
        """cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIUC3IUC3SE3"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUC3IUC3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUC3IUC3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUC3IUC3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleDilateImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleDilateImageFilterIUC3IUC3SE3.Clone = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_Clone, None, itkGrayscaleDilateImageFilterIUC3IUC3SE3)
itkGrayscaleDilateImageFilterIUC3IUC3SE3.SetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_SetBoundary, None, itkGrayscaleDilateImageFilterIUC3IUC3SE3)
itkGrayscaleDilateImageFilterIUC3IUC3SE3.GetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_GetBoundary, None, itkGrayscaleDilateImageFilterIUC3IUC3SE3)
itkGrayscaleDilateImageFilterIUC3IUC3SE3.SetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_SetAlgorithm, None, itkGrayscaleDilateImageFilterIUC3IUC3SE3)
itkGrayscaleDilateImageFilterIUC3IUC3SE3.GetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_GetAlgorithm, None, itkGrayscaleDilateImageFilterIUC3IUC3SE3)
itkGrayscaleDilateImageFilterIUC3IUC3SE3_swigregister = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_swigregister
itkGrayscaleDilateImageFilterIUC3IUC3SE3_swigregister(itkGrayscaleDilateImageFilterIUC3IUC3SE3)

def itkGrayscaleDilateImageFilterIUC3IUC3SE3___New_orig__() -> "itkGrayscaleDilateImageFilterIUC3IUC3SE3_Pointer":
    """itkGrayscaleDilateImageFilterIUC3IUC3SE3___New_orig__() -> itkGrayscaleDilateImageFilterIUC3IUC3SE3_Pointer"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3___New_orig__()

def itkGrayscaleDilateImageFilterIUC3IUC3SE3_cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIUC3IUC3SE3 *":
    """itkGrayscaleDilateImageFilterIUC3IUC3SE3_cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIUC3IUC3SE3"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_cast(obj)

class itkGrayscaleDilateImageFilterIUS2IUS2SE2(itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    """


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkGrayscaleDilateImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGrayscaleDilateImageFilterIUS2IUS2SE2_Pointer":
        """__New_orig__() -> itkGrayscaleDilateImageFilterIUS2IUS2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGrayscaleDilateImageFilterIUS2IUS2SE2_Pointer":
        """Clone(itkGrayscaleDilateImageFilterIUS2IUS2SE2 self) -> itkGrayscaleDilateImageFilterIUS2IUS2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_Clone(self)


    def SetBoundary(self, value: 'unsigned short const') -> "void":
        """
        SetBoundary(itkGrayscaleDilateImageFilterIUS2IUS2SE2 self, unsigned short const value)

        Set/Get the boundary
        value. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_SetBoundary(self, value)


    def GetBoundary(self) -> "unsigned short":
        """GetBoundary(itkGrayscaleDilateImageFilterIUS2IUS2SE2 self) -> unsigned short"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_GetBoundary(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkGrayscaleDilateImageFilterIUS2IUS2SE2 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkGrayscaleDilateImageFilterIUS2IUS2SE2 self) -> int"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_AlgorithmType_VHGW
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUS2IUS2SE2

    def cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIUS2IUS2SE2 *":
        """cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIUS2IUS2SE2"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUS2IUS2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUS2IUS2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUS2IUS2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleDilateImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleDilateImageFilterIUS2IUS2SE2.Clone = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_Clone, None, itkGrayscaleDilateImageFilterIUS2IUS2SE2)
itkGrayscaleDilateImageFilterIUS2IUS2SE2.SetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_SetBoundary, None, itkGrayscaleDilateImageFilterIUS2IUS2SE2)
itkGrayscaleDilateImageFilterIUS2IUS2SE2.GetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_GetBoundary, None, itkGrayscaleDilateImageFilterIUS2IUS2SE2)
itkGrayscaleDilateImageFilterIUS2IUS2SE2.SetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_SetAlgorithm, None, itkGrayscaleDilateImageFilterIUS2IUS2SE2)
itkGrayscaleDilateImageFilterIUS2IUS2SE2.GetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_GetAlgorithm, None, itkGrayscaleDilateImageFilterIUS2IUS2SE2)
itkGrayscaleDilateImageFilterIUS2IUS2SE2_swigregister = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_swigregister
itkGrayscaleDilateImageFilterIUS2IUS2SE2_swigregister(itkGrayscaleDilateImageFilterIUS2IUS2SE2)

def itkGrayscaleDilateImageFilterIUS2IUS2SE2___New_orig__() -> "itkGrayscaleDilateImageFilterIUS2IUS2SE2_Pointer":
    """itkGrayscaleDilateImageFilterIUS2IUS2SE2___New_orig__() -> itkGrayscaleDilateImageFilterIUS2IUS2SE2_Pointer"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2___New_orig__()

def itkGrayscaleDilateImageFilterIUS2IUS2SE2_cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIUS2IUS2SE2 *":
    """itkGrayscaleDilateImageFilterIUS2IUS2SE2_cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIUS2IUS2SE2"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_cast(obj)

class itkGrayscaleDilateImageFilterIUS3IUS3SE3(itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    """


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkGrayscaleDilateImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGrayscaleDilateImageFilterIUS3IUS3SE3_Pointer":
        """__New_orig__() -> itkGrayscaleDilateImageFilterIUS3IUS3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGrayscaleDilateImageFilterIUS3IUS3SE3_Pointer":
        """Clone(itkGrayscaleDilateImageFilterIUS3IUS3SE3 self) -> itkGrayscaleDilateImageFilterIUS3IUS3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_Clone(self)


    def SetBoundary(self, value: 'unsigned short const') -> "void":
        """
        SetBoundary(itkGrayscaleDilateImageFilterIUS3IUS3SE3 self, unsigned short const value)

        Set/Get the boundary
        value. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_SetBoundary(self, value)


    def GetBoundary(self) -> "unsigned short":
        """GetBoundary(itkGrayscaleDilateImageFilterIUS3IUS3SE3 self) -> unsigned short"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_GetBoundary(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkGrayscaleDilateImageFilterIUS3IUS3SE3 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkGrayscaleDilateImageFilterIUS3IUS3SE3 self) -> int"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_AlgorithmType_VHGW
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUS3IUS3SE3

    def cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIUS3IUS3SE3 *":
        """cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIUS3IUS3SE3"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUS3IUS3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUS3IUS3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUS3IUS3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGrayscaleDilateImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGrayscaleDilateImageFilterIUS3IUS3SE3.Clone = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_Clone, None, itkGrayscaleDilateImageFilterIUS3IUS3SE3)
itkGrayscaleDilateImageFilterIUS3IUS3SE3.SetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_SetBoundary, None, itkGrayscaleDilateImageFilterIUS3IUS3SE3)
itkGrayscaleDilateImageFilterIUS3IUS3SE3.GetBoundary = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_GetBoundary, None, itkGrayscaleDilateImageFilterIUS3IUS3SE3)
itkGrayscaleDilateImageFilterIUS3IUS3SE3.SetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_SetAlgorithm, None, itkGrayscaleDilateImageFilterIUS3IUS3SE3)
itkGrayscaleDilateImageFilterIUS3IUS3SE3.GetAlgorithm = new_instancemethod(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_GetAlgorithm, None, itkGrayscaleDilateImageFilterIUS3IUS3SE3)
itkGrayscaleDilateImageFilterIUS3IUS3SE3_swigregister = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_swigregister
itkGrayscaleDilateImageFilterIUS3IUS3SE3_swigregister(itkGrayscaleDilateImageFilterIUS3IUS3SE3)

def itkGrayscaleDilateImageFilterIUS3IUS3SE3___New_orig__() -> "itkGrayscaleDilateImageFilterIUS3IUS3SE3_Pointer":
    """itkGrayscaleDilateImageFilterIUS3IUS3SE3___New_orig__() -> itkGrayscaleDilateImageFilterIUS3IUS3SE3_Pointer"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3___New_orig__()

def itkGrayscaleDilateImageFilterIUS3IUS3SE3_cast(obj: 'itkLightObject') -> "itkGrayscaleDilateImageFilterIUS3IUS3SE3 *":
    """itkGrayscaleDilateImageFilterIUS3IUS3SE3_cast(itkLightObject obj) -> itkGrayscaleDilateImageFilterIUS3IUS3SE3"""
    return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def grayscale_dilate_image_filter(*args, **kwargs):
    """Procedural interface for GrayscaleDilateImageFilter"""
    import itk
    instance = itk.GrayscaleDilateImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def grayscale_dilate_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.GrayscaleDilateImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.GrayscaleDilateImageFilter.values()[0]
    else:
        filter_object = itk.GrayscaleDilateImageFilter

    grayscale_dilate_image_filter.__doc__ = filter_object.__doc__
    grayscale_dilate_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    grayscale_dilate_image_filter.__doc__ += "Available Keyword Arguments:\n"
    grayscale_dilate_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



