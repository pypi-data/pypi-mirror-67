# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkLabelImageToLabelMapFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkLabelImageToLabelMapFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkLabelImageToLabelMapFilterPython
            return _itkLabelImageToLabelMapFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkLabelImageToLabelMapFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkLabelImageToLabelMapFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkLabelImageToLabelMapFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import ITKLabelMapBasePython
import itkImageSourcePython
import itkVectorImagePython
import stdcomplexPython
import itkVariableLengthVectorPython
import itkImagePython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkPointPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkRGBPixelPython
import itkImageRegionPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkImageSourceCommonPython
import itkStatisticsLabelObjectPython
import itkHistogramPython
import itkSamplePython
import itkArrayPython
import itkShapeLabelObjectPython
import itkLabelObjectPython
import itkLabelObjectLinePython
import itkAffineTransformPython
import itkMatrixOffsetTransformBasePython
import itkTransformBasePython
import itkOptimizerParametersPython
import itkArray2DPython
import itkDiffusionTensor3DPython
import itkImageToImageFilterCommonPython

def itkLabelImageToLabelMapFilterIUS3LM3_New():
  return itkLabelImageToLabelMapFilterIUS3LM3.New()


def itkLabelImageToLabelMapFilterIUS2LM2_New():
  return itkLabelImageToLabelMapFilterIUS2LM2.New()


def itkLabelImageToLabelMapFilterIUC3LM3_New():
  return itkLabelImageToLabelMapFilterIUC3LM3.New()


def itkLabelImageToLabelMapFilterIUC2LM2_New():
  return itkLabelImageToLabelMapFilterIUC2LM2.New()


def itkScanlineFilterCommonIUS3LM3_New():
  return itkScanlineFilterCommonIUS3LM3.New()


def itkScanlineFilterCommonIUS2LM2_New():
  return itkScanlineFilterCommonIUS2LM2.New()


def itkScanlineFilterCommonIUC3LM3_New():
  return itkScanlineFilterCommonIUC3LM3.New()


def itkScanlineFilterCommonIUC2LM2_New():
  return itkScanlineFilterCommonIUC2LM2.New()

class itkLabelImageToLabelMapFilterIUC2LM2(ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2):
    """


    convert a labeled image to a label collection image

    LabelImageToLabelMapFilter converts a label image to a label
    collection image. The labels are the same in the input and the output
    image.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/1926/584
    orhttp://www.insight-journal.org/browse/publication/176

    See:   BinaryImageToLabelMapFilter, LabelMapToLabelImageFilter

    C++ includes: itkLabelImageToLabelMapFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLabelImageToLabelMapFilterIUC2LM2_Pointer":
        """__New_orig__() -> itkLabelImageToLabelMapFilterIUC2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLabelImageToLabelMapFilterIUC2LM2_Pointer":
        """Clone(itkLabelImageToLabelMapFilterIUC2LM2 self) -> itkLabelImageToLabelMapFilterIUC2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_Clone(self)


    def SetBackgroundValue(self, _arg: 'unsigned long const') -> "void":
        """
        SetBackgroundValue(itkLabelImageToLabelMapFilterIUC2LM2 self, unsigned long const _arg)

        Set/Get the
        value used as "background" in the output image. Defaults to
        NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "unsigned long":
        """GetBackgroundValue(itkLabelImageToLabelMapFilterIUC2LM2 self) -> unsigned long"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_GetBackgroundValue(self)

    SameDimensionCheck = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_SameDimensionCheck
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkLabelImageToLabelMapFilterIUC2LM2

    def cast(obj: 'itkLightObject') -> "itkLabelImageToLabelMapFilterIUC2LM2 *":
        """cast(itkLightObject obj) -> itkLabelImageToLabelMapFilterIUC2LM2"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLabelImageToLabelMapFilterIUC2LM2

        Create a new object of the class itkLabelImageToLabelMapFilterIUC2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageToLabelMapFilterIUC2LM2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabelImageToLabelMapFilterIUC2LM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabelImageToLabelMapFilterIUC2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLabelImageToLabelMapFilterIUC2LM2.Clone = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_Clone, None, itkLabelImageToLabelMapFilterIUC2LM2)
itkLabelImageToLabelMapFilterIUC2LM2.SetBackgroundValue = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_SetBackgroundValue, None, itkLabelImageToLabelMapFilterIUC2LM2)
itkLabelImageToLabelMapFilterIUC2LM2.GetBackgroundValue = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_GetBackgroundValue, None, itkLabelImageToLabelMapFilterIUC2LM2)
itkLabelImageToLabelMapFilterIUC2LM2_swigregister = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_swigregister
itkLabelImageToLabelMapFilterIUC2LM2_swigregister(itkLabelImageToLabelMapFilterIUC2LM2)

def itkLabelImageToLabelMapFilterIUC2LM2___New_orig__() -> "itkLabelImageToLabelMapFilterIUC2LM2_Pointer":
    """itkLabelImageToLabelMapFilterIUC2LM2___New_orig__() -> itkLabelImageToLabelMapFilterIUC2LM2_Pointer"""
    return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2___New_orig__()

def itkLabelImageToLabelMapFilterIUC2LM2_cast(obj: 'itkLightObject') -> "itkLabelImageToLabelMapFilterIUC2LM2 *":
    """itkLabelImageToLabelMapFilterIUC2LM2_cast(itkLightObject obj) -> itkLabelImageToLabelMapFilterIUC2LM2"""
    return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_cast(obj)

class itkLabelImageToLabelMapFilterIUC3LM3(ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3):
    """


    convert a labeled image to a label collection image

    LabelImageToLabelMapFilter converts a label image to a label
    collection image. The labels are the same in the input and the output
    image.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/1926/584
    orhttp://www.insight-journal.org/browse/publication/176

    See:   BinaryImageToLabelMapFilter, LabelMapToLabelImageFilter

    C++ includes: itkLabelImageToLabelMapFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLabelImageToLabelMapFilterIUC3LM3_Pointer":
        """__New_orig__() -> itkLabelImageToLabelMapFilterIUC3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLabelImageToLabelMapFilterIUC3LM3_Pointer":
        """Clone(itkLabelImageToLabelMapFilterIUC3LM3 self) -> itkLabelImageToLabelMapFilterIUC3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_Clone(self)


    def SetBackgroundValue(self, _arg: 'unsigned long const') -> "void":
        """
        SetBackgroundValue(itkLabelImageToLabelMapFilterIUC3LM3 self, unsigned long const _arg)

        Set/Get the
        value used as "background" in the output image. Defaults to
        NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "unsigned long":
        """GetBackgroundValue(itkLabelImageToLabelMapFilterIUC3LM3 self) -> unsigned long"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_GetBackgroundValue(self)

    SameDimensionCheck = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_SameDimensionCheck
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkLabelImageToLabelMapFilterIUC3LM3

    def cast(obj: 'itkLightObject') -> "itkLabelImageToLabelMapFilterIUC3LM3 *":
        """cast(itkLightObject obj) -> itkLabelImageToLabelMapFilterIUC3LM3"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLabelImageToLabelMapFilterIUC3LM3

        Create a new object of the class itkLabelImageToLabelMapFilterIUC3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageToLabelMapFilterIUC3LM3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabelImageToLabelMapFilterIUC3LM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabelImageToLabelMapFilterIUC3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLabelImageToLabelMapFilterIUC3LM3.Clone = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_Clone, None, itkLabelImageToLabelMapFilterIUC3LM3)
itkLabelImageToLabelMapFilterIUC3LM3.SetBackgroundValue = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_SetBackgroundValue, None, itkLabelImageToLabelMapFilterIUC3LM3)
itkLabelImageToLabelMapFilterIUC3LM3.GetBackgroundValue = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_GetBackgroundValue, None, itkLabelImageToLabelMapFilterIUC3LM3)
itkLabelImageToLabelMapFilterIUC3LM3_swigregister = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_swigregister
itkLabelImageToLabelMapFilterIUC3LM3_swigregister(itkLabelImageToLabelMapFilterIUC3LM3)

def itkLabelImageToLabelMapFilterIUC3LM3___New_orig__() -> "itkLabelImageToLabelMapFilterIUC3LM3_Pointer":
    """itkLabelImageToLabelMapFilterIUC3LM3___New_orig__() -> itkLabelImageToLabelMapFilterIUC3LM3_Pointer"""
    return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3___New_orig__()

def itkLabelImageToLabelMapFilterIUC3LM3_cast(obj: 'itkLightObject') -> "itkLabelImageToLabelMapFilterIUC3LM3 *":
    """itkLabelImageToLabelMapFilterIUC3LM3_cast(itkLightObject obj) -> itkLabelImageToLabelMapFilterIUC3LM3"""
    return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_cast(obj)

class itkLabelImageToLabelMapFilterIUS2LM2(ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2):
    """


    convert a labeled image to a label collection image

    LabelImageToLabelMapFilter converts a label image to a label
    collection image. The labels are the same in the input and the output
    image.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/1926/584
    orhttp://www.insight-journal.org/browse/publication/176

    See:   BinaryImageToLabelMapFilter, LabelMapToLabelImageFilter

    C++ includes: itkLabelImageToLabelMapFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLabelImageToLabelMapFilterIUS2LM2_Pointer":
        """__New_orig__() -> itkLabelImageToLabelMapFilterIUS2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLabelImageToLabelMapFilterIUS2LM2_Pointer":
        """Clone(itkLabelImageToLabelMapFilterIUS2LM2 self) -> itkLabelImageToLabelMapFilterIUS2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_Clone(self)


    def SetBackgroundValue(self, _arg: 'unsigned long const') -> "void":
        """
        SetBackgroundValue(itkLabelImageToLabelMapFilterIUS2LM2 self, unsigned long const _arg)

        Set/Get the
        value used as "background" in the output image. Defaults to
        NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "unsigned long":
        """GetBackgroundValue(itkLabelImageToLabelMapFilterIUS2LM2 self) -> unsigned long"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_GetBackgroundValue(self)

    SameDimensionCheck = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_SameDimensionCheck
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkLabelImageToLabelMapFilterIUS2LM2

    def cast(obj: 'itkLightObject') -> "itkLabelImageToLabelMapFilterIUS2LM2 *":
        """cast(itkLightObject obj) -> itkLabelImageToLabelMapFilterIUS2LM2"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLabelImageToLabelMapFilterIUS2LM2

        Create a new object of the class itkLabelImageToLabelMapFilterIUS2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageToLabelMapFilterIUS2LM2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabelImageToLabelMapFilterIUS2LM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabelImageToLabelMapFilterIUS2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLabelImageToLabelMapFilterIUS2LM2.Clone = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_Clone, None, itkLabelImageToLabelMapFilterIUS2LM2)
itkLabelImageToLabelMapFilterIUS2LM2.SetBackgroundValue = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_SetBackgroundValue, None, itkLabelImageToLabelMapFilterIUS2LM2)
itkLabelImageToLabelMapFilterIUS2LM2.GetBackgroundValue = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_GetBackgroundValue, None, itkLabelImageToLabelMapFilterIUS2LM2)
itkLabelImageToLabelMapFilterIUS2LM2_swigregister = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_swigregister
itkLabelImageToLabelMapFilterIUS2LM2_swigregister(itkLabelImageToLabelMapFilterIUS2LM2)

def itkLabelImageToLabelMapFilterIUS2LM2___New_orig__() -> "itkLabelImageToLabelMapFilterIUS2LM2_Pointer":
    """itkLabelImageToLabelMapFilterIUS2LM2___New_orig__() -> itkLabelImageToLabelMapFilterIUS2LM2_Pointer"""
    return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2___New_orig__()

def itkLabelImageToLabelMapFilterIUS2LM2_cast(obj: 'itkLightObject') -> "itkLabelImageToLabelMapFilterIUS2LM2 *":
    """itkLabelImageToLabelMapFilterIUS2LM2_cast(itkLightObject obj) -> itkLabelImageToLabelMapFilterIUS2LM2"""
    return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_cast(obj)

class itkLabelImageToLabelMapFilterIUS3LM3(ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3):
    """


    convert a labeled image to a label collection image

    LabelImageToLabelMapFilter converts a label image to a label
    collection image. The labels are the same in the input and the output
    image.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/1926/584
    orhttp://www.insight-journal.org/browse/publication/176

    See:   BinaryImageToLabelMapFilter, LabelMapToLabelImageFilter

    C++ includes: itkLabelImageToLabelMapFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkLabelImageToLabelMapFilterIUS3LM3_Pointer":
        """__New_orig__() -> itkLabelImageToLabelMapFilterIUS3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkLabelImageToLabelMapFilterIUS3LM3_Pointer":
        """Clone(itkLabelImageToLabelMapFilterIUS3LM3 self) -> itkLabelImageToLabelMapFilterIUS3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_Clone(self)


    def SetBackgroundValue(self, _arg: 'unsigned long const') -> "void":
        """
        SetBackgroundValue(itkLabelImageToLabelMapFilterIUS3LM3 self, unsigned long const _arg)

        Set/Get the
        value used as "background" in the output image. Defaults to
        NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "unsigned long":
        """GetBackgroundValue(itkLabelImageToLabelMapFilterIUS3LM3 self) -> unsigned long"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_GetBackgroundValue(self)

    SameDimensionCheck = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_SameDimensionCheck
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkLabelImageToLabelMapFilterIUS3LM3

    def cast(obj: 'itkLightObject') -> "itkLabelImageToLabelMapFilterIUS3LM3 *":
        """cast(itkLightObject obj) -> itkLabelImageToLabelMapFilterIUS3LM3"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkLabelImageToLabelMapFilterIUS3LM3

        Create a new object of the class itkLabelImageToLabelMapFilterIUS3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageToLabelMapFilterIUS3LM3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkLabelImageToLabelMapFilterIUS3LM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLabelImageToLabelMapFilterIUS3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLabelImageToLabelMapFilterIUS3LM3.Clone = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_Clone, None, itkLabelImageToLabelMapFilterIUS3LM3)
itkLabelImageToLabelMapFilterIUS3LM3.SetBackgroundValue = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_SetBackgroundValue, None, itkLabelImageToLabelMapFilterIUS3LM3)
itkLabelImageToLabelMapFilterIUS3LM3.GetBackgroundValue = new_instancemethod(_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_GetBackgroundValue, None, itkLabelImageToLabelMapFilterIUS3LM3)
itkLabelImageToLabelMapFilterIUS3LM3_swigregister = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_swigregister
itkLabelImageToLabelMapFilterIUS3LM3_swigregister(itkLabelImageToLabelMapFilterIUS3LM3)

def itkLabelImageToLabelMapFilterIUS3LM3___New_orig__() -> "itkLabelImageToLabelMapFilterIUS3LM3_Pointer":
    """itkLabelImageToLabelMapFilterIUS3LM3___New_orig__() -> itkLabelImageToLabelMapFilterIUS3LM3_Pointer"""
    return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3___New_orig__()

def itkLabelImageToLabelMapFilterIUS3LM3_cast(obj: 'itkLightObject') -> "itkLabelImageToLabelMapFilterIUS3LM3 *":
    """itkLabelImageToLabelMapFilterIUS3LM3_cast(itkLightObject obj) -> itkLabelImageToLabelMapFilterIUS3LM3"""
    return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_cast(obj)

class itkScanlineFilterCommonIUC2LM2(object):
    """


    Helper class for a group of filters which operate on scan-lines.

    This implementation was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
    journal.org/browse/publication/176

    C++ includes: itkScanlineFilterCommon.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScanlineFilterCommonIUC2LM2_Pointer":
        """__New_orig__() -> itkScanlineFilterCommonIUC2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    SameDimension = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2_SameDimension

    def __init__(self, enclosingFilter: 'itkImageToImageFilterIUC2LM2'):
        """
        __init__(itkScanlineFilterCommonIUC2LM2 self, itkImageToImageFilterIUC2LM2 enclosingFilter) -> itkScanlineFilterCommonIUC2LM2



        Helper class for a group of filters which operate on scan-lines.

        This implementation was taken from the Insight Journal
        paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
        journal.org/browse/publication/176

        C++ includes: itkScanlineFilterCommon.h 
        """
        _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2_swiginit(self, _itkLabelImageToLabelMapFilterPython.new_itkScanlineFilterCommonIUC2LM2(enclosingFilter))
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkScanlineFilterCommonIUC2LM2

    def cast(obj: 'itkLightObject') -> "itkScanlineFilterCommonIUC2LM2 *":
        """cast(itkLightObject obj) -> itkScanlineFilterCommonIUC2LM2"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC2LM2

        Create a new object of the class itkScanlineFilterCommonIUC2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC2LM2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC2LM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScanlineFilterCommonIUC2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScanlineFilterCommonIUC2LM2_swigregister = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2_swigregister
itkScanlineFilterCommonIUC2LM2_swigregister(itkScanlineFilterCommonIUC2LM2)

def itkScanlineFilterCommonIUC2LM2___New_orig__() -> "itkScanlineFilterCommonIUC2LM2_Pointer":
    """itkScanlineFilterCommonIUC2LM2___New_orig__() -> itkScanlineFilterCommonIUC2LM2_Pointer"""
    return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2___New_orig__()

def itkScanlineFilterCommonIUC2LM2_cast(obj: 'itkLightObject') -> "itkScanlineFilterCommonIUC2LM2 *":
    """itkScanlineFilterCommonIUC2LM2_cast(itkLightObject obj) -> itkScanlineFilterCommonIUC2LM2"""
    return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2_cast(obj)

class itkScanlineFilterCommonIUC3LM3(object):
    """


    Helper class for a group of filters which operate on scan-lines.

    This implementation was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
    journal.org/browse/publication/176

    C++ includes: itkScanlineFilterCommon.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScanlineFilterCommonIUC3LM3_Pointer":
        """__New_orig__() -> itkScanlineFilterCommonIUC3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    SameDimension = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3_SameDimension

    def __init__(self, enclosingFilter: 'itkImageToImageFilterIUC3LM3'):
        """
        __init__(itkScanlineFilterCommonIUC3LM3 self, itkImageToImageFilterIUC3LM3 enclosingFilter) -> itkScanlineFilterCommonIUC3LM3



        Helper class for a group of filters which operate on scan-lines.

        This implementation was taken from the Insight Journal
        paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
        journal.org/browse/publication/176

        C++ includes: itkScanlineFilterCommon.h 
        """
        _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3_swiginit(self, _itkLabelImageToLabelMapFilterPython.new_itkScanlineFilterCommonIUC3LM3(enclosingFilter))
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkScanlineFilterCommonIUC3LM3

    def cast(obj: 'itkLightObject') -> "itkScanlineFilterCommonIUC3LM3 *":
        """cast(itkLightObject obj) -> itkScanlineFilterCommonIUC3LM3"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC3LM3

        Create a new object of the class itkScanlineFilterCommonIUC3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC3LM3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC3LM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScanlineFilterCommonIUC3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScanlineFilterCommonIUC3LM3_swigregister = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3_swigregister
itkScanlineFilterCommonIUC3LM3_swigregister(itkScanlineFilterCommonIUC3LM3)

def itkScanlineFilterCommonIUC3LM3___New_orig__() -> "itkScanlineFilterCommonIUC3LM3_Pointer":
    """itkScanlineFilterCommonIUC3LM3___New_orig__() -> itkScanlineFilterCommonIUC3LM3_Pointer"""
    return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3___New_orig__()

def itkScanlineFilterCommonIUC3LM3_cast(obj: 'itkLightObject') -> "itkScanlineFilterCommonIUC3LM3 *":
    """itkScanlineFilterCommonIUC3LM3_cast(itkLightObject obj) -> itkScanlineFilterCommonIUC3LM3"""
    return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3_cast(obj)

class itkScanlineFilterCommonIUS2LM2(object):
    """


    Helper class for a group of filters which operate on scan-lines.

    This implementation was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
    journal.org/browse/publication/176

    C++ includes: itkScanlineFilterCommon.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScanlineFilterCommonIUS2LM2_Pointer":
        """__New_orig__() -> itkScanlineFilterCommonIUS2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    SameDimension = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2_SameDimension

    def __init__(self, enclosingFilter: 'itkImageToImageFilterIUS2LM2'):
        """
        __init__(itkScanlineFilterCommonIUS2LM2 self, itkImageToImageFilterIUS2LM2 enclosingFilter) -> itkScanlineFilterCommonIUS2LM2



        Helper class for a group of filters which operate on scan-lines.

        This implementation was taken from the Insight Journal
        paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
        journal.org/browse/publication/176

        C++ includes: itkScanlineFilterCommon.h 
        """
        _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2_swiginit(self, _itkLabelImageToLabelMapFilterPython.new_itkScanlineFilterCommonIUS2LM2(enclosingFilter))
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkScanlineFilterCommonIUS2LM2

    def cast(obj: 'itkLightObject') -> "itkScanlineFilterCommonIUS2LM2 *":
        """cast(itkLightObject obj) -> itkScanlineFilterCommonIUS2LM2"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS2LM2

        Create a new object of the class itkScanlineFilterCommonIUS2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS2LM2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS2LM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScanlineFilterCommonIUS2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScanlineFilterCommonIUS2LM2_swigregister = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2_swigregister
itkScanlineFilterCommonIUS2LM2_swigregister(itkScanlineFilterCommonIUS2LM2)

def itkScanlineFilterCommonIUS2LM2___New_orig__() -> "itkScanlineFilterCommonIUS2LM2_Pointer":
    """itkScanlineFilterCommonIUS2LM2___New_orig__() -> itkScanlineFilterCommonIUS2LM2_Pointer"""
    return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2___New_orig__()

def itkScanlineFilterCommonIUS2LM2_cast(obj: 'itkLightObject') -> "itkScanlineFilterCommonIUS2LM2 *":
    """itkScanlineFilterCommonIUS2LM2_cast(itkLightObject obj) -> itkScanlineFilterCommonIUS2LM2"""
    return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2_cast(obj)

class itkScanlineFilterCommonIUS3LM3(object):
    """


    Helper class for a group of filters which operate on scan-lines.

    This implementation was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
    journal.org/browse/publication/176

    C++ includes: itkScanlineFilterCommon.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __New_orig__() -> "itkScanlineFilterCommonIUS3LM3_Pointer":
        """__New_orig__() -> itkScanlineFilterCommonIUS3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    SameDimension = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3_SameDimension

    def __init__(self, enclosingFilter: 'itkImageToImageFilterIUS3LM3'):
        """
        __init__(itkScanlineFilterCommonIUS3LM3 self, itkImageToImageFilterIUS3LM3 enclosingFilter) -> itkScanlineFilterCommonIUS3LM3



        Helper class for a group of filters which operate on scan-lines.

        This implementation was taken from the Insight Journal
        paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
        journal.org/browse/publication/176

        C++ includes: itkScanlineFilterCommon.h 
        """
        _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3_swiginit(self, _itkLabelImageToLabelMapFilterPython.new_itkScanlineFilterCommonIUS3LM3(enclosingFilter))
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkScanlineFilterCommonIUS3LM3

    def cast(obj: 'itkLightObject') -> "itkScanlineFilterCommonIUS3LM3 *":
        """cast(itkLightObject obj) -> itkScanlineFilterCommonIUS3LM3"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS3LM3

        Create a new object of the class itkScanlineFilterCommonIUS3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS3LM3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS3LM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScanlineFilterCommonIUS3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScanlineFilterCommonIUS3LM3_swigregister = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3_swigregister
itkScanlineFilterCommonIUS3LM3_swigregister(itkScanlineFilterCommonIUS3LM3)

def itkScanlineFilterCommonIUS3LM3___New_orig__() -> "itkScanlineFilterCommonIUS3LM3_Pointer":
    """itkScanlineFilterCommonIUS3LM3___New_orig__() -> itkScanlineFilterCommonIUS3LM3_Pointer"""
    return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3___New_orig__()

def itkScanlineFilterCommonIUS3LM3_cast(obj: 'itkLightObject') -> "itkScanlineFilterCommonIUS3LM3 *":
    """itkScanlineFilterCommonIUS3LM3_cast(itkLightObject obj) -> itkScanlineFilterCommonIUS3LM3"""
    return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def label_image_to_label_map_filter(*args, **kwargs):
    """Procedural interface for LabelImageToLabelMapFilter"""
    import itk
    instance = itk.LabelImageToLabelMapFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def label_image_to_label_map_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.LabelImageToLabelMapFilter, itkTemplate.itkTemplate):
        filter_object = itk.LabelImageToLabelMapFilter.values()[0]
    else:
        filter_object = itk.LabelImageToLabelMapFilter

    label_image_to_label_map_filter.__doc__ = filter_object.__doc__
    label_image_to_label_map_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    label_image_to_label_map_filter.__doc__ += "Available Keyword Arguments:\n"
    label_image_to_label_map_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



