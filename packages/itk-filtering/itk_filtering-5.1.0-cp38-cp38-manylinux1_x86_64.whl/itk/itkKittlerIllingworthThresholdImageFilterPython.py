# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkKittlerIllingworthThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkKittlerIllingworthThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkKittlerIllingworthThresholdImageFilterPython
            return _itkKittlerIllingworthThresholdImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkKittlerIllingworthThresholdImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkKittlerIllingworthThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkKittlerIllingworthThresholdImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdImageFilterPython
import itkImageToImageFilterAPython
import itkVectorImagePython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import pyBasePython
import stdcomplexPython
import ITKCommonBasePython
import itkVariableLengthVectorPython
import itkImagePython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkPointPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkRGBPixelPython
import itkImageRegionPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkHistogramThresholdCalculatorPython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython
import itkHistogramPython
import itkSamplePython
import itkImageToHistogramFilterPython
import itkImageSinkPython

def itkKittlerIllingworthThresholdImageFilterID3IUS3_New():
  return itkKittlerIllingworthThresholdImageFilterID3IUS3.New()


def itkKittlerIllingworthThresholdImageFilterID2IUS2_New():
  return itkKittlerIllingworthThresholdImageFilterID2IUS2.New()


def itkKittlerIllingworthThresholdImageFilterID3IUC3_New():
  return itkKittlerIllingworthThresholdImageFilterID3IUC3.New()


def itkKittlerIllingworthThresholdImageFilterID2IUC2_New():
  return itkKittlerIllingworthThresholdImageFilterID2IUC2.New()


def itkKittlerIllingworthThresholdImageFilterID3ISS3_New():
  return itkKittlerIllingworthThresholdImageFilterID3ISS3.New()


def itkKittlerIllingworthThresholdImageFilterID2ISS2_New():
  return itkKittlerIllingworthThresholdImageFilterID2ISS2.New()


def itkKittlerIllingworthThresholdImageFilterIF3IUS3_New():
  return itkKittlerIllingworthThresholdImageFilterIF3IUS3.New()


def itkKittlerIllingworthThresholdImageFilterIF2IUS2_New():
  return itkKittlerIllingworthThresholdImageFilterIF2IUS2.New()


def itkKittlerIllingworthThresholdImageFilterIF3IUC3_New():
  return itkKittlerIllingworthThresholdImageFilterIF3IUC3.New()


def itkKittlerIllingworthThresholdImageFilterIF2IUC2_New():
  return itkKittlerIllingworthThresholdImageFilterIF2IUC2.New()


def itkKittlerIllingworthThresholdImageFilterIF3ISS3_New():
  return itkKittlerIllingworthThresholdImageFilterIF3ISS3.New()


def itkKittlerIllingworthThresholdImageFilterIF2ISS2_New():
  return itkKittlerIllingworthThresholdImageFilterIF2ISS2.New()


def itkKittlerIllingworthThresholdImageFilterIUS3IUS3_New():
  return itkKittlerIllingworthThresholdImageFilterIUS3IUS3.New()


def itkKittlerIllingworthThresholdImageFilterIUS2IUS2_New():
  return itkKittlerIllingworthThresholdImageFilterIUS2IUS2.New()


def itkKittlerIllingworthThresholdImageFilterIUS3IUC3_New():
  return itkKittlerIllingworthThresholdImageFilterIUS3IUC3.New()


def itkKittlerIllingworthThresholdImageFilterIUS2IUC2_New():
  return itkKittlerIllingworthThresholdImageFilterIUS2IUC2.New()


def itkKittlerIllingworthThresholdImageFilterIUS3ISS3_New():
  return itkKittlerIllingworthThresholdImageFilterIUS3ISS3.New()


def itkKittlerIllingworthThresholdImageFilterIUS2ISS2_New():
  return itkKittlerIllingworthThresholdImageFilterIUS2ISS2.New()


def itkKittlerIllingworthThresholdImageFilterIUC3IUS3_New():
  return itkKittlerIllingworthThresholdImageFilterIUC3IUS3.New()


def itkKittlerIllingworthThresholdImageFilterIUC2IUS2_New():
  return itkKittlerIllingworthThresholdImageFilterIUC2IUS2.New()


def itkKittlerIllingworthThresholdImageFilterIUC3IUC3_New():
  return itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New()


def itkKittlerIllingworthThresholdImageFilterIUC2IUC2_New():
  return itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New()


def itkKittlerIllingworthThresholdImageFilterIUC3ISS3_New():
  return itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New()


def itkKittlerIllingworthThresholdImageFilterIUC2ISS2_New():
  return itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New()


def itkKittlerIllingworthThresholdImageFilterISS3IUS3_New():
  return itkKittlerIllingworthThresholdImageFilterISS3IUS3.New()


def itkKittlerIllingworthThresholdImageFilterISS2IUS2_New():
  return itkKittlerIllingworthThresholdImageFilterISS2IUS2.New()


def itkKittlerIllingworthThresholdImageFilterISS3IUC3_New():
  return itkKittlerIllingworthThresholdImageFilterISS3IUC3.New()


def itkKittlerIllingworthThresholdImageFilterISS2IUC2_New():
  return itkKittlerIllingworthThresholdImageFilterISS2IUC2.New()


def itkKittlerIllingworthThresholdImageFilterISS3ISS3_New():
  return itkKittlerIllingworthThresholdImageFilterISS3ISS3.New()


def itkKittlerIllingworthThresholdImageFilterISS2ISS2_New():
  return itkKittlerIllingworthThresholdImageFilterISS2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterID2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID2ISS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterID2ISS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterID2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterID2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID2ISS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID2ISS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterID2ISS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_Clone, None, itkKittlerIllingworthThresholdImageFilterID2ISS2)
itkKittlerIllingworthThresholdImageFilterID2ISS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_swigregister
itkKittlerIllingworthThresholdImageFilterID2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterID2ISS2)

def itkKittlerIllingworthThresholdImageFilterID2ISS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID2ISS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterID2ISS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterID2ISS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterID2ISS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID2ISS2 *":
    """itkKittlerIllingworthThresholdImageFilterID2ISS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID2ISS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterID2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID2IUC2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterID2IUC2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterID2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterID2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID2IUC2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID2IUC2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterID2IUC2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_Clone, None, itkKittlerIllingworthThresholdImageFilterID2IUC2)
itkKittlerIllingworthThresholdImageFilterID2IUC2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_swigregister
itkKittlerIllingworthThresholdImageFilterID2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterID2IUC2)

def itkKittlerIllingworthThresholdImageFilterID2IUC2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID2IUC2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterID2IUC2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterID2IUC2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterID2IUC2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID2IUC2 *":
    """itkKittlerIllingworthThresholdImageFilterID2IUC2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID2IUC2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterID2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID2IUS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterID2IUS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterID2IUS2 self) -> itkKittlerIllingworthThresholdImageFilterID2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID2IUS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID2IUS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID2IUS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterID2IUS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_Clone, None, itkKittlerIllingworthThresholdImageFilterID2IUS2)
itkKittlerIllingworthThresholdImageFilterID2IUS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_swigregister
itkKittlerIllingworthThresholdImageFilterID2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterID2IUS2)

def itkKittlerIllingworthThresholdImageFilterID2IUS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID2IUS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterID2IUS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterID2IUS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterID2IUS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID2IUS2 *":
    """itkKittlerIllingworthThresholdImageFilterID2IUS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID2IUS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterID3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID3ISS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterID3ISS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterID3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterID3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID3ISS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID3ISS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterID3ISS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_Clone, None, itkKittlerIllingworthThresholdImageFilterID3ISS3)
itkKittlerIllingworthThresholdImageFilterID3ISS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_swigregister
itkKittlerIllingworthThresholdImageFilterID3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterID3ISS3)

def itkKittlerIllingworthThresholdImageFilterID3ISS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID3ISS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterID3ISS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterID3ISS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterID3ISS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID3ISS3 *":
    """itkKittlerIllingworthThresholdImageFilterID3ISS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID3ISS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterID3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID3IUC3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterID3IUC3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterID3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterID3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID3IUC3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID3IUC3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterID3IUC3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_Clone, None, itkKittlerIllingworthThresholdImageFilterID3IUC3)
itkKittlerIllingworthThresholdImageFilterID3IUC3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_swigregister
itkKittlerIllingworthThresholdImageFilterID3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterID3IUC3)

def itkKittlerIllingworthThresholdImageFilterID3IUC3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID3IUC3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterID3IUC3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterID3IUC3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterID3IUC3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID3IUC3 *":
    """itkKittlerIllingworthThresholdImageFilterID3IUC3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID3IUC3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterID3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID3IUS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterID3IUS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterID3IUS3 self) -> itkKittlerIllingworthThresholdImageFilterID3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID3IUS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID3IUS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID3IUS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterID3IUS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_Clone, None, itkKittlerIllingworthThresholdImageFilterID3IUS3)
itkKittlerIllingworthThresholdImageFilterID3IUS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_swigregister
itkKittlerIllingworthThresholdImageFilterID3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterID3IUS3)

def itkKittlerIllingworthThresholdImageFilterID3IUS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterID3IUS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterID3IUS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterID3IUS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterID3IUS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterID3IUS3 *":
    """itkKittlerIllingworthThresholdImageFilterID3IUS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterID3IUS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIF2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIF2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_Clone, None, itkKittlerIllingworthThresholdImageFilterIF2ISS2)
itkKittlerIllingworthThresholdImageFilterIF2ISS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_swigregister
itkKittlerIllingworthThresholdImageFilterIF2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2ISS2)

def itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2 *":
    """itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF2ISS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIF2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIF2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_Clone, None, itkKittlerIllingworthThresholdImageFilterIF2IUC2)
itkKittlerIllingworthThresholdImageFilterIF2IUC2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_swigregister
itkKittlerIllingworthThresholdImageFilterIF2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2IUC2)

def itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2 *":
    """itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF2IUC2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIF2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF2IUS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIF2IUS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIF2IUS2 self) -> itkKittlerIllingworthThresholdImageFilterIF2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2IUS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF2IUS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF2IUS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIF2IUS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_Clone, None, itkKittlerIllingworthThresholdImageFilterIF2IUS2)
itkKittlerIllingworthThresholdImageFilterIF2IUS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_swigregister
itkKittlerIllingworthThresholdImageFilterIF2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2IUS2)

def itkKittlerIllingworthThresholdImageFilterIF2IUS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF2IUS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIF2IUS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2IUS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIF2IUS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF2IUS2 *":
    """itkKittlerIllingworthThresholdImageFilterIF2IUS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF2IUS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIF3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIF3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_Clone, None, itkKittlerIllingworthThresholdImageFilterIF3ISS3)
itkKittlerIllingworthThresholdImageFilterIF3ISS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_swigregister
itkKittlerIllingworthThresholdImageFilterIF3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3ISS3)

def itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3 *":
    """itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF3ISS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIF3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIF3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_Clone, None, itkKittlerIllingworthThresholdImageFilterIF3IUC3)
itkKittlerIllingworthThresholdImageFilterIF3IUC3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_swigregister
itkKittlerIllingworthThresholdImageFilterIF3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3IUC3)

def itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3 *":
    """itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF3IUC3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIF3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF3IUS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIF3IUS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIF3IUS3 self) -> itkKittlerIllingworthThresholdImageFilterIF3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3IUS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF3IUS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF3IUS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIF3IUS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_Clone, None, itkKittlerIllingworthThresholdImageFilterIF3IUS3)
itkKittlerIllingworthThresholdImageFilterIF3IUS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_swigregister
itkKittlerIllingworthThresholdImageFilterIF3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3IUS3)

def itkKittlerIllingworthThresholdImageFilterIF3IUS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF3IUS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIF3IUS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3IUS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIF3IUS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF3IUS3 *":
    """itkKittlerIllingworthThresholdImageFilterIF3IUS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF3IUS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterISS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterISS2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_Clone, None, itkKittlerIllingworthThresholdImageFilterISS2ISS2)
itkKittlerIllingworthThresholdImageFilterISS2ISS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_swigregister
itkKittlerIllingworthThresholdImageFilterISS2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2ISS2)

def itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2 *":
    """itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS2ISS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterISS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterISS2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_Clone, None, itkKittlerIllingworthThresholdImageFilterISS2IUC2)
itkKittlerIllingworthThresholdImageFilterISS2IUC2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_swigregister
itkKittlerIllingworthThresholdImageFilterISS2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2IUC2)

def itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2 *":
    """itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS2IUC2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterISS2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS2IUS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterISS2IUS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterISS2IUS2 self) -> itkKittlerIllingworthThresholdImageFilterISS2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2IUS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS2IUS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS2IUS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterISS2IUS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_Clone, None, itkKittlerIllingworthThresholdImageFilterISS2IUS2)
itkKittlerIllingworthThresholdImageFilterISS2IUS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_swigregister
itkKittlerIllingworthThresholdImageFilterISS2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2IUS2)

def itkKittlerIllingworthThresholdImageFilterISS2IUS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS2IUS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterISS2IUS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2IUS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterISS2IUS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS2IUS2 *":
    """itkKittlerIllingworthThresholdImageFilterISS2IUS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS2IUS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterISS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterISS3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_Clone, None, itkKittlerIllingworthThresholdImageFilterISS3ISS3)
itkKittlerIllingworthThresholdImageFilterISS3ISS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_swigregister
itkKittlerIllingworthThresholdImageFilterISS3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3ISS3)

def itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3 *":
    """itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS3ISS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterISS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterISS3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_Clone, None, itkKittlerIllingworthThresholdImageFilterISS3IUC3)
itkKittlerIllingworthThresholdImageFilterISS3IUC3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_swigregister
itkKittlerIllingworthThresholdImageFilterISS3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3IUC3)

def itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3 *":
    """itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS3IUC3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterISS3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS3IUS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterISS3IUS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterISS3IUS3 self) -> itkKittlerIllingworthThresholdImageFilterISS3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3IUS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS3IUS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS3IUS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterISS3IUS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_Clone, None, itkKittlerIllingworthThresholdImageFilterISS3IUS3)
itkKittlerIllingworthThresholdImageFilterISS3IUS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_swigregister
itkKittlerIllingworthThresholdImageFilterISS3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3IUS3)

def itkKittlerIllingworthThresholdImageFilterISS3IUS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS3IUS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterISS3IUS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3IUS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterISS3IUS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS3IUS3 *":
    """itkKittlerIllingworthThresholdImageFilterISS3IUS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS3IUS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUC2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUC2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUC2ISS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Clone, None, itkKittlerIllingworthThresholdImageFilterIUC2ISS2)
itkKittlerIllingworthThresholdImageFilterIUC2ISS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_swigregister
itkKittlerIllingworthThresholdImageFilterIUC2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2ISS2)

def itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2 *":
    """itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUC2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUC2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Clone, None, itkKittlerIllingworthThresholdImageFilterIUC2IUC2)
itkKittlerIllingworthThresholdImageFilterIUC2IUC2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_swigregister
itkKittlerIllingworthThresholdImageFilterIUC2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2IUC2)

def itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2 *":
    """itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUC2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUC2IUS2 self) -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2IUS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC2IUS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUC2IUS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Clone, None, itkKittlerIllingworthThresholdImageFilterIUC2IUS2)
itkKittlerIllingworthThresholdImageFilterIUC2IUS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_swigregister
itkKittlerIllingworthThresholdImageFilterIUC2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2IUS2)

def itkKittlerIllingworthThresholdImageFilterIUC2IUS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUC2IUS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUC2IUS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC2IUS2 *":
    """itkKittlerIllingworthThresholdImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUC3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUC3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUC3ISS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Clone, None, itkKittlerIllingworthThresholdImageFilterIUC3ISS3)
itkKittlerIllingworthThresholdImageFilterIUC3ISS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_swigregister
itkKittlerIllingworthThresholdImageFilterIUC3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3ISS3)

def itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3 *":
    """itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUC3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUC3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Clone, None, itkKittlerIllingworthThresholdImageFilterIUC3IUC3)
itkKittlerIllingworthThresholdImageFilterIUC3IUC3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_swigregister
itkKittlerIllingworthThresholdImageFilterIUC3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3IUC3)

def itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3 *":
    """itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUC3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUC3IUS3 self) -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3IUS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC3IUS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUC3IUS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Clone, None, itkKittlerIllingworthThresholdImageFilterIUC3IUS3)
itkKittlerIllingworthThresholdImageFilterIUC3IUS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_swigregister
itkKittlerIllingworthThresholdImageFilterIUC3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3IUS3)

def itkKittlerIllingworthThresholdImageFilterIUC3IUS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUC3IUS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUC3IUS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC3IUS3 *":
    """itkKittlerIllingworthThresholdImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUS2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS2ISS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS2ISS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUS2ISS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Clone, None, itkKittlerIllingworthThresholdImageFilterIUS2ISS2)
itkKittlerIllingworthThresholdImageFilterIUS2ISS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_swigregister
itkKittlerIllingworthThresholdImageFilterIUS2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUS2ISS2)

def itkKittlerIllingworthThresholdImageFilterIUS2ISS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUS2ISS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUS2ISS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS2ISS2 *":
    """itkKittlerIllingworthThresholdImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUS2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS2IUC2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS2IUC2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUS2IUC2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Clone, None, itkKittlerIllingworthThresholdImageFilterIUS2IUC2)
itkKittlerIllingworthThresholdImageFilterIUS2IUC2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_swigregister
itkKittlerIllingworthThresholdImageFilterIUS2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIUS2IUC2)

def itkKittlerIllingworthThresholdImageFilterIUS2IUC2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUS2IUC2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUS2IUC2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS2IUC2 *":
    """itkKittlerIllingworthThresholdImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUS2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUS2IUS2 self) -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUS2IUS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Clone, None, itkKittlerIllingworthThresholdImageFilterIUS2IUS2)
itkKittlerIllingworthThresholdImageFilterIUS2IUS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_swigregister
itkKittlerIllingworthThresholdImageFilterIUS2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUS2IUS2)

def itkKittlerIllingworthThresholdImageFilterIUS2IUS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUS2IUS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS2IUS2 *":
    """itkKittlerIllingworthThresholdImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUS3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS3ISS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS3ISS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUS3ISS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Clone, None, itkKittlerIllingworthThresholdImageFilterIUS3ISS3)
itkKittlerIllingworthThresholdImageFilterIUS3ISS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_swigregister
itkKittlerIllingworthThresholdImageFilterIUS3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUS3ISS3)

def itkKittlerIllingworthThresholdImageFilterIUS3ISS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUS3ISS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUS3ISS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS3ISS3 *":
    """itkKittlerIllingworthThresholdImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUS3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS3IUC3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS3IUC3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUS3IUC3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Clone, None, itkKittlerIllingworthThresholdImageFilterIUS3IUC3)
itkKittlerIllingworthThresholdImageFilterIUS3IUC3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_swigregister
itkKittlerIllingworthThresholdImageFilterIUS3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIUS3IUC3)

def itkKittlerIllingworthThresholdImageFilterIUS3IUC3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUS3IUC3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUS3IUC3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS3IUC3 *":
    """itkKittlerIllingworthThresholdImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUS3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUS3IUS3 self) -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUS3IUS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Clone, None, itkKittlerIllingworthThresholdImageFilterIUS3IUS3)
itkKittlerIllingworthThresholdImageFilterIUS3IUS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_swigregister
itkKittlerIllingworthThresholdImageFilterIUS3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUS3IUS3)

def itkKittlerIllingworthThresholdImageFilterIUS3IUS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUS3IUS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUS3IUS3 *":
    """itkKittlerIllingworthThresholdImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def kittler_illingworth_threshold_image_filter(*args, **kwargs):
    """Procedural interface for KittlerIllingworthThresholdImageFilter"""
    import itk
    instance = itk.KittlerIllingworthThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def kittler_illingworth_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.KittlerIllingworthThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.KittlerIllingworthThresholdImageFilter.values()[0]
    else:
        filter_object = itk.KittlerIllingworthThresholdImageFilter

    kittler_illingworth_threshold_image_filter.__doc__ = filter_object.__doc__
    kittler_illingworth_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    kittler_illingworth_threshold_image_filter.__doc__ += "Available Keyword Arguments:\n"
    kittler_illingworth_threshold_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



