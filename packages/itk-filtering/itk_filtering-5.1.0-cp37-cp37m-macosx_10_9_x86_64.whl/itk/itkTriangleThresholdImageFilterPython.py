# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkTriangleThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkTriangleThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkTriangleThresholdImageFilterPython
            return _itkTriangleThresholdImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkTriangleThresholdImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkTriangleThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkTriangleThresholdImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdImageFilterPython
import itkHistogramThresholdCalculatorPython
import ITKCommonBasePython
import pyBasePython
import itkHistogramPython
import itkSamplePython
import itkVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkArrayPython
import itkSimpleDataObjectDecoratorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkCovariantVectorPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkPointPython
import vnl_matrix_fixedPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRegionPython
import itkImageToImageFilterAPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToHistogramFilterPython
import itkImageSinkPython

def itkTriangleThresholdImageFilterID3IUS3_New():
  return itkTriangleThresholdImageFilterID3IUS3.New()


def itkTriangleThresholdImageFilterID2IUS2_New():
  return itkTriangleThresholdImageFilterID2IUS2.New()


def itkTriangleThresholdImageFilterID3IUC3_New():
  return itkTriangleThresholdImageFilterID3IUC3.New()


def itkTriangleThresholdImageFilterID2IUC2_New():
  return itkTriangleThresholdImageFilterID2IUC2.New()


def itkTriangleThresholdImageFilterID3ISS3_New():
  return itkTriangleThresholdImageFilterID3ISS3.New()


def itkTriangleThresholdImageFilterID2ISS2_New():
  return itkTriangleThresholdImageFilterID2ISS2.New()


def itkTriangleThresholdImageFilterIF3IUS3_New():
  return itkTriangleThresholdImageFilterIF3IUS3.New()


def itkTriangleThresholdImageFilterIF2IUS2_New():
  return itkTriangleThresholdImageFilterIF2IUS2.New()


def itkTriangleThresholdImageFilterIF3IUC3_New():
  return itkTriangleThresholdImageFilterIF3IUC3.New()


def itkTriangleThresholdImageFilterIF2IUC2_New():
  return itkTriangleThresholdImageFilterIF2IUC2.New()


def itkTriangleThresholdImageFilterIF3ISS3_New():
  return itkTriangleThresholdImageFilterIF3ISS3.New()


def itkTriangleThresholdImageFilterIF2ISS2_New():
  return itkTriangleThresholdImageFilterIF2ISS2.New()


def itkTriangleThresholdImageFilterIUS3IUS3_New():
  return itkTriangleThresholdImageFilterIUS3IUS3.New()


def itkTriangleThresholdImageFilterIUS2IUS2_New():
  return itkTriangleThresholdImageFilterIUS2IUS2.New()


def itkTriangleThresholdImageFilterIUS3IUC3_New():
  return itkTriangleThresholdImageFilterIUS3IUC3.New()


def itkTriangleThresholdImageFilterIUS2IUC2_New():
  return itkTriangleThresholdImageFilterIUS2IUC2.New()


def itkTriangleThresholdImageFilterIUS3ISS3_New():
  return itkTriangleThresholdImageFilterIUS3ISS3.New()


def itkTriangleThresholdImageFilterIUS2ISS2_New():
  return itkTriangleThresholdImageFilterIUS2ISS2.New()


def itkTriangleThresholdImageFilterIUC3IUS3_New():
  return itkTriangleThresholdImageFilterIUC3IUS3.New()


def itkTriangleThresholdImageFilterIUC2IUS2_New():
  return itkTriangleThresholdImageFilterIUC2IUS2.New()


def itkTriangleThresholdImageFilterIUC3IUC3_New():
  return itkTriangleThresholdImageFilterIUC3IUC3.New()


def itkTriangleThresholdImageFilterIUC2IUC2_New():
  return itkTriangleThresholdImageFilterIUC2IUC2.New()


def itkTriangleThresholdImageFilterIUC3ISS3_New():
  return itkTriangleThresholdImageFilterIUC3ISS3.New()


def itkTriangleThresholdImageFilterIUC2ISS2_New():
  return itkTriangleThresholdImageFilterIUC2ISS2.New()


def itkTriangleThresholdImageFilterISS3IUS3_New():
  return itkTriangleThresholdImageFilterISS3IUS3.New()


def itkTriangleThresholdImageFilterISS2IUS2_New():
  return itkTriangleThresholdImageFilterISS2IUS2.New()


def itkTriangleThresholdImageFilterISS3IUC3_New():
  return itkTriangleThresholdImageFilterISS3IUC3.New()


def itkTriangleThresholdImageFilterISS2IUC2_New():
  return itkTriangleThresholdImageFilterISS2IUC2.New()


def itkTriangleThresholdImageFilterISS3ISS3_New():
  return itkTriangleThresholdImageFilterISS3ISS3.New()


def itkTriangleThresholdImageFilterISS2ISS2_New():
  return itkTriangleThresholdImageFilterISS2ISS2.New()

class itkTriangleThresholdImageFilterID2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterID2ISS2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterID2ISS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterID2ISS2_Pointer":
        """Clone(itkTriangleThresholdImageFilterID2ISS2 self) -> itkTriangleThresholdImageFilterID2ISS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID2ISS2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID2ISS2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID2ISS2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID2ISS2

        Create a new object of the class itkTriangleThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterID2ISS2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2_Clone, None, itkTriangleThresholdImageFilterID2ISS2)
itkTriangleThresholdImageFilterID2ISS2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2_swigregister
itkTriangleThresholdImageFilterID2ISS2_swigregister(itkTriangleThresholdImageFilterID2ISS2)

def itkTriangleThresholdImageFilterID2ISS2___New_orig__() -> "itkTriangleThresholdImageFilterID2ISS2_Pointer":
    """itkTriangleThresholdImageFilterID2ISS2___New_orig__() -> itkTriangleThresholdImageFilterID2ISS2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2___New_orig__()

def itkTriangleThresholdImageFilterID2ISS2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID2ISS2 *":
    """itkTriangleThresholdImageFilterID2ISS2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID2ISS2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2_cast(obj)

class itkTriangleThresholdImageFilterID2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterID2IUC2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterID2IUC2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterID2IUC2_Pointer":
        """Clone(itkTriangleThresholdImageFilterID2IUC2 self) -> itkTriangleThresholdImageFilterID2IUC2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID2IUC2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID2IUC2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID2IUC2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID2IUC2

        Create a new object of the class itkTriangleThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterID2IUC2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2_Clone, None, itkTriangleThresholdImageFilterID2IUC2)
itkTriangleThresholdImageFilterID2IUC2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2_swigregister
itkTriangleThresholdImageFilterID2IUC2_swigregister(itkTriangleThresholdImageFilterID2IUC2)

def itkTriangleThresholdImageFilterID2IUC2___New_orig__() -> "itkTriangleThresholdImageFilterID2IUC2_Pointer":
    """itkTriangleThresholdImageFilterID2IUC2___New_orig__() -> itkTriangleThresholdImageFilterID2IUC2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2___New_orig__()

def itkTriangleThresholdImageFilterID2IUC2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID2IUC2 *":
    """itkTriangleThresholdImageFilterID2IUC2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID2IUC2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2_cast(obj)

class itkTriangleThresholdImageFilterID2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterID2IUS2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterID2IUS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterID2IUS2_Pointer":
        """Clone(itkTriangleThresholdImageFilterID2IUS2 self) -> itkTriangleThresholdImageFilterID2IUS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID2IUS2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID2IUS2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID2IUS2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID2IUS2

        Create a new object of the class itkTriangleThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterID2IUS2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2_Clone, None, itkTriangleThresholdImageFilterID2IUS2)
itkTriangleThresholdImageFilterID2IUS2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2_swigregister
itkTriangleThresholdImageFilterID2IUS2_swigregister(itkTriangleThresholdImageFilterID2IUS2)

def itkTriangleThresholdImageFilterID2IUS2___New_orig__() -> "itkTriangleThresholdImageFilterID2IUS2_Pointer":
    """itkTriangleThresholdImageFilterID2IUS2___New_orig__() -> itkTriangleThresholdImageFilterID2IUS2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2___New_orig__()

def itkTriangleThresholdImageFilterID2IUS2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID2IUS2 *":
    """itkTriangleThresholdImageFilterID2IUS2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID2IUS2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2_cast(obj)

class itkTriangleThresholdImageFilterID3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterID3ISS3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterID3ISS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterID3ISS3_Pointer":
        """Clone(itkTriangleThresholdImageFilterID3ISS3 self) -> itkTriangleThresholdImageFilterID3ISS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID3ISS3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID3ISS3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID3ISS3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID3ISS3

        Create a new object of the class itkTriangleThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterID3ISS3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3_Clone, None, itkTriangleThresholdImageFilterID3ISS3)
itkTriangleThresholdImageFilterID3ISS3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3_swigregister
itkTriangleThresholdImageFilterID3ISS3_swigregister(itkTriangleThresholdImageFilterID3ISS3)

def itkTriangleThresholdImageFilterID3ISS3___New_orig__() -> "itkTriangleThresholdImageFilterID3ISS3_Pointer":
    """itkTriangleThresholdImageFilterID3ISS3___New_orig__() -> itkTriangleThresholdImageFilterID3ISS3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3___New_orig__()

def itkTriangleThresholdImageFilterID3ISS3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID3ISS3 *":
    """itkTriangleThresholdImageFilterID3ISS3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID3ISS3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3_cast(obj)

class itkTriangleThresholdImageFilterID3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterID3IUC3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterID3IUC3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterID3IUC3_Pointer":
        """Clone(itkTriangleThresholdImageFilterID3IUC3 self) -> itkTriangleThresholdImageFilterID3IUC3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID3IUC3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID3IUC3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID3IUC3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID3IUC3

        Create a new object of the class itkTriangleThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterID3IUC3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3_Clone, None, itkTriangleThresholdImageFilterID3IUC3)
itkTriangleThresholdImageFilterID3IUC3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3_swigregister
itkTriangleThresholdImageFilterID3IUC3_swigregister(itkTriangleThresholdImageFilterID3IUC3)

def itkTriangleThresholdImageFilterID3IUC3___New_orig__() -> "itkTriangleThresholdImageFilterID3IUC3_Pointer":
    """itkTriangleThresholdImageFilterID3IUC3___New_orig__() -> itkTriangleThresholdImageFilterID3IUC3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3___New_orig__()

def itkTriangleThresholdImageFilterID3IUC3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID3IUC3 *":
    """itkTriangleThresholdImageFilterID3IUC3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID3IUC3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3_cast(obj)

class itkTriangleThresholdImageFilterID3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterID3IUS3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterID3IUS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterID3IUS3_Pointer":
        """Clone(itkTriangleThresholdImageFilterID3IUS3 self) -> itkTriangleThresholdImageFilterID3IUS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID3IUS3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID3IUS3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID3IUS3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID3IUS3

        Create a new object of the class itkTriangleThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterID3IUS3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3_Clone, None, itkTriangleThresholdImageFilterID3IUS3)
itkTriangleThresholdImageFilterID3IUS3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3_swigregister
itkTriangleThresholdImageFilterID3IUS3_swigregister(itkTriangleThresholdImageFilterID3IUS3)

def itkTriangleThresholdImageFilterID3IUS3___New_orig__() -> "itkTriangleThresholdImageFilterID3IUS3_Pointer":
    """itkTriangleThresholdImageFilterID3IUS3___New_orig__() -> itkTriangleThresholdImageFilterID3IUS3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3___New_orig__()

def itkTriangleThresholdImageFilterID3IUS3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterID3IUS3 *":
    """itkTriangleThresholdImageFilterID3IUS3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterID3IUS3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3_cast(obj)

class itkTriangleThresholdImageFilterIF2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIF2ISS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIF2ISS2_Pointer":
        """Clone(itkTriangleThresholdImageFilterIF2ISS2 self) -> itkTriangleThresholdImageFilterIF2ISS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF2ISS2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF2ISS2

        Create a new object of the class itkTriangleThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2_Clone, None, itkTriangleThresholdImageFilterIF2ISS2)
itkTriangleThresholdImageFilterIF2ISS2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2_swigregister
itkTriangleThresholdImageFilterIF2ISS2_swigregister(itkTriangleThresholdImageFilterIF2ISS2)

def itkTriangleThresholdImageFilterIF2ISS2___New_orig__() -> "itkTriangleThresholdImageFilterIF2ISS2_Pointer":
    """itkTriangleThresholdImageFilterIF2ISS2___New_orig__() -> itkTriangleThresholdImageFilterIF2ISS2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2___New_orig__()

def itkTriangleThresholdImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF2ISS2 *":
    """itkTriangleThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF2ISS2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2_cast(obj)

class itkTriangleThresholdImageFilterIF2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIF2IUC2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIF2IUC2_Pointer":
        """Clone(itkTriangleThresholdImageFilterIF2IUC2 self) -> itkTriangleThresholdImageFilterIF2IUC2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF2IUC2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF2IUC2

        Create a new object of the class itkTriangleThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2_Clone, None, itkTriangleThresholdImageFilterIF2IUC2)
itkTriangleThresholdImageFilterIF2IUC2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2_swigregister
itkTriangleThresholdImageFilterIF2IUC2_swigregister(itkTriangleThresholdImageFilterIF2IUC2)

def itkTriangleThresholdImageFilterIF2IUC2___New_orig__() -> "itkTriangleThresholdImageFilterIF2IUC2_Pointer":
    """itkTriangleThresholdImageFilterIF2IUC2___New_orig__() -> itkTriangleThresholdImageFilterIF2IUC2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2___New_orig__()

def itkTriangleThresholdImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF2IUC2 *":
    """itkTriangleThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF2IUC2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2_cast(obj)

class itkTriangleThresholdImageFilterIF2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIF2IUS2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIF2IUS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIF2IUS2_Pointer":
        """Clone(itkTriangleThresholdImageFilterIF2IUS2 self) -> itkTriangleThresholdImageFilterIF2IUS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF2IUS2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF2IUS2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF2IUS2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF2IUS2

        Create a new object of the class itkTriangleThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIF2IUS2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2_Clone, None, itkTriangleThresholdImageFilterIF2IUS2)
itkTriangleThresholdImageFilterIF2IUS2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2_swigregister
itkTriangleThresholdImageFilterIF2IUS2_swigregister(itkTriangleThresholdImageFilterIF2IUS2)

def itkTriangleThresholdImageFilterIF2IUS2___New_orig__() -> "itkTriangleThresholdImageFilterIF2IUS2_Pointer":
    """itkTriangleThresholdImageFilterIF2IUS2___New_orig__() -> itkTriangleThresholdImageFilterIF2IUS2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2___New_orig__()

def itkTriangleThresholdImageFilterIF2IUS2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF2IUS2 *":
    """itkTriangleThresholdImageFilterIF2IUS2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF2IUS2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2_cast(obj)

class itkTriangleThresholdImageFilterIF3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIF3ISS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIF3ISS3_Pointer":
        """Clone(itkTriangleThresholdImageFilterIF3ISS3 self) -> itkTriangleThresholdImageFilterIF3ISS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF3ISS3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF3ISS3

        Create a new object of the class itkTriangleThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3_Clone, None, itkTriangleThresholdImageFilterIF3ISS3)
itkTriangleThresholdImageFilterIF3ISS3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3_swigregister
itkTriangleThresholdImageFilterIF3ISS3_swigregister(itkTriangleThresholdImageFilterIF3ISS3)

def itkTriangleThresholdImageFilterIF3ISS3___New_orig__() -> "itkTriangleThresholdImageFilterIF3ISS3_Pointer":
    """itkTriangleThresholdImageFilterIF3ISS3___New_orig__() -> itkTriangleThresholdImageFilterIF3ISS3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3___New_orig__()

def itkTriangleThresholdImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF3ISS3 *":
    """itkTriangleThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF3ISS3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3_cast(obj)

class itkTriangleThresholdImageFilterIF3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIF3IUC3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIF3IUC3_Pointer":
        """Clone(itkTriangleThresholdImageFilterIF3IUC3 self) -> itkTriangleThresholdImageFilterIF3IUC3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF3IUC3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF3IUC3

        Create a new object of the class itkTriangleThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3_Clone, None, itkTriangleThresholdImageFilterIF3IUC3)
itkTriangleThresholdImageFilterIF3IUC3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3_swigregister
itkTriangleThresholdImageFilterIF3IUC3_swigregister(itkTriangleThresholdImageFilterIF3IUC3)

def itkTriangleThresholdImageFilterIF3IUC3___New_orig__() -> "itkTriangleThresholdImageFilterIF3IUC3_Pointer":
    """itkTriangleThresholdImageFilterIF3IUC3___New_orig__() -> itkTriangleThresholdImageFilterIF3IUC3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3___New_orig__()

def itkTriangleThresholdImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF3IUC3 *":
    """itkTriangleThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF3IUC3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3_cast(obj)

class itkTriangleThresholdImageFilterIF3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIF3IUS3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIF3IUS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIF3IUS3_Pointer":
        """Clone(itkTriangleThresholdImageFilterIF3IUS3 self) -> itkTriangleThresholdImageFilterIF3IUS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF3IUS3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF3IUS3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF3IUS3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF3IUS3

        Create a new object of the class itkTriangleThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIF3IUS3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3_Clone, None, itkTriangleThresholdImageFilterIF3IUS3)
itkTriangleThresholdImageFilterIF3IUS3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3_swigregister
itkTriangleThresholdImageFilterIF3IUS3_swigregister(itkTriangleThresholdImageFilterIF3IUS3)

def itkTriangleThresholdImageFilterIF3IUS3___New_orig__() -> "itkTriangleThresholdImageFilterIF3IUS3_Pointer":
    """itkTriangleThresholdImageFilterIF3IUS3___New_orig__() -> itkTriangleThresholdImageFilterIF3IUS3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3___New_orig__()

def itkTriangleThresholdImageFilterIF3IUS3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIF3IUS3 *":
    """itkTriangleThresholdImageFilterIF3IUS3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIF3IUS3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3_cast(obj)

class itkTriangleThresholdImageFilterISS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterISS2ISS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterISS2ISS2_Pointer":
        """Clone(itkTriangleThresholdImageFilterISS2ISS2 self) -> itkTriangleThresholdImageFilterISS2ISS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS2ISS2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS2ISS2

        Create a new object of the class itkTriangleThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2_Clone, None, itkTriangleThresholdImageFilterISS2ISS2)
itkTriangleThresholdImageFilterISS2ISS2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2_swigregister
itkTriangleThresholdImageFilterISS2ISS2_swigregister(itkTriangleThresholdImageFilterISS2ISS2)

def itkTriangleThresholdImageFilterISS2ISS2___New_orig__() -> "itkTriangleThresholdImageFilterISS2ISS2_Pointer":
    """itkTriangleThresholdImageFilterISS2ISS2___New_orig__() -> itkTriangleThresholdImageFilterISS2ISS2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2___New_orig__()

def itkTriangleThresholdImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS2ISS2 *":
    """itkTriangleThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS2ISS2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2_cast(obj)

class itkTriangleThresholdImageFilterISS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterISS2IUC2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterISS2IUC2_Pointer":
        """Clone(itkTriangleThresholdImageFilterISS2IUC2 self) -> itkTriangleThresholdImageFilterISS2IUC2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS2IUC2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS2IUC2

        Create a new object of the class itkTriangleThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2_Clone, None, itkTriangleThresholdImageFilterISS2IUC2)
itkTriangleThresholdImageFilterISS2IUC2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2_swigregister
itkTriangleThresholdImageFilterISS2IUC2_swigregister(itkTriangleThresholdImageFilterISS2IUC2)

def itkTriangleThresholdImageFilterISS2IUC2___New_orig__() -> "itkTriangleThresholdImageFilterISS2IUC2_Pointer":
    """itkTriangleThresholdImageFilterISS2IUC2___New_orig__() -> itkTriangleThresholdImageFilterISS2IUC2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2___New_orig__()

def itkTriangleThresholdImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS2IUC2 *":
    """itkTriangleThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS2IUC2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2_cast(obj)

class itkTriangleThresholdImageFilterISS2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterISS2IUS2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterISS2IUS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterISS2IUS2_Pointer":
        """Clone(itkTriangleThresholdImageFilterISS2IUS2 self) -> itkTriangleThresholdImageFilterISS2IUS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS2IUS2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS2IUS2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS2IUS2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS2IUS2

        Create a new object of the class itkTriangleThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterISS2IUS2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2_Clone, None, itkTriangleThresholdImageFilterISS2IUS2)
itkTriangleThresholdImageFilterISS2IUS2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2_swigregister
itkTriangleThresholdImageFilterISS2IUS2_swigregister(itkTriangleThresholdImageFilterISS2IUS2)

def itkTriangleThresholdImageFilterISS2IUS2___New_orig__() -> "itkTriangleThresholdImageFilterISS2IUS2_Pointer":
    """itkTriangleThresholdImageFilterISS2IUS2___New_orig__() -> itkTriangleThresholdImageFilterISS2IUS2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2___New_orig__()

def itkTriangleThresholdImageFilterISS2IUS2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS2IUS2 *":
    """itkTriangleThresholdImageFilterISS2IUS2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS2IUS2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2_cast(obj)

class itkTriangleThresholdImageFilterISS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterISS3ISS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterISS3ISS3_Pointer":
        """Clone(itkTriangleThresholdImageFilterISS3ISS3 self) -> itkTriangleThresholdImageFilterISS3ISS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS3ISS3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS3ISS3

        Create a new object of the class itkTriangleThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3_Clone, None, itkTriangleThresholdImageFilterISS3ISS3)
itkTriangleThresholdImageFilterISS3ISS3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3_swigregister
itkTriangleThresholdImageFilterISS3ISS3_swigregister(itkTriangleThresholdImageFilterISS3ISS3)

def itkTriangleThresholdImageFilterISS3ISS3___New_orig__() -> "itkTriangleThresholdImageFilterISS3ISS3_Pointer":
    """itkTriangleThresholdImageFilterISS3ISS3___New_orig__() -> itkTriangleThresholdImageFilterISS3ISS3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3___New_orig__()

def itkTriangleThresholdImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS3ISS3 *":
    """itkTriangleThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS3ISS3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3_cast(obj)

class itkTriangleThresholdImageFilterISS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterISS3IUC3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterISS3IUC3_Pointer":
        """Clone(itkTriangleThresholdImageFilterISS3IUC3 self) -> itkTriangleThresholdImageFilterISS3IUC3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS3IUC3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS3IUC3

        Create a new object of the class itkTriangleThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3_Clone, None, itkTriangleThresholdImageFilterISS3IUC3)
itkTriangleThresholdImageFilterISS3IUC3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3_swigregister
itkTriangleThresholdImageFilterISS3IUC3_swigregister(itkTriangleThresholdImageFilterISS3IUC3)

def itkTriangleThresholdImageFilterISS3IUC3___New_orig__() -> "itkTriangleThresholdImageFilterISS3IUC3_Pointer":
    """itkTriangleThresholdImageFilterISS3IUC3___New_orig__() -> itkTriangleThresholdImageFilterISS3IUC3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3___New_orig__()

def itkTriangleThresholdImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS3IUC3 *":
    """itkTriangleThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS3IUC3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3_cast(obj)

class itkTriangleThresholdImageFilterISS3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterISS3IUS3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterISS3IUS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterISS3IUS3_Pointer":
        """Clone(itkTriangleThresholdImageFilterISS3IUS3 self) -> itkTriangleThresholdImageFilterISS3IUS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS3IUS3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS3IUS3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS3IUS3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS3IUS3

        Create a new object of the class itkTriangleThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterISS3IUS3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3_Clone, None, itkTriangleThresholdImageFilterISS3IUS3)
itkTriangleThresholdImageFilterISS3IUS3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3_swigregister
itkTriangleThresholdImageFilterISS3IUS3_swigregister(itkTriangleThresholdImageFilterISS3IUS3)

def itkTriangleThresholdImageFilterISS3IUS3___New_orig__() -> "itkTriangleThresholdImageFilterISS3IUS3_Pointer":
    """itkTriangleThresholdImageFilterISS3IUS3___New_orig__() -> itkTriangleThresholdImageFilterISS3IUS3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3___New_orig__()

def itkTriangleThresholdImageFilterISS3IUS3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterISS3IUS3 *":
    """itkTriangleThresholdImageFilterISS3IUS3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterISS3IUS3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3_cast(obj)

class itkTriangleThresholdImageFilterIUC2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUC2ISS2_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUC2ISS2 self) -> itkTriangleThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC2ISS2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC2ISS2

        Create a new object of the class itkTriangleThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUC2ISS2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2_Clone, None, itkTriangleThresholdImageFilterIUC2ISS2)
itkTriangleThresholdImageFilterIUC2ISS2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2_swigregister
itkTriangleThresholdImageFilterIUC2ISS2_swigregister(itkTriangleThresholdImageFilterIUC2ISS2)

def itkTriangleThresholdImageFilterIUC2ISS2___New_orig__() -> "itkTriangleThresholdImageFilterIUC2ISS2_Pointer":
    """itkTriangleThresholdImageFilterIUC2ISS2___New_orig__() -> itkTriangleThresholdImageFilterIUC2ISS2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2___New_orig__()

def itkTriangleThresholdImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC2ISS2 *":
    """itkTriangleThresholdImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC2ISS2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2_cast(obj)

class itkTriangleThresholdImageFilterIUC2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUC2IUC2_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUC2IUC2 self) -> itkTriangleThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC2IUC2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC2IUC2

        Create a new object of the class itkTriangleThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2_Clone, None, itkTriangleThresholdImageFilterIUC2IUC2)
itkTriangleThresholdImageFilterIUC2IUC2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2_swigregister
itkTriangleThresholdImageFilterIUC2IUC2_swigregister(itkTriangleThresholdImageFilterIUC2IUC2)

def itkTriangleThresholdImageFilterIUC2IUC2___New_orig__() -> "itkTriangleThresholdImageFilterIUC2IUC2_Pointer":
    """itkTriangleThresholdImageFilterIUC2IUC2___New_orig__() -> itkTriangleThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2___New_orig__()

def itkTriangleThresholdImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC2IUC2 *":
    """itkTriangleThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC2IUC2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2_cast(obj)

class itkTriangleThresholdImageFilterIUC2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUC2IUS2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUC2IUS2_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUC2IUS2 self) -> itkTriangleThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC2IUS2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC2IUS2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC2IUS2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC2IUS2

        Create a new object of the class itkTriangleThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUC2IUS2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2_Clone, None, itkTriangleThresholdImageFilterIUC2IUS2)
itkTriangleThresholdImageFilterIUC2IUS2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2_swigregister
itkTriangleThresholdImageFilterIUC2IUS2_swigregister(itkTriangleThresholdImageFilterIUC2IUS2)

def itkTriangleThresholdImageFilterIUC2IUS2___New_orig__() -> "itkTriangleThresholdImageFilterIUC2IUS2_Pointer":
    """itkTriangleThresholdImageFilterIUC2IUS2___New_orig__() -> itkTriangleThresholdImageFilterIUC2IUS2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2___New_orig__()

def itkTriangleThresholdImageFilterIUC2IUS2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC2IUS2 *":
    """itkTriangleThresholdImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC2IUS2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2_cast(obj)

class itkTriangleThresholdImageFilterIUC3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUC3ISS3_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUC3ISS3 self) -> itkTriangleThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC3ISS3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC3ISS3

        Create a new object of the class itkTriangleThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUC3ISS3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3_Clone, None, itkTriangleThresholdImageFilterIUC3ISS3)
itkTriangleThresholdImageFilterIUC3ISS3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3_swigregister
itkTriangleThresholdImageFilterIUC3ISS3_swigregister(itkTriangleThresholdImageFilterIUC3ISS3)

def itkTriangleThresholdImageFilterIUC3ISS3___New_orig__() -> "itkTriangleThresholdImageFilterIUC3ISS3_Pointer":
    """itkTriangleThresholdImageFilterIUC3ISS3___New_orig__() -> itkTriangleThresholdImageFilterIUC3ISS3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3___New_orig__()

def itkTriangleThresholdImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC3ISS3 *":
    """itkTriangleThresholdImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC3ISS3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3_cast(obj)

class itkTriangleThresholdImageFilterIUC3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUC3IUC3_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUC3IUC3 self) -> itkTriangleThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC3IUC3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC3IUC3

        Create a new object of the class itkTriangleThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3_Clone, None, itkTriangleThresholdImageFilterIUC3IUC3)
itkTriangleThresholdImageFilterIUC3IUC3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3_swigregister
itkTriangleThresholdImageFilterIUC3IUC3_swigregister(itkTriangleThresholdImageFilterIUC3IUC3)

def itkTriangleThresholdImageFilterIUC3IUC3___New_orig__() -> "itkTriangleThresholdImageFilterIUC3IUC3_Pointer":
    """itkTriangleThresholdImageFilterIUC3IUC3___New_orig__() -> itkTriangleThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3___New_orig__()

def itkTriangleThresholdImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC3IUC3 *":
    """itkTriangleThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC3IUC3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3_cast(obj)

class itkTriangleThresholdImageFilterIUC3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUC3IUS3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUC3IUS3_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUC3IUS3 self) -> itkTriangleThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC3IUS3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC3IUS3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC3IUS3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC3IUS3

        Create a new object of the class itkTriangleThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUC3IUS3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3_Clone, None, itkTriangleThresholdImageFilterIUC3IUS3)
itkTriangleThresholdImageFilterIUC3IUS3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3_swigregister
itkTriangleThresholdImageFilterIUC3IUS3_swigregister(itkTriangleThresholdImageFilterIUC3IUS3)

def itkTriangleThresholdImageFilterIUC3IUS3___New_orig__() -> "itkTriangleThresholdImageFilterIUC3IUS3_Pointer":
    """itkTriangleThresholdImageFilterIUC3IUS3___New_orig__() -> itkTriangleThresholdImageFilterIUC3IUS3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3___New_orig__()

def itkTriangleThresholdImageFilterIUC3IUS3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUC3IUS3 *":
    """itkTriangleThresholdImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUC3IUS3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3_cast(obj)

class itkTriangleThresholdImageFilterIUS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUS2ISS2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUS2ISS2_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUS2ISS2 self) -> itkTriangleThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS2ISS2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS2ISS2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS2ISS2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS2ISS2

        Create a new object of the class itkTriangleThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUS2ISS2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2_Clone, None, itkTriangleThresholdImageFilterIUS2ISS2)
itkTriangleThresholdImageFilterIUS2ISS2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2_swigregister
itkTriangleThresholdImageFilterIUS2ISS2_swigregister(itkTriangleThresholdImageFilterIUS2ISS2)

def itkTriangleThresholdImageFilterIUS2ISS2___New_orig__() -> "itkTriangleThresholdImageFilterIUS2ISS2_Pointer":
    """itkTriangleThresholdImageFilterIUS2ISS2___New_orig__() -> itkTriangleThresholdImageFilterIUS2ISS2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2___New_orig__()

def itkTriangleThresholdImageFilterIUS2ISS2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS2ISS2 *":
    """itkTriangleThresholdImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS2ISS2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2_cast(obj)

class itkTriangleThresholdImageFilterIUS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUS2IUC2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUS2IUC2_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUS2IUC2 self) -> itkTriangleThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS2IUC2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS2IUC2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS2IUC2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS2IUC2

        Create a new object of the class itkTriangleThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUS2IUC2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2_Clone, None, itkTriangleThresholdImageFilterIUS2IUC2)
itkTriangleThresholdImageFilterIUS2IUC2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2_swigregister
itkTriangleThresholdImageFilterIUS2IUC2_swigregister(itkTriangleThresholdImageFilterIUS2IUC2)

def itkTriangleThresholdImageFilterIUS2IUC2___New_orig__() -> "itkTriangleThresholdImageFilterIUS2IUC2_Pointer":
    """itkTriangleThresholdImageFilterIUS2IUC2___New_orig__() -> itkTriangleThresholdImageFilterIUS2IUC2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2___New_orig__()

def itkTriangleThresholdImageFilterIUS2IUC2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS2IUC2 *":
    """itkTriangleThresholdImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS2IUC2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2_cast(obj)

class itkTriangleThresholdImageFilterIUS2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUS2IUS2_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUS2IUS2 self) -> itkTriangleThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS2IUS2"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS2IUS2

        Create a new object of the class itkTriangleThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUS2IUS2.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2_Clone, None, itkTriangleThresholdImageFilterIUS2IUS2)
itkTriangleThresholdImageFilterIUS2IUS2_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2_swigregister
itkTriangleThresholdImageFilterIUS2IUS2_swigregister(itkTriangleThresholdImageFilterIUS2IUS2)

def itkTriangleThresholdImageFilterIUS2IUS2___New_orig__() -> "itkTriangleThresholdImageFilterIUS2IUS2_Pointer":
    """itkTriangleThresholdImageFilterIUS2IUS2___New_orig__() -> itkTriangleThresholdImageFilterIUS2IUS2_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2___New_orig__()

def itkTriangleThresholdImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS2IUS2 *":
    """itkTriangleThresholdImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS2IUS2"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2_cast(obj)

class itkTriangleThresholdImageFilterIUS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUS3ISS3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUS3ISS3_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUS3ISS3 self) -> itkTriangleThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS3ISS3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS3ISS3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS3ISS3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS3ISS3

        Create a new object of the class itkTriangleThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUS3ISS3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3_Clone, None, itkTriangleThresholdImageFilterIUS3ISS3)
itkTriangleThresholdImageFilterIUS3ISS3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3_swigregister
itkTriangleThresholdImageFilterIUS3ISS3_swigregister(itkTriangleThresholdImageFilterIUS3ISS3)

def itkTriangleThresholdImageFilterIUS3ISS3___New_orig__() -> "itkTriangleThresholdImageFilterIUS3ISS3_Pointer":
    """itkTriangleThresholdImageFilterIUS3ISS3___New_orig__() -> itkTriangleThresholdImageFilterIUS3ISS3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3___New_orig__()

def itkTriangleThresholdImageFilterIUS3ISS3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS3ISS3 *":
    """itkTriangleThresholdImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS3ISS3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3_cast(obj)

class itkTriangleThresholdImageFilterIUS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUS3IUC3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUS3IUC3_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUS3IUC3 self) -> itkTriangleThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS3IUC3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS3IUC3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS3IUC3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS3IUC3

        Create a new object of the class itkTriangleThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUS3IUC3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3_Clone, None, itkTriangleThresholdImageFilterIUS3IUC3)
itkTriangleThresholdImageFilterIUS3IUC3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3_swigregister
itkTriangleThresholdImageFilterIUS3IUC3_swigregister(itkTriangleThresholdImageFilterIUS3IUC3)

def itkTriangleThresholdImageFilterIUS3IUC3___New_orig__() -> "itkTriangleThresholdImageFilterIUS3IUC3_Pointer":
    """itkTriangleThresholdImageFilterIUS3IUC3___New_orig__() -> itkTriangleThresholdImageFilterIUS3IUC3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3___New_orig__()

def itkTriangleThresholdImageFilterIUS3IUC3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS3IUC3 *":
    """itkTriangleThresholdImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS3IUC3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3_cast(obj)

class itkTriangleThresholdImageFilterIUS3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    """


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkTriangleThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkTriangleThresholdImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkTriangleThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkTriangleThresholdImageFilterIUS3IUS3_Pointer":
        """Clone(itkTriangleThresholdImageFilterIUS3IUS3 self) -> itkTriangleThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3_Clone(self)

    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS3IUS3"""
        return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS3IUS3

        Create a new object of the class itkTriangleThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTriangleThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTriangleThresholdImageFilterIUS3IUS3.Clone = new_instancemethod(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3_Clone, None, itkTriangleThresholdImageFilterIUS3IUS3)
itkTriangleThresholdImageFilterIUS3IUS3_swigregister = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3_swigregister
itkTriangleThresholdImageFilterIUS3IUS3_swigregister(itkTriangleThresholdImageFilterIUS3IUS3)

def itkTriangleThresholdImageFilterIUS3IUS3___New_orig__() -> "itkTriangleThresholdImageFilterIUS3IUS3_Pointer":
    """itkTriangleThresholdImageFilterIUS3IUS3___New_orig__() -> itkTriangleThresholdImageFilterIUS3IUS3_Pointer"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3___New_orig__()

def itkTriangleThresholdImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkTriangleThresholdImageFilterIUS3IUS3 *":
    """itkTriangleThresholdImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkTriangleThresholdImageFilterIUS3IUS3"""
    return _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def triangle_threshold_image_filter(*args, **kwargs):
    """Procedural interface for TriangleThresholdImageFilter"""
    import itk
    instance = itk.TriangleThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def triangle_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.TriangleThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.TriangleThresholdImageFilter.values()[0]
    else:
        filter_object = itk.TriangleThresholdImageFilter

    triangle_threshold_image_filter.__doc__ = filter_object.__doc__
    triangle_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    triangle_threshold_image_filter.__doc__ += "Available Keyword Arguments:\n"
    triangle_threshold_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



