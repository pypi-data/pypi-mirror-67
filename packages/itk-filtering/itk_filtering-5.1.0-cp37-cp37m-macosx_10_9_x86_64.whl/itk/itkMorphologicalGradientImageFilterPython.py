# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMorphologicalGradientImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMorphologicalGradientImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMorphologicalGradientImageFilterPython
            return _itkMorphologicalGradientImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMorphologicalGradientImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMorphologicalGradientImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMorphologicalGradientImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkFlatStructuringElementPython
import itkVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkSizePython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkPointPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkIndexPython
import itkOffsetPython
import itkImageRegionPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkBoxImageFilterPython
import itkImageToImageFilterAPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkNeighborhoodPython

def itkMorphologicalGradientImageFilterID3ID3SE3_New():
  return itkMorphologicalGradientImageFilterID3ID3SE3.New()


def itkMorphologicalGradientImageFilterIF3IF3SE3_New():
  return itkMorphologicalGradientImageFilterIF3IF3SE3.New()


def itkMorphologicalGradientImageFilterIUS3IUS3SE3_New():
  return itkMorphologicalGradientImageFilterIUS3IUS3SE3.New()


def itkMorphologicalGradientImageFilterIUC3IUC3SE3_New():
  return itkMorphologicalGradientImageFilterIUC3IUC3SE3.New()


def itkMorphologicalGradientImageFilterISS3ISS3SE3_New():
  return itkMorphologicalGradientImageFilterISS3ISS3SE3.New()


def itkMorphologicalGradientImageFilterID2ID2SE2_New():
  return itkMorphologicalGradientImageFilterID2ID2SE2.New()


def itkMorphologicalGradientImageFilterIF2IF2SE2_New():
  return itkMorphologicalGradientImageFilterIF2IF2SE2.New()


def itkMorphologicalGradientImageFilterIUS2IUS2SE2_New():
  return itkMorphologicalGradientImageFilterIUS2IUS2SE2.New()


def itkMorphologicalGradientImageFilterIUC2IUC2SE2_New():
  return itkMorphologicalGradientImageFilterIUC2IUC2SE2.New()


def itkMorphologicalGradientImageFilterISS2ISS2SE2_New():
  return itkMorphologicalGradientImageFilterISS2ISS2SE2.New()

class itkMorphologicalGradientImageFilterID2ID2SE2(itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    """


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkMorphologicalGradientImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalGradientImageFilterID2ID2SE2_Pointer":
        """__New_orig__() -> itkMorphologicalGradientImageFilterID2ID2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalGradientImageFilterID2ID2SE2_Pointer":
        """Clone(itkMorphologicalGradientImageFilterID2ID2SE2 self) -> itkMorphologicalGradientImageFilterID2ID2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_Clone(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkMorphologicalGradientImageFilterID2ID2SE2 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkMorphologicalGradientImageFilterID2ID2SE2 self) -> int"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_AlgorithmType_VHGW
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterID2ID2SE2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterID2ID2SE2 *":
        """cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterID2ID2SE2"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterID2ID2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterID2ID2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterID2ID2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalGradientImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalGradientImageFilterID2ID2SE2.Clone = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_Clone, None, itkMorphologicalGradientImageFilterID2ID2SE2)
itkMorphologicalGradientImageFilterID2ID2SE2.SetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_SetAlgorithm, None, itkMorphologicalGradientImageFilterID2ID2SE2)
itkMorphologicalGradientImageFilterID2ID2SE2.GetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_GetAlgorithm, None, itkMorphologicalGradientImageFilterID2ID2SE2)
itkMorphologicalGradientImageFilterID2ID2SE2_swigregister = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_swigregister
itkMorphologicalGradientImageFilterID2ID2SE2_swigregister(itkMorphologicalGradientImageFilterID2ID2SE2)

def itkMorphologicalGradientImageFilterID2ID2SE2___New_orig__() -> "itkMorphologicalGradientImageFilterID2ID2SE2_Pointer":
    """itkMorphologicalGradientImageFilterID2ID2SE2___New_orig__() -> itkMorphologicalGradientImageFilterID2ID2SE2_Pointer"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2___New_orig__()

def itkMorphologicalGradientImageFilterID2ID2SE2_cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterID2ID2SE2 *":
    """itkMorphologicalGradientImageFilterID2ID2SE2_cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterID2ID2SE2"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_cast(obj)

class itkMorphologicalGradientImageFilterID3ID3SE3(itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    """


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkMorphologicalGradientImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalGradientImageFilterID3ID3SE3_Pointer":
        """__New_orig__() -> itkMorphologicalGradientImageFilterID3ID3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalGradientImageFilterID3ID3SE3_Pointer":
        """Clone(itkMorphologicalGradientImageFilterID3ID3SE3 self) -> itkMorphologicalGradientImageFilterID3ID3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_Clone(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkMorphologicalGradientImageFilterID3ID3SE3 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkMorphologicalGradientImageFilterID3ID3SE3 self) -> int"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_AlgorithmType_VHGW
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterID3ID3SE3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterID3ID3SE3 *":
        """cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterID3ID3SE3"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterID3ID3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterID3ID3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterID3ID3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalGradientImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalGradientImageFilterID3ID3SE3.Clone = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_Clone, None, itkMorphologicalGradientImageFilterID3ID3SE3)
itkMorphologicalGradientImageFilterID3ID3SE3.SetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_SetAlgorithm, None, itkMorphologicalGradientImageFilterID3ID3SE3)
itkMorphologicalGradientImageFilterID3ID3SE3.GetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_GetAlgorithm, None, itkMorphologicalGradientImageFilterID3ID3SE3)
itkMorphologicalGradientImageFilterID3ID3SE3_swigregister = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_swigregister
itkMorphologicalGradientImageFilterID3ID3SE3_swigregister(itkMorphologicalGradientImageFilterID3ID3SE3)

def itkMorphologicalGradientImageFilterID3ID3SE3___New_orig__() -> "itkMorphologicalGradientImageFilterID3ID3SE3_Pointer":
    """itkMorphologicalGradientImageFilterID3ID3SE3___New_orig__() -> itkMorphologicalGradientImageFilterID3ID3SE3_Pointer"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3___New_orig__()

def itkMorphologicalGradientImageFilterID3ID3SE3_cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterID3ID3SE3 *":
    """itkMorphologicalGradientImageFilterID3ID3SE3_cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterID3ID3SE3"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_cast(obj)

class itkMorphologicalGradientImageFilterIF2IF2SE2(itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    """


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkMorphologicalGradientImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalGradientImageFilterIF2IF2SE2_Pointer":
        """__New_orig__() -> itkMorphologicalGradientImageFilterIF2IF2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalGradientImageFilterIF2IF2SE2_Pointer":
        """Clone(itkMorphologicalGradientImageFilterIF2IF2SE2 self) -> itkMorphologicalGradientImageFilterIF2IF2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_Clone(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkMorphologicalGradientImageFilterIF2IF2SE2 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkMorphologicalGradientImageFilterIF2IF2SE2 self) -> int"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_AlgorithmType_VHGW
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIF2IF2SE2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIF2IF2SE2 *":
        """cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIF2IF2SE2"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIF2IF2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIF2IF2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIF2IF2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalGradientImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalGradientImageFilterIF2IF2SE2.Clone = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_Clone, None, itkMorphologicalGradientImageFilterIF2IF2SE2)
itkMorphologicalGradientImageFilterIF2IF2SE2.SetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_SetAlgorithm, None, itkMorphologicalGradientImageFilterIF2IF2SE2)
itkMorphologicalGradientImageFilterIF2IF2SE2.GetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_GetAlgorithm, None, itkMorphologicalGradientImageFilterIF2IF2SE2)
itkMorphologicalGradientImageFilterIF2IF2SE2_swigregister = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_swigregister
itkMorphologicalGradientImageFilterIF2IF2SE2_swigregister(itkMorphologicalGradientImageFilterIF2IF2SE2)

def itkMorphologicalGradientImageFilterIF2IF2SE2___New_orig__() -> "itkMorphologicalGradientImageFilterIF2IF2SE2_Pointer":
    """itkMorphologicalGradientImageFilterIF2IF2SE2___New_orig__() -> itkMorphologicalGradientImageFilterIF2IF2SE2_Pointer"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2___New_orig__()

def itkMorphologicalGradientImageFilterIF2IF2SE2_cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIF2IF2SE2 *":
    """itkMorphologicalGradientImageFilterIF2IF2SE2_cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIF2IF2SE2"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_cast(obj)

class itkMorphologicalGradientImageFilterIF3IF3SE3(itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    """


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkMorphologicalGradientImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalGradientImageFilterIF3IF3SE3_Pointer":
        """__New_orig__() -> itkMorphologicalGradientImageFilterIF3IF3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalGradientImageFilterIF3IF3SE3_Pointer":
        """Clone(itkMorphologicalGradientImageFilterIF3IF3SE3 self) -> itkMorphologicalGradientImageFilterIF3IF3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_Clone(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkMorphologicalGradientImageFilterIF3IF3SE3 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkMorphologicalGradientImageFilterIF3IF3SE3 self) -> int"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_AlgorithmType_VHGW
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIF3IF3SE3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIF3IF3SE3 *":
        """cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIF3IF3SE3"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIF3IF3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIF3IF3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIF3IF3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalGradientImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalGradientImageFilterIF3IF3SE3.Clone = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_Clone, None, itkMorphologicalGradientImageFilterIF3IF3SE3)
itkMorphologicalGradientImageFilterIF3IF3SE3.SetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_SetAlgorithm, None, itkMorphologicalGradientImageFilterIF3IF3SE3)
itkMorphologicalGradientImageFilterIF3IF3SE3.GetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_GetAlgorithm, None, itkMorphologicalGradientImageFilterIF3IF3SE3)
itkMorphologicalGradientImageFilterIF3IF3SE3_swigregister = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_swigregister
itkMorphologicalGradientImageFilterIF3IF3SE3_swigregister(itkMorphologicalGradientImageFilterIF3IF3SE3)

def itkMorphologicalGradientImageFilterIF3IF3SE3___New_orig__() -> "itkMorphologicalGradientImageFilterIF3IF3SE3_Pointer":
    """itkMorphologicalGradientImageFilterIF3IF3SE3___New_orig__() -> itkMorphologicalGradientImageFilterIF3IF3SE3_Pointer"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3___New_orig__()

def itkMorphologicalGradientImageFilterIF3IF3SE3_cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIF3IF3SE3 *":
    """itkMorphologicalGradientImageFilterIF3IF3SE3_cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIF3IF3SE3"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_cast(obj)

class itkMorphologicalGradientImageFilterISS2ISS2SE2(itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    """


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkMorphologicalGradientImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalGradientImageFilterISS2ISS2SE2_Pointer":
        """__New_orig__() -> itkMorphologicalGradientImageFilterISS2ISS2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalGradientImageFilterISS2ISS2SE2_Pointer":
        """Clone(itkMorphologicalGradientImageFilterISS2ISS2SE2 self) -> itkMorphologicalGradientImageFilterISS2ISS2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_Clone(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkMorphologicalGradientImageFilterISS2ISS2SE2 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkMorphologicalGradientImageFilterISS2ISS2SE2 self) -> int"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_AlgorithmType_VHGW
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterISS2ISS2SE2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterISS2ISS2SE2 *":
        """cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterISS2ISS2SE2"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterISS2ISS2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterISS2ISS2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterISS2ISS2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalGradientImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalGradientImageFilterISS2ISS2SE2.Clone = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_Clone, None, itkMorphologicalGradientImageFilterISS2ISS2SE2)
itkMorphologicalGradientImageFilterISS2ISS2SE2.SetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_SetAlgorithm, None, itkMorphologicalGradientImageFilterISS2ISS2SE2)
itkMorphologicalGradientImageFilterISS2ISS2SE2.GetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_GetAlgorithm, None, itkMorphologicalGradientImageFilterISS2ISS2SE2)
itkMorphologicalGradientImageFilterISS2ISS2SE2_swigregister = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_swigregister
itkMorphologicalGradientImageFilterISS2ISS2SE2_swigregister(itkMorphologicalGradientImageFilterISS2ISS2SE2)

def itkMorphologicalGradientImageFilterISS2ISS2SE2___New_orig__() -> "itkMorphologicalGradientImageFilterISS2ISS2SE2_Pointer":
    """itkMorphologicalGradientImageFilterISS2ISS2SE2___New_orig__() -> itkMorphologicalGradientImageFilterISS2ISS2SE2_Pointer"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2___New_orig__()

def itkMorphologicalGradientImageFilterISS2ISS2SE2_cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterISS2ISS2SE2 *":
    """itkMorphologicalGradientImageFilterISS2ISS2SE2_cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterISS2ISS2SE2"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_cast(obj)

class itkMorphologicalGradientImageFilterISS3ISS3SE3(itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    """


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkMorphologicalGradientImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalGradientImageFilterISS3ISS3SE3_Pointer":
        """__New_orig__() -> itkMorphologicalGradientImageFilterISS3ISS3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalGradientImageFilterISS3ISS3SE3_Pointer":
        """Clone(itkMorphologicalGradientImageFilterISS3ISS3SE3 self) -> itkMorphologicalGradientImageFilterISS3ISS3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_Clone(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkMorphologicalGradientImageFilterISS3ISS3SE3 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkMorphologicalGradientImageFilterISS3ISS3SE3 self) -> int"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_AlgorithmType_VHGW
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterISS3ISS3SE3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterISS3ISS3SE3 *":
        """cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterISS3ISS3SE3"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterISS3ISS3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterISS3ISS3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterISS3ISS3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalGradientImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalGradientImageFilterISS3ISS3SE3.Clone = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_Clone, None, itkMorphologicalGradientImageFilterISS3ISS3SE3)
itkMorphologicalGradientImageFilterISS3ISS3SE3.SetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_SetAlgorithm, None, itkMorphologicalGradientImageFilterISS3ISS3SE3)
itkMorphologicalGradientImageFilterISS3ISS3SE3.GetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_GetAlgorithm, None, itkMorphologicalGradientImageFilterISS3ISS3SE3)
itkMorphologicalGradientImageFilterISS3ISS3SE3_swigregister = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_swigregister
itkMorphologicalGradientImageFilterISS3ISS3SE3_swigregister(itkMorphologicalGradientImageFilterISS3ISS3SE3)

def itkMorphologicalGradientImageFilterISS3ISS3SE3___New_orig__() -> "itkMorphologicalGradientImageFilterISS3ISS3SE3_Pointer":
    """itkMorphologicalGradientImageFilterISS3ISS3SE3___New_orig__() -> itkMorphologicalGradientImageFilterISS3ISS3SE3_Pointer"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3___New_orig__()

def itkMorphologicalGradientImageFilterISS3ISS3SE3_cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterISS3ISS3SE3 *":
    """itkMorphologicalGradientImageFilterISS3ISS3SE3_cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterISS3ISS3SE3"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_cast(obj)

class itkMorphologicalGradientImageFilterIUC2IUC2SE2(itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    """


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkMorphologicalGradientImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalGradientImageFilterIUC2IUC2SE2_Pointer":
        """__New_orig__() -> itkMorphologicalGradientImageFilterIUC2IUC2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalGradientImageFilterIUC2IUC2SE2_Pointer":
        """Clone(itkMorphologicalGradientImageFilterIUC2IUC2SE2 self) -> itkMorphologicalGradientImageFilterIUC2IUC2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_Clone(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkMorphologicalGradientImageFilterIUC2IUC2SE2 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkMorphologicalGradientImageFilterIUC2IUC2SE2 self) -> int"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_AlgorithmType_VHGW
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUC2IUC2SE2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIUC2IUC2SE2 *":
        """cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIUC2IUC2SE2"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUC2IUC2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUC2IUC2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUC2IUC2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalGradientImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalGradientImageFilterIUC2IUC2SE2.Clone = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_Clone, None, itkMorphologicalGradientImageFilterIUC2IUC2SE2)
itkMorphologicalGradientImageFilterIUC2IUC2SE2.SetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_SetAlgorithm, None, itkMorphologicalGradientImageFilterIUC2IUC2SE2)
itkMorphologicalGradientImageFilterIUC2IUC2SE2.GetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_GetAlgorithm, None, itkMorphologicalGradientImageFilterIUC2IUC2SE2)
itkMorphologicalGradientImageFilterIUC2IUC2SE2_swigregister = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_swigregister
itkMorphologicalGradientImageFilterIUC2IUC2SE2_swigregister(itkMorphologicalGradientImageFilterIUC2IUC2SE2)

def itkMorphologicalGradientImageFilterIUC2IUC2SE2___New_orig__() -> "itkMorphologicalGradientImageFilterIUC2IUC2SE2_Pointer":
    """itkMorphologicalGradientImageFilterIUC2IUC2SE2___New_orig__() -> itkMorphologicalGradientImageFilterIUC2IUC2SE2_Pointer"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2___New_orig__()

def itkMorphologicalGradientImageFilterIUC2IUC2SE2_cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIUC2IUC2SE2 *":
    """itkMorphologicalGradientImageFilterIUC2IUC2SE2_cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIUC2IUC2SE2"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_cast(obj)

class itkMorphologicalGradientImageFilterIUC3IUC3SE3(itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    """


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkMorphologicalGradientImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalGradientImageFilterIUC3IUC3SE3_Pointer":
        """__New_orig__() -> itkMorphologicalGradientImageFilterIUC3IUC3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalGradientImageFilterIUC3IUC3SE3_Pointer":
        """Clone(itkMorphologicalGradientImageFilterIUC3IUC3SE3 self) -> itkMorphologicalGradientImageFilterIUC3IUC3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_Clone(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkMorphologicalGradientImageFilterIUC3IUC3SE3 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkMorphologicalGradientImageFilterIUC3IUC3SE3 self) -> int"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_AlgorithmType_VHGW
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUC3IUC3SE3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIUC3IUC3SE3 *":
        """cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIUC3IUC3SE3"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUC3IUC3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUC3IUC3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUC3IUC3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalGradientImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalGradientImageFilterIUC3IUC3SE3.Clone = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_Clone, None, itkMorphologicalGradientImageFilterIUC3IUC3SE3)
itkMorphologicalGradientImageFilterIUC3IUC3SE3.SetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_SetAlgorithm, None, itkMorphologicalGradientImageFilterIUC3IUC3SE3)
itkMorphologicalGradientImageFilterIUC3IUC3SE3.GetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_GetAlgorithm, None, itkMorphologicalGradientImageFilterIUC3IUC3SE3)
itkMorphologicalGradientImageFilterIUC3IUC3SE3_swigregister = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_swigregister
itkMorphologicalGradientImageFilterIUC3IUC3SE3_swigregister(itkMorphologicalGradientImageFilterIUC3IUC3SE3)

def itkMorphologicalGradientImageFilterIUC3IUC3SE3___New_orig__() -> "itkMorphologicalGradientImageFilterIUC3IUC3SE3_Pointer":
    """itkMorphologicalGradientImageFilterIUC3IUC3SE3___New_orig__() -> itkMorphologicalGradientImageFilterIUC3IUC3SE3_Pointer"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3___New_orig__()

def itkMorphologicalGradientImageFilterIUC3IUC3SE3_cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIUC3IUC3SE3 *":
    """itkMorphologicalGradientImageFilterIUC3IUC3SE3_cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIUC3IUC3SE3"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_cast(obj)

class itkMorphologicalGradientImageFilterIUS2IUS2SE2(itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    """


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkMorphologicalGradientImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalGradientImageFilterIUS2IUS2SE2_Pointer":
        """__New_orig__() -> itkMorphologicalGradientImageFilterIUS2IUS2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalGradientImageFilterIUS2IUS2SE2_Pointer":
        """Clone(itkMorphologicalGradientImageFilterIUS2IUS2SE2 self) -> itkMorphologicalGradientImageFilterIUS2IUS2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_Clone(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkMorphologicalGradientImageFilterIUS2IUS2SE2 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkMorphologicalGradientImageFilterIUS2IUS2SE2 self) -> int"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_AlgorithmType_VHGW
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUS2IUS2SE2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIUS2IUS2SE2 *":
        """cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIUS2IUS2SE2"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUS2IUS2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUS2IUS2SE2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUS2IUS2SE2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalGradientImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalGradientImageFilterIUS2IUS2SE2.Clone = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_Clone, None, itkMorphologicalGradientImageFilterIUS2IUS2SE2)
itkMorphologicalGradientImageFilterIUS2IUS2SE2.SetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_SetAlgorithm, None, itkMorphologicalGradientImageFilterIUS2IUS2SE2)
itkMorphologicalGradientImageFilterIUS2IUS2SE2.GetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_GetAlgorithm, None, itkMorphologicalGradientImageFilterIUS2IUS2SE2)
itkMorphologicalGradientImageFilterIUS2IUS2SE2_swigregister = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_swigregister
itkMorphologicalGradientImageFilterIUS2IUS2SE2_swigregister(itkMorphologicalGradientImageFilterIUS2IUS2SE2)

def itkMorphologicalGradientImageFilterIUS2IUS2SE2___New_orig__() -> "itkMorphologicalGradientImageFilterIUS2IUS2SE2_Pointer":
    """itkMorphologicalGradientImageFilterIUS2IUS2SE2___New_orig__() -> itkMorphologicalGradientImageFilterIUS2IUS2SE2_Pointer"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2___New_orig__()

def itkMorphologicalGradientImageFilterIUS2IUS2SE2_cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIUS2IUS2SE2 *":
    """itkMorphologicalGradientImageFilterIUS2IUS2SE2_cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIUS2IUS2SE2"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_cast(obj)

class itkMorphologicalGradientImageFilterIUS3IUS3SE3(itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    """


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter

    C++ includes: itkMorphologicalGradientImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalGradientImageFilterIUS3IUS3SE3_Pointer":
        """__New_orig__() -> itkMorphologicalGradientImageFilterIUS3IUS3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalGradientImageFilterIUS3IUS3SE3_Pointer":
        """Clone(itkMorphologicalGradientImageFilterIUS3IUS3SE3 self) -> itkMorphologicalGradientImageFilterIUS3IUS3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_Clone(self)


    def SetAlgorithm(self, algo: 'int') -> "void":
        """
        SetAlgorithm(itkMorphologicalGradientImageFilterIUS3IUS3SE3 self, int algo)

        Set/Get the backend
        filter class. 
        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_SetAlgorithm(self, algo)


    def GetAlgorithm(self) -> "int":
        """GetAlgorithm(itkMorphologicalGradientImageFilterIUS3IUS3SE3 self) -> int"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_GetAlgorithm(self)

    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_AlgorithmType_BASIC
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_AlgorithmType_HISTO
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_AlgorithmType_ANCHOR
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_AlgorithmType_VHGW
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUS3IUS3SE3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIUS3IUS3SE3 *":
        """cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIUS3IUS3SE3"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUS3IUS3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUS3IUS3SE3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUS3IUS3SE3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalGradientImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalGradientImageFilterIUS3IUS3SE3.Clone = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_Clone, None, itkMorphologicalGradientImageFilterIUS3IUS3SE3)
itkMorphologicalGradientImageFilterIUS3IUS3SE3.SetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_SetAlgorithm, None, itkMorphologicalGradientImageFilterIUS3IUS3SE3)
itkMorphologicalGradientImageFilterIUS3IUS3SE3.GetAlgorithm = new_instancemethod(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_GetAlgorithm, None, itkMorphologicalGradientImageFilterIUS3IUS3SE3)
itkMorphologicalGradientImageFilterIUS3IUS3SE3_swigregister = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_swigregister
itkMorphologicalGradientImageFilterIUS3IUS3SE3_swigregister(itkMorphologicalGradientImageFilterIUS3IUS3SE3)

def itkMorphologicalGradientImageFilterIUS3IUS3SE3___New_orig__() -> "itkMorphologicalGradientImageFilterIUS3IUS3SE3_Pointer":
    """itkMorphologicalGradientImageFilterIUS3IUS3SE3___New_orig__() -> itkMorphologicalGradientImageFilterIUS3IUS3SE3_Pointer"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3___New_orig__()

def itkMorphologicalGradientImageFilterIUS3IUS3SE3_cast(obj: 'itkLightObject') -> "itkMorphologicalGradientImageFilterIUS3IUS3SE3 *":
    """itkMorphologicalGradientImageFilterIUS3IUS3SE3_cast(itkLightObject obj) -> itkMorphologicalGradientImageFilterIUS3IUS3SE3"""
    return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def morphological_gradient_image_filter(*args, **kwargs):
    """Procedural interface for MorphologicalGradientImageFilter"""
    import itk
    instance = itk.MorphologicalGradientImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def morphological_gradient_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MorphologicalGradientImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MorphologicalGradientImageFilter.values()[0]
    else:
        filter_object = itk.MorphologicalGradientImageFilter

    morphological_gradient_image_filter.__doc__ = filter_object.__doc__
    morphological_gradient_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    morphological_gradient_image_filter.__doc__ += "Available Keyword Arguments:\n"
    morphological_gradient_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



