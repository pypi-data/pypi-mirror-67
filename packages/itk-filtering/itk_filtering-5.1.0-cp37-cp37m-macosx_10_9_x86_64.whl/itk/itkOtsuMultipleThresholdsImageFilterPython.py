# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkOtsuMultipleThresholdsImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkOtsuMultipleThresholdsImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkOtsuMultipleThresholdsImageFilterPython
            return _itkOtsuMultipleThresholdsImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkOtsuMultipleThresholdsImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkOtsuMultipleThresholdsImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkOtsuMultipleThresholdsImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageToImageFilterAPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRegionPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython

def itkOtsuMultipleThresholdsImageFilterID3ID3_New():
  return itkOtsuMultipleThresholdsImageFilterID3ID3.New()


def itkOtsuMultipleThresholdsImageFilterID2ID2_New():
  return itkOtsuMultipleThresholdsImageFilterID2ID2.New()


def itkOtsuMultipleThresholdsImageFilterIF3IF3_New():
  return itkOtsuMultipleThresholdsImageFilterIF3IF3.New()


def itkOtsuMultipleThresholdsImageFilterIF2IF2_New():
  return itkOtsuMultipleThresholdsImageFilterIF2IF2.New()


def itkOtsuMultipleThresholdsImageFilterIUS3IUS3_New():
  return itkOtsuMultipleThresholdsImageFilterIUS3IUS3.New()


def itkOtsuMultipleThresholdsImageFilterIUS2IUS2_New():
  return itkOtsuMultipleThresholdsImageFilterIUS2IUS2.New()


def itkOtsuMultipleThresholdsImageFilterIUC3IUC3_New():
  return itkOtsuMultipleThresholdsImageFilterIUC3IUC3.New()


def itkOtsuMultipleThresholdsImageFilterIUC2IUC2_New():
  return itkOtsuMultipleThresholdsImageFilterIUC2IUC2.New()


def itkOtsuMultipleThresholdsImageFilterISS3ISS3_New():
  return itkOtsuMultipleThresholdsImageFilterISS3ISS3.New()


def itkOtsuMultipleThresholdsImageFilterISS2ISS2_New():
  return itkOtsuMultipleThresholdsImageFilterISS2ISS2.New()

class itkOtsuMultipleThresholdsImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    Threshold an image using multiple Otsu Thresholds.

    This filter creates a labeled image that separates the input image
    into various classes. The filter computes the thresholds using the
    OtsuMultipleThresholdsCalculator and applies those thresholds to the
    input image using the ThresholdLabelerImageFilter. The
    NumberOfHistogramBins and NumberOfThresholds can be set for the
    Calculator. The LabelOffset can be set for the
    ThresholdLabelerImageFilter.

    This filter also includes an option to use the valley emphasis
    algorithm from H.F. Ng, "Automatic thresholding for defect
    detection", Pattern Recognition Letters, (27): 1644-1649, 2006. The
    valley emphasis algorithm is particularly effective when the object to
    be thresholded is small. See the following tests for examples:
    itkOtsuMultipleThresholdsImageFilterTest3 and
    itkOtsuMultipleThresholdsImageFilterTest4 To use this algorithm,
    simple call the setter: SetValleyEmphasis(true) It is turned off by
    default.

    See:  ScalarImageToHistogramGenerator

    See:  OtsuMultipleThresholdsCalculator

    See:   ThresholdLabelerImageFilter  \\sphinx
    \\sphinxexample{Filtering/Thresholding/ThresholdAnImageU
    singOtsu,Threshold An Image Using Otsu} \\endsphinx

    C++ includes: itkOtsuMultipleThresholdsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkOtsuMultipleThresholdsImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkOtsuMultipleThresholdsImageFilterID2ID2_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkOtsuMultipleThresholdsImageFilterID2ID2_Pointer":
        """Clone(itkOtsuMultipleThresholdsImageFilterID2ID2 self) -> itkOtsuMultipleThresholdsImageFilterID2ID2_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_Clone(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterID2ID2 self, unsigned long _arg)

        Set/Get
        the number of histogram bins. Default is 128. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long":
        """GetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterID2ID2 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetNumberOfHistogramBins(self)


    def SetNumberOfThresholds(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterID2ID2 self, unsigned long _arg)

        Set/Get the
        number of thresholds. Default is 1. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_SetNumberOfThresholds(self, _arg)


    def GetNumberOfThresholds(self) -> "unsigned long":
        """GetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterID2ID2 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetNumberOfThresholds(self)


    def SetLabelOffset(self, _arg: 'double') -> "void":
        """
        SetLabelOffset(itkOtsuMultipleThresholdsImageFilterID2ID2 self, double _arg)

        Set/Get the offset
        which labels have to start from. Default is 0. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_SetLabelOffset(self, _arg)


    def GetLabelOffset(self) -> "double":
        """GetLabelOffset(itkOtsuMultipleThresholdsImageFilterID2ID2 self) -> double"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetLabelOffset(self)


    def SetValleyEmphasis(self, _arg: 'bool const') -> "void":
        """
        SetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterID2ID2 self, bool const _arg)

        Set/Get the use
        of valley emphasis. Default is false. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_SetValleyEmphasis(self, _arg)


    def GetValleyEmphasis(self) -> "bool const &":
        """GetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterID2ID2 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetValleyEmphasis(self)


    def ValleyEmphasisOn(self) -> "void":
        """ValleyEmphasisOn(itkOtsuMultipleThresholdsImageFilterID2ID2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_ValleyEmphasisOn(self)


    def ValleyEmphasisOff(self) -> "void":
        """ValleyEmphasisOff(itkOtsuMultipleThresholdsImageFilterID2ID2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_ValleyEmphasisOff(self)


    def SetReturnBinMidpoint(self, _arg: 'bool const') -> "void":
        """
        SetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterID2ID2 self, bool const _arg)

        Should the
        threshold value be mid-point of the bin or the maximum? Default is to
        return bin maximum. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_SetReturnBinMidpoint(self, _arg)


    def GetReturnBinMidpoint(self) -> "bool const &":
        """GetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterID2ID2 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetReturnBinMidpoint(self)


    def ReturnBinMidpointOn(self) -> "void":
        """ReturnBinMidpointOn(itkOtsuMultipleThresholdsImageFilterID2ID2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_ReturnBinMidpointOn(self)


    def ReturnBinMidpointOff(self) -> "void":
        """ReturnBinMidpointOff(itkOtsuMultipleThresholdsImageFilterID2ID2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_ReturnBinMidpointOff(self)


    def GetThresholds(self) -> "std::vector< double,std::allocator< double > > const &":
        """
        GetThresholds(itkOtsuMultipleThresholdsImageFilterID2ID2 self) -> vectorD

        Get the computed
        threshold. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetThresholds(self)

    OutputComparableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_OutputComparableCheck
    OutputOStreamWritableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkOtsuMultipleThresholdsImageFilterPython.delete_itkOtsuMultipleThresholdsImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterID2ID2"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkOtsuMultipleThresholdsImageFilterID2ID2

        Create a new object of the class itkOtsuMultipleThresholdsImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuMultipleThresholdsImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuMultipleThresholdsImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuMultipleThresholdsImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuMultipleThresholdsImageFilterID2ID2.Clone = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_Clone, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.SetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_SetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.GetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.SetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_SetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.GetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.SetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_SetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.GetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.SetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_SetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.GetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.ValleyEmphasisOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_ValleyEmphasisOn, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.ValleyEmphasisOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_ValleyEmphasisOff, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.SetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_SetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.GetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.ReturnBinMidpointOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_ReturnBinMidpointOn, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.ReturnBinMidpointOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_ReturnBinMidpointOff, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2.GetThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_GetThresholds, None, itkOtsuMultipleThresholdsImageFilterID2ID2)
itkOtsuMultipleThresholdsImageFilterID2ID2_swigregister = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_swigregister
itkOtsuMultipleThresholdsImageFilterID2ID2_swigregister(itkOtsuMultipleThresholdsImageFilterID2ID2)

def itkOtsuMultipleThresholdsImageFilterID2ID2___New_orig__() -> "itkOtsuMultipleThresholdsImageFilterID2ID2_Pointer":
    """itkOtsuMultipleThresholdsImageFilterID2ID2___New_orig__() -> itkOtsuMultipleThresholdsImageFilterID2ID2_Pointer"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2___New_orig__()

def itkOtsuMultipleThresholdsImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterID2ID2 *":
    """itkOtsuMultipleThresholdsImageFilterID2ID2_cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterID2ID2"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID2ID2_cast(obj)

class itkOtsuMultipleThresholdsImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    Threshold an image using multiple Otsu Thresholds.

    This filter creates a labeled image that separates the input image
    into various classes. The filter computes the thresholds using the
    OtsuMultipleThresholdsCalculator and applies those thresholds to the
    input image using the ThresholdLabelerImageFilter. The
    NumberOfHistogramBins and NumberOfThresholds can be set for the
    Calculator. The LabelOffset can be set for the
    ThresholdLabelerImageFilter.

    This filter also includes an option to use the valley emphasis
    algorithm from H.F. Ng, "Automatic thresholding for defect
    detection", Pattern Recognition Letters, (27): 1644-1649, 2006. The
    valley emphasis algorithm is particularly effective when the object to
    be thresholded is small. See the following tests for examples:
    itkOtsuMultipleThresholdsImageFilterTest3 and
    itkOtsuMultipleThresholdsImageFilterTest4 To use this algorithm,
    simple call the setter: SetValleyEmphasis(true) It is turned off by
    default.

    See:  ScalarImageToHistogramGenerator

    See:  OtsuMultipleThresholdsCalculator

    See:   ThresholdLabelerImageFilter  \\sphinx
    \\sphinxexample{Filtering/Thresholding/ThresholdAnImageU
    singOtsu,Threshold An Image Using Otsu} \\endsphinx

    C++ includes: itkOtsuMultipleThresholdsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkOtsuMultipleThresholdsImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkOtsuMultipleThresholdsImageFilterID3ID3_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkOtsuMultipleThresholdsImageFilterID3ID3_Pointer":
        """Clone(itkOtsuMultipleThresholdsImageFilterID3ID3 self) -> itkOtsuMultipleThresholdsImageFilterID3ID3_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_Clone(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterID3ID3 self, unsigned long _arg)

        Set/Get
        the number of histogram bins. Default is 128. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long":
        """GetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterID3ID3 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetNumberOfHistogramBins(self)


    def SetNumberOfThresholds(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterID3ID3 self, unsigned long _arg)

        Set/Get the
        number of thresholds. Default is 1. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_SetNumberOfThresholds(self, _arg)


    def GetNumberOfThresholds(self) -> "unsigned long":
        """GetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterID3ID3 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetNumberOfThresholds(self)


    def SetLabelOffset(self, _arg: 'double') -> "void":
        """
        SetLabelOffset(itkOtsuMultipleThresholdsImageFilterID3ID3 self, double _arg)

        Set/Get the offset
        which labels have to start from. Default is 0. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_SetLabelOffset(self, _arg)


    def GetLabelOffset(self) -> "double":
        """GetLabelOffset(itkOtsuMultipleThresholdsImageFilterID3ID3 self) -> double"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetLabelOffset(self)


    def SetValleyEmphasis(self, _arg: 'bool const') -> "void":
        """
        SetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterID3ID3 self, bool const _arg)

        Set/Get the use
        of valley emphasis. Default is false. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_SetValleyEmphasis(self, _arg)


    def GetValleyEmphasis(self) -> "bool const &":
        """GetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterID3ID3 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetValleyEmphasis(self)


    def ValleyEmphasisOn(self) -> "void":
        """ValleyEmphasisOn(itkOtsuMultipleThresholdsImageFilterID3ID3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_ValleyEmphasisOn(self)


    def ValleyEmphasisOff(self) -> "void":
        """ValleyEmphasisOff(itkOtsuMultipleThresholdsImageFilterID3ID3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_ValleyEmphasisOff(self)


    def SetReturnBinMidpoint(self, _arg: 'bool const') -> "void":
        """
        SetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterID3ID3 self, bool const _arg)

        Should the
        threshold value be mid-point of the bin or the maximum? Default is to
        return bin maximum. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_SetReturnBinMidpoint(self, _arg)


    def GetReturnBinMidpoint(self) -> "bool const &":
        """GetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterID3ID3 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetReturnBinMidpoint(self)


    def ReturnBinMidpointOn(self) -> "void":
        """ReturnBinMidpointOn(itkOtsuMultipleThresholdsImageFilterID3ID3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_ReturnBinMidpointOn(self)


    def ReturnBinMidpointOff(self) -> "void":
        """ReturnBinMidpointOff(itkOtsuMultipleThresholdsImageFilterID3ID3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_ReturnBinMidpointOff(self)


    def GetThresholds(self) -> "std::vector< double,std::allocator< double > > const &":
        """
        GetThresholds(itkOtsuMultipleThresholdsImageFilterID3ID3 self) -> vectorD

        Get the computed
        threshold. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetThresholds(self)

    OutputComparableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_OutputComparableCheck
    OutputOStreamWritableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkOtsuMultipleThresholdsImageFilterPython.delete_itkOtsuMultipleThresholdsImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterID3ID3"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkOtsuMultipleThresholdsImageFilterID3ID3

        Create a new object of the class itkOtsuMultipleThresholdsImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuMultipleThresholdsImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuMultipleThresholdsImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuMultipleThresholdsImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuMultipleThresholdsImageFilterID3ID3.Clone = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_Clone, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.SetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_SetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.GetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.SetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_SetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.GetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.SetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_SetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.GetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.SetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_SetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.GetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.ValleyEmphasisOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_ValleyEmphasisOn, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.ValleyEmphasisOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_ValleyEmphasisOff, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.SetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_SetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.GetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.ReturnBinMidpointOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_ReturnBinMidpointOn, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.ReturnBinMidpointOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_ReturnBinMidpointOff, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3.GetThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_GetThresholds, None, itkOtsuMultipleThresholdsImageFilterID3ID3)
itkOtsuMultipleThresholdsImageFilterID3ID3_swigregister = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_swigregister
itkOtsuMultipleThresholdsImageFilterID3ID3_swigregister(itkOtsuMultipleThresholdsImageFilterID3ID3)

def itkOtsuMultipleThresholdsImageFilterID3ID3___New_orig__() -> "itkOtsuMultipleThresholdsImageFilterID3ID3_Pointer":
    """itkOtsuMultipleThresholdsImageFilterID3ID3___New_orig__() -> itkOtsuMultipleThresholdsImageFilterID3ID3_Pointer"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3___New_orig__()

def itkOtsuMultipleThresholdsImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterID3ID3 *":
    """itkOtsuMultipleThresholdsImageFilterID3ID3_cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterID3ID3"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterID3ID3_cast(obj)

class itkOtsuMultipleThresholdsImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Threshold an image using multiple Otsu Thresholds.

    This filter creates a labeled image that separates the input image
    into various classes. The filter computes the thresholds using the
    OtsuMultipleThresholdsCalculator and applies those thresholds to the
    input image using the ThresholdLabelerImageFilter. The
    NumberOfHistogramBins and NumberOfThresholds can be set for the
    Calculator. The LabelOffset can be set for the
    ThresholdLabelerImageFilter.

    This filter also includes an option to use the valley emphasis
    algorithm from H.F. Ng, "Automatic thresholding for defect
    detection", Pattern Recognition Letters, (27): 1644-1649, 2006. The
    valley emphasis algorithm is particularly effective when the object to
    be thresholded is small. See the following tests for examples:
    itkOtsuMultipleThresholdsImageFilterTest3 and
    itkOtsuMultipleThresholdsImageFilterTest4 To use this algorithm,
    simple call the setter: SetValleyEmphasis(true) It is turned off by
    default.

    See:  ScalarImageToHistogramGenerator

    See:  OtsuMultipleThresholdsCalculator

    See:   ThresholdLabelerImageFilter  \\sphinx
    \\sphinxexample{Filtering/Thresholding/ThresholdAnImageU
    singOtsu,Threshold An Image Using Otsu} \\endsphinx

    C++ includes: itkOtsuMultipleThresholdsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkOtsuMultipleThresholdsImageFilterIF2IF2_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkOtsuMultipleThresholdsImageFilterIF2IF2_Pointer":
        """Clone(itkOtsuMultipleThresholdsImageFilterIF2IF2 self) -> itkOtsuMultipleThresholdsImageFilterIF2IF2_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_Clone(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIF2IF2 self, unsigned long _arg)

        Set/Get
        the number of histogram bins. Default is 128. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long":
        """GetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIF2IF2 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetNumberOfHistogramBins(self)


    def SetNumberOfThresholds(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIF2IF2 self, unsigned long _arg)

        Set/Get the
        number of thresholds. Default is 1. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_SetNumberOfThresholds(self, _arg)


    def GetNumberOfThresholds(self) -> "unsigned long":
        """GetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIF2IF2 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetNumberOfThresholds(self)


    def SetLabelOffset(self, _arg: 'float') -> "void":
        """
        SetLabelOffset(itkOtsuMultipleThresholdsImageFilterIF2IF2 self, float _arg)

        Set/Get the offset
        which labels have to start from. Default is 0. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_SetLabelOffset(self, _arg)


    def GetLabelOffset(self) -> "float":
        """GetLabelOffset(itkOtsuMultipleThresholdsImageFilterIF2IF2 self) -> float"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetLabelOffset(self)


    def SetValleyEmphasis(self, _arg: 'bool const') -> "void":
        """
        SetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIF2IF2 self, bool const _arg)

        Set/Get the use
        of valley emphasis. Default is false. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_SetValleyEmphasis(self, _arg)


    def GetValleyEmphasis(self) -> "bool const &":
        """GetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIF2IF2 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetValleyEmphasis(self)


    def ValleyEmphasisOn(self) -> "void":
        """ValleyEmphasisOn(itkOtsuMultipleThresholdsImageFilterIF2IF2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_ValleyEmphasisOn(self)


    def ValleyEmphasisOff(self) -> "void":
        """ValleyEmphasisOff(itkOtsuMultipleThresholdsImageFilterIF2IF2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_ValleyEmphasisOff(self)


    def SetReturnBinMidpoint(self, _arg: 'bool const') -> "void":
        """
        SetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIF2IF2 self, bool const _arg)

        Should the
        threshold value be mid-point of the bin or the maximum? Default is to
        return bin maximum. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_SetReturnBinMidpoint(self, _arg)


    def GetReturnBinMidpoint(self) -> "bool const &":
        """GetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIF2IF2 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetReturnBinMidpoint(self)


    def ReturnBinMidpointOn(self) -> "void":
        """ReturnBinMidpointOn(itkOtsuMultipleThresholdsImageFilterIF2IF2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_ReturnBinMidpointOn(self)


    def ReturnBinMidpointOff(self) -> "void":
        """ReturnBinMidpointOff(itkOtsuMultipleThresholdsImageFilterIF2IF2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_ReturnBinMidpointOff(self)


    def GetThresholds(self) -> "std::vector< double,std::allocator< double > > const &":
        """
        GetThresholds(itkOtsuMultipleThresholdsImageFilterIF2IF2 self) -> vectorD

        Get the computed
        threshold. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetThresholds(self)

    OutputComparableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_OutputComparableCheck
    OutputOStreamWritableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkOtsuMultipleThresholdsImageFilterPython.delete_itkOtsuMultipleThresholdsImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIF2IF2"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkOtsuMultipleThresholdsImageFilterIF2IF2

        Create a new object of the class itkOtsuMultipleThresholdsImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuMultipleThresholdsImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuMultipleThresholdsImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuMultipleThresholdsImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuMultipleThresholdsImageFilterIF2IF2.Clone = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_Clone, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.SetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_SetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.GetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.SetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_SetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.GetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.SetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_SetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.GetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.SetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_SetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.GetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.ValleyEmphasisOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_ValleyEmphasisOn, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.ValleyEmphasisOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_ValleyEmphasisOff, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.SetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_SetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.GetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.ReturnBinMidpointOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_ReturnBinMidpointOn, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.ReturnBinMidpointOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_ReturnBinMidpointOff, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2.GetThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_GetThresholds, None, itkOtsuMultipleThresholdsImageFilterIF2IF2)
itkOtsuMultipleThresholdsImageFilterIF2IF2_swigregister = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_swigregister
itkOtsuMultipleThresholdsImageFilterIF2IF2_swigregister(itkOtsuMultipleThresholdsImageFilterIF2IF2)

def itkOtsuMultipleThresholdsImageFilterIF2IF2___New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIF2IF2_Pointer":
    """itkOtsuMultipleThresholdsImageFilterIF2IF2___New_orig__() -> itkOtsuMultipleThresholdsImageFilterIF2IF2_Pointer"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2___New_orig__()

def itkOtsuMultipleThresholdsImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIF2IF2 *":
    """itkOtsuMultipleThresholdsImageFilterIF2IF2_cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIF2IF2"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF2IF2_cast(obj)

class itkOtsuMultipleThresholdsImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Threshold an image using multiple Otsu Thresholds.

    This filter creates a labeled image that separates the input image
    into various classes. The filter computes the thresholds using the
    OtsuMultipleThresholdsCalculator and applies those thresholds to the
    input image using the ThresholdLabelerImageFilter. The
    NumberOfHistogramBins and NumberOfThresholds can be set for the
    Calculator. The LabelOffset can be set for the
    ThresholdLabelerImageFilter.

    This filter also includes an option to use the valley emphasis
    algorithm from H.F. Ng, "Automatic thresholding for defect
    detection", Pattern Recognition Letters, (27): 1644-1649, 2006. The
    valley emphasis algorithm is particularly effective when the object to
    be thresholded is small. See the following tests for examples:
    itkOtsuMultipleThresholdsImageFilterTest3 and
    itkOtsuMultipleThresholdsImageFilterTest4 To use this algorithm,
    simple call the setter: SetValleyEmphasis(true) It is turned off by
    default.

    See:  ScalarImageToHistogramGenerator

    See:  OtsuMultipleThresholdsCalculator

    See:   ThresholdLabelerImageFilter  \\sphinx
    \\sphinxexample{Filtering/Thresholding/ThresholdAnImageU
    singOtsu,Threshold An Image Using Otsu} \\endsphinx

    C++ includes: itkOtsuMultipleThresholdsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkOtsuMultipleThresholdsImageFilterIF3IF3_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkOtsuMultipleThresholdsImageFilterIF3IF3_Pointer":
        """Clone(itkOtsuMultipleThresholdsImageFilterIF3IF3 self) -> itkOtsuMultipleThresholdsImageFilterIF3IF3_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_Clone(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIF3IF3 self, unsigned long _arg)

        Set/Get
        the number of histogram bins. Default is 128. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long":
        """GetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIF3IF3 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetNumberOfHistogramBins(self)


    def SetNumberOfThresholds(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIF3IF3 self, unsigned long _arg)

        Set/Get the
        number of thresholds. Default is 1. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_SetNumberOfThresholds(self, _arg)


    def GetNumberOfThresholds(self) -> "unsigned long":
        """GetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIF3IF3 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetNumberOfThresholds(self)


    def SetLabelOffset(self, _arg: 'float') -> "void":
        """
        SetLabelOffset(itkOtsuMultipleThresholdsImageFilterIF3IF3 self, float _arg)

        Set/Get the offset
        which labels have to start from. Default is 0. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_SetLabelOffset(self, _arg)


    def GetLabelOffset(self) -> "float":
        """GetLabelOffset(itkOtsuMultipleThresholdsImageFilterIF3IF3 self) -> float"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetLabelOffset(self)


    def SetValleyEmphasis(self, _arg: 'bool const') -> "void":
        """
        SetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIF3IF3 self, bool const _arg)

        Set/Get the use
        of valley emphasis. Default is false. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_SetValleyEmphasis(self, _arg)


    def GetValleyEmphasis(self) -> "bool const &":
        """GetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIF3IF3 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetValleyEmphasis(self)


    def ValleyEmphasisOn(self) -> "void":
        """ValleyEmphasisOn(itkOtsuMultipleThresholdsImageFilterIF3IF3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_ValleyEmphasisOn(self)


    def ValleyEmphasisOff(self) -> "void":
        """ValleyEmphasisOff(itkOtsuMultipleThresholdsImageFilterIF3IF3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_ValleyEmphasisOff(self)


    def SetReturnBinMidpoint(self, _arg: 'bool const') -> "void":
        """
        SetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIF3IF3 self, bool const _arg)

        Should the
        threshold value be mid-point of the bin or the maximum? Default is to
        return bin maximum. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_SetReturnBinMidpoint(self, _arg)


    def GetReturnBinMidpoint(self) -> "bool const &":
        """GetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIF3IF3 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetReturnBinMidpoint(self)


    def ReturnBinMidpointOn(self) -> "void":
        """ReturnBinMidpointOn(itkOtsuMultipleThresholdsImageFilterIF3IF3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_ReturnBinMidpointOn(self)


    def ReturnBinMidpointOff(self) -> "void":
        """ReturnBinMidpointOff(itkOtsuMultipleThresholdsImageFilterIF3IF3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_ReturnBinMidpointOff(self)


    def GetThresholds(self) -> "std::vector< double,std::allocator< double > > const &":
        """
        GetThresholds(itkOtsuMultipleThresholdsImageFilterIF3IF3 self) -> vectorD

        Get the computed
        threshold. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetThresholds(self)

    OutputComparableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_OutputComparableCheck
    OutputOStreamWritableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkOtsuMultipleThresholdsImageFilterPython.delete_itkOtsuMultipleThresholdsImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIF3IF3"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkOtsuMultipleThresholdsImageFilterIF3IF3

        Create a new object of the class itkOtsuMultipleThresholdsImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuMultipleThresholdsImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuMultipleThresholdsImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuMultipleThresholdsImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuMultipleThresholdsImageFilterIF3IF3.Clone = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_Clone, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.SetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_SetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.GetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.SetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_SetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.GetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.SetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_SetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.GetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.SetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_SetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.GetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.ValleyEmphasisOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_ValleyEmphasisOn, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.ValleyEmphasisOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_ValleyEmphasisOff, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.SetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_SetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.GetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.ReturnBinMidpointOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_ReturnBinMidpointOn, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.ReturnBinMidpointOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_ReturnBinMidpointOff, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3.GetThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_GetThresholds, None, itkOtsuMultipleThresholdsImageFilterIF3IF3)
itkOtsuMultipleThresholdsImageFilterIF3IF3_swigregister = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_swigregister
itkOtsuMultipleThresholdsImageFilterIF3IF3_swigregister(itkOtsuMultipleThresholdsImageFilterIF3IF3)

def itkOtsuMultipleThresholdsImageFilterIF3IF3___New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIF3IF3_Pointer":
    """itkOtsuMultipleThresholdsImageFilterIF3IF3___New_orig__() -> itkOtsuMultipleThresholdsImageFilterIF3IF3_Pointer"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3___New_orig__()

def itkOtsuMultipleThresholdsImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIF3IF3 *":
    """itkOtsuMultipleThresholdsImageFilterIF3IF3_cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIF3IF3"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIF3IF3_cast(obj)

class itkOtsuMultipleThresholdsImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Threshold an image using multiple Otsu Thresholds.

    This filter creates a labeled image that separates the input image
    into various classes. The filter computes the thresholds using the
    OtsuMultipleThresholdsCalculator and applies those thresholds to the
    input image using the ThresholdLabelerImageFilter. The
    NumberOfHistogramBins and NumberOfThresholds can be set for the
    Calculator. The LabelOffset can be set for the
    ThresholdLabelerImageFilter.

    This filter also includes an option to use the valley emphasis
    algorithm from H.F. Ng, "Automatic thresholding for defect
    detection", Pattern Recognition Letters, (27): 1644-1649, 2006. The
    valley emphasis algorithm is particularly effective when the object to
    be thresholded is small. See the following tests for examples:
    itkOtsuMultipleThresholdsImageFilterTest3 and
    itkOtsuMultipleThresholdsImageFilterTest4 To use this algorithm,
    simple call the setter: SetValleyEmphasis(true) It is turned off by
    default.

    See:  ScalarImageToHistogramGenerator

    See:  OtsuMultipleThresholdsCalculator

    See:   ThresholdLabelerImageFilter  \\sphinx
    \\sphinxexample{Filtering/Thresholding/ThresholdAnImageU
    singOtsu,Threshold An Image Using Otsu} \\endsphinx

    C++ includes: itkOtsuMultipleThresholdsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkOtsuMultipleThresholdsImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkOtsuMultipleThresholdsImageFilterISS2ISS2_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkOtsuMultipleThresholdsImageFilterISS2ISS2_Pointer":
        """Clone(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self) -> itkOtsuMultipleThresholdsImageFilterISS2ISS2_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_Clone(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self, unsigned long _arg)

        Set/Get
        the number of histogram bins. Default is 128. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long":
        """GetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetNumberOfHistogramBins(self)


    def SetNumberOfThresholds(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self, unsigned long _arg)

        Set/Get the
        number of thresholds. Default is 1. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_SetNumberOfThresholds(self, _arg)


    def GetNumberOfThresholds(self) -> "unsigned long":
        """GetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetNumberOfThresholds(self)


    def SetLabelOffset(self, _arg: 'short') -> "void":
        """
        SetLabelOffset(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self, short _arg)

        Set/Get the offset
        which labels have to start from. Default is 0. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_SetLabelOffset(self, _arg)


    def GetLabelOffset(self) -> "short":
        """GetLabelOffset(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self) -> short"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetLabelOffset(self)


    def SetValleyEmphasis(self, _arg: 'bool const') -> "void":
        """
        SetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self, bool const _arg)

        Set/Get the use
        of valley emphasis. Default is false. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_SetValleyEmphasis(self, _arg)


    def GetValleyEmphasis(self) -> "bool const &":
        """GetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetValleyEmphasis(self)


    def ValleyEmphasisOn(self) -> "void":
        """ValleyEmphasisOn(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_ValleyEmphasisOn(self)


    def ValleyEmphasisOff(self) -> "void":
        """ValleyEmphasisOff(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_ValleyEmphasisOff(self)


    def SetReturnBinMidpoint(self, _arg: 'bool const') -> "void":
        """
        SetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self, bool const _arg)

        Should the
        threshold value be mid-point of the bin or the maximum? Default is to
        return bin maximum. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_SetReturnBinMidpoint(self, _arg)


    def GetReturnBinMidpoint(self) -> "bool const &":
        """GetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetReturnBinMidpoint(self)


    def ReturnBinMidpointOn(self) -> "void":
        """ReturnBinMidpointOn(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_ReturnBinMidpointOn(self)


    def ReturnBinMidpointOff(self) -> "void":
        """ReturnBinMidpointOff(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_ReturnBinMidpointOff(self)


    def GetThresholds(self) -> "std::vector< double,std::allocator< double > > const &":
        """
        GetThresholds(itkOtsuMultipleThresholdsImageFilterISS2ISS2 self) -> vectorD

        Get the computed
        threshold. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetThresholds(self)

    OutputComparableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_OutputComparableCheck
    OutputOStreamWritableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkOtsuMultipleThresholdsImageFilterPython.delete_itkOtsuMultipleThresholdsImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterISS2ISS2"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkOtsuMultipleThresholdsImageFilterISS2ISS2

        Create a new object of the class itkOtsuMultipleThresholdsImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuMultipleThresholdsImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuMultipleThresholdsImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuMultipleThresholdsImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuMultipleThresholdsImageFilterISS2ISS2.Clone = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_Clone, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.SetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_SetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.GetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.SetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_SetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.GetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.SetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_SetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.GetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.SetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_SetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.GetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.ValleyEmphasisOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_ValleyEmphasisOn, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.ValleyEmphasisOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_ValleyEmphasisOff, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.SetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_SetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.GetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.ReturnBinMidpointOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_ReturnBinMidpointOn, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.ReturnBinMidpointOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_ReturnBinMidpointOff, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2.GetThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_GetThresholds, None, itkOtsuMultipleThresholdsImageFilterISS2ISS2)
itkOtsuMultipleThresholdsImageFilterISS2ISS2_swigregister = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_swigregister
itkOtsuMultipleThresholdsImageFilterISS2ISS2_swigregister(itkOtsuMultipleThresholdsImageFilterISS2ISS2)

def itkOtsuMultipleThresholdsImageFilterISS2ISS2___New_orig__() -> "itkOtsuMultipleThresholdsImageFilterISS2ISS2_Pointer":
    """itkOtsuMultipleThresholdsImageFilterISS2ISS2___New_orig__() -> itkOtsuMultipleThresholdsImageFilterISS2ISS2_Pointer"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2___New_orig__()

def itkOtsuMultipleThresholdsImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterISS2ISS2 *":
    """itkOtsuMultipleThresholdsImageFilterISS2ISS2_cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterISS2ISS2"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS2ISS2_cast(obj)

class itkOtsuMultipleThresholdsImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Threshold an image using multiple Otsu Thresholds.

    This filter creates a labeled image that separates the input image
    into various classes. The filter computes the thresholds using the
    OtsuMultipleThresholdsCalculator and applies those thresholds to the
    input image using the ThresholdLabelerImageFilter. The
    NumberOfHistogramBins and NumberOfThresholds can be set for the
    Calculator. The LabelOffset can be set for the
    ThresholdLabelerImageFilter.

    This filter also includes an option to use the valley emphasis
    algorithm from H.F. Ng, "Automatic thresholding for defect
    detection", Pattern Recognition Letters, (27): 1644-1649, 2006. The
    valley emphasis algorithm is particularly effective when the object to
    be thresholded is small. See the following tests for examples:
    itkOtsuMultipleThresholdsImageFilterTest3 and
    itkOtsuMultipleThresholdsImageFilterTest4 To use this algorithm,
    simple call the setter: SetValleyEmphasis(true) It is turned off by
    default.

    See:  ScalarImageToHistogramGenerator

    See:  OtsuMultipleThresholdsCalculator

    See:   ThresholdLabelerImageFilter  \\sphinx
    \\sphinxexample{Filtering/Thresholding/ThresholdAnImageU
    singOtsu,Threshold An Image Using Otsu} \\endsphinx

    C++ includes: itkOtsuMultipleThresholdsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkOtsuMultipleThresholdsImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkOtsuMultipleThresholdsImageFilterISS3ISS3_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkOtsuMultipleThresholdsImageFilterISS3ISS3_Pointer":
        """Clone(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self) -> itkOtsuMultipleThresholdsImageFilterISS3ISS3_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_Clone(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self, unsigned long _arg)

        Set/Get
        the number of histogram bins. Default is 128. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long":
        """GetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetNumberOfHistogramBins(self)


    def SetNumberOfThresholds(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self, unsigned long _arg)

        Set/Get the
        number of thresholds. Default is 1. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_SetNumberOfThresholds(self, _arg)


    def GetNumberOfThresholds(self) -> "unsigned long":
        """GetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetNumberOfThresholds(self)


    def SetLabelOffset(self, _arg: 'short') -> "void":
        """
        SetLabelOffset(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self, short _arg)

        Set/Get the offset
        which labels have to start from. Default is 0. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_SetLabelOffset(self, _arg)


    def GetLabelOffset(self) -> "short":
        """GetLabelOffset(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self) -> short"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetLabelOffset(self)


    def SetValleyEmphasis(self, _arg: 'bool const') -> "void":
        """
        SetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self, bool const _arg)

        Set/Get the use
        of valley emphasis. Default is false. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_SetValleyEmphasis(self, _arg)


    def GetValleyEmphasis(self) -> "bool const &":
        """GetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetValleyEmphasis(self)


    def ValleyEmphasisOn(self) -> "void":
        """ValleyEmphasisOn(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_ValleyEmphasisOn(self)


    def ValleyEmphasisOff(self) -> "void":
        """ValleyEmphasisOff(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_ValleyEmphasisOff(self)


    def SetReturnBinMidpoint(self, _arg: 'bool const') -> "void":
        """
        SetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self, bool const _arg)

        Should the
        threshold value be mid-point of the bin or the maximum? Default is to
        return bin maximum. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_SetReturnBinMidpoint(self, _arg)


    def GetReturnBinMidpoint(self) -> "bool const &":
        """GetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetReturnBinMidpoint(self)


    def ReturnBinMidpointOn(self) -> "void":
        """ReturnBinMidpointOn(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_ReturnBinMidpointOn(self)


    def ReturnBinMidpointOff(self) -> "void":
        """ReturnBinMidpointOff(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_ReturnBinMidpointOff(self)


    def GetThresholds(self) -> "std::vector< double,std::allocator< double > > const &":
        """
        GetThresholds(itkOtsuMultipleThresholdsImageFilterISS3ISS3 self) -> vectorD

        Get the computed
        threshold. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetThresholds(self)

    OutputComparableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_OutputComparableCheck
    OutputOStreamWritableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkOtsuMultipleThresholdsImageFilterPython.delete_itkOtsuMultipleThresholdsImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterISS3ISS3"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkOtsuMultipleThresholdsImageFilterISS3ISS3

        Create a new object of the class itkOtsuMultipleThresholdsImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuMultipleThresholdsImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuMultipleThresholdsImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuMultipleThresholdsImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuMultipleThresholdsImageFilterISS3ISS3.Clone = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_Clone, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.SetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_SetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.GetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.SetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_SetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.GetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.SetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_SetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.GetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.SetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_SetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.GetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.ValleyEmphasisOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_ValleyEmphasisOn, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.ValleyEmphasisOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_ValleyEmphasisOff, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.SetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_SetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.GetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.ReturnBinMidpointOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_ReturnBinMidpointOn, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.ReturnBinMidpointOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_ReturnBinMidpointOff, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3.GetThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_GetThresholds, None, itkOtsuMultipleThresholdsImageFilterISS3ISS3)
itkOtsuMultipleThresholdsImageFilterISS3ISS3_swigregister = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_swigregister
itkOtsuMultipleThresholdsImageFilterISS3ISS3_swigregister(itkOtsuMultipleThresholdsImageFilterISS3ISS3)

def itkOtsuMultipleThresholdsImageFilterISS3ISS3___New_orig__() -> "itkOtsuMultipleThresholdsImageFilterISS3ISS3_Pointer":
    """itkOtsuMultipleThresholdsImageFilterISS3ISS3___New_orig__() -> itkOtsuMultipleThresholdsImageFilterISS3ISS3_Pointer"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3___New_orig__()

def itkOtsuMultipleThresholdsImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterISS3ISS3 *":
    """itkOtsuMultipleThresholdsImageFilterISS3ISS3_cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterISS3ISS3"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterISS3ISS3_cast(obj)

class itkOtsuMultipleThresholdsImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Threshold an image using multiple Otsu Thresholds.

    This filter creates a labeled image that separates the input image
    into various classes. The filter computes the thresholds using the
    OtsuMultipleThresholdsCalculator and applies those thresholds to the
    input image using the ThresholdLabelerImageFilter. The
    NumberOfHistogramBins and NumberOfThresholds can be set for the
    Calculator. The LabelOffset can be set for the
    ThresholdLabelerImageFilter.

    This filter also includes an option to use the valley emphasis
    algorithm from H.F. Ng, "Automatic thresholding for defect
    detection", Pattern Recognition Letters, (27): 1644-1649, 2006. The
    valley emphasis algorithm is particularly effective when the object to
    be thresholded is small. See the following tests for examples:
    itkOtsuMultipleThresholdsImageFilterTest3 and
    itkOtsuMultipleThresholdsImageFilterTest4 To use this algorithm,
    simple call the setter: SetValleyEmphasis(true) It is turned off by
    default.

    See:  ScalarImageToHistogramGenerator

    See:  OtsuMultipleThresholdsCalculator

    See:   ThresholdLabelerImageFilter  \\sphinx
    \\sphinxexample{Filtering/Thresholding/ThresholdAnImageU
    singOtsu,Threshold An Image Using Otsu} \\endsphinx

    C++ includes: itkOtsuMultipleThresholdsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkOtsuMultipleThresholdsImageFilterIUC2IUC2_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkOtsuMultipleThresholdsImageFilterIUC2IUC2_Pointer":
        """Clone(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self) -> itkOtsuMultipleThresholdsImageFilterIUC2IUC2_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_Clone(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self, unsigned long _arg)

        Set/Get
        the number of histogram bins. Default is 128. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long":
        """GetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetNumberOfHistogramBins(self)


    def SetNumberOfThresholds(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self, unsigned long _arg)

        Set/Get the
        number of thresholds. Default is 1. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_SetNumberOfThresholds(self, _arg)


    def GetNumberOfThresholds(self) -> "unsigned long":
        """GetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetNumberOfThresholds(self)


    def SetLabelOffset(self, _arg: 'unsigned char') -> "void":
        """
        SetLabelOffset(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self, unsigned char _arg)

        Set/Get the offset
        which labels have to start from. Default is 0. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_SetLabelOffset(self, _arg)


    def GetLabelOffset(self) -> "unsigned char":
        """GetLabelOffset(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetLabelOffset(self)


    def SetValleyEmphasis(self, _arg: 'bool const') -> "void":
        """
        SetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self, bool const _arg)

        Set/Get the use
        of valley emphasis. Default is false. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_SetValleyEmphasis(self, _arg)


    def GetValleyEmphasis(self) -> "bool const &":
        """GetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetValleyEmphasis(self)


    def ValleyEmphasisOn(self) -> "void":
        """ValleyEmphasisOn(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_ValleyEmphasisOn(self)


    def ValleyEmphasisOff(self) -> "void":
        """ValleyEmphasisOff(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_ValleyEmphasisOff(self)


    def SetReturnBinMidpoint(self, _arg: 'bool const') -> "void":
        """
        SetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self, bool const _arg)

        Should the
        threshold value be mid-point of the bin or the maximum? Default is to
        return bin maximum. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_SetReturnBinMidpoint(self, _arg)


    def GetReturnBinMidpoint(self) -> "bool const &":
        """GetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetReturnBinMidpoint(self)


    def ReturnBinMidpointOn(self) -> "void":
        """ReturnBinMidpointOn(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_ReturnBinMidpointOn(self)


    def ReturnBinMidpointOff(self) -> "void":
        """ReturnBinMidpointOff(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_ReturnBinMidpointOff(self)


    def GetThresholds(self) -> "std::vector< double,std::allocator< double > > const &":
        """
        GetThresholds(itkOtsuMultipleThresholdsImageFilterIUC2IUC2 self) -> vectorD

        Get the computed
        threshold. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetThresholds(self)

    OutputComparableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_OutputComparableCheck
    OutputOStreamWritableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkOtsuMultipleThresholdsImageFilterPython.delete_itkOtsuMultipleThresholdsImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIUC2IUC2"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkOtsuMultipleThresholdsImageFilterIUC2IUC2

        Create a new object of the class itkOtsuMultipleThresholdsImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuMultipleThresholdsImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuMultipleThresholdsImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuMultipleThresholdsImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuMultipleThresholdsImageFilterIUC2IUC2.Clone = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_Clone, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.SetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_SetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.GetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.SetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_SetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.GetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.SetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_SetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.GetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.SetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_SetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.GetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.ValleyEmphasisOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_ValleyEmphasisOn, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.ValleyEmphasisOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_ValleyEmphasisOff, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.SetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_SetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.GetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.ReturnBinMidpointOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_ReturnBinMidpointOn, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.ReturnBinMidpointOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_ReturnBinMidpointOff, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2.GetThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_GetThresholds, None, itkOtsuMultipleThresholdsImageFilterIUC2IUC2)
itkOtsuMultipleThresholdsImageFilterIUC2IUC2_swigregister = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_swigregister
itkOtsuMultipleThresholdsImageFilterIUC2IUC2_swigregister(itkOtsuMultipleThresholdsImageFilterIUC2IUC2)

def itkOtsuMultipleThresholdsImageFilterIUC2IUC2___New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIUC2IUC2_Pointer":
    """itkOtsuMultipleThresholdsImageFilterIUC2IUC2___New_orig__() -> itkOtsuMultipleThresholdsImageFilterIUC2IUC2_Pointer"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2___New_orig__()

def itkOtsuMultipleThresholdsImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIUC2IUC2 *":
    """itkOtsuMultipleThresholdsImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIUC2IUC2"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC2IUC2_cast(obj)

class itkOtsuMultipleThresholdsImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Threshold an image using multiple Otsu Thresholds.

    This filter creates a labeled image that separates the input image
    into various classes. The filter computes the thresholds using the
    OtsuMultipleThresholdsCalculator and applies those thresholds to the
    input image using the ThresholdLabelerImageFilter. The
    NumberOfHistogramBins and NumberOfThresholds can be set for the
    Calculator. The LabelOffset can be set for the
    ThresholdLabelerImageFilter.

    This filter also includes an option to use the valley emphasis
    algorithm from H.F. Ng, "Automatic thresholding for defect
    detection", Pattern Recognition Letters, (27): 1644-1649, 2006. The
    valley emphasis algorithm is particularly effective when the object to
    be thresholded is small. See the following tests for examples:
    itkOtsuMultipleThresholdsImageFilterTest3 and
    itkOtsuMultipleThresholdsImageFilterTest4 To use this algorithm,
    simple call the setter: SetValleyEmphasis(true) It is turned off by
    default.

    See:  ScalarImageToHistogramGenerator

    See:  OtsuMultipleThresholdsCalculator

    See:   ThresholdLabelerImageFilter  \\sphinx
    \\sphinxexample{Filtering/Thresholding/ThresholdAnImageU
    singOtsu,Threshold An Image Using Otsu} \\endsphinx

    C++ includes: itkOtsuMultipleThresholdsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkOtsuMultipleThresholdsImageFilterIUC3IUC3_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkOtsuMultipleThresholdsImageFilterIUC3IUC3_Pointer":
        """Clone(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self) -> itkOtsuMultipleThresholdsImageFilterIUC3IUC3_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_Clone(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self, unsigned long _arg)

        Set/Get
        the number of histogram bins. Default is 128. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long":
        """GetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetNumberOfHistogramBins(self)


    def SetNumberOfThresholds(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self, unsigned long _arg)

        Set/Get the
        number of thresholds. Default is 1. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_SetNumberOfThresholds(self, _arg)


    def GetNumberOfThresholds(self) -> "unsigned long":
        """GetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetNumberOfThresholds(self)


    def SetLabelOffset(self, _arg: 'unsigned char') -> "void":
        """
        SetLabelOffset(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self, unsigned char _arg)

        Set/Get the offset
        which labels have to start from. Default is 0. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_SetLabelOffset(self, _arg)


    def GetLabelOffset(self) -> "unsigned char":
        """GetLabelOffset(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetLabelOffset(self)


    def SetValleyEmphasis(self, _arg: 'bool const') -> "void":
        """
        SetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self, bool const _arg)

        Set/Get the use
        of valley emphasis. Default is false. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_SetValleyEmphasis(self, _arg)


    def GetValleyEmphasis(self) -> "bool const &":
        """GetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetValleyEmphasis(self)


    def ValleyEmphasisOn(self) -> "void":
        """ValleyEmphasisOn(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_ValleyEmphasisOn(self)


    def ValleyEmphasisOff(self) -> "void":
        """ValleyEmphasisOff(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_ValleyEmphasisOff(self)


    def SetReturnBinMidpoint(self, _arg: 'bool const') -> "void":
        """
        SetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self, bool const _arg)

        Should the
        threshold value be mid-point of the bin or the maximum? Default is to
        return bin maximum. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_SetReturnBinMidpoint(self, _arg)


    def GetReturnBinMidpoint(self) -> "bool const &":
        """GetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetReturnBinMidpoint(self)


    def ReturnBinMidpointOn(self) -> "void":
        """ReturnBinMidpointOn(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_ReturnBinMidpointOn(self)


    def ReturnBinMidpointOff(self) -> "void":
        """ReturnBinMidpointOff(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_ReturnBinMidpointOff(self)


    def GetThresholds(self) -> "std::vector< double,std::allocator< double > > const &":
        """
        GetThresholds(itkOtsuMultipleThresholdsImageFilterIUC3IUC3 self) -> vectorD

        Get the computed
        threshold. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetThresholds(self)

    OutputComparableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_OutputComparableCheck
    OutputOStreamWritableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkOtsuMultipleThresholdsImageFilterPython.delete_itkOtsuMultipleThresholdsImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIUC3IUC3"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkOtsuMultipleThresholdsImageFilterIUC3IUC3

        Create a new object of the class itkOtsuMultipleThresholdsImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuMultipleThresholdsImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuMultipleThresholdsImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuMultipleThresholdsImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuMultipleThresholdsImageFilterIUC3IUC3.Clone = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_Clone, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.SetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_SetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.GetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.SetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_SetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.GetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.SetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_SetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.GetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.SetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_SetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.GetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.ValleyEmphasisOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_ValleyEmphasisOn, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.ValleyEmphasisOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_ValleyEmphasisOff, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.SetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_SetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.GetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.ReturnBinMidpointOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_ReturnBinMidpointOn, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.ReturnBinMidpointOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_ReturnBinMidpointOff, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3.GetThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_GetThresholds, None, itkOtsuMultipleThresholdsImageFilterIUC3IUC3)
itkOtsuMultipleThresholdsImageFilterIUC3IUC3_swigregister = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_swigregister
itkOtsuMultipleThresholdsImageFilterIUC3IUC3_swigregister(itkOtsuMultipleThresholdsImageFilterIUC3IUC3)

def itkOtsuMultipleThresholdsImageFilterIUC3IUC3___New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIUC3IUC3_Pointer":
    """itkOtsuMultipleThresholdsImageFilterIUC3IUC3___New_orig__() -> itkOtsuMultipleThresholdsImageFilterIUC3IUC3_Pointer"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3___New_orig__()

def itkOtsuMultipleThresholdsImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIUC3IUC3 *":
    """itkOtsuMultipleThresholdsImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIUC3IUC3"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUC3IUC3_cast(obj)

class itkOtsuMultipleThresholdsImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Threshold an image using multiple Otsu Thresholds.

    This filter creates a labeled image that separates the input image
    into various classes. The filter computes the thresholds using the
    OtsuMultipleThresholdsCalculator and applies those thresholds to the
    input image using the ThresholdLabelerImageFilter. The
    NumberOfHistogramBins and NumberOfThresholds can be set for the
    Calculator. The LabelOffset can be set for the
    ThresholdLabelerImageFilter.

    This filter also includes an option to use the valley emphasis
    algorithm from H.F. Ng, "Automatic thresholding for defect
    detection", Pattern Recognition Letters, (27): 1644-1649, 2006. The
    valley emphasis algorithm is particularly effective when the object to
    be thresholded is small. See the following tests for examples:
    itkOtsuMultipleThresholdsImageFilterTest3 and
    itkOtsuMultipleThresholdsImageFilterTest4 To use this algorithm,
    simple call the setter: SetValleyEmphasis(true) It is turned off by
    default.

    See:  ScalarImageToHistogramGenerator

    See:  OtsuMultipleThresholdsCalculator

    See:   ThresholdLabelerImageFilter  \\sphinx
    \\sphinxexample{Filtering/Thresholding/ThresholdAnImageU
    singOtsu,Threshold An Image Using Otsu} \\endsphinx

    C++ includes: itkOtsuMultipleThresholdsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkOtsuMultipleThresholdsImageFilterIUS2IUS2_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkOtsuMultipleThresholdsImageFilterIUS2IUS2_Pointer":
        """Clone(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self) -> itkOtsuMultipleThresholdsImageFilterIUS2IUS2_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_Clone(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self, unsigned long _arg)

        Set/Get
        the number of histogram bins. Default is 128. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long":
        """GetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetNumberOfHistogramBins(self)


    def SetNumberOfThresholds(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self, unsigned long _arg)

        Set/Get the
        number of thresholds. Default is 1. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_SetNumberOfThresholds(self, _arg)


    def GetNumberOfThresholds(self) -> "unsigned long":
        """GetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetNumberOfThresholds(self)


    def SetLabelOffset(self, _arg: 'unsigned short') -> "void":
        """
        SetLabelOffset(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self, unsigned short _arg)

        Set/Get the offset
        which labels have to start from. Default is 0. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_SetLabelOffset(self, _arg)


    def GetLabelOffset(self) -> "unsigned short":
        """GetLabelOffset(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self) -> unsigned short"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetLabelOffset(self)


    def SetValleyEmphasis(self, _arg: 'bool const') -> "void":
        """
        SetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self, bool const _arg)

        Set/Get the use
        of valley emphasis. Default is false. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_SetValleyEmphasis(self, _arg)


    def GetValleyEmphasis(self) -> "bool const &":
        """GetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetValleyEmphasis(self)


    def ValleyEmphasisOn(self) -> "void":
        """ValleyEmphasisOn(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_ValleyEmphasisOn(self)


    def ValleyEmphasisOff(self) -> "void":
        """ValleyEmphasisOff(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_ValleyEmphasisOff(self)


    def SetReturnBinMidpoint(self, _arg: 'bool const') -> "void":
        """
        SetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self, bool const _arg)

        Should the
        threshold value be mid-point of the bin or the maximum? Default is to
        return bin maximum. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_SetReturnBinMidpoint(self, _arg)


    def GetReturnBinMidpoint(self) -> "bool const &":
        """GetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetReturnBinMidpoint(self)


    def ReturnBinMidpointOn(self) -> "void":
        """ReturnBinMidpointOn(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_ReturnBinMidpointOn(self)


    def ReturnBinMidpointOff(self) -> "void":
        """ReturnBinMidpointOff(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_ReturnBinMidpointOff(self)


    def GetThresholds(self) -> "std::vector< double,std::allocator< double > > const &":
        """
        GetThresholds(itkOtsuMultipleThresholdsImageFilterIUS2IUS2 self) -> vectorD

        Get the computed
        threshold. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetThresholds(self)

    OutputComparableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_OutputComparableCheck
    OutputOStreamWritableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkOtsuMultipleThresholdsImageFilterPython.delete_itkOtsuMultipleThresholdsImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIUS2IUS2"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkOtsuMultipleThresholdsImageFilterIUS2IUS2

        Create a new object of the class itkOtsuMultipleThresholdsImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuMultipleThresholdsImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuMultipleThresholdsImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuMultipleThresholdsImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuMultipleThresholdsImageFilterIUS2IUS2.Clone = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_Clone, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.SetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_SetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.GetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.SetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_SetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.GetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.SetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_SetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.GetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.SetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_SetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.GetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.ValleyEmphasisOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_ValleyEmphasisOn, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.ValleyEmphasisOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_ValleyEmphasisOff, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.SetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_SetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.GetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.ReturnBinMidpointOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_ReturnBinMidpointOn, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.ReturnBinMidpointOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_ReturnBinMidpointOff, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2.GetThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_GetThresholds, None, itkOtsuMultipleThresholdsImageFilterIUS2IUS2)
itkOtsuMultipleThresholdsImageFilterIUS2IUS2_swigregister = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_swigregister
itkOtsuMultipleThresholdsImageFilterIUS2IUS2_swigregister(itkOtsuMultipleThresholdsImageFilterIUS2IUS2)

def itkOtsuMultipleThresholdsImageFilterIUS2IUS2___New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIUS2IUS2_Pointer":
    """itkOtsuMultipleThresholdsImageFilterIUS2IUS2___New_orig__() -> itkOtsuMultipleThresholdsImageFilterIUS2IUS2_Pointer"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2___New_orig__()

def itkOtsuMultipleThresholdsImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIUS2IUS2 *":
    """itkOtsuMultipleThresholdsImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIUS2IUS2"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS2IUS2_cast(obj)

class itkOtsuMultipleThresholdsImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Threshold an image using multiple Otsu Thresholds.

    This filter creates a labeled image that separates the input image
    into various classes. The filter computes the thresholds using the
    OtsuMultipleThresholdsCalculator and applies those thresholds to the
    input image using the ThresholdLabelerImageFilter. The
    NumberOfHistogramBins and NumberOfThresholds can be set for the
    Calculator. The LabelOffset can be set for the
    ThresholdLabelerImageFilter.

    This filter also includes an option to use the valley emphasis
    algorithm from H.F. Ng, "Automatic thresholding for defect
    detection", Pattern Recognition Letters, (27): 1644-1649, 2006. The
    valley emphasis algorithm is particularly effective when the object to
    be thresholded is small. See the following tests for examples:
    itkOtsuMultipleThresholdsImageFilterTest3 and
    itkOtsuMultipleThresholdsImageFilterTest4 To use this algorithm,
    simple call the setter: SetValleyEmphasis(true) It is turned off by
    default.

    See:  ScalarImageToHistogramGenerator

    See:  OtsuMultipleThresholdsCalculator

    See:   ThresholdLabelerImageFilter  \\sphinx
    \\sphinxexample{Filtering/Thresholding/ThresholdAnImageU
    singOtsu,Threshold An Image Using Otsu} \\endsphinx

    C++ includes: itkOtsuMultipleThresholdsImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkOtsuMultipleThresholdsImageFilterIUS3IUS3_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkOtsuMultipleThresholdsImageFilterIUS3IUS3_Pointer":
        """Clone(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self) -> itkOtsuMultipleThresholdsImageFilterIUS3IUS3_Pointer"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_Clone(self)


    def SetNumberOfHistogramBins(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self, unsigned long _arg)

        Set/Get
        the number of histogram bins. Default is 128. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_SetNumberOfHistogramBins(self, _arg)


    def GetNumberOfHistogramBins(self) -> "unsigned long":
        """GetNumberOfHistogramBins(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetNumberOfHistogramBins(self)


    def SetNumberOfThresholds(self, _arg: 'unsigned long') -> "void":
        """
        SetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self, unsigned long _arg)

        Set/Get the
        number of thresholds. Default is 1. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_SetNumberOfThresholds(self, _arg)


    def GetNumberOfThresholds(self) -> "unsigned long":
        """GetNumberOfThresholds(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self) -> unsigned long"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetNumberOfThresholds(self)


    def SetLabelOffset(self, _arg: 'unsigned short') -> "void":
        """
        SetLabelOffset(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self, unsigned short _arg)

        Set/Get the offset
        which labels have to start from. Default is 0. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_SetLabelOffset(self, _arg)


    def GetLabelOffset(self) -> "unsigned short":
        """GetLabelOffset(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self) -> unsigned short"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetLabelOffset(self)


    def SetValleyEmphasis(self, _arg: 'bool const') -> "void":
        """
        SetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self, bool const _arg)

        Set/Get the use
        of valley emphasis. Default is false. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_SetValleyEmphasis(self, _arg)


    def GetValleyEmphasis(self) -> "bool const &":
        """GetValleyEmphasis(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetValleyEmphasis(self)


    def ValleyEmphasisOn(self) -> "void":
        """ValleyEmphasisOn(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_ValleyEmphasisOn(self)


    def ValleyEmphasisOff(self) -> "void":
        """ValleyEmphasisOff(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_ValleyEmphasisOff(self)


    def SetReturnBinMidpoint(self, _arg: 'bool const') -> "void":
        """
        SetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self, bool const _arg)

        Should the
        threshold value be mid-point of the bin or the maximum? Default is to
        return bin maximum. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_SetReturnBinMidpoint(self, _arg)


    def GetReturnBinMidpoint(self) -> "bool const &":
        """GetReturnBinMidpoint(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self) -> bool const &"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetReturnBinMidpoint(self)


    def ReturnBinMidpointOn(self) -> "void":
        """ReturnBinMidpointOn(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_ReturnBinMidpointOn(self)


    def ReturnBinMidpointOff(self) -> "void":
        """ReturnBinMidpointOff(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self)"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_ReturnBinMidpointOff(self)


    def GetThresholds(self) -> "std::vector< double,std::allocator< double > > const &":
        """
        GetThresholds(itkOtsuMultipleThresholdsImageFilterIUS3IUS3 self) -> vectorD

        Get the computed
        threshold. 
        """
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetThresholds(self)

    OutputComparableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_OutputComparableCheck
    OutputOStreamWritableCheck = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkOtsuMultipleThresholdsImageFilterPython.delete_itkOtsuMultipleThresholdsImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIUS3IUS3"""
        return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkOtsuMultipleThresholdsImageFilterIUS3IUS3

        Create a new object of the class itkOtsuMultipleThresholdsImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuMultipleThresholdsImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuMultipleThresholdsImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuMultipleThresholdsImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuMultipleThresholdsImageFilterIUS3IUS3.Clone = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_Clone, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.SetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_SetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.GetNumberOfHistogramBins = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetNumberOfHistogramBins, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.SetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_SetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.GetNumberOfThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetNumberOfThresholds, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.SetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_SetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.GetLabelOffset = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetLabelOffset, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.SetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_SetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.GetValleyEmphasis = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetValleyEmphasis, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.ValleyEmphasisOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_ValleyEmphasisOn, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.ValleyEmphasisOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_ValleyEmphasisOff, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.SetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_SetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.GetReturnBinMidpoint = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetReturnBinMidpoint, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.ReturnBinMidpointOn = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_ReturnBinMidpointOn, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.ReturnBinMidpointOff = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_ReturnBinMidpointOff, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3.GetThresholds = new_instancemethod(_itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_GetThresholds, None, itkOtsuMultipleThresholdsImageFilterIUS3IUS3)
itkOtsuMultipleThresholdsImageFilterIUS3IUS3_swigregister = _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_swigregister
itkOtsuMultipleThresholdsImageFilterIUS3IUS3_swigregister(itkOtsuMultipleThresholdsImageFilterIUS3IUS3)

def itkOtsuMultipleThresholdsImageFilterIUS3IUS3___New_orig__() -> "itkOtsuMultipleThresholdsImageFilterIUS3IUS3_Pointer":
    """itkOtsuMultipleThresholdsImageFilterIUS3IUS3___New_orig__() -> itkOtsuMultipleThresholdsImageFilterIUS3IUS3_Pointer"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3___New_orig__()

def itkOtsuMultipleThresholdsImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkOtsuMultipleThresholdsImageFilterIUS3IUS3 *":
    """itkOtsuMultipleThresholdsImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkOtsuMultipleThresholdsImageFilterIUS3IUS3"""
    return _itkOtsuMultipleThresholdsImageFilterPython.itkOtsuMultipleThresholdsImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def otsu_multiple_thresholds_image_filter(*args, **kwargs):
    """Procedural interface for OtsuMultipleThresholdsImageFilter"""
    import itk
    instance = itk.OtsuMultipleThresholdsImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def otsu_multiple_thresholds_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.OtsuMultipleThresholdsImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.OtsuMultipleThresholdsImageFilter.values()[0]
    else:
        filter_object = itk.OtsuMultipleThresholdsImageFilter

    otsu_multiple_thresholds_image_filter.__doc__ = filter_object.__doc__
    otsu_multiple_thresholds_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    otsu_multiple_thresholds_image_filter.__doc__ += "Available Keyword Arguments:\n"
    otsu_multiple_thresholds_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



