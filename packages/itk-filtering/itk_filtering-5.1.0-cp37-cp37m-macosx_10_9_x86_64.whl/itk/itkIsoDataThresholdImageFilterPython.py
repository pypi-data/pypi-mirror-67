# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkIsoDataThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkIsoDataThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkIsoDataThresholdImageFilterPython
            return _itkIsoDataThresholdImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkIsoDataThresholdImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkIsoDataThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkIsoDataThresholdImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdImageFilterPython
import itkHistogramThresholdCalculatorPython
import ITKCommonBasePython
import pyBasePython
import itkHistogramPython
import itkSamplePython
import itkVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkArrayPython
import itkSimpleDataObjectDecoratorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkCovariantVectorPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkPointPython
import vnl_matrix_fixedPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRegionPython
import itkImageToImageFilterAPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToHistogramFilterPython
import itkImageSinkPython

def itkIsoDataThresholdImageFilterID3IUS3_New():
  return itkIsoDataThresholdImageFilterID3IUS3.New()


def itkIsoDataThresholdImageFilterID2IUS2_New():
  return itkIsoDataThresholdImageFilterID2IUS2.New()


def itkIsoDataThresholdImageFilterID3IUC3_New():
  return itkIsoDataThresholdImageFilterID3IUC3.New()


def itkIsoDataThresholdImageFilterID2IUC2_New():
  return itkIsoDataThresholdImageFilterID2IUC2.New()


def itkIsoDataThresholdImageFilterID3ISS3_New():
  return itkIsoDataThresholdImageFilterID3ISS3.New()


def itkIsoDataThresholdImageFilterID2ISS2_New():
  return itkIsoDataThresholdImageFilterID2ISS2.New()


def itkIsoDataThresholdImageFilterIF3IUS3_New():
  return itkIsoDataThresholdImageFilterIF3IUS3.New()


def itkIsoDataThresholdImageFilterIF2IUS2_New():
  return itkIsoDataThresholdImageFilterIF2IUS2.New()


def itkIsoDataThresholdImageFilterIF3IUC3_New():
  return itkIsoDataThresholdImageFilterIF3IUC3.New()


def itkIsoDataThresholdImageFilterIF2IUC2_New():
  return itkIsoDataThresholdImageFilterIF2IUC2.New()


def itkIsoDataThresholdImageFilterIF3ISS3_New():
  return itkIsoDataThresholdImageFilterIF3ISS3.New()


def itkIsoDataThresholdImageFilterIF2ISS2_New():
  return itkIsoDataThresholdImageFilterIF2ISS2.New()


def itkIsoDataThresholdImageFilterIUS3IUS3_New():
  return itkIsoDataThresholdImageFilterIUS3IUS3.New()


def itkIsoDataThresholdImageFilterIUS2IUS2_New():
  return itkIsoDataThresholdImageFilterIUS2IUS2.New()


def itkIsoDataThresholdImageFilterIUS3IUC3_New():
  return itkIsoDataThresholdImageFilterIUS3IUC3.New()


def itkIsoDataThresholdImageFilterIUS2IUC2_New():
  return itkIsoDataThresholdImageFilterIUS2IUC2.New()


def itkIsoDataThresholdImageFilterIUS3ISS3_New():
  return itkIsoDataThresholdImageFilterIUS3ISS3.New()


def itkIsoDataThresholdImageFilterIUS2ISS2_New():
  return itkIsoDataThresholdImageFilterIUS2ISS2.New()


def itkIsoDataThresholdImageFilterIUC3IUS3_New():
  return itkIsoDataThresholdImageFilterIUC3IUS3.New()


def itkIsoDataThresholdImageFilterIUC2IUS2_New():
  return itkIsoDataThresholdImageFilterIUC2IUS2.New()


def itkIsoDataThresholdImageFilterIUC3IUC3_New():
  return itkIsoDataThresholdImageFilterIUC3IUC3.New()


def itkIsoDataThresholdImageFilterIUC2IUC2_New():
  return itkIsoDataThresholdImageFilterIUC2IUC2.New()


def itkIsoDataThresholdImageFilterIUC3ISS3_New():
  return itkIsoDataThresholdImageFilterIUC3ISS3.New()


def itkIsoDataThresholdImageFilterIUC2ISS2_New():
  return itkIsoDataThresholdImageFilterIUC2ISS2.New()


def itkIsoDataThresholdImageFilterISS3IUS3_New():
  return itkIsoDataThresholdImageFilterISS3IUS3.New()


def itkIsoDataThresholdImageFilterISS2IUS2_New():
  return itkIsoDataThresholdImageFilterISS2IUS2.New()


def itkIsoDataThresholdImageFilterISS3IUC3_New():
  return itkIsoDataThresholdImageFilterISS3IUC3.New()


def itkIsoDataThresholdImageFilterISS2IUC2_New():
  return itkIsoDataThresholdImageFilterISS2IUC2.New()


def itkIsoDataThresholdImageFilterISS3ISS3_New():
  return itkIsoDataThresholdImageFilterISS3ISS3.New()


def itkIsoDataThresholdImageFilterISS2ISS2_New():
  return itkIsoDataThresholdImageFilterISS2ISS2.New()

class itkIsoDataThresholdImageFilterID2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterID2ISS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterID2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterID2ISS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterID2ISS2 self) -> itkIsoDataThresholdImageFilterID2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID2ISS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID2ISS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterID2ISS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2_Clone, None, itkIsoDataThresholdImageFilterID2ISS2)
itkIsoDataThresholdImageFilterID2ISS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2_swigregister
itkIsoDataThresholdImageFilterID2ISS2_swigregister(itkIsoDataThresholdImageFilterID2ISS2)

def itkIsoDataThresholdImageFilterID2ISS2___New_orig__() -> "itkIsoDataThresholdImageFilterID2ISS2_Pointer":
    """itkIsoDataThresholdImageFilterID2ISS2___New_orig__() -> itkIsoDataThresholdImageFilterID2ISS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2___New_orig__()

def itkIsoDataThresholdImageFilterID2ISS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID2ISS2 *":
    """itkIsoDataThresholdImageFilterID2ISS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID2ISS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2_cast(obj)

class itkIsoDataThresholdImageFilterID2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterID2IUC2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterID2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterID2IUC2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterID2IUC2 self) -> itkIsoDataThresholdImageFilterID2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID2IUC2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID2IUC2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterID2IUC2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2_Clone, None, itkIsoDataThresholdImageFilterID2IUC2)
itkIsoDataThresholdImageFilterID2IUC2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2_swigregister
itkIsoDataThresholdImageFilterID2IUC2_swigregister(itkIsoDataThresholdImageFilterID2IUC2)

def itkIsoDataThresholdImageFilterID2IUC2___New_orig__() -> "itkIsoDataThresholdImageFilterID2IUC2_Pointer":
    """itkIsoDataThresholdImageFilterID2IUC2___New_orig__() -> itkIsoDataThresholdImageFilterID2IUC2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2___New_orig__()

def itkIsoDataThresholdImageFilterID2IUC2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID2IUC2 *":
    """itkIsoDataThresholdImageFilterID2IUC2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID2IUC2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2_cast(obj)

class itkIsoDataThresholdImageFilterID2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterID2IUS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterID2IUS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterID2IUS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterID2IUS2 self) -> itkIsoDataThresholdImageFilterID2IUS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID2IUS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID2IUS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID2IUS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID2IUS2

        Create a new object of the class itkIsoDataThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterID2IUS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2_Clone, None, itkIsoDataThresholdImageFilterID2IUS2)
itkIsoDataThresholdImageFilterID2IUS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2_swigregister
itkIsoDataThresholdImageFilterID2IUS2_swigregister(itkIsoDataThresholdImageFilterID2IUS2)

def itkIsoDataThresholdImageFilterID2IUS2___New_orig__() -> "itkIsoDataThresholdImageFilterID2IUS2_Pointer":
    """itkIsoDataThresholdImageFilterID2IUS2___New_orig__() -> itkIsoDataThresholdImageFilterID2IUS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2___New_orig__()

def itkIsoDataThresholdImageFilterID2IUS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID2IUS2 *":
    """itkIsoDataThresholdImageFilterID2IUS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID2IUS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2_cast(obj)

class itkIsoDataThresholdImageFilterID3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterID3ISS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterID3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterID3ISS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterID3ISS3 self) -> itkIsoDataThresholdImageFilterID3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID3ISS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID3ISS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterID3ISS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3_Clone, None, itkIsoDataThresholdImageFilterID3ISS3)
itkIsoDataThresholdImageFilterID3ISS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3_swigregister
itkIsoDataThresholdImageFilterID3ISS3_swigregister(itkIsoDataThresholdImageFilterID3ISS3)

def itkIsoDataThresholdImageFilterID3ISS3___New_orig__() -> "itkIsoDataThresholdImageFilterID3ISS3_Pointer":
    """itkIsoDataThresholdImageFilterID3ISS3___New_orig__() -> itkIsoDataThresholdImageFilterID3ISS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3___New_orig__()

def itkIsoDataThresholdImageFilterID3ISS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID3ISS3 *":
    """itkIsoDataThresholdImageFilterID3ISS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID3ISS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3_cast(obj)

class itkIsoDataThresholdImageFilterID3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterID3IUC3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterID3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterID3IUC3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterID3IUC3 self) -> itkIsoDataThresholdImageFilterID3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID3IUC3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID3IUC3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterID3IUC3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3_Clone, None, itkIsoDataThresholdImageFilterID3IUC3)
itkIsoDataThresholdImageFilterID3IUC3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3_swigregister
itkIsoDataThresholdImageFilterID3IUC3_swigregister(itkIsoDataThresholdImageFilterID3IUC3)

def itkIsoDataThresholdImageFilterID3IUC3___New_orig__() -> "itkIsoDataThresholdImageFilterID3IUC3_Pointer":
    """itkIsoDataThresholdImageFilterID3IUC3___New_orig__() -> itkIsoDataThresholdImageFilterID3IUC3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3___New_orig__()

def itkIsoDataThresholdImageFilterID3IUC3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID3IUC3 *":
    """itkIsoDataThresholdImageFilterID3IUC3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID3IUC3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3_cast(obj)

class itkIsoDataThresholdImageFilterID3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterID3IUS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterID3IUS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterID3IUS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterID3IUS3 self) -> itkIsoDataThresholdImageFilterID3IUS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID3IUS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID3IUS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID3IUS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID3IUS3

        Create a new object of the class itkIsoDataThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterID3IUS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3_Clone, None, itkIsoDataThresholdImageFilterID3IUS3)
itkIsoDataThresholdImageFilterID3IUS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3_swigregister
itkIsoDataThresholdImageFilterID3IUS3_swigregister(itkIsoDataThresholdImageFilterID3IUS3)

def itkIsoDataThresholdImageFilterID3IUS3___New_orig__() -> "itkIsoDataThresholdImageFilterID3IUS3_Pointer":
    """itkIsoDataThresholdImageFilterID3IUS3___New_orig__() -> itkIsoDataThresholdImageFilterID3IUS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3___New_orig__()

def itkIsoDataThresholdImageFilterID3IUS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterID3IUS3 *":
    """itkIsoDataThresholdImageFilterID3IUS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterID3IUS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3_cast(obj)

class itkIsoDataThresholdImageFilterIF2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIF2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIF2ISS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIF2ISS2 self) -> itkIsoDataThresholdImageFilterIF2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_Clone, None, itkIsoDataThresholdImageFilterIF2ISS2)
itkIsoDataThresholdImageFilterIF2ISS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_swigregister
itkIsoDataThresholdImageFilterIF2ISS2_swigregister(itkIsoDataThresholdImageFilterIF2ISS2)

def itkIsoDataThresholdImageFilterIF2ISS2___New_orig__() -> "itkIsoDataThresholdImageFilterIF2ISS2_Pointer":
    """itkIsoDataThresholdImageFilterIF2ISS2___New_orig__() -> itkIsoDataThresholdImageFilterIF2ISS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2___New_orig__()

def itkIsoDataThresholdImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF2ISS2 *":
    """itkIsoDataThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF2ISS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_cast(obj)

class itkIsoDataThresholdImageFilterIF2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIF2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIF2IUC2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIF2IUC2 self) -> itkIsoDataThresholdImageFilterIF2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_Clone, None, itkIsoDataThresholdImageFilterIF2IUC2)
itkIsoDataThresholdImageFilterIF2IUC2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_swigregister
itkIsoDataThresholdImageFilterIF2IUC2_swigregister(itkIsoDataThresholdImageFilterIF2IUC2)

def itkIsoDataThresholdImageFilterIF2IUC2___New_orig__() -> "itkIsoDataThresholdImageFilterIF2IUC2_Pointer":
    """itkIsoDataThresholdImageFilterIF2IUC2___New_orig__() -> itkIsoDataThresholdImageFilterIF2IUC2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2___New_orig__()

def itkIsoDataThresholdImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF2IUC2 *":
    """itkIsoDataThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF2IUC2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_cast(obj)

class itkIsoDataThresholdImageFilterIF2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIF2IUS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIF2IUS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIF2IUS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIF2IUS2 self) -> itkIsoDataThresholdImageFilterIF2IUS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF2IUS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF2IUS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF2IUS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF2IUS2

        Create a new object of the class itkIsoDataThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIF2IUS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2_Clone, None, itkIsoDataThresholdImageFilterIF2IUS2)
itkIsoDataThresholdImageFilterIF2IUS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2_swigregister
itkIsoDataThresholdImageFilterIF2IUS2_swigregister(itkIsoDataThresholdImageFilterIF2IUS2)

def itkIsoDataThresholdImageFilterIF2IUS2___New_orig__() -> "itkIsoDataThresholdImageFilterIF2IUS2_Pointer":
    """itkIsoDataThresholdImageFilterIF2IUS2___New_orig__() -> itkIsoDataThresholdImageFilterIF2IUS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2___New_orig__()

def itkIsoDataThresholdImageFilterIF2IUS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF2IUS2 *":
    """itkIsoDataThresholdImageFilterIF2IUS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF2IUS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2_cast(obj)

class itkIsoDataThresholdImageFilterIF3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIF3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIF3ISS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIF3ISS3 self) -> itkIsoDataThresholdImageFilterIF3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_Clone, None, itkIsoDataThresholdImageFilterIF3ISS3)
itkIsoDataThresholdImageFilterIF3ISS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_swigregister
itkIsoDataThresholdImageFilterIF3ISS3_swigregister(itkIsoDataThresholdImageFilterIF3ISS3)

def itkIsoDataThresholdImageFilterIF3ISS3___New_orig__() -> "itkIsoDataThresholdImageFilterIF3ISS3_Pointer":
    """itkIsoDataThresholdImageFilterIF3ISS3___New_orig__() -> itkIsoDataThresholdImageFilterIF3ISS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3___New_orig__()

def itkIsoDataThresholdImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF3ISS3 *":
    """itkIsoDataThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF3ISS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_cast(obj)

class itkIsoDataThresholdImageFilterIF3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIF3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIF3IUC3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIF3IUC3 self) -> itkIsoDataThresholdImageFilterIF3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_Clone, None, itkIsoDataThresholdImageFilterIF3IUC3)
itkIsoDataThresholdImageFilterIF3IUC3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_swigregister
itkIsoDataThresholdImageFilterIF3IUC3_swigregister(itkIsoDataThresholdImageFilterIF3IUC3)

def itkIsoDataThresholdImageFilterIF3IUC3___New_orig__() -> "itkIsoDataThresholdImageFilterIF3IUC3_Pointer":
    """itkIsoDataThresholdImageFilterIF3IUC3___New_orig__() -> itkIsoDataThresholdImageFilterIF3IUC3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3___New_orig__()

def itkIsoDataThresholdImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF3IUC3 *":
    """itkIsoDataThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF3IUC3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_cast(obj)

class itkIsoDataThresholdImageFilterIF3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIF3IUS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIF3IUS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIF3IUS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIF3IUS3 self) -> itkIsoDataThresholdImageFilterIF3IUS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF3IUS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF3IUS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF3IUS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF3IUS3

        Create a new object of the class itkIsoDataThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIF3IUS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3_Clone, None, itkIsoDataThresholdImageFilterIF3IUS3)
itkIsoDataThresholdImageFilterIF3IUS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3_swigregister
itkIsoDataThresholdImageFilterIF3IUS3_swigregister(itkIsoDataThresholdImageFilterIF3IUS3)

def itkIsoDataThresholdImageFilterIF3IUS3___New_orig__() -> "itkIsoDataThresholdImageFilterIF3IUS3_Pointer":
    """itkIsoDataThresholdImageFilterIF3IUS3___New_orig__() -> itkIsoDataThresholdImageFilterIF3IUS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3___New_orig__()

def itkIsoDataThresholdImageFilterIF3IUS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF3IUS3 *":
    """itkIsoDataThresholdImageFilterIF3IUS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF3IUS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3_cast(obj)

class itkIsoDataThresholdImageFilterISS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterISS2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterISS2ISS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterISS2ISS2 self) -> itkIsoDataThresholdImageFilterISS2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_Clone, None, itkIsoDataThresholdImageFilterISS2ISS2)
itkIsoDataThresholdImageFilterISS2ISS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_swigregister
itkIsoDataThresholdImageFilterISS2ISS2_swigregister(itkIsoDataThresholdImageFilterISS2ISS2)

def itkIsoDataThresholdImageFilterISS2ISS2___New_orig__() -> "itkIsoDataThresholdImageFilterISS2ISS2_Pointer":
    """itkIsoDataThresholdImageFilterISS2ISS2___New_orig__() -> itkIsoDataThresholdImageFilterISS2ISS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2___New_orig__()

def itkIsoDataThresholdImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS2ISS2 *":
    """itkIsoDataThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS2ISS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_cast(obj)

class itkIsoDataThresholdImageFilterISS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterISS2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterISS2IUC2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterISS2IUC2 self) -> itkIsoDataThresholdImageFilterISS2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_Clone, None, itkIsoDataThresholdImageFilterISS2IUC2)
itkIsoDataThresholdImageFilterISS2IUC2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_swigregister
itkIsoDataThresholdImageFilterISS2IUC2_swigregister(itkIsoDataThresholdImageFilterISS2IUC2)

def itkIsoDataThresholdImageFilterISS2IUC2___New_orig__() -> "itkIsoDataThresholdImageFilterISS2IUC2_Pointer":
    """itkIsoDataThresholdImageFilterISS2IUC2___New_orig__() -> itkIsoDataThresholdImageFilterISS2IUC2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2___New_orig__()

def itkIsoDataThresholdImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS2IUC2 *":
    """itkIsoDataThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS2IUC2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_cast(obj)

class itkIsoDataThresholdImageFilterISS2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterISS2IUS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterISS2IUS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterISS2IUS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterISS2IUS2 self) -> itkIsoDataThresholdImageFilterISS2IUS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS2IUS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS2IUS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS2IUS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS2IUS2

        Create a new object of the class itkIsoDataThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterISS2IUS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2_Clone, None, itkIsoDataThresholdImageFilterISS2IUS2)
itkIsoDataThresholdImageFilterISS2IUS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2_swigregister
itkIsoDataThresholdImageFilterISS2IUS2_swigregister(itkIsoDataThresholdImageFilterISS2IUS2)

def itkIsoDataThresholdImageFilterISS2IUS2___New_orig__() -> "itkIsoDataThresholdImageFilterISS2IUS2_Pointer":
    """itkIsoDataThresholdImageFilterISS2IUS2___New_orig__() -> itkIsoDataThresholdImageFilterISS2IUS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2___New_orig__()

def itkIsoDataThresholdImageFilterISS2IUS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS2IUS2 *":
    """itkIsoDataThresholdImageFilterISS2IUS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS2IUS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2_cast(obj)

class itkIsoDataThresholdImageFilterISS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterISS3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterISS3ISS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterISS3ISS3 self) -> itkIsoDataThresholdImageFilterISS3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_Clone, None, itkIsoDataThresholdImageFilterISS3ISS3)
itkIsoDataThresholdImageFilterISS3ISS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_swigregister
itkIsoDataThresholdImageFilterISS3ISS3_swigregister(itkIsoDataThresholdImageFilterISS3ISS3)

def itkIsoDataThresholdImageFilterISS3ISS3___New_orig__() -> "itkIsoDataThresholdImageFilterISS3ISS3_Pointer":
    """itkIsoDataThresholdImageFilterISS3ISS3___New_orig__() -> itkIsoDataThresholdImageFilterISS3ISS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3___New_orig__()

def itkIsoDataThresholdImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS3ISS3 *":
    """itkIsoDataThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS3ISS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_cast(obj)

class itkIsoDataThresholdImageFilterISS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterISS3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterISS3IUC3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterISS3IUC3 self) -> itkIsoDataThresholdImageFilterISS3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_Clone, None, itkIsoDataThresholdImageFilterISS3IUC3)
itkIsoDataThresholdImageFilterISS3IUC3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_swigregister
itkIsoDataThresholdImageFilterISS3IUC3_swigregister(itkIsoDataThresholdImageFilterISS3IUC3)

def itkIsoDataThresholdImageFilterISS3IUC3___New_orig__() -> "itkIsoDataThresholdImageFilterISS3IUC3_Pointer":
    """itkIsoDataThresholdImageFilterISS3IUC3___New_orig__() -> itkIsoDataThresholdImageFilterISS3IUC3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3___New_orig__()

def itkIsoDataThresholdImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS3IUC3 *":
    """itkIsoDataThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS3IUC3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_cast(obj)

class itkIsoDataThresholdImageFilterISS3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterISS3IUS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterISS3IUS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterISS3IUS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterISS3IUS3 self) -> itkIsoDataThresholdImageFilterISS3IUS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS3IUS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS3IUS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS3IUS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS3IUS3

        Create a new object of the class itkIsoDataThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterISS3IUS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3_Clone, None, itkIsoDataThresholdImageFilterISS3IUS3)
itkIsoDataThresholdImageFilterISS3IUS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3_swigregister
itkIsoDataThresholdImageFilterISS3IUS3_swigregister(itkIsoDataThresholdImageFilterISS3IUS3)

def itkIsoDataThresholdImageFilterISS3IUS3___New_orig__() -> "itkIsoDataThresholdImageFilterISS3IUS3_Pointer":
    """itkIsoDataThresholdImageFilterISS3IUS3___New_orig__() -> itkIsoDataThresholdImageFilterISS3IUS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3___New_orig__()

def itkIsoDataThresholdImageFilterISS3IUS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS3IUS3 *":
    """itkIsoDataThresholdImageFilterISS3IUS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS3IUS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3_cast(obj)

class itkIsoDataThresholdImageFilterIUC2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUC2ISS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUC2ISS2 self) -> itkIsoDataThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUC2ISS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_Clone, None, itkIsoDataThresholdImageFilterIUC2ISS2)
itkIsoDataThresholdImageFilterIUC2ISS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_swigregister
itkIsoDataThresholdImageFilterIUC2ISS2_swigregister(itkIsoDataThresholdImageFilterIUC2ISS2)

def itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__() -> "itkIsoDataThresholdImageFilterIUC2ISS2_Pointer":
    """itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__() -> itkIsoDataThresholdImageFilterIUC2ISS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__()

def itkIsoDataThresholdImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC2ISS2 *":
    """itkIsoDataThresholdImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC2ISS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_cast(obj)

class itkIsoDataThresholdImageFilterIUC2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUC2IUC2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUC2IUC2 self) -> itkIsoDataThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_Clone, None, itkIsoDataThresholdImageFilterIUC2IUC2)
itkIsoDataThresholdImageFilterIUC2IUC2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_swigregister
itkIsoDataThresholdImageFilterIUC2IUC2_swigregister(itkIsoDataThresholdImageFilterIUC2IUC2)

def itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__() -> "itkIsoDataThresholdImageFilterIUC2IUC2_Pointer":
    """itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__() -> itkIsoDataThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__()

def itkIsoDataThresholdImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC2IUC2 *":
    """itkIsoDataThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC2IUC2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_cast(obj)

class itkIsoDataThresholdImageFilterIUC2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUC2IUS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUC2IUS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUC2IUS2 self) -> itkIsoDataThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC2IUS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC2IUS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC2IUS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC2IUS2

        Create a new object of the class itkIsoDataThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUC2IUS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2_Clone, None, itkIsoDataThresholdImageFilterIUC2IUS2)
itkIsoDataThresholdImageFilterIUC2IUS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2_swigregister
itkIsoDataThresholdImageFilterIUC2IUS2_swigregister(itkIsoDataThresholdImageFilterIUC2IUS2)

def itkIsoDataThresholdImageFilterIUC2IUS2___New_orig__() -> "itkIsoDataThresholdImageFilterIUC2IUS2_Pointer":
    """itkIsoDataThresholdImageFilterIUC2IUS2___New_orig__() -> itkIsoDataThresholdImageFilterIUC2IUS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2___New_orig__()

def itkIsoDataThresholdImageFilterIUC2IUS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC2IUS2 *":
    """itkIsoDataThresholdImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC2IUS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2_cast(obj)

class itkIsoDataThresholdImageFilterIUC3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUC3ISS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUC3ISS3 self) -> itkIsoDataThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUC3ISS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_Clone, None, itkIsoDataThresholdImageFilterIUC3ISS3)
itkIsoDataThresholdImageFilterIUC3ISS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_swigregister
itkIsoDataThresholdImageFilterIUC3ISS3_swigregister(itkIsoDataThresholdImageFilterIUC3ISS3)

def itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__() -> "itkIsoDataThresholdImageFilterIUC3ISS3_Pointer":
    """itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__() -> itkIsoDataThresholdImageFilterIUC3ISS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__()

def itkIsoDataThresholdImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC3ISS3 *":
    """itkIsoDataThresholdImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC3ISS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_cast(obj)

class itkIsoDataThresholdImageFilterIUC3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUC3IUC3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUC3IUC3 self) -> itkIsoDataThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_Clone, None, itkIsoDataThresholdImageFilterIUC3IUC3)
itkIsoDataThresholdImageFilterIUC3IUC3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_swigregister
itkIsoDataThresholdImageFilterIUC3IUC3_swigregister(itkIsoDataThresholdImageFilterIUC3IUC3)

def itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__() -> "itkIsoDataThresholdImageFilterIUC3IUC3_Pointer":
    """itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__() -> itkIsoDataThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__()

def itkIsoDataThresholdImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC3IUC3 *":
    """itkIsoDataThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC3IUC3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_cast(obj)

class itkIsoDataThresholdImageFilterIUC3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUC3IUS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUC3IUS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUC3IUS3 self) -> itkIsoDataThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC3IUS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC3IUS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC3IUS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC3IUS3

        Create a new object of the class itkIsoDataThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUC3IUS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3_Clone, None, itkIsoDataThresholdImageFilterIUC3IUS3)
itkIsoDataThresholdImageFilterIUC3IUS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3_swigregister
itkIsoDataThresholdImageFilterIUC3IUS3_swigregister(itkIsoDataThresholdImageFilterIUC3IUS3)

def itkIsoDataThresholdImageFilterIUC3IUS3___New_orig__() -> "itkIsoDataThresholdImageFilterIUC3IUS3_Pointer":
    """itkIsoDataThresholdImageFilterIUC3IUS3___New_orig__() -> itkIsoDataThresholdImageFilterIUC3IUS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3___New_orig__()

def itkIsoDataThresholdImageFilterIUC3IUS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC3IUS3 *":
    """itkIsoDataThresholdImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC3IUS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3_cast(obj)

class itkIsoDataThresholdImageFilterIUS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUS2ISS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUS2ISS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUS2ISS2 self) -> itkIsoDataThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS2ISS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS2ISS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUS2ISS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2_Clone, None, itkIsoDataThresholdImageFilterIUS2ISS2)
itkIsoDataThresholdImageFilterIUS2ISS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2_swigregister
itkIsoDataThresholdImageFilterIUS2ISS2_swigregister(itkIsoDataThresholdImageFilterIUS2ISS2)

def itkIsoDataThresholdImageFilterIUS2ISS2___New_orig__() -> "itkIsoDataThresholdImageFilterIUS2ISS2_Pointer":
    """itkIsoDataThresholdImageFilterIUS2ISS2___New_orig__() -> itkIsoDataThresholdImageFilterIUS2ISS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2___New_orig__()

def itkIsoDataThresholdImageFilterIUS2ISS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS2ISS2 *":
    """itkIsoDataThresholdImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS2ISS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2_cast(obj)

class itkIsoDataThresholdImageFilterIUS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUS2IUC2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUS2IUC2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUS2IUC2 self) -> itkIsoDataThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS2IUC2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS2IUC2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUS2IUC2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2_Clone, None, itkIsoDataThresholdImageFilterIUS2IUC2)
itkIsoDataThresholdImageFilterIUS2IUC2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2_swigregister
itkIsoDataThresholdImageFilterIUS2IUC2_swigregister(itkIsoDataThresholdImageFilterIUS2IUC2)

def itkIsoDataThresholdImageFilterIUS2IUC2___New_orig__() -> "itkIsoDataThresholdImageFilterIUS2IUC2_Pointer":
    """itkIsoDataThresholdImageFilterIUS2IUC2___New_orig__() -> itkIsoDataThresholdImageFilterIUS2IUC2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2___New_orig__()

def itkIsoDataThresholdImageFilterIUS2IUC2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS2IUC2 *":
    """itkIsoDataThresholdImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS2IUC2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2_cast(obj)

class itkIsoDataThresholdImageFilterIUS2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUS2IUS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUS2IUS2 self) -> itkIsoDataThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS2IUS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS2IUS2

        Create a new object of the class itkIsoDataThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUS2IUS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2_Clone, None, itkIsoDataThresholdImageFilterIUS2IUS2)
itkIsoDataThresholdImageFilterIUS2IUS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2_swigregister
itkIsoDataThresholdImageFilterIUS2IUS2_swigregister(itkIsoDataThresholdImageFilterIUS2IUS2)

def itkIsoDataThresholdImageFilterIUS2IUS2___New_orig__() -> "itkIsoDataThresholdImageFilterIUS2IUS2_Pointer":
    """itkIsoDataThresholdImageFilterIUS2IUS2___New_orig__() -> itkIsoDataThresholdImageFilterIUS2IUS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2___New_orig__()

def itkIsoDataThresholdImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS2IUS2 *":
    """itkIsoDataThresholdImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS2IUS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2_cast(obj)

class itkIsoDataThresholdImageFilterIUS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUS3ISS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUS3ISS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUS3ISS3 self) -> itkIsoDataThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS3ISS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS3ISS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUS3ISS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3_Clone, None, itkIsoDataThresholdImageFilterIUS3ISS3)
itkIsoDataThresholdImageFilterIUS3ISS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3_swigregister
itkIsoDataThresholdImageFilterIUS3ISS3_swigregister(itkIsoDataThresholdImageFilterIUS3ISS3)

def itkIsoDataThresholdImageFilterIUS3ISS3___New_orig__() -> "itkIsoDataThresholdImageFilterIUS3ISS3_Pointer":
    """itkIsoDataThresholdImageFilterIUS3ISS3___New_orig__() -> itkIsoDataThresholdImageFilterIUS3ISS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3___New_orig__()

def itkIsoDataThresholdImageFilterIUS3ISS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS3ISS3 *":
    """itkIsoDataThresholdImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS3ISS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3_cast(obj)

class itkIsoDataThresholdImageFilterIUS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUS3IUC3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUS3IUC3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUS3IUC3 self) -> itkIsoDataThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS3IUC3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS3IUC3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUS3IUC3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3_Clone, None, itkIsoDataThresholdImageFilterIUS3IUC3)
itkIsoDataThresholdImageFilterIUS3IUC3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3_swigregister
itkIsoDataThresholdImageFilterIUS3IUC3_swigregister(itkIsoDataThresholdImageFilterIUS3IUC3)

def itkIsoDataThresholdImageFilterIUS3IUC3___New_orig__() -> "itkIsoDataThresholdImageFilterIUS3IUC3_Pointer":
    """itkIsoDataThresholdImageFilterIUS3IUC3___New_orig__() -> itkIsoDataThresholdImageFilterIUS3IUC3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3___New_orig__()

def itkIsoDataThresholdImageFilterIUS3IUC3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS3IUC3 *":
    """itkIsoDataThresholdImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS3IUC3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3_cast(obj)

class itkIsoDataThresholdImageFilterIUS3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUS3IUS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUS3IUS3 self) -> itkIsoDataThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS3IUS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS3IUS3

        Create a new object of the class itkIsoDataThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUS3IUS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3_Clone, None, itkIsoDataThresholdImageFilterIUS3IUS3)
itkIsoDataThresholdImageFilterIUS3IUS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3_swigregister
itkIsoDataThresholdImageFilterIUS3IUS3_swigregister(itkIsoDataThresholdImageFilterIUS3IUS3)

def itkIsoDataThresholdImageFilterIUS3IUS3___New_orig__() -> "itkIsoDataThresholdImageFilterIUS3IUS3_Pointer":
    """itkIsoDataThresholdImageFilterIUS3IUS3___New_orig__() -> itkIsoDataThresholdImageFilterIUS3IUS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3___New_orig__()

def itkIsoDataThresholdImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUS3IUS3 *":
    """itkIsoDataThresholdImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUS3IUS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def iso_data_threshold_image_filter(*args, **kwargs):
    """Procedural interface for IsoDataThresholdImageFilter"""
    import itk
    instance = itk.IsoDataThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def iso_data_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.IsoDataThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.IsoDataThresholdImageFilter.values()[0]
    else:
        filter_object = itk.IsoDataThresholdImageFilter

    iso_data_threshold_image_filter.__doc__ = filter_object.__doc__
    iso_data_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    iso_data_threshold_image_filter.__doc__ += "Available Keyword Arguments:\n"
    iso_data_threshold_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



