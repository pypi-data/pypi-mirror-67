# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkApproximateSignedDistanceMapImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkApproximateSignedDistanceMapImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkApproximateSignedDistanceMapImageFilterPython
            return _itkApproximateSignedDistanceMapImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkApproximateSignedDistanceMapImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkApproximateSignedDistanceMapImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkApproximateSignedDistanceMapImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import pyBasePython
import itkMatrixPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRegionPython
import ITKCommonBasePython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython

def itkApproximateSignedDistanceMapImageFilterID3ID3_New():
  return itkApproximateSignedDistanceMapImageFilterID3ID3.New()


def itkApproximateSignedDistanceMapImageFilterID2ID2_New():
  return itkApproximateSignedDistanceMapImageFilterID2ID2.New()


def itkApproximateSignedDistanceMapImageFilterIF3IF3_New():
  return itkApproximateSignedDistanceMapImageFilterIF3IF3.New()


def itkApproximateSignedDistanceMapImageFilterIF2IF2_New():
  return itkApproximateSignedDistanceMapImageFilterIF2IF2.New()


def itkApproximateSignedDistanceMapImageFilterISS3ISS3_New():
  return itkApproximateSignedDistanceMapImageFilterISS3ISS3.New()


def itkApproximateSignedDistanceMapImageFilterISS2ISS2_New():
  return itkApproximateSignedDistanceMapImageFilterISS2ISS2.New()

class itkApproximateSignedDistanceMapImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    Create a map of the approximate signed distance from the boundaries of
    a binary image.

    The ApproximateSignedDistanceMapImageFilter takes as input a binary
    image and produces a signed distance map. Each pixel value in the
    output contains the approximate distance from that pixel to the
    nearest "object" in the binary image. This filter differs from the
    DanielssonDistanceMapImageFilter in that it calculates the distance to
    the "object edge" for pixels within the object.

    Negative values in the output indicate that the pixel at that position
    is within an object in the input image. The absolute value of a
    negative pixel represents the approximate distance to the nearest
    object boundary pixel.

    WARNING: This filter requires that the output type be floating-point.
    Otherwise internal calculations will not be performed to the
    appropriate precision, resulting in completely incorrect (read: zero-
    valued) output.

    The distances computed by this filter are Chamfer distances, which are
    only an approximation to Euclidian distances, and are not as exact
    approximations as those calculated by the
    DanielssonDistanceMapImageFilter. On the other hand, this filter is
    faster.

    This filter requires that an "inside value" and "outside value" be
    set as parameters. The "inside value" is the intensity value of the
    binary image which corresponds to objects, and the "outside value"
    is the intensity of the background. (A typical binary image often
    represents objects as black (0) and background as white (usually 255),
    or vice-versa.) Note that this filter is slightly faster if the inside
    value is less than the outside value. Otherwise an extra iteration
    through the image is required.

    This filter uses the FastChamferDistanceImageFilter and the
    IsoContourDistanceImageFilter internally to perform the distance
    calculations.

    See:   DanielssonDistanceMapImageFilter

    See:   SignedDanielssonDistanceMapImageFilter

    See:   SignedMaurerDistanceMapImageFilter

    See:   FastChamferDistanceImageFilter

    See:   IsoContourDistanceImageFilter

    Zach Pincus  \\sphinx
    \\sphinxexample{Filtering/DistanceMap/ApproxDistanceMapOfBinary,
    Approximate Distance Map Of Binary Image} \\endsphinx

    C++ includes: itkApproximateSignedDistanceMapImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer":
        """Clone(itkApproximateSignedDistanceMapImageFilterID2ID2 self) -> itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_Clone(self)


    def SetInsideValue(self, _arg: 'double const') -> "void":
        """
        SetInsideValue(itkApproximateSignedDistanceMapImageFilterID2ID2 self, double const _arg)

        Set/Get intensity
        value representing the interior of objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "double":
        """GetInsideValue(itkApproximateSignedDistanceMapImageFilterID2ID2 self) -> double"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'double const') -> "void":
        """
        SetOutsideValue(itkApproximateSignedDistanceMapImageFilterID2ID2 self, double const _arg)

        Set/Get intensity
        value representing non-objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "double":
        """GetOutsideValue(itkApproximateSignedDistanceMapImageFilterID2ID2 self) -> double"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_GetOutsideValue(self)

    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_InputEqualityComparableCheck
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterID2ID2"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterID2ID2

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkApproximateSignedDistanceMapImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkApproximateSignedDistanceMapImageFilterID2ID2.Clone = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_Clone, None, itkApproximateSignedDistanceMapImageFilterID2ID2)
itkApproximateSignedDistanceMapImageFilterID2ID2.SetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_SetInsideValue, None, itkApproximateSignedDistanceMapImageFilterID2ID2)
itkApproximateSignedDistanceMapImageFilterID2ID2.GetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_GetInsideValue, None, itkApproximateSignedDistanceMapImageFilterID2ID2)
itkApproximateSignedDistanceMapImageFilterID2ID2.SetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_SetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterID2ID2)
itkApproximateSignedDistanceMapImageFilterID2ID2.GetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_GetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterID2ID2)
itkApproximateSignedDistanceMapImageFilterID2ID2_swigregister = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_swigregister
itkApproximateSignedDistanceMapImageFilterID2ID2_swigregister(itkApproximateSignedDistanceMapImageFilterID2ID2)

def itkApproximateSignedDistanceMapImageFilterID2ID2___New_orig__() -> "itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer":
    """itkApproximateSignedDistanceMapImageFilterID2ID2___New_orig__() -> itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2___New_orig__()

def itkApproximateSignedDistanceMapImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterID2ID2 *":
    """itkApproximateSignedDistanceMapImageFilterID2ID2_cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterID2ID2"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_cast(obj)

class itkApproximateSignedDistanceMapImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    Create a map of the approximate signed distance from the boundaries of
    a binary image.

    The ApproximateSignedDistanceMapImageFilter takes as input a binary
    image and produces a signed distance map. Each pixel value in the
    output contains the approximate distance from that pixel to the
    nearest "object" in the binary image. This filter differs from the
    DanielssonDistanceMapImageFilter in that it calculates the distance to
    the "object edge" for pixels within the object.

    Negative values in the output indicate that the pixel at that position
    is within an object in the input image. The absolute value of a
    negative pixel represents the approximate distance to the nearest
    object boundary pixel.

    WARNING: This filter requires that the output type be floating-point.
    Otherwise internal calculations will not be performed to the
    appropriate precision, resulting in completely incorrect (read: zero-
    valued) output.

    The distances computed by this filter are Chamfer distances, which are
    only an approximation to Euclidian distances, and are not as exact
    approximations as those calculated by the
    DanielssonDistanceMapImageFilter. On the other hand, this filter is
    faster.

    This filter requires that an "inside value" and "outside value" be
    set as parameters. The "inside value" is the intensity value of the
    binary image which corresponds to objects, and the "outside value"
    is the intensity of the background. (A typical binary image often
    represents objects as black (0) and background as white (usually 255),
    or vice-versa.) Note that this filter is slightly faster if the inside
    value is less than the outside value. Otherwise an extra iteration
    through the image is required.

    This filter uses the FastChamferDistanceImageFilter and the
    IsoContourDistanceImageFilter internally to perform the distance
    calculations.

    See:   DanielssonDistanceMapImageFilter

    See:   SignedDanielssonDistanceMapImageFilter

    See:   SignedMaurerDistanceMapImageFilter

    See:   FastChamferDistanceImageFilter

    See:   IsoContourDistanceImageFilter

    Zach Pincus  \\sphinx
    \\sphinxexample{Filtering/DistanceMap/ApproxDistanceMapOfBinary,
    Approximate Distance Map Of Binary Image} \\endsphinx

    C++ includes: itkApproximateSignedDistanceMapImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer":
        """Clone(itkApproximateSignedDistanceMapImageFilterID3ID3 self) -> itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_Clone(self)


    def SetInsideValue(self, _arg: 'double const') -> "void":
        """
        SetInsideValue(itkApproximateSignedDistanceMapImageFilterID3ID3 self, double const _arg)

        Set/Get intensity
        value representing the interior of objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "double":
        """GetInsideValue(itkApproximateSignedDistanceMapImageFilterID3ID3 self) -> double"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'double const') -> "void":
        """
        SetOutsideValue(itkApproximateSignedDistanceMapImageFilterID3ID3 self, double const _arg)

        Set/Get intensity
        value representing non-objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "double":
        """GetOutsideValue(itkApproximateSignedDistanceMapImageFilterID3ID3 self) -> double"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_GetOutsideValue(self)

    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_InputEqualityComparableCheck
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterID3ID3"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterID3ID3

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkApproximateSignedDistanceMapImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkApproximateSignedDistanceMapImageFilterID3ID3.Clone = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_Clone, None, itkApproximateSignedDistanceMapImageFilterID3ID3)
itkApproximateSignedDistanceMapImageFilterID3ID3.SetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_SetInsideValue, None, itkApproximateSignedDistanceMapImageFilterID3ID3)
itkApproximateSignedDistanceMapImageFilterID3ID3.GetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_GetInsideValue, None, itkApproximateSignedDistanceMapImageFilterID3ID3)
itkApproximateSignedDistanceMapImageFilterID3ID3.SetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_SetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterID3ID3)
itkApproximateSignedDistanceMapImageFilterID3ID3.GetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_GetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterID3ID3)
itkApproximateSignedDistanceMapImageFilterID3ID3_swigregister = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_swigregister
itkApproximateSignedDistanceMapImageFilterID3ID3_swigregister(itkApproximateSignedDistanceMapImageFilterID3ID3)

def itkApproximateSignedDistanceMapImageFilterID3ID3___New_orig__() -> "itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer":
    """itkApproximateSignedDistanceMapImageFilterID3ID3___New_orig__() -> itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3___New_orig__()

def itkApproximateSignedDistanceMapImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterID3ID3 *":
    """itkApproximateSignedDistanceMapImageFilterID3ID3_cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterID3ID3"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_cast(obj)

class itkApproximateSignedDistanceMapImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Create a map of the approximate signed distance from the boundaries of
    a binary image.

    The ApproximateSignedDistanceMapImageFilter takes as input a binary
    image and produces a signed distance map. Each pixel value in the
    output contains the approximate distance from that pixel to the
    nearest "object" in the binary image. This filter differs from the
    DanielssonDistanceMapImageFilter in that it calculates the distance to
    the "object edge" for pixels within the object.

    Negative values in the output indicate that the pixel at that position
    is within an object in the input image. The absolute value of a
    negative pixel represents the approximate distance to the nearest
    object boundary pixel.

    WARNING: This filter requires that the output type be floating-point.
    Otherwise internal calculations will not be performed to the
    appropriate precision, resulting in completely incorrect (read: zero-
    valued) output.

    The distances computed by this filter are Chamfer distances, which are
    only an approximation to Euclidian distances, and are not as exact
    approximations as those calculated by the
    DanielssonDistanceMapImageFilter. On the other hand, this filter is
    faster.

    This filter requires that an "inside value" and "outside value" be
    set as parameters. The "inside value" is the intensity value of the
    binary image which corresponds to objects, and the "outside value"
    is the intensity of the background. (A typical binary image often
    represents objects as black (0) and background as white (usually 255),
    or vice-versa.) Note that this filter is slightly faster if the inside
    value is less than the outside value. Otherwise an extra iteration
    through the image is required.

    This filter uses the FastChamferDistanceImageFilter and the
    IsoContourDistanceImageFilter internally to perform the distance
    calculations.

    See:   DanielssonDistanceMapImageFilter

    See:   SignedDanielssonDistanceMapImageFilter

    See:   SignedMaurerDistanceMapImageFilter

    See:   FastChamferDistanceImageFilter

    See:   IsoContourDistanceImageFilter

    Zach Pincus  \\sphinx
    \\sphinxexample{Filtering/DistanceMap/ApproxDistanceMapOfBinary,
    Approximate Distance Map Of Binary Image} \\endsphinx

    C++ includes: itkApproximateSignedDistanceMapImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer":
        """Clone(itkApproximateSignedDistanceMapImageFilterIF2IF2 self) -> itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_Clone(self)


    def SetInsideValue(self, _arg: 'float const') -> "void":
        """
        SetInsideValue(itkApproximateSignedDistanceMapImageFilterIF2IF2 self, float const _arg)

        Set/Get intensity
        value representing the interior of objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "float":
        """GetInsideValue(itkApproximateSignedDistanceMapImageFilterIF2IF2 self) -> float"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'float const') -> "void":
        """
        SetOutsideValue(itkApproximateSignedDistanceMapImageFilterIF2IF2 self, float const _arg)

        Set/Get intensity
        value representing non-objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "float":
        """GetOutsideValue(itkApproximateSignedDistanceMapImageFilterIF2IF2 self) -> float"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_GetOutsideValue(self)

    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_InputEqualityComparableCheck
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterIF2IF2"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterIF2IF2

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkApproximateSignedDistanceMapImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkApproximateSignedDistanceMapImageFilterIF2IF2.Clone = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_Clone, None, itkApproximateSignedDistanceMapImageFilterIF2IF2)
itkApproximateSignedDistanceMapImageFilterIF2IF2.SetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_SetInsideValue, None, itkApproximateSignedDistanceMapImageFilterIF2IF2)
itkApproximateSignedDistanceMapImageFilterIF2IF2.GetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_GetInsideValue, None, itkApproximateSignedDistanceMapImageFilterIF2IF2)
itkApproximateSignedDistanceMapImageFilterIF2IF2.SetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_SetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterIF2IF2)
itkApproximateSignedDistanceMapImageFilterIF2IF2.GetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_GetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterIF2IF2)
itkApproximateSignedDistanceMapImageFilterIF2IF2_swigregister = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_swigregister
itkApproximateSignedDistanceMapImageFilterIF2IF2_swigregister(itkApproximateSignedDistanceMapImageFilterIF2IF2)

def itkApproximateSignedDistanceMapImageFilterIF2IF2___New_orig__() -> "itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer":
    """itkApproximateSignedDistanceMapImageFilterIF2IF2___New_orig__() -> itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2___New_orig__()

def itkApproximateSignedDistanceMapImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterIF2IF2 *":
    """itkApproximateSignedDistanceMapImageFilterIF2IF2_cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterIF2IF2"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_cast(obj)

class itkApproximateSignedDistanceMapImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Create a map of the approximate signed distance from the boundaries of
    a binary image.

    The ApproximateSignedDistanceMapImageFilter takes as input a binary
    image and produces a signed distance map. Each pixel value in the
    output contains the approximate distance from that pixel to the
    nearest "object" in the binary image. This filter differs from the
    DanielssonDistanceMapImageFilter in that it calculates the distance to
    the "object edge" for pixels within the object.

    Negative values in the output indicate that the pixel at that position
    is within an object in the input image. The absolute value of a
    negative pixel represents the approximate distance to the nearest
    object boundary pixel.

    WARNING: This filter requires that the output type be floating-point.
    Otherwise internal calculations will not be performed to the
    appropriate precision, resulting in completely incorrect (read: zero-
    valued) output.

    The distances computed by this filter are Chamfer distances, which are
    only an approximation to Euclidian distances, and are not as exact
    approximations as those calculated by the
    DanielssonDistanceMapImageFilter. On the other hand, this filter is
    faster.

    This filter requires that an "inside value" and "outside value" be
    set as parameters. The "inside value" is the intensity value of the
    binary image which corresponds to objects, and the "outside value"
    is the intensity of the background. (A typical binary image often
    represents objects as black (0) and background as white (usually 255),
    or vice-versa.) Note that this filter is slightly faster if the inside
    value is less than the outside value. Otherwise an extra iteration
    through the image is required.

    This filter uses the FastChamferDistanceImageFilter and the
    IsoContourDistanceImageFilter internally to perform the distance
    calculations.

    See:   DanielssonDistanceMapImageFilter

    See:   SignedDanielssonDistanceMapImageFilter

    See:   SignedMaurerDistanceMapImageFilter

    See:   FastChamferDistanceImageFilter

    See:   IsoContourDistanceImageFilter

    Zach Pincus  \\sphinx
    \\sphinxexample{Filtering/DistanceMap/ApproxDistanceMapOfBinary,
    Approximate Distance Map Of Binary Image} \\endsphinx

    C++ includes: itkApproximateSignedDistanceMapImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer":
        """Clone(itkApproximateSignedDistanceMapImageFilterIF3IF3 self) -> itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_Clone(self)


    def SetInsideValue(self, _arg: 'float const') -> "void":
        """
        SetInsideValue(itkApproximateSignedDistanceMapImageFilterIF3IF3 self, float const _arg)

        Set/Get intensity
        value representing the interior of objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "float":
        """GetInsideValue(itkApproximateSignedDistanceMapImageFilterIF3IF3 self) -> float"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'float const') -> "void":
        """
        SetOutsideValue(itkApproximateSignedDistanceMapImageFilterIF3IF3 self, float const _arg)

        Set/Get intensity
        value representing non-objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "float":
        """GetOutsideValue(itkApproximateSignedDistanceMapImageFilterIF3IF3 self) -> float"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_GetOutsideValue(self)

    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_InputEqualityComparableCheck
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterIF3IF3"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterIF3IF3

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkApproximateSignedDistanceMapImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkApproximateSignedDistanceMapImageFilterIF3IF3.Clone = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_Clone, None, itkApproximateSignedDistanceMapImageFilterIF3IF3)
itkApproximateSignedDistanceMapImageFilterIF3IF3.SetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_SetInsideValue, None, itkApproximateSignedDistanceMapImageFilterIF3IF3)
itkApproximateSignedDistanceMapImageFilterIF3IF3.GetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_GetInsideValue, None, itkApproximateSignedDistanceMapImageFilterIF3IF3)
itkApproximateSignedDistanceMapImageFilterIF3IF3.SetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_SetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterIF3IF3)
itkApproximateSignedDistanceMapImageFilterIF3IF3.GetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_GetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterIF3IF3)
itkApproximateSignedDistanceMapImageFilterIF3IF3_swigregister = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_swigregister
itkApproximateSignedDistanceMapImageFilterIF3IF3_swigregister(itkApproximateSignedDistanceMapImageFilterIF3IF3)

def itkApproximateSignedDistanceMapImageFilterIF3IF3___New_orig__() -> "itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer":
    """itkApproximateSignedDistanceMapImageFilterIF3IF3___New_orig__() -> itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3___New_orig__()

def itkApproximateSignedDistanceMapImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterIF3IF3 *":
    """itkApproximateSignedDistanceMapImageFilterIF3IF3_cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterIF3IF3"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_cast(obj)

class itkApproximateSignedDistanceMapImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Create a map of the approximate signed distance from the boundaries of
    a binary image.

    The ApproximateSignedDistanceMapImageFilter takes as input a binary
    image and produces a signed distance map. Each pixel value in the
    output contains the approximate distance from that pixel to the
    nearest "object" in the binary image. This filter differs from the
    DanielssonDistanceMapImageFilter in that it calculates the distance to
    the "object edge" for pixels within the object.

    Negative values in the output indicate that the pixel at that position
    is within an object in the input image. The absolute value of a
    negative pixel represents the approximate distance to the nearest
    object boundary pixel.

    WARNING: This filter requires that the output type be floating-point.
    Otherwise internal calculations will not be performed to the
    appropriate precision, resulting in completely incorrect (read: zero-
    valued) output.

    The distances computed by this filter are Chamfer distances, which are
    only an approximation to Euclidian distances, and are not as exact
    approximations as those calculated by the
    DanielssonDistanceMapImageFilter. On the other hand, this filter is
    faster.

    This filter requires that an "inside value" and "outside value" be
    set as parameters. The "inside value" is the intensity value of the
    binary image which corresponds to objects, and the "outside value"
    is the intensity of the background. (A typical binary image often
    represents objects as black (0) and background as white (usually 255),
    or vice-versa.) Note that this filter is slightly faster if the inside
    value is less than the outside value. Otherwise an extra iteration
    through the image is required.

    This filter uses the FastChamferDistanceImageFilter and the
    IsoContourDistanceImageFilter internally to perform the distance
    calculations.

    See:   DanielssonDistanceMapImageFilter

    See:   SignedDanielssonDistanceMapImageFilter

    See:   SignedMaurerDistanceMapImageFilter

    See:   FastChamferDistanceImageFilter

    See:   IsoContourDistanceImageFilter

    Zach Pincus  \\sphinx
    \\sphinxexample{Filtering/DistanceMap/ApproxDistanceMapOfBinary,
    Approximate Distance Map Of Binary Image} \\endsphinx

    C++ includes: itkApproximateSignedDistanceMapImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkApproximateSignedDistanceMapImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkApproximateSignedDistanceMapImageFilterISS2ISS2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkApproximateSignedDistanceMapImageFilterISS2ISS2_Pointer":
        """Clone(itkApproximateSignedDistanceMapImageFilterISS2ISS2 self) -> itkApproximateSignedDistanceMapImageFilterISS2ISS2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_Clone(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkApproximateSignedDistanceMapImageFilterISS2ISS2 self, short const _arg)

        Set/Get intensity
        value representing the interior of objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """GetInsideValue(itkApproximateSignedDistanceMapImageFilterISS2ISS2 self) -> short"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkApproximateSignedDistanceMapImageFilterISS2ISS2 self, short const _arg)

        Set/Get intensity
        value representing non-objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """GetOutsideValue(itkApproximateSignedDistanceMapImageFilterISS2ISS2 self) -> short"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_GetOutsideValue(self)

    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_InputEqualityComparableCheck
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterISS2ISS2"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterISS2ISS2

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkApproximateSignedDistanceMapImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkApproximateSignedDistanceMapImageFilterISS2ISS2.Clone = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_Clone, None, itkApproximateSignedDistanceMapImageFilterISS2ISS2)
itkApproximateSignedDistanceMapImageFilterISS2ISS2.SetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_SetInsideValue, None, itkApproximateSignedDistanceMapImageFilterISS2ISS2)
itkApproximateSignedDistanceMapImageFilterISS2ISS2.GetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_GetInsideValue, None, itkApproximateSignedDistanceMapImageFilterISS2ISS2)
itkApproximateSignedDistanceMapImageFilterISS2ISS2.SetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_SetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterISS2ISS2)
itkApproximateSignedDistanceMapImageFilterISS2ISS2.GetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_GetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterISS2ISS2)
itkApproximateSignedDistanceMapImageFilterISS2ISS2_swigregister = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_swigregister
itkApproximateSignedDistanceMapImageFilterISS2ISS2_swigregister(itkApproximateSignedDistanceMapImageFilterISS2ISS2)

def itkApproximateSignedDistanceMapImageFilterISS2ISS2___New_orig__() -> "itkApproximateSignedDistanceMapImageFilterISS2ISS2_Pointer":
    """itkApproximateSignedDistanceMapImageFilterISS2ISS2___New_orig__() -> itkApproximateSignedDistanceMapImageFilterISS2ISS2_Pointer"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2___New_orig__()

def itkApproximateSignedDistanceMapImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterISS2ISS2 *":
    """itkApproximateSignedDistanceMapImageFilterISS2ISS2_cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterISS2ISS2"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_cast(obj)

class itkApproximateSignedDistanceMapImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Create a map of the approximate signed distance from the boundaries of
    a binary image.

    The ApproximateSignedDistanceMapImageFilter takes as input a binary
    image and produces a signed distance map. Each pixel value in the
    output contains the approximate distance from that pixel to the
    nearest "object" in the binary image. This filter differs from the
    DanielssonDistanceMapImageFilter in that it calculates the distance to
    the "object edge" for pixels within the object.

    Negative values in the output indicate that the pixel at that position
    is within an object in the input image. The absolute value of a
    negative pixel represents the approximate distance to the nearest
    object boundary pixel.

    WARNING: This filter requires that the output type be floating-point.
    Otherwise internal calculations will not be performed to the
    appropriate precision, resulting in completely incorrect (read: zero-
    valued) output.

    The distances computed by this filter are Chamfer distances, which are
    only an approximation to Euclidian distances, and are not as exact
    approximations as those calculated by the
    DanielssonDistanceMapImageFilter. On the other hand, this filter is
    faster.

    This filter requires that an "inside value" and "outside value" be
    set as parameters. The "inside value" is the intensity value of the
    binary image which corresponds to objects, and the "outside value"
    is the intensity of the background. (A typical binary image often
    represents objects as black (0) and background as white (usually 255),
    or vice-versa.) Note that this filter is slightly faster if the inside
    value is less than the outside value. Otherwise an extra iteration
    through the image is required.

    This filter uses the FastChamferDistanceImageFilter and the
    IsoContourDistanceImageFilter internally to perform the distance
    calculations.

    See:   DanielssonDistanceMapImageFilter

    See:   SignedDanielssonDistanceMapImageFilter

    See:   SignedMaurerDistanceMapImageFilter

    See:   FastChamferDistanceImageFilter

    See:   IsoContourDistanceImageFilter

    Zach Pincus  \\sphinx
    \\sphinxexample{Filtering/DistanceMap/ApproxDistanceMapOfBinary,
    Approximate Distance Map Of Binary Image} \\endsphinx

    C++ includes: itkApproximateSignedDistanceMapImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkApproximateSignedDistanceMapImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkApproximateSignedDistanceMapImageFilterISS3ISS3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkApproximateSignedDistanceMapImageFilterISS3ISS3_Pointer":
        """Clone(itkApproximateSignedDistanceMapImageFilterISS3ISS3 self) -> itkApproximateSignedDistanceMapImageFilterISS3ISS3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_Clone(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkApproximateSignedDistanceMapImageFilterISS3ISS3 self, short const _arg)

        Set/Get intensity
        value representing the interior of objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """GetInsideValue(itkApproximateSignedDistanceMapImageFilterISS3ISS3 self) -> short"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkApproximateSignedDistanceMapImageFilterISS3ISS3 self, short const _arg)

        Set/Get intensity
        value representing non-objects in the mask. 
        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """GetOutsideValue(itkApproximateSignedDistanceMapImageFilterISS3ISS3 self) -> short"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_GetOutsideValue(self)

    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_InputEqualityComparableCheck
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterISS3ISS3"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterISS3ISS3

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkApproximateSignedDistanceMapImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkApproximateSignedDistanceMapImageFilterISS3ISS3.Clone = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_Clone, None, itkApproximateSignedDistanceMapImageFilterISS3ISS3)
itkApproximateSignedDistanceMapImageFilterISS3ISS3.SetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_SetInsideValue, None, itkApproximateSignedDistanceMapImageFilterISS3ISS3)
itkApproximateSignedDistanceMapImageFilterISS3ISS3.GetInsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_GetInsideValue, None, itkApproximateSignedDistanceMapImageFilterISS3ISS3)
itkApproximateSignedDistanceMapImageFilterISS3ISS3.SetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_SetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterISS3ISS3)
itkApproximateSignedDistanceMapImageFilterISS3ISS3.GetOutsideValue = new_instancemethod(_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_GetOutsideValue, None, itkApproximateSignedDistanceMapImageFilterISS3ISS3)
itkApproximateSignedDistanceMapImageFilterISS3ISS3_swigregister = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_swigregister
itkApproximateSignedDistanceMapImageFilterISS3ISS3_swigregister(itkApproximateSignedDistanceMapImageFilterISS3ISS3)

def itkApproximateSignedDistanceMapImageFilterISS3ISS3___New_orig__() -> "itkApproximateSignedDistanceMapImageFilterISS3ISS3_Pointer":
    """itkApproximateSignedDistanceMapImageFilterISS3ISS3___New_orig__() -> itkApproximateSignedDistanceMapImageFilterISS3ISS3_Pointer"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3___New_orig__()

def itkApproximateSignedDistanceMapImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkApproximateSignedDistanceMapImageFilterISS3ISS3 *":
    """itkApproximateSignedDistanceMapImageFilterISS3ISS3_cast(itkLightObject obj) -> itkApproximateSignedDistanceMapImageFilterISS3ISS3"""
    return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def approximate_signed_distance_map_image_filter(*args, **kwargs):
    """Procedural interface for ApproximateSignedDistanceMapImageFilter"""
    import itk
    instance = itk.ApproximateSignedDistanceMapImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def approximate_signed_distance_map_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ApproximateSignedDistanceMapImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ApproximateSignedDistanceMapImageFilter.values()[0]
    else:
        filter_object = itk.ApproximateSignedDistanceMapImageFilter

    approximate_signed_distance_map_image_filter.__doc__ = filter_object.__doc__
    approximate_signed_distance_map_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    approximate_signed_distance_map_image_filter.__doc__ += "Available Keyword Arguments:\n"
    approximate_signed_distance_map_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



