# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkUnsharpMaskImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkUnsharpMaskImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkUnsharpMaskImageFilterPython
            return _itkUnsharpMaskImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkUnsharpMaskImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkUnsharpMaskImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkUnsharpMaskImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkImageSourceCommonPython
import itkVectorImagePython
import stdcomplexPython
import itkVariableLengthVectorPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrixPython
import vnl_vectorPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkImageToImageFilterCommonPython

def itkUnsharpMaskImageFilterID3ID3_New():
  return itkUnsharpMaskImageFilterID3ID3.New()


def itkUnsharpMaskImageFilterID2ID2_New():
  return itkUnsharpMaskImageFilterID2ID2.New()


def itkUnsharpMaskImageFilterIF3IF3_New():
  return itkUnsharpMaskImageFilterIF3IF3.New()


def itkUnsharpMaskImageFilterIF2IF2_New():
  return itkUnsharpMaskImageFilterIF2IF2.New()


def itkUnsharpMaskImageFilterIUS3IUS3_New():
  return itkUnsharpMaskImageFilterIUS3IUS3.New()


def itkUnsharpMaskImageFilterIUS2IUS2_New():
  return itkUnsharpMaskImageFilterIUS2IUS2.New()


def itkUnsharpMaskImageFilterIUC3IUC3_New():
  return itkUnsharpMaskImageFilterIUC3IUC3.New()


def itkUnsharpMaskImageFilterIUC2IUC2_New():
  return itkUnsharpMaskImageFilterIUC2IUC2.New()


def itkUnsharpMaskImageFilterISS3ISS3_New():
  return itkUnsharpMaskImageFilterISS3ISS3.New()


def itkUnsharpMaskImageFilterISS2ISS2_New():
  return itkUnsharpMaskImageFilterISS2ISS2.New()

class itkUnsharpMaskImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter

    C++ includes: itkUnsharpMaskImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnsharpMaskImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkUnsharpMaskImageFilterID2ID2_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnsharpMaskImageFilterID2ID2_Pointer":
        """Clone(itkUnsharpMaskImageFilterID2ID2 self) -> itkUnsharpMaskImageFilterID2ID2_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_Clone(self)

    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SameDimensionCheck
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_InputHasNumericTraitsCheck
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_InternalTypeIsFloatingPoint

    def SetSigmas(self, _arg: 'itkFixedArrayD2') -> "void":
        """
        SetSigmas(itkUnsharpMaskImageFilterID2ID2 self, itkFixedArrayD2 _arg)

        Set/Get Sigma values
        measured in the units of image spacing. Default: 1.0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetSigmas(self, _arg)


    def GetSigmas(self) -> "itkFixedArrayD2":
        """GetSigmas(itkUnsharpMaskImageFilterID2ID2 self) -> itkFixedArrayD2"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetSigmas(self)


    def SetSigma(self, sigma: 'double const') -> "void":
        """
        SetSigma(itkUnsharpMaskImageFilterID2ID2 self, double const sigma)

        Convenience method for
        setting all dimensional parameters to the same values. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetSigma(self, sigma)


    def SetAmount(self, _arg: 'float const') -> "void":
        """
        SetAmount(itkUnsharpMaskImageFilterID2ID2 self, float const _arg)

        Set/Get amount of
        enhancement. Usual range: 0.1 to 2.0. Default: 0.5. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetAmount(self, _arg)


    def GetAmount(self) -> "float":
        """GetAmount(itkUnsharpMaskImageFilterID2ID2 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetAmount(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """
        SetThreshold(itkUnsharpMaskImageFilterID2ID2 self, float const _arg)

        Set/Get threshold for
        enhancement. Default: 0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetThreshold(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(itkUnsharpMaskImageFilterID2ID2 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetThreshold(self)


    def SetClamp(self, _arg: 'bool const') -> "void":
        """
        SetClamp(itkUnsharpMaskImageFilterID2ID2 self, bool const _arg)

        Set/Get whether to clamp
        values to supported range of output type. Default: On. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetClamp(self, _arg)


    def GetClamp(self) -> "bool":
        """GetClamp(itkUnsharpMaskImageFilterID2ID2 self) -> bool"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetClamp(self)


    def ClampOn(self) -> "void":
        """ClampOn(itkUnsharpMaskImageFilterID2ID2 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_ClampOn(self)


    def ClampOff(self) -> "void":
        """ClampOff(itkUnsharpMaskImageFilterID2ID2 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_ClampOff(self)

    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkUnsharpMaskImageFilterID2ID2"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterID2ID2

        Create a new object of the class itkUnsharpMaskImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnsharpMaskImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnsharpMaskImageFilterID2ID2.Clone = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_Clone, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.SetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetSigmas, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.GetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetSigmas, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.SetSigma = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetSigma, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.SetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetAmount, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.GetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetAmount, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.SetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetThreshold, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.GetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetThreshold, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.SetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetClamp, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.GetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetClamp, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.ClampOn = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_ClampOn, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2.ClampOff = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_ClampOff, None, itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2_swigregister = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_swigregister
itkUnsharpMaskImageFilterID2ID2_swigregister(itkUnsharpMaskImageFilterID2ID2)

def itkUnsharpMaskImageFilterID2ID2___New_orig__() -> "itkUnsharpMaskImageFilterID2ID2_Pointer":
    """itkUnsharpMaskImageFilterID2ID2___New_orig__() -> itkUnsharpMaskImageFilterID2ID2_Pointer"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2___New_orig__()

def itkUnsharpMaskImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterID2ID2 *":
    """itkUnsharpMaskImageFilterID2ID2_cast(itkLightObject obj) -> itkUnsharpMaskImageFilterID2ID2"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_cast(obj)

class itkUnsharpMaskImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter

    C++ includes: itkUnsharpMaskImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnsharpMaskImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkUnsharpMaskImageFilterID3ID3_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnsharpMaskImageFilterID3ID3_Pointer":
        """Clone(itkUnsharpMaskImageFilterID3ID3 self) -> itkUnsharpMaskImageFilterID3ID3_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_Clone(self)

    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SameDimensionCheck
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_InputHasNumericTraitsCheck
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_InternalTypeIsFloatingPoint

    def SetSigmas(self, _arg: 'itkFixedArrayD3') -> "void":
        """
        SetSigmas(itkUnsharpMaskImageFilterID3ID3 self, itkFixedArrayD3 _arg)

        Set/Get Sigma values
        measured in the units of image spacing. Default: 1.0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetSigmas(self, _arg)


    def GetSigmas(self) -> "itkFixedArrayD3":
        """GetSigmas(itkUnsharpMaskImageFilterID3ID3 self) -> itkFixedArrayD3"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetSigmas(self)


    def SetSigma(self, sigma: 'double const') -> "void":
        """
        SetSigma(itkUnsharpMaskImageFilterID3ID3 self, double const sigma)

        Convenience method for
        setting all dimensional parameters to the same values. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetSigma(self, sigma)


    def SetAmount(self, _arg: 'float const') -> "void":
        """
        SetAmount(itkUnsharpMaskImageFilterID3ID3 self, float const _arg)

        Set/Get amount of
        enhancement. Usual range: 0.1 to 2.0. Default: 0.5. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetAmount(self, _arg)


    def GetAmount(self) -> "float":
        """GetAmount(itkUnsharpMaskImageFilterID3ID3 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetAmount(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """
        SetThreshold(itkUnsharpMaskImageFilterID3ID3 self, float const _arg)

        Set/Get threshold for
        enhancement. Default: 0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetThreshold(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(itkUnsharpMaskImageFilterID3ID3 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetThreshold(self)


    def SetClamp(self, _arg: 'bool const') -> "void":
        """
        SetClamp(itkUnsharpMaskImageFilterID3ID3 self, bool const _arg)

        Set/Get whether to clamp
        values to supported range of output type. Default: On. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetClamp(self, _arg)


    def GetClamp(self) -> "bool":
        """GetClamp(itkUnsharpMaskImageFilterID3ID3 self) -> bool"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetClamp(self)


    def ClampOn(self) -> "void":
        """ClampOn(itkUnsharpMaskImageFilterID3ID3 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_ClampOn(self)


    def ClampOff(self) -> "void":
        """ClampOff(itkUnsharpMaskImageFilterID3ID3 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_ClampOff(self)

    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkUnsharpMaskImageFilterID3ID3"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterID3ID3

        Create a new object of the class itkUnsharpMaskImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnsharpMaskImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnsharpMaskImageFilterID3ID3.Clone = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_Clone, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.SetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetSigmas, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.GetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetSigmas, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.SetSigma = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetSigma, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.SetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetAmount, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.GetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetAmount, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.SetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetThreshold, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.GetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetThreshold, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.SetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetClamp, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.GetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetClamp, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.ClampOn = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_ClampOn, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3.ClampOff = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_ClampOff, None, itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3_swigregister = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_swigregister
itkUnsharpMaskImageFilterID3ID3_swigregister(itkUnsharpMaskImageFilterID3ID3)

def itkUnsharpMaskImageFilterID3ID3___New_orig__() -> "itkUnsharpMaskImageFilterID3ID3_Pointer":
    """itkUnsharpMaskImageFilterID3ID3___New_orig__() -> itkUnsharpMaskImageFilterID3ID3_Pointer"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3___New_orig__()

def itkUnsharpMaskImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterID3ID3 *":
    """itkUnsharpMaskImageFilterID3ID3_cast(itkLightObject obj) -> itkUnsharpMaskImageFilterID3ID3"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_cast(obj)

class itkUnsharpMaskImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter

    C++ includes: itkUnsharpMaskImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnsharpMaskImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkUnsharpMaskImageFilterIF2IF2_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnsharpMaskImageFilterIF2IF2_Pointer":
        """Clone(itkUnsharpMaskImageFilterIF2IF2 self) -> itkUnsharpMaskImageFilterIF2IF2_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_Clone(self)

    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SameDimensionCheck
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_InputHasNumericTraitsCheck
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_InternalTypeIsFloatingPoint

    def SetSigmas(self, _arg: 'itkFixedArrayD2') -> "void":
        """
        SetSigmas(itkUnsharpMaskImageFilterIF2IF2 self, itkFixedArrayD2 _arg)

        Set/Get Sigma values
        measured in the units of image spacing. Default: 1.0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetSigmas(self, _arg)


    def GetSigmas(self) -> "itkFixedArrayD2":
        """GetSigmas(itkUnsharpMaskImageFilterIF2IF2 self) -> itkFixedArrayD2"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetSigmas(self)


    def SetSigma(self, sigma: 'double const') -> "void":
        """
        SetSigma(itkUnsharpMaskImageFilterIF2IF2 self, double const sigma)

        Convenience method for
        setting all dimensional parameters to the same values. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetSigma(self, sigma)


    def SetAmount(self, _arg: 'float const') -> "void":
        """
        SetAmount(itkUnsharpMaskImageFilterIF2IF2 self, float const _arg)

        Set/Get amount of
        enhancement. Usual range: 0.1 to 2.0. Default: 0.5. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetAmount(self, _arg)


    def GetAmount(self) -> "float":
        """GetAmount(itkUnsharpMaskImageFilterIF2IF2 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetAmount(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """
        SetThreshold(itkUnsharpMaskImageFilterIF2IF2 self, float const _arg)

        Set/Get threshold for
        enhancement. Default: 0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetThreshold(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(itkUnsharpMaskImageFilterIF2IF2 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetThreshold(self)


    def SetClamp(self, _arg: 'bool const') -> "void":
        """
        SetClamp(itkUnsharpMaskImageFilterIF2IF2 self, bool const _arg)

        Set/Get whether to clamp
        values to supported range of output type. Default: On. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetClamp(self, _arg)


    def GetClamp(self) -> "bool":
        """GetClamp(itkUnsharpMaskImageFilterIF2IF2 self) -> bool"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetClamp(self)


    def ClampOn(self) -> "void":
        """ClampOn(itkUnsharpMaskImageFilterIF2IF2 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_ClampOn(self)


    def ClampOff(self) -> "void":
        """ClampOff(itkUnsharpMaskImageFilterIF2IF2 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_ClampOff(self)

    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIF2IF2"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIF2IF2

        Create a new object of the class itkUnsharpMaskImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnsharpMaskImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnsharpMaskImageFilterIF2IF2.Clone = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_Clone, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.SetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetSigmas, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.GetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetSigmas, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.SetSigma = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetSigma, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.SetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetAmount, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.GetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetAmount, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.SetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetThreshold, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.GetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetThreshold, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.SetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetClamp, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.GetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetClamp, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.ClampOn = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_ClampOn, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2.ClampOff = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_ClampOff, None, itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2_swigregister = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_swigregister
itkUnsharpMaskImageFilterIF2IF2_swigregister(itkUnsharpMaskImageFilterIF2IF2)

def itkUnsharpMaskImageFilterIF2IF2___New_orig__() -> "itkUnsharpMaskImageFilterIF2IF2_Pointer":
    """itkUnsharpMaskImageFilterIF2IF2___New_orig__() -> itkUnsharpMaskImageFilterIF2IF2_Pointer"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2___New_orig__()

def itkUnsharpMaskImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIF2IF2 *":
    """itkUnsharpMaskImageFilterIF2IF2_cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIF2IF2"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_cast(obj)

class itkUnsharpMaskImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter

    C++ includes: itkUnsharpMaskImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnsharpMaskImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkUnsharpMaskImageFilterIF3IF3_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnsharpMaskImageFilterIF3IF3_Pointer":
        """Clone(itkUnsharpMaskImageFilterIF3IF3 self) -> itkUnsharpMaskImageFilterIF3IF3_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_Clone(self)

    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SameDimensionCheck
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_InputHasNumericTraitsCheck
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_InternalTypeIsFloatingPoint

    def SetSigmas(self, _arg: 'itkFixedArrayD3') -> "void":
        """
        SetSigmas(itkUnsharpMaskImageFilterIF3IF3 self, itkFixedArrayD3 _arg)

        Set/Get Sigma values
        measured in the units of image spacing. Default: 1.0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetSigmas(self, _arg)


    def GetSigmas(self) -> "itkFixedArrayD3":
        """GetSigmas(itkUnsharpMaskImageFilterIF3IF3 self) -> itkFixedArrayD3"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetSigmas(self)


    def SetSigma(self, sigma: 'double const') -> "void":
        """
        SetSigma(itkUnsharpMaskImageFilterIF3IF3 self, double const sigma)

        Convenience method for
        setting all dimensional parameters to the same values. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetSigma(self, sigma)


    def SetAmount(self, _arg: 'float const') -> "void":
        """
        SetAmount(itkUnsharpMaskImageFilterIF3IF3 self, float const _arg)

        Set/Get amount of
        enhancement. Usual range: 0.1 to 2.0. Default: 0.5. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetAmount(self, _arg)


    def GetAmount(self) -> "float":
        """GetAmount(itkUnsharpMaskImageFilterIF3IF3 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetAmount(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """
        SetThreshold(itkUnsharpMaskImageFilterIF3IF3 self, float const _arg)

        Set/Get threshold for
        enhancement. Default: 0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetThreshold(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(itkUnsharpMaskImageFilterIF3IF3 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetThreshold(self)


    def SetClamp(self, _arg: 'bool const') -> "void":
        """
        SetClamp(itkUnsharpMaskImageFilterIF3IF3 self, bool const _arg)

        Set/Get whether to clamp
        values to supported range of output type. Default: On. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetClamp(self, _arg)


    def GetClamp(self) -> "bool":
        """GetClamp(itkUnsharpMaskImageFilterIF3IF3 self) -> bool"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetClamp(self)


    def ClampOn(self) -> "void":
        """ClampOn(itkUnsharpMaskImageFilterIF3IF3 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_ClampOn(self)


    def ClampOff(self) -> "void":
        """ClampOff(itkUnsharpMaskImageFilterIF3IF3 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_ClampOff(self)

    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIF3IF3"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIF3IF3

        Create a new object of the class itkUnsharpMaskImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnsharpMaskImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnsharpMaskImageFilterIF3IF3.Clone = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_Clone, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.SetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetSigmas, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.GetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetSigmas, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.SetSigma = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetSigma, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.SetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetAmount, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.GetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetAmount, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.SetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetThreshold, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.GetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetThreshold, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.SetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetClamp, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.GetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetClamp, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.ClampOn = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_ClampOn, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3.ClampOff = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_ClampOff, None, itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3_swigregister = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_swigregister
itkUnsharpMaskImageFilterIF3IF3_swigregister(itkUnsharpMaskImageFilterIF3IF3)

def itkUnsharpMaskImageFilterIF3IF3___New_orig__() -> "itkUnsharpMaskImageFilterIF3IF3_Pointer":
    """itkUnsharpMaskImageFilterIF3IF3___New_orig__() -> itkUnsharpMaskImageFilterIF3IF3_Pointer"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3___New_orig__()

def itkUnsharpMaskImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIF3IF3 *":
    """itkUnsharpMaskImageFilterIF3IF3_cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIF3IF3"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_cast(obj)

class itkUnsharpMaskImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter

    C++ includes: itkUnsharpMaskImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnsharpMaskImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkUnsharpMaskImageFilterISS2ISS2_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnsharpMaskImageFilterISS2ISS2_Pointer":
        """Clone(itkUnsharpMaskImageFilterISS2ISS2 self) -> itkUnsharpMaskImageFilterISS2ISS2_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_Clone(self)

    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SameDimensionCheck
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_InputHasNumericTraitsCheck
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_InternalTypeIsFloatingPoint

    def SetSigmas(self, _arg: 'itkFixedArrayD2') -> "void":
        """
        SetSigmas(itkUnsharpMaskImageFilterISS2ISS2 self, itkFixedArrayD2 _arg)

        Set/Get Sigma values
        measured in the units of image spacing. Default: 1.0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetSigmas(self, _arg)


    def GetSigmas(self) -> "itkFixedArrayD2":
        """GetSigmas(itkUnsharpMaskImageFilterISS2ISS2 self) -> itkFixedArrayD2"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetSigmas(self)


    def SetSigma(self, sigma: 'double const') -> "void":
        """
        SetSigma(itkUnsharpMaskImageFilterISS2ISS2 self, double const sigma)

        Convenience method for
        setting all dimensional parameters to the same values. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetSigma(self, sigma)


    def SetAmount(self, _arg: 'float const') -> "void":
        """
        SetAmount(itkUnsharpMaskImageFilterISS2ISS2 self, float const _arg)

        Set/Get amount of
        enhancement. Usual range: 0.1 to 2.0. Default: 0.5. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetAmount(self, _arg)


    def GetAmount(self) -> "float":
        """GetAmount(itkUnsharpMaskImageFilterISS2ISS2 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetAmount(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """
        SetThreshold(itkUnsharpMaskImageFilterISS2ISS2 self, float const _arg)

        Set/Get threshold for
        enhancement. Default: 0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetThreshold(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(itkUnsharpMaskImageFilterISS2ISS2 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetThreshold(self)


    def SetClamp(self, _arg: 'bool const') -> "void":
        """
        SetClamp(itkUnsharpMaskImageFilterISS2ISS2 self, bool const _arg)

        Set/Get whether to clamp
        values to supported range of output type. Default: On. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetClamp(self, _arg)


    def GetClamp(self) -> "bool":
        """GetClamp(itkUnsharpMaskImageFilterISS2ISS2 self) -> bool"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetClamp(self)


    def ClampOn(self) -> "void":
        """ClampOn(itkUnsharpMaskImageFilterISS2ISS2 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_ClampOn(self)


    def ClampOff(self) -> "void":
        """ClampOff(itkUnsharpMaskImageFilterISS2ISS2 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_ClampOff(self)

    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkUnsharpMaskImageFilterISS2ISS2"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterISS2ISS2

        Create a new object of the class itkUnsharpMaskImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnsharpMaskImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnsharpMaskImageFilterISS2ISS2.Clone = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_Clone, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.SetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetSigmas, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.GetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetSigmas, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.SetSigma = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetSigma, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.SetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetAmount, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.GetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetAmount, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.SetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetThreshold, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.GetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetThreshold, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.SetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetClamp, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.GetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetClamp, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.ClampOn = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_ClampOn, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2.ClampOff = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_ClampOff, None, itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2_swigregister = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_swigregister
itkUnsharpMaskImageFilterISS2ISS2_swigregister(itkUnsharpMaskImageFilterISS2ISS2)

def itkUnsharpMaskImageFilterISS2ISS2___New_orig__() -> "itkUnsharpMaskImageFilterISS2ISS2_Pointer":
    """itkUnsharpMaskImageFilterISS2ISS2___New_orig__() -> itkUnsharpMaskImageFilterISS2ISS2_Pointer"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2___New_orig__()

def itkUnsharpMaskImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterISS2ISS2 *":
    """itkUnsharpMaskImageFilterISS2ISS2_cast(itkLightObject obj) -> itkUnsharpMaskImageFilterISS2ISS2"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_cast(obj)

class itkUnsharpMaskImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter

    C++ includes: itkUnsharpMaskImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnsharpMaskImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkUnsharpMaskImageFilterISS3ISS3_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnsharpMaskImageFilterISS3ISS3_Pointer":
        """Clone(itkUnsharpMaskImageFilterISS3ISS3 self) -> itkUnsharpMaskImageFilterISS3ISS3_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_Clone(self)

    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SameDimensionCheck
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_InputHasNumericTraitsCheck
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_InternalTypeIsFloatingPoint

    def SetSigmas(self, _arg: 'itkFixedArrayD3') -> "void":
        """
        SetSigmas(itkUnsharpMaskImageFilterISS3ISS3 self, itkFixedArrayD3 _arg)

        Set/Get Sigma values
        measured in the units of image spacing. Default: 1.0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetSigmas(self, _arg)


    def GetSigmas(self) -> "itkFixedArrayD3":
        """GetSigmas(itkUnsharpMaskImageFilterISS3ISS3 self) -> itkFixedArrayD3"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetSigmas(self)


    def SetSigma(self, sigma: 'double const') -> "void":
        """
        SetSigma(itkUnsharpMaskImageFilterISS3ISS3 self, double const sigma)

        Convenience method for
        setting all dimensional parameters to the same values. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetSigma(self, sigma)


    def SetAmount(self, _arg: 'float const') -> "void":
        """
        SetAmount(itkUnsharpMaskImageFilterISS3ISS3 self, float const _arg)

        Set/Get amount of
        enhancement. Usual range: 0.1 to 2.0. Default: 0.5. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetAmount(self, _arg)


    def GetAmount(self) -> "float":
        """GetAmount(itkUnsharpMaskImageFilterISS3ISS3 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetAmount(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """
        SetThreshold(itkUnsharpMaskImageFilterISS3ISS3 self, float const _arg)

        Set/Get threshold for
        enhancement. Default: 0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetThreshold(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(itkUnsharpMaskImageFilterISS3ISS3 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetThreshold(self)


    def SetClamp(self, _arg: 'bool const') -> "void":
        """
        SetClamp(itkUnsharpMaskImageFilterISS3ISS3 self, bool const _arg)

        Set/Get whether to clamp
        values to supported range of output type. Default: On. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetClamp(self, _arg)


    def GetClamp(self) -> "bool":
        """GetClamp(itkUnsharpMaskImageFilterISS3ISS3 self) -> bool"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetClamp(self)


    def ClampOn(self) -> "void":
        """ClampOn(itkUnsharpMaskImageFilterISS3ISS3 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_ClampOn(self)


    def ClampOff(self) -> "void":
        """ClampOff(itkUnsharpMaskImageFilterISS3ISS3 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_ClampOff(self)

    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkUnsharpMaskImageFilterISS3ISS3"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterISS3ISS3

        Create a new object of the class itkUnsharpMaskImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnsharpMaskImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnsharpMaskImageFilterISS3ISS3.Clone = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_Clone, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.SetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetSigmas, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.GetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetSigmas, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.SetSigma = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetSigma, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.SetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetAmount, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.GetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetAmount, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.SetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetThreshold, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.GetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetThreshold, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.SetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetClamp, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.GetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetClamp, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.ClampOn = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_ClampOn, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3.ClampOff = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_ClampOff, None, itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3_swigregister = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_swigregister
itkUnsharpMaskImageFilterISS3ISS3_swigregister(itkUnsharpMaskImageFilterISS3ISS3)

def itkUnsharpMaskImageFilterISS3ISS3___New_orig__() -> "itkUnsharpMaskImageFilterISS3ISS3_Pointer":
    """itkUnsharpMaskImageFilterISS3ISS3___New_orig__() -> itkUnsharpMaskImageFilterISS3ISS3_Pointer"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3___New_orig__()

def itkUnsharpMaskImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterISS3ISS3 *":
    """itkUnsharpMaskImageFilterISS3ISS3_cast(itkLightObject obj) -> itkUnsharpMaskImageFilterISS3ISS3"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_cast(obj)

class itkUnsharpMaskImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter

    C++ includes: itkUnsharpMaskImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnsharpMaskImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkUnsharpMaskImageFilterIUC2IUC2_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnsharpMaskImageFilterIUC2IUC2_Pointer":
        """Clone(itkUnsharpMaskImageFilterIUC2IUC2 self) -> itkUnsharpMaskImageFilterIUC2IUC2_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_Clone(self)

    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SameDimensionCheck
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_InternalTypeIsFloatingPoint

    def SetSigmas(self, _arg: 'itkFixedArrayD2') -> "void":
        """
        SetSigmas(itkUnsharpMaskImageFilterIUC2IUC2 self, itkFixedArrayD2 _arg)

        Set/Get Sigma values
        measured in the units of image spacing. Default: 1.0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetSigmas(self, _arg)


    def GetSigmas(self) -> "itkFixedArrayD2":
        """GetSigmas(itkUnsharpMaskImageFilterIUC2IUC2 self) -> itkFixedArrayD2"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetSigmas(self)


    def SetSigma(self, sigma: 'double const') -> "void":
        """
        SetSigma(itkUnsharpMaskImageFilterIUC2IUC2 self, double const sigma)

        Convenience method for
        setting all dimensional parameters to the same values. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetSigma(self, sigma)


    def SetAmount(self, _arg: 'float const') -> "void":
        """
        SetAmount(itkUnsharpMaskImageFilterIUC2IUC2 self, float const _arg)

        Set/Get amount of
        enhancement. Usual range: 0.1 to 2.0. Default: 0.5. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetAmount(self, _arg)


    def GetAmount(self) -> "float":
        """GetAmount(itkUnsharpMaskImageFilterIUC2IUC2 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetAmount(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """
        SetThreshold(itkUnsharpMaskImageFilterIUC2IUC2 self, float const _arg)

        Set/Get threshold for
        enhancement. Default: 0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetThreshold(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(itkUnsharpMaskImageFilterIUC2IUC2 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetThreshold(self)


    def SetClamp(self, _arg: 'bool const') -> "void":
        """
        SetClamp(itkUnsharpMaskImageFilterIUC2IUC2 self, bool const _arg)

        Set/Get whether to clamp
        values to supported range of output type. Default: On. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetClamp(self, _arg)


    def GetClamp(self) -> "bool":
        """GetClamp(itkUnsharpMaskImageFilterIUC2IUC2 self) -> bool"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetClamp(self)


    def ClampOn(self) -> "void":
        """ClampOn(itkUnsharpMaskImageFilterIUC2IUC2 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_ClampOn(self)


    def ClampOff(self) -> "void":
        """ClampOff(itkUnsharpMaskImageFilterIUC2IUC2 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_ClampOff(self)

    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIUC2IUC2"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIUC2IUC2

        Create a new object of the class itkUnsharpMaskImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnsharpMaskImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnsharpMaskImageFilterIUC2IUC2.Clone = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_Clone, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.SetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetSigmas, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.GetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetSigmas, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.SetSigma = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetSigma, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.SetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetAmount, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.GetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetAmount, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.SetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetThreshold, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.GetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetThreshold, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.SetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetClamp, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.GetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetClamp, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.ClampOn = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_ClampOn, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2.ClampOff = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_ClampOff, None, itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2_swigregister = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_swigregister
itkUnsharpMaskImageFilterIUC2IUC2_swigregister(itkUnsharpMaskImageFilterIUC2IUC2)

def itkUnsharpMaskImageFilterIUC2IUC2___New_orig__() -> "itkUnsharpMaskImageFilterIUC2IUC2_Pointer":
    """itkUnsharpMaskImageFilterIUC2IUC2___New_orig__() -> itkUnsharpMaskImageFilterIUC2IUC2_Pointer"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2___New_orig__()

def itkUnsharpMaskImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIUC2IUC2 *":
    """itkUnsharpMaskImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIUC2IUC2"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_cast(obj)

class itkUnsharpMaskImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter

    C++ includes: itkUnsharpMaskImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnsharpMaskImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkUnsharpMaskImageFilterIUC3IUC3_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnsharpMaskImageFilterIUC3IUC3_Pointer":
        """Clone(itkUnsharpMaskImageFilterIUC3IUC3 self) -> itkUnsharpMaskImageFilterIUC3IUC3_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_Clone(self)

    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SameDimensionCheck
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_InternalTypeIsFloatingPoint

    def SetSigmas(self, _arg: 'itkFixedArrayD3') -> "void":
        """
        SetSigmas(itkUnsharpMaskImageFilterIUC3IUC3 self, itkFixedArrayD3 _arg)

        Set/Get Sigma values
        measured in the units of image spacing. Default: 1.0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetSigmas(self, _arg)


    def GetSigmas(self) -> "itkFixedArrayD3":
        """GetSigmas(itkUnsharpMaskImageFilterIUC3IUC3 self) -> itkFixedArrayD3"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetSigmas(self)


    def SetSigma(self, sigma: 'double const') -> "void":
        """
        SetSigma(itkUnsharpMaskImageFilterIUC3IUC3 self, double const sigma)

        Convenience method for
        setting all dimensional parameters to the same values. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetSigma(self, sigma)


    def SetAmount(self, _arg: 'float const') -> "void":
        """
        SetAmount(itkUnsharpMaskImageFilterIUC3IUC3 self, float const _arg)

        Set/Get amount of
        enhancement. Usual range: 0.1 to 2.0. Default: 0.5. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetAmount(self, _arg)


    def GetAmount(self) -> "float":
        """GetAmount(itkUnsharpMaskImageFilterIUC3IUC3 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetAmount(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """
        SetThreshold(itkUnsharpMaskImageFilterIUC3IUC3 self, float const _arg)

        Set/Get threshold for
        enhancement. Default: 0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetThreshold(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(itkUnsharpMaskImageFilterIUC3IUC3 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetThreshold(self)


    def SetClamp(self, _arg: 'bool const') -> "void":
        """
        SetClamp(itkUnsharpMaskImageFilterIUC3IUC3 self, bool const _arg)

        Set/Get whether to clamp
        values to supported range of output type. Default: On. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetClamp(self, _arg)


    def GetClamp(self) -> "bool":
        """GetClamp(itkUnsharpMaskImageFilterIUC3IUC3 self) -> bool"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetClamp(self)


    def ClampOn(self) -> "void":
        """ClampOn(itkUnsharpMaskImageFilterIUC3IUC3 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_ClampOn(self)


    def ClampOff(self) -> "void":
        """ClampOff(itkUnsharpMaskImageFilterIUC3IUC3 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_ClampOff(self)

    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIUC3IUC3"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIUC3IUC3

        Create a new object of the class itkUnsharpMaskImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnsharpMaskImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnsharpMaskImageFilterIUC3IUC3.Clone = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_Clone, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.SetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetSigmas, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.GetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetSigmas, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.SetSigma = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetSigma, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.SetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetAmount, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.GetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetAmount, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.SetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetThreshold, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.GetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetThreshold, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.SetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetClamp, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.GetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetClamp, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.ClampOn = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_ClampOn, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3.ClampOff = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_ClampOff, None, itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3_swigregister = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_swigregister
itkUnsharpMaskImageFilterIUC3IUC3_swigregister(itkUnsharpMaskImageFilterIUC3IUC3)

def itkUnsharpMaskImageFilterIUC3IUC3___New_orig__() -> "itkUnsharpMaskImageFilterIUC3IUC3_Pointer":
    """itkUnsharpMaskImageFilterIUC3IUC3___New_orig__() -> itkUnsharpMaskImageFilterIUC3IUC3_Pointer"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3___New_orig__()

def itkUnsharpMaskImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIUC3IUC3 *":
    """itkUnsharpMaskImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIUC3IUC3"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_cast(obj)

class itkUnsharpMaskImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter

    C++ includes: itkUnsharpMaskImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnsharpMaskImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkUnsharpMaskImageFilterIUS2IUS2_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnsharpMaskImageFilterIUS2IUS2_Pointer":
        """Clone(itkUnsharpMaskImageFilterIUS2IUS2 self) -> itkUnsharpMaskImageFilterIUS2IUS2_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_Clone(self)

    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SameDimensionCheck
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_InternalTypeIsFloatingPoint

    def SetSigmas(self, _arg: 'itkFixedArrayD2') -> "void":
        """
        SetSigmas(itkUnsharpMaskImageFilterIUS2IUS2 self, itkFixedArrayD2 _arg)

        Set/Get Sigma values
        measured in the units of image spacing. Default: 1.0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetSigmas(self, _arg)


    def GetSigmas(self) -> "itkFixedArrayD2":
        """GetSigmas(itkUnsharpMaskImageFilterIUS2IUS2 self) -> itkFixedArrayD2"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetSigmas(self)


    def SetSigma(self, sigma: 'double const') -> "void":
        """
        SetSigma(itkUnsharpMaskImageFilterIUS2IUS2 self, double const sigma)

        Convenience method for
        setting all dimensional parameters to the same values. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetSigma(self, sigma)


    def SetAmount(self, _arg: 'float const') -> "void":
        """
        SetAmount(itkUnsharpMaskImageFilterIUS2IUS2 self, float const _arg)

        Set/Get amount of
        enhancement. Usual range: 0.1 to 2.0. Default: 0.5. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetAmount(self, _arg)


    def GetAmount(self) -> "float":
        """GetAmount(itkUnsharpMaskImageFilterIUS2IUS2 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetAmount(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """
        SetThreshold(itkUnsharpMaskImageFilterIUS2IUS2 self, float const _arg)

        Set/Get threshold for
        enhancement. Default: 0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetThreshold(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(itkUnsharpMaskImageFilterIUS2IUS2 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetThreshold(self)


    def SetClamp(self, _arg: 'bool const') -> "void":
        """
        SetClamp(itkUnsharpMaskImageFilterIUS2IUS2 self, bool const _arg)

        Set/Get whether to clamp
        values to supported range of output type. Default: On. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetClamp(self, _arg)


    def GetClamp(self) -> "bool":
        """GetClamp(itkUnsharpMaskImageFilterIUS2IUS2 self) -> bool"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetClamp(self)


    def ClampOn(self) -> "void":
        """ClampOn(itkUnsharpMaskImageFilterIUS2IUS2 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_ClampOn(self)


    def ClampOff(self) -> "void":
        """ClampOff(itkUnsharpMaskImageFilterIUS2IUS2 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_ClampOff(self)

    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIUS2IUS2"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIUS2IUS2

        Create a new object of the class itkUnsharpMaskImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnsharpMaskImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnsharpMaskImageFilterIUS2IUS2.Clone = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_Clone, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.SetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetSigmas, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.GetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetSigmas, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.SetSigma = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetSigma, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.SetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetAmount, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.GetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetAmount, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.SetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetThreshold, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.GetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetThreshold, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.SetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetClamp, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.GetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetClamp, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.ClampOn = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_ClampOn, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2.ClampOff = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_ClampOff, None, itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2_swigregister = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_swigregister
itkUnsharpMaskImageFilterIUS2IUS2_swigregister(itkUnsharpMaskImageFilterIUS2IUS2)

def itkUnsharpMaskImageFilterIUS2IUS2___New_orig__() -> "itkUnsharpMaskImageFilterIUS2IUS2_Pointer":
    """itkUnsharpMaskImageFilterIUS2IUS2___New_orig__() -> itkUnsharpMaskImageFilterIUS2IUS2_Pointer"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2___New_orig__()

def itkUnsharpMaskImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIUS2IUS2 *":
    """itkUnsharpMaskImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIUS2IUS2"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_cast(obj)

class itkUnsharpMaskImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter

    C++ includes: itkUnsharpMaskImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnsharpMaskImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkUnsharpMaskImageFilterIUS3IUS3_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnsharpMaskImageFilterIUS3IUS3_Pointer":
        """Clone(itkUnsharpMaskImageFilterIUS3IUS3 self) -> itkUnsharpMaskImageFilterIUS3IUS3_Pointer"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_Clone(self)

    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SameDimensionCheck
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_InternalTypeIsFloatingPoint

    def SetSigmas(self, _arg: 'itkFixedArrayD3') -> "void":
        """
        SetSigmas(itkUnsharpMaskImageFilterIUS3IUS3 self, itkFixedArrayD3 _arg)

        Set/Get Sigma values
        measured in the units of image spacing. Default: 1.0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetSigmas(self, _arg)


    def GetSigmas(self) -> "itkFixedArrayD3":
        """GetSigmas(itkUnsharpMaskImageFilterIUS3IUS3 self) -> itkFixedArrayD3"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetSigmas(self)


    def SetSigma(self, sigma: 'double const') -> "void":
        """
        SetSigma(itkUnsharpMaskImageFilterIUS3IUS3 self, double const sigma)

        Convenience method for
        setting all dimensional parameters to the same values. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetSigma(self, sigma)


    def SetAmount(self, _arg: 'float const') -> "void":
        """
        SetAmount(itkUnsharpMaskImageFilterIUS3IUS3 self, float const _arg)

        Set/Get amount of
        enhancement. Usual range: 0.1 to 2.0. Default: 0.5. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetAmount(self, _arg)


    def GetAmount(self) -> "float":
        """GetAmount(itkUnsharpMaskImageFilterIUS3IUS3 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetAmount(self)


    def SetThreshold(self, _arg: 'float const') -> "void":
        """
        SetThreshold(itkUnsharpMaskImageFilterIUS3IUS3 self, float const _arg)

        Set/Get threshold for
        enhancement. Default: 0. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetThreshold(self, _arg)


    def GetThreshold(self) -> "float":
        """GetThreshold(itkUnsharpMaskImageFilterIUS3IUS3 self) -> float"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetThreshold(self)


    def SetClamp(self, _arg: 'bool const') -> "void":
        """
        SetClamp(itkUnsharpMaskImageFilterIUS3IUS3 self, bool const _arg)

        Set/Get whether to clamp
        values to supported range of output type. Default: On. 
        """
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetClamp(self, _arg)


    def GetClamp(self) -> "bool":
        """GetClamp(itkUnsharpMaskImageFilterIUS3IUS3 self) -> bool"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetClamp(self)


    def ClampOn(self) -> "void":
        """ClampOn(itkUnsharpMaskImageFilterIUS3IUS3 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_ClampOn(self)


    def ClampOff(self) -> "void":
        """ClampOff(itkUnsharpMaskImageFilterIUS3IUS3 self)"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_ClampOff(self)

    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIUS3IUS3"""
        return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIUS3IUS3

        Create a new object of the class itkUnsharpMaskImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnsharpMaskImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnsharpMaskImageFilterIUS3IUS3.Clone = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_Clone, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.SetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetSigmas, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.GetSigmas = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetSigmas, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.SetSigma = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetSigma, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.SetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetAmount, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.GetAmount = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetAmount, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.SetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetThreshold, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.GetThreshold = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetThreshold, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.SetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetClamp, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.GetClamp = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetClamp, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.ClampOn = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_ClampOn, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3.ClampOff = new_instancemethod(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_ClampOff, None, itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3_swigregister = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_swigregister
itkUnsharpMaskImageFilterIUS3IUS3_swigregister(itkUnsharpMaskImageFilterIUS3IUS3)

def itkUnsharpMaskImageFilterIUS3IUS3___New_orig__() -> "itkUnsharpMaskImageFilterIUS3IUS3_Pointer":
    """itkUnsharpMaskImageFilterIUS3IUS3___New_orig__() -> itkUnsharpMaskImageFilterIUS3IUS3_Pointer"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3___New_orig__()

def itkUnsharpMaskImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkUnsharpMaskImageFilterIUS3IUS3 *":
    """itkUnsharpMaskImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkUnsharpMaskImageFilterIUS3IUS3"""
    return _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unsharp_mask_image_filter(*args, **kwargs):
    """Procedural interface for UnsharpMaskImageFilter"""
    import itk
    instance = itk.UnsharpMaskImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unsharp_mask_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnsharpMaskImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnsharpMaskImageFilter.values()[0]
    else:
        filter_object = itk.UnsharpMaskImageFilter

    unsharp_mask_image_filter.__doc__ = filter_object.__doc__
    unsharp_mask_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unsharp_mask_image_filter.__doc__ += "Available Keyword Arguments:\n"
    unsharp_mask_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



