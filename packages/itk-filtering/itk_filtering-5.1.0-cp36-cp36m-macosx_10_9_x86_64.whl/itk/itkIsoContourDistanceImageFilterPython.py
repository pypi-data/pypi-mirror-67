# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkIsoContourDistanceImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkIsoContourDistanceImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkIsoContourDistanceImageFilterPython
            return _itkIsoContourDistanceImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkIsoContourDistanceImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkIsoContourDistanceImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkIsoContourDistanceImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkImageSourceCommonPython
import itkVectorImagePython
import stdcomplexPython
import itkVariableLengthVectorPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrixPython
import vnl_vectorPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkImageToImageFilterCommonPython
import ITKNarrowBandBasePython

def itkIsoContourDistanceImageFilterID3ID3_New():
  return itkIsoContourDistanceImageFilterID3ID3.New()


def itkIsoContourDistanceImageFilterID2ID2_New():
  return itkIsoContourDistanceImageFilterID2ID2.New()


def itkIsoContourDistanceImageFilterIF3IF3_New():
  return itkIsoContourDistanceImageFilterIF3IF3.New()


def itkIsoContourDistanceImageFilterIF2IF2_New():
  return itkIsoContourDistanceImageFilterIF2IF2.New()

class itkIsoContourDistanceImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    Compute an approximate distance from an interpolated isocontour to the
    close grid points.

    For standard level set algorithms, it is useful to periodically
    reinitialize the evolving image to prevent numerical accuracy problems
    in computing derivatives. This reinitialization is done by computing a
    signed distance map to the current level set. This class provides the
    first step in this reinitialization by computing an estimate of the
    distance from the interpolated isocontour to the pixels (or voxels)
    that are close to it, i.e. for which the isocontour crosses a segment
    between them and one of their direct neighbors. This class supports
    narrowbanding. If the input narrowband is provided, the algorithm will
    only locate the level set within the input narrowband.

    Implementation of this class is based on Fast and Accurate
    Redistancing for Level Set MethodsKrissian K. and Westin C.F.,
    EUROCAST NeuroImaging Workshop Las Palmas Spain, Ninth International
    Conference on Computer Aided Systems Theory , pages 48-51, Feb 2003.

    C++ includes: itkIsoContourDistanceImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoContourDistanceImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkIsoContourDistanceImageFilterID2ID2_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoContourDistanceImageFilterID2ID2_Pointer":
        """Clone(itkIsoContourDistanceImageFilterID2ID2 self) -> itkIsoContourDistanceImageFilterID2ID2_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_Clone(self)


    def SetLevelSetValue(self, _arg: 'double const') -> "void":
        """
        SetLevelSetValue(itkIsoContourDistanceImageFilterID2ID2 self, double const _arg)

        Set/Get the value
        of the level set to be located. The default value is 0. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetLevelSetValue(self, _arg)


    def GetLevelSetValue(self) -> "double":
        """GetLevelSetValue(itkIsoContourDistanceImageFilterID2ID2 self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetLevelSetValue(self)


    def SetFarValue(self, _arg: 'double const') -> "void":
        """
        SetFarValue(itkIsoContourDistanceImageFilterID2ID2 self, double const _arg)

        Set/Get the value of
        the level set to be located. The default value is 0. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetFarValue(self, _arg)


    def GetFarValue(self) -> "double":
        """GetFarValue(itkIsoContourDistanceImageFilterID2ID2 self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetFarValue(self)


    def SetNarrowBanding(self, _arg: 'bool const') -> "void":
        """
        SetNarrowBanding(itkIsoContourDistanceImageFilterID2ID2 self, bool const _arg)

        Set/Get the
        narrowbanding flag. By default, narrowbanding is switched off. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetNarrowBanding(self, _arg)


    def GetNarrowBanding(self) -> "bool":
        """GetNarrowBanding(itkIsoContourDistanceImageFilterID2ID2 self) -> bool"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetNarrowBanding(self)


    def NarrowBandingOn(self) -> "void":
        """NarrowBandingOn(itkIsoContourDistanceImageFilterID2ID2 self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_NarrowBandingOn(self)


    def NarrowBandingOff(self) -> "void":
        """NarrowBandingOff(itkIsoContourDistanceImageFilterID2ID2 self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_NarrowBandingOff(self)


    def SetNarrowBand(self, ptr: 'itkNarrowBandBNI2D') -> "void":
        """
        SetNarrowBand(itkIsoContourDistanceImageFilterID2ID2 self, itkNarrowBandBNI2D ptr)

        Set/Get the
        narrowband. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetNarrowBand(self, ptr)


    def GetNarrowBand(self) -> "itkNarrowBandBNI2D_Pointer":
        """GetNarrowBand(itkIsoContourDistanceImageFilterID2ID2 self) -> itkNarrowBandBNI2D_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetNarrowBand(self)

    InputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_InputEqualityComparableCheck
    OutputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_OutputEqualityComparableCheck
    SameDimensionCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_InputConvertibleToOutputCheck
    OutputAdditiveOperatorsCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_OutputAdditiveOperatorsCheck
    InputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkIsoContourDistanceImageFilterPython.delete_itkIsoContourDistanceImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkIsoContourDistanceImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkIsoContourDistanceImageFilterID2ID2"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoContourDistanceImageFilterID2ID2

        Create a new object of the class itkIsoContourDistanceImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoContourDistanceImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoContourDistanceImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoContourDistanceImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoContourDistanceImageFilterID2ID2.Clone = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_Clone, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2.SetLevelSetValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetLevelSetValue, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2.GetLevelSetValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetLevelSetValue, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2.SetFarValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetFarValue, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2.GetFarValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetFarValue, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2.SetNarrowBanding = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetNarrowBanding, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2.GetNarrowBanding = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetNarrowBanding, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2.NarrowBandingOn = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_NarrowBandingOn, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2.NarrowBandingOff = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_NarrowBandingOff, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2.SetNarrowBand = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetNarrowBand, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2.GetNarrowBand = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetNarrowBand, None, itkIsoContourDistanceImageFilterID2ID2)
itkIsoContourDistanceImageFilterID2ID2_swigregister = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_swigregister
itkIsoContourDistanceImageFilterID2ID2_swigregister(itkIsoContourDistanceImageFilterID2ID2)

def itkIsoContourDistanceImageFilterID2ID2___New_orig__() -> "itkIsoContourDistanceImageFilterID2ID2_Pointer":
    """itkIsoContourDistanceImageFilterID2ID2___New_orig__() -> itkIsoContourDistanceImageFilterID2ID2_Pointer"""
    return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2___New_orig__()

def itkIsoContourDistanceImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkIsoContourDistanceImageFilterID2ID2 *":
    """itkIsoContourDistanceImageFilterID2ID2_cast(itkLightObject obj) -> itkIsoContourDistanceImageFilterID2ID2"""
    return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_cast(obj)

class itkIsoContourDistanceImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    Compute an approximate distance from an interpolated isocontour to the
    close grid points.

    For standard level set algorithms, it is useful to periodically
    reinitialize the evolving image to prevent numerical accuracy problems
    in computing derivatives. This reinitialization is done by computing a
    signed distance map to the current level set. This class provides the
    first step in this reinitialization by computing an estimate of the
    distance from the interpolated isocontour to the pixels (or voxels)
    that are close to it, i.e. for which the isocontour crosses a segment
    between them and one of their direct neighbors. This class supports
    narrowbanding. If the input narrowband is provided, the algorithm will
    only locate the level set within the input narrowband.

    Implementation of this class is based on Fast and Accurate
    Redistancing for Level Set MethodsKrissian K. and Westin C.F.,
    EUROCAST NeuroImaging Workshop Las Palmas Spain, Ninth International
    Conference on Computer Aided Systems Theory , pages 48-51, Feb 2003.

    C++ includes: itkIsoContourDistanceImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoContourDistanceImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkIsoContourDistanceImageFilterID3ID3_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoContourDistanceImageFilterID3ID3_Pointer":
        """Clone(itkIsoContourDistanceImageFilterID3ID3 self) -> itkIsoContourDistanceImageFilterID3ID3_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_Clone(self)


    def SetLevelSetValue(self, _arg: 'double const') -> "void":
        """
        SetLevelSetValue(itkIsoContourDistanceImageFilterID3ID3 self, double const _arg)

        Set/Get the value
        of the level set to be located. The default value is 0. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetLevelSetValue(self, _arg)


    def GetLevelSetValue(self) -> "double":
        """GetLevelSetValue(itkIsoContourDistanceImageFilterID3ID3 self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetLevelSetValue(self)


    def SetFarValue(self, _arg: 'double const') -> "void":
        """
        SetFarValue(itkIsoContourDistanceImageFilterID3ID3 self, double const _arg)

        Set/Get the value of
        the level set to be located. The default value is 0. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetFarValue(self, _arg)


    def GetFarValue(self) -> "double":
        """GetFarValue(itkIsoContourDistanceImageFilterID3ID3 self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetFarValue(self)


    def SetNarrowBanding(self, _arg: 'bool const') -> "void":
        """
        SetNarrowBanding(itkIsoContourDistanceImageFilterID3ID3 self, bool const _arg)

        Set/Get the
        narrowbanding flag. By default, narrowbanding is switched off. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetNarrowBanding(self, _arg)


    def GetNarrowBanding(self) -> "bool":
        """GetNarrowBanding(itkIsoContourDistanceImageFilterID3ID3 self) -> bool"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetNarrowBanding(self)


    def NarrowBandingOn(self) -> "void":
        """NarrowBandingOn(itkIsoContourDistanceImageFilterID3ID3 self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_NarrowBandingOn(self)


    def NarrowBandingOff(self) -> "void":
        """NarrowBandingOff(itkIsoContourDistanceImageFilterID3ID3 self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_NarrowBandingOff(self)


    def SetNarrowBand(self, ptr: 'itkNarrowBandBNI3D') -> "void":
        """
        SetNarrowBand(itkIsoContourDistanceImageFilterID3ID3 self, itkNarrowBandBNI3D ptr)

        Set/Get the
        narrowband. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetNarrowBand(self, ptr)


    def GetNarrowBand(self) -> "itkNarrowBandBNI3D_Pointer":
        """GetNarrowBand(itkIsoContourDistanceImageFilterID3ID3 self) -> itkNarrowBandBNI3D_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetNarrowBand(self)

    InputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_InputEqualityComparableCheck
    OutputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_OutputEqualityComparableCheck
    SameDimensionCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_InputConvertibleToOutputCheck
    OutputAdditiveOperatorsCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_OutputAdditiveOperatorsCheck
    InputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkIsoContourDistanceImageFilterPython.delete_itkIsoContourDistanceImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkIsoContourDistanceImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkIsoContourDistanceImageFilterID3ID3"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoContourDistanceImageFilterID3ID3

        Create a new object of the class itkIsoContourDistanceImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoContourDistanceImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoContourDistanceImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoContourDistanceImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoContourDistanceImageFilterID3ID3.Clone = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_Clone, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3.SetLevelSetValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetLevelSetValue, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3.GetLevelSetValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetLevelSetValue, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3.SetFarValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetFarValue, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3.GetFarValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetFarValue, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3.SetNarrowBanding = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetNarrowBanding, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3.GetNarrowBanding = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetNarrowBanding, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3.NarrowBandingOn = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_NarrowBandingOn, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3.NarrowBandingOff = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_NarrowBandingOff, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3.SetNarrowBand = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetNarrowBand, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3.GetNarrowBand = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetNarrowBand, None, itkIsoContourDistanceImageFilterID3ID3)
itkIsoContourDistanceImageFilterID3ID3_swigregister = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_swigregister
itkIsoContourDistanceImageFilterID3ID3_swigregister(itkIsoContourDistanceImageFilterID3ID3)

def itkIsoContourDistanceImageFilterID3ID3___New_orig__() -> "itkIsoContourDistanceImageFilterID3ID3_Pointer":
    """itkIsoContourDistanceImageFilterID3ID3___New_orig__() -> itkIsoContourDistanceImageFilterID3ID3_Pointer"""
    return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3___New_orig__()

def itkIsoContourDistanceImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkIsoContourDistanceImageFilterID3ID3 *":
    """itkIsoContourDistanceImageFilterID3ID3_cast(itkLightObject obj) -> itkIsoContourDistanceImageFilterID3ID3"""
    return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_cast(obj)

class itkIsoContourDistanceImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Compute an approximate distance from an interpolated isocontour to the
    close grid points.

    For standard level set algorithms, it is useful to periodically
    reinitialize the evolving image to prevent numerical accuracy problems
    in computing derivatives. This reinitialization is done by computing a
    signed distance map to the current level set. This class provides the
    first step in this reinitialization by computing an estimate of the
    distance from the interpolated isocontour to the pixels (or voxels)
    that are close to it, i.e. for which the isocontour crosses a segment
    between them and one of their direct neighbors. This class supports
    narrowbanding. If the input narrowband is provided, the algorithm will
    only locate the level set within the input narrowband.

    Implementation of this class is based on Fast and Accurate
    Redistancing for Level Set MethodsKrissian K. and Westin C.F.,
    EUROCAST NeuroImaging Workshop Las Palmas Spain, Ninth International
    Conference on Computer Aided Systems Theory , pages 48-51, Feb 2003.

    C++ includes: itkIsoContourDistanceImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoContourDistanceImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkIsoContourDistanceImageFilterIF2IF2_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoContourDistanceImageFilterIF2IF2_Pointer":
        """Clone(itkIsoContourDistanceImageFilterIF2IF2 self) -> itkIsoContourDistanceImageFilterIF2IF2_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_Clone(self)


    def SetLevelSetValue(self, _arg: 'double const') -> "void":
        """
        SetLevelSetValue(itkIsoContourDistanceImageFilterIF2IF2 self, double const _arg)

        Set/Get the value
        of the level set to be located. The default value is 0. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetLevelSetValue(self, _arg)


    def GetLevelSetValue(self) -> "double":
        """GetLevelSetValue(itkIsoContourDistanceImageFilterIF2IF2 self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetLevelSetValue(self)


    def SetFarValue(self, _arg: 'float const') -> "void":
        """
        SetFarValue(itkIsoContourDistanceImageFilterIF2IF2 self, float const _arg)

        Set/Get the value of
        the level set to be located. The default value is 0. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetFarValue(self, _arg)


    def GetFarValue(self) -> "float":
        """GetFarValue(itkIsoContourDistanceImageFilterIF2IF2 self) -> float"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetFarValue(self)


    def SetNarrowBanding(self, _arg: 'bool const') -> "void":
        """
        SetNarrowBanding(itkIsoContourDistanceImageFilterIF2IF2 self, bool const _arg)

        Set/Get the
        narrowbanding flag. By default, narrowbanding is switched off. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetNarrowBanding(self, _arg)


    def GetNarrowBanding(self) -> "bool":
        """GetNarrowBanding(itkIsoContourDistanceImageFilterIF2IF2 self) -> bool"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetNarrowBanding(self)


    def NarrowBandingOn(self) -> "void":
        """NarrowBandingOn(itkIsoContourDistanceImageFilterIF2IF2 self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_NarrowBandingOn(self)


    def NarrowBandingOff(self) -> "void":
        """NarrowBandingOff(itkIsoContourDistanceImageFilterIF2IF2 self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_NarrowBandingOff(self)


    def SetNarrowBand(self, ptr: 'itkNarrowBandBNI2F') -> "void":
        """
        SetNarrowBand(itkIsoContourDistanceImageFilterIF2IF2 self, itkNarrowBandBNI2F ptr)

        Set/Get the
        narrowband. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetNarrowBand(self, ptr)


    def GetNarrowBand(self) -> "itkNarrowBandBNI2F_Pointer":
        """GetNarrowBand(itkIsoContourDistanceImageFilterIF2IF2 self) -> itkNarrowBandBNI2F_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetNarrowBand(self)

    InputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_InputEqualityComparableCheck
    OutputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_OutputEqualityComparableCheck
    SameDimensionCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_InputConvertibleToOutputCheck
    OutputAdditiveOperatorsCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_OutputAdditiveOperatorsCheck
    InputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkIsoContourDistanceImageFilterPython.delete_itkIsoContourDistanceImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkIsoContourDistanceImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkIsoContourDistanceImageFilterIF2IF2"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoContourDistanceImageFilterIF2IF2

        Create a new object of the class itkIsoContourDistanceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoContourDistanceImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoContourDistanceImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoContourDistanceImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoContourDistanceImageFilterIF2IF2.Clone = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_Clone, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2.SetLevelSetValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetLevelSetValue, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2.GetLevelSetValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetLevelSetValue, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2.SetFarValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetFarValue, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2.GetFarValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetFarValue, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2.SetNarrowBanding = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetNarrowBanding, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2.GetNarrowBanding = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetNarrowBanding, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2.NarrowBandingOn = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_NarrowBandingOn, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2.NarrowBandingOff = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_NarrowBandingOff, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2.SetNarrowBand = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetNarrowBand, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2.GetNarrowBand = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetNarrowBand, None, itkIsoContourDistanceImageFilterIF2IF2)
itkIsoContourDistanceImageFilterIF2IF2_swigregister = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_swigregister
itkIsoContourDistanceImageFilterIF2IF2_swigregister(itkIsoContourDistanceImageFilterIF2IF2)

def itkIsoContourDistanceImageFilterIF2IF2___New_orig__() -> "itkIsoContourDistanceImageFilterIF2IF2_Pointer":
    """itkIsoContourDistanceImageFilterIF2IF2___New_orig__() -> itkIsoContourDistanceImageFilterIF2IF2_Pointer"""
    return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2___New_orig__()

def itkIsoContourDistanceImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkIsoContourDistanceImageFilterIF2IF2 *":
    """itkIsoContourDistanceImageFilterIF2IF2_cast(itkLightObject obj) -> itkIsoContourDistanceImageFilterIF2IF2"""
    return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_cast(obj)

class itkIsoContourDistanceImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Compute an approximate distance from an interpolated isocontour to the
    close grid points.

    For standard level set algorithms, it is useful to periodically
    reinitialize the evolving image to prevent numerical accuracy problems
    in computing derivatives. This reinitialization is done by computing a
    signed distance map to the current level set. This class provides the
    first step in this reinitialization by computing an estimate of the
    distance from the interpolated isocontour to the pixels (or voxels)
    that are close to it, i.e. for which the isocontour crosses a segment
    between them and one of their direct neighbors. This class supports
    narrowbanding. If the input narrowband is provided, the algorithm will
    only locate the level set within the input narrowband.

    Implementation of this class is based on Fast and Accurate
    Redistancing for Level Set MethodsKrissian K. and Westin C.F.,
    EUROCAST NeuroImaging Workshop Las Palmas Spain, Ninth International
    Conference on Computer Aided Systems Theory , pages 48-51, Feb 2003.

    C++ includes: itkIsoContourDistanceImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoContourDistanceImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkIsoContourDistanceImageFilterIF3IF3_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoContourDistanceImageFilterIF3IF3_Pointer":
        """Clone(itkIsoContourDistanceImageFilterIF3IF3 self) -> itkIsoContourDistanceImageFilterIF3IF3_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_Clone(self)


    def SetLevelSetValue(self, _arg: 'double const') -> "void":
        """
        SetLevelSetValue(itkIsoContourDistanceImageFilterIF3IF3 self, double const _arg)

        Set/Get the value
        of the level set to be located. The default value is 0. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetLevelSetValue(self, _arg)


    def GetLevelSetValue(self) -> "double":
        """GetLevelSetValue(itkIsoContourDistanceImageFilterIF3IF3 self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetLevelSetValue(self)


    def SetFarValue(self, _arg: 'float const') -> "void":
        """
        SetFarValue(itkIsoContourDistanceImageFilterIF3IF3 self, float const _arg)

        Set/Get the value of
        the level set to be located. The default value is 0. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetFarValue(self, _arg)


    def GetFarValue(self) -> "float":
        """GetFarValue(itkIsoContourDistanceImageFilterIF3IF3 self) -> float"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetFarValue(self)


    def SetNarrowBanding(self, _arg: 'bool const') -> "void":
        """
        SetNarrowBanding(itkIsoContourDistanceImageFilterIF3IF3 self, bool const _arg)

        Set/Get the
        narrowbanding flag. By default, narrowbanding is switched off. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetNarrowBanding(self, _arg)


    def GetNarrowBanding(self) -> "bool":
        """GetNarrowBanding(itkIsoContourDistanceImageFilterIF3IF3 self) -> bool"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetNarrowBanding(self)


    def NarrowBandingOn(self) -> "void":
        """NarrowBandingOn(itkIsoContourDistanceImageFilterIF3IF3 self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_NarrowBandingOn(self)


    def NarrowBandingOff(self) -> "void":
        """NarrowBandingOff(itkIsoContourDistanceImageFilterIF3IF3 self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_NarrowBandingOff(self)


    def SetNarrowBand(self, ptr: 'itkNarrowBandBNI3F') -> "void":
        """
        SetNarrowBand(itkIsoContourDistanceImageFilterIF3IF3 self, itkNarrowBandBNI3F ptr)

        Set/Get the
        narrowband. 
        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetNarrowBand(self, ptr)


    def GetNarrowBand(self) -> "itkNarrowBandBNI3F_Pointer":
        """GetNarrowBand(itkIsoContourDistanceImageFilterIF3IF3 self) -> itkNarrowBandBNI3F_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetNarrowBand(self)

    InputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_InputEqualityComparableCheck
    OutputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_OutputEqualityComparableCheck
    SameDimensionCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SameDimensionCheck
    DoubleConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_InputConvertibleToOutputCheck
    OutputAdditiveOperatorsCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_OutputAdditiveOperatorsCheck
    InputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkIsoContourDistanceImageFilterPython.delete_itkIsoContourDistanceImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkIsoContourDistanceImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkIsoContourDistanceImageFilterIF3IF3"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIsoContourDistanceImageFilterIF3IF3

        Create a new object of the class itkIsoContourDistanceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoContourDistanceImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoContourDistanceImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoContourDistanceImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoContourDistanceImageFilterIF3IF3.Clone = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_Clone, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3.SetLevelSetValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetLevelSetValue, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3.GetLevelSetValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetLevelSetValue, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3.SetFarValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetFarValue, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3.GetFarValue = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetFarValue, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3.SetNarrowBanding = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetNarrowBanding, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3.GetNarrowBanding = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetNarrowBanding, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3.NarrowBandingOn = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_NarrowBandingOn, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3.NarrowBandingOff = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_NarrowBandingOff, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3.SetNarrowBand = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetNarrowBand, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3.GetNarrowBand = new_instancemethod(_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetNarrowBand, None, itkIsoContourDistanceImageFilterIF3IF3)
itkIsoContourDistanceImageFilterIF3IF3_swigregister = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_swigregister
itkIsoContourDistanceImageFilterIF3IF3_swigregister(itkIsoContourDistanceImageFilterIF3IF3)

def itkIsoContourDistanceImageFilterIF3IF3___New_orig__() -> "itkIsoContourDistanceImageFilterIF3IF3_Pointer":
    """itkIsoContourDistanceImageFilterIF3IF3___New_orig__() -> itkIsoContourDistanceImageFilterIF3IF3_Pointer"""
    return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3___New_orig__()

def itkIsoContourDistanceImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkIsoContourDistanceImageFilterIF3IF3 *":
    """itkIsoContourDistanceImageFilterIF3IF3_cast(itkLightObject obj) -> itkIsoContourDistanceImageFilterIF3IF3"""
    return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def iso_contour_distance_image_filter(*args, **kwargs):
    """Procedural interface for IsoContourDistanceImageFilter"""
    import itk
    instance = itk.IsoContourDistanceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def iso_contour_distance_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.IsoContourDistanceImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.IsoContourDistanceImageFilter.values()[0]
    else:
        filter_object = itk.IsoContourDistanceImageFilter

    iso_contour_distance_image_filter.__doc__ = filter_object.__doc__
    iso_contour_distance_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    iso_contour_distance_image_filter.__doc__ += "Available Keyword Arguments:\n"
    iso_contour_distance_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



