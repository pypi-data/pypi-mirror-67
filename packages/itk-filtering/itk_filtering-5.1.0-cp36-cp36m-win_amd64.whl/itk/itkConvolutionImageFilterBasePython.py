# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkConvolutionImageFilterBasePython
else:
    import _itkConvolutionImageFilterBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkConvolutionImageFilterBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkConvolutionImageFilterBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itkImageToImageFilterAPython
import itkImageToImageFilterCommonPython
import pyBasePython
import ITKCommonBasePython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkVectorPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkCovariantVectorPython
import itkPointPython
import vnl_matrix_fixedPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageBoundaryConditionPython

def itkConvolutionImageFilterBaseID3ID3_New():
  return itkConvolutionImageFilterBaseID3ID3.New()


def itkConvolutionImageFilterBaseID2ID2_New():
  return itkConvolutionImageFilterBaseID2ID2.New()


def itkConvolutionImageFilterBaseIF3IF3_New():
  return itkConvolutionImageFilterBaseIF3IF3.New()


def itkConvolutionImageFilterBaseIF2IF2_New():
  return itkConvolutionImageFilterBaseIF2IF2.New()


def itkConvolutionImageFilterBaseIUS3IUS3_New():
  return itkConvolutionImageFilterBaseIUS3IUS3.New()


def itkConvolutionImageFilterBaseIUS2IUS2_New():
  return itkConvolutionImageFilterBaseIUS2IUS2.New()


def itkConvolutionImageFilterBaseIUC3IUC3_New():
  return itkConvolutionImageFilterBaseIUC3IUC3.New()


def itkConvolutionImageFilterBaseIUC2IUC2_New():
  return itkConvolutionImageFilterBaseIUC2IUC2.New()


def itkConvolutionImageFilterBaseISS3ISS3_New():
  return itkConvolutionImageFilterBaseISS3ISS3.New()


def itkConvolutionImageFilterBaseISS2ISS2_New():
  return itkConvolutionImageFilterBaseISS2ISS2.New()

class itkConvolutionImageFilterBaseEnums(object):
    r"""Proxy of C++ itkConvolutionImageFilterBaseEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ConvolutionImageFilterOutputRegion_SAME = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseEnums_ConvolutionImageFilterOutputRegion_SAME
    
    ConvolutionImageFilterOutputRegion_VALID = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseEnums_ConvolutionImageFilterOutputRegion_VALID
    

    def __init__(self, *args):
        r"""
        __init__(itkConvolutionImageFilterBaseEnums self) -> itkConvolutionImageFilterBaseEnums
        __init__(itkConvolutionImageFilterBaseEnums self, itkConvolutionImageFilterBaseEnums arg0) -> itkConvolutionImageFilterBaseEnums
        """
        _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseEnums_swiginit(self, _itkConvolutionImageFilterBasePython.new_itkConvolutionImageFilterBaseEnums(*args))
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseEnums

# Register itkConvolutionImageFilterBaseEnums in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseEnums_swigregister(itkConvolutionImageFilterBaseEnums)

class itkConvolutionImageFilterBaseID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkConvolutionImageFilterBaseID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_SetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_GetBoundaryCondition)
    SetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_SetKernelImage)
    GetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_GetKernelImage)
    SetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_NormalizeOff)
    SetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_SetOutputRegionMode)
    GetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_GetOutputRegionMode)
    SetOutputRegionModeToSame = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_SetOutputRegionModeToSame)
    SetOutputRegionModeToValid = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_SetOutputRegionModeToValid)
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseID2ID2
    cast = _swig_new_static_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterBaseID2ID2

        Create a new object of the class itkConvolutionImageFilterBaseID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConvolutionImageFilterBaseID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConvolutionImageFilterBaseID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterBaseID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConvolutionImageFilterBaseID2ID2 in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_swigregister(itkConvolutionImageFilterBaseID2ID2)
itkConvolutionImageFilterBaseID2ID2_cast = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2_cast

class itkConvolutionImageFilterBaseID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkConvolutionImageFilterBaseID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_SetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_GetBoundaryCondition)
    SetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_SetKernelImage)
    GetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_GetKernelImage)
    SetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_NormalizeOff)
    SetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_SetOutputRegionMode)
    GetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_GetOutputRegionMode)
    SetOutputRegionModeToSame = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_SetOutputRegionModeToSame)
    SetOutputRegionModeToValid = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_SetOutputRegionModeToValid)
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseID3ID3
    cast = _swig_new_static_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterBaseID3ID3

        Create a new object of the class itkConvolutionImageFilterBaseID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConvolutionImageFilterBaseID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConvolutionImageFilterBaseID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterBaseID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConvolutionImageFilterBaseID3ID3 in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_swigregister(itkConvolutionImageFilterBaseID3ID3)
itkConvolutionImageFilterBaseID3ID3_cast = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3_cast

class itkConvolutionImageFilterBaseIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkConvolutionImageFilterBaseIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_SetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_GetBoundaryCondition)
    SetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_SetKernelImage)
    GetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_GetKernelImage)
    SetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_NormalizeOff)
    SetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_SetOutputRegionMode)
    GetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_GetOutputRegionMode)
    SetOutputRegionModeToSame = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_SetOutputRegionModeToSame)
    SetOutputRegionModeToValid = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_SetOutputRegionModeToValid)
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseIF2IF2
    cast = _swig_new_static_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterBaseIF2IF2

        Create a new object of the class itkConvolutionImageFilterBaseIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConvolutionImageFilterBaseIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConvolutionImageFilterBaseIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterBaseIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConvolutionImageFilterBaseIF2IF2 in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_swigregister(itkConvolutionImageFilterBaseIF2IF2)
itkConvolutionImageFilterBaseIF2IF2_cast = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2_cast

class itkConvolutionImageFilterBaseIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkConvolutionImageFilterBaseIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_SetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_GetBoundaryCondition)
    SetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_SetKernelImage)
    GetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_GetKernelImage)
    SetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_NormalizeOff)
    SetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_SetOutputRegionMode)
    GetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_GetOutputRegionMode)
    SetOutputRegionModeToSame = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_SetOutputRegionModeToSame)
    SetOutputRegionModeToValid = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_SetOutputRegionModeToValid)
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseIF3IF3
    cast = _swig_new_static_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterBaseIF3IF3

        Create a new object of the class itkConvolutionImageFilterBaseIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConvolutionImageFilterBaseIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConvolutionImageFilterBaseIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterBaseIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConvolutionImageFilterBaseIF3IF3 in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_swigregister(itkConvolutionImageFilterBaseIF3IF3)
itkConvolutionImageFilterBaseIF3IF3_cast = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3_cast

class itkConvolutionImageFilterBaseISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkConvolutionImageFilterBaseISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_SetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_GetBoundaryCondition)
    SetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_SetKernelImage)
    GetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_GetKernelImage)
    SetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_NormalizeOff)
    SetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_SetOutputRegionMode)
    GetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_GetOutputRegionMode)
    SetOutputRegionModeToSame = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_SetOutputRegionModeToSame)
    SetOutputRegionModeToValid = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_SetOutputRegionModeToValid)
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseISS2ISS2
    cast = _swig_new_static_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterBaseISS2ISS2

        Create a new object of the class itkConvolutionImageFilterBaseISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConvolutionImageFilterBaseISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConvolutionImageFilterBaseISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterBaseISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConvolutionImageFilterBaseISS2ISS2 in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_swigregister(itkConvolutionImageFilterBaseISS2ISS2)
itkConvolutionImageFilterBaseISS2ISS2_cast = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2_cast

class itkConvolutionImageFilterBaseISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkConvolutionImageFilterBaseISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_SetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_GetBoundaryCondition)
    SetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_SetKernelImage)
    GetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_GetKernelImage)
    SetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_NormalizeOff)
    SetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_SetOutputRegionMode)
    GetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_GetOutputRegionMode)
    SetOutputRegionModeToSame = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_SetOutputRegionModeToSame)
    SetOutputRegionModeToValid = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_SetOutputRegionModeToValid)
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseISS3ISS3
    cast = _swig_new_static_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterBaseISS3ISS3

        Create a new object of the class itkConvolutionImageFilterBaseISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConvolutionImageFilterBaseISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConvolutionImageFilterBaseISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterBaseISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConvolutionImageFilterBaseISS3ISS3 in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_swigregister(itkConvolutionImageFilterBaseISS3ISS3)
itkConvolutionImageFilterBaseISS3ISS3_cast = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3_cast

class itkConvolutionImageFilterBaseIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkConvolutionImageFilterBaseIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_SetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_GetBoundaryCondition)
    SetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_SetKernelImage)
    GetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_GetKernelImage)
    SetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_NormalizeOff)
    SetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_SetOutputRegionMode)
    GetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_GetOutputRegionMode)
    SetOutputRegionModeToSame = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_SetOutputRegionModeToSame)
    SetOutputRegionModeToValid = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_SetOutputRegionModeToValid)
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseIUC2IUC2
    cast = _swig_new_static_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterBaseIUC2IUC2

        Create a new object of the class itkConvolutionImageFilterBaseIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConvolutionImageFilterBaseIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConvolutionImageFilterBaseIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterBaseIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConvolutionImageFilterBaseIUC2IUC2 in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_swigregister(itkConvolutionImageFilterBaseIUC2IUC2)
itkConvolutionImageFilterBaseIUC2IUC2_cast = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2_cast

class itkConvolutionImageFilterBaseIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkConvolutionImageFilterBaseIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_SetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_GetBoundaryCondition)
    SetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_SetKernelImage)
    GetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_GetKernelImage)
    SetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_NormalizeOff)
    SetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_SetOutputRegionMode)
    GetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_GetOutputRegionMode)
    SetOutputRegionModeToSame = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_SetOutputRegionModeToSame)
    SetOutputRegionModeToValid = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_SetOutputRegionModeToValid)
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseIUC3IUC3
    cast = _swig_new_static_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterBaseIUC3IUC3

        Create a new object of the class itkConvolutionImageFilterBaseIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConvolutionImageFilterBaseIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConvolutionImageFilterBaseIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterBaseIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConvolutionImageFilterBaseIUC3IUC3 in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_swigregister(itkConvolutionImageFilterBaseIUC3IUC3)
itkConvolutionImageFilterBaseIUC3IUC3_cast = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3_cast

class itkConvolutionImageFilterBaseIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkConvolutionImageFilterBaseIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_SetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_GetBoundaryCondition)
    SetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_SetKernelImage)
    GetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_GetKernelImage)
    SetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_NormalizeOff)
    SetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_SetOutputRegionMode)
    GetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_GetOutputRegionMode)
    SetOutputRegionModeToSame = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_SetOutputRegionModeToSame)
    SetOutputRegionModeToValid = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_SetOutputRegionModeToValid)
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseIUS2IUS2
    cast = _swig_new_static_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterBaseIUS2IUS2

        Create a new object of the class itkConvolutionImageFilterBaseIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConvolutionImageFilterBaseIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConvolutionImageFilterBaseIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterBaseIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConvolutionImageFilterBaseIUS2IUS2 in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_swigregister(itkConvolutionImageFilterBaseIUS2IUS2)
itkConvolutionImageFilterBaseIUS2IUS2_cast = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2_cast

class itkConvolutionImageFilterBaseIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkConvolutionImageFilterBaseIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_SetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_GetBoundaryCondition)
    SetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_SetKernelImage)
    GetKernelImage = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_GetKernelImage)
    SetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_SetNormalize)
    GetNormalize = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_GetNormalize)
    NormalizeOn = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_NormalizeOn)
    NormalizeOff = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_NormalizeOff)
    SetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_SetOutputRegionMode)
    GetOutputRegionMode = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_GetOutputRegionMode)
    SetOutputRegionModeToSame = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_SetOutputRegionModeToSame)
    SetOutputRegionModeToValid = _swig_new_instance_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_SetOutputRegionModeToValid)
    __swig_destroy__ = _itkConvolutionImageFilterBasePython.delete_itkConvolutionImageFilterBaseIUS3IUS3
    cast = _swig_new_static_method(_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterBaseIUS3IUS3

        Create a new object of the class itkConvolutionImageFilterBaseIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConvolutionImageFilterBaseIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkConvolutionImageFilterBaseIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterBaseIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConvolutionImageFilterBaseIUS3IUS3 in _itkConvolutionImageFilterBasePython:
_itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_swigregister(itkConvolutionImageFilterBaseIUS3IUS3)
itkConvolutionImageFilterBaseIUS3IUS3_cast = _itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def convolution_image_filter_base(*args, **kwargs):
    """Procedural interface for ConvolutionImageFilterBase"""
    import itk
    instance = itk.ConvolutionImageFilterBase.New(*args, **kwargs)
    return instance.__internal_call__()

def convolution_image_filter_base_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ConvolutionImageFilterBase, itkTemplate.itkTemplate):
        filter_object = itk.ConvolutionImageFilterBase.values()[0]
    else:
        filter_object = itk.ConvolutionImageFilterBase

    convolution_image_filter_base.__doc__ = filter_object.__doc__
    convolution_image_filter_base.__doc__ += "\n Args are Input(s) to the filter.\n"
    convolution_image_filter_base.__doc__ += "Available Keyword Arguments:\n"
    convolution_image_filter_base.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



