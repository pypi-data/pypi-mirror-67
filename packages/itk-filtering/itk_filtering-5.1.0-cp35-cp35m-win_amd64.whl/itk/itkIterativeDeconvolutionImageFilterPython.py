# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkIterativeDeconvolutionImageFilterPython
else:
    import _itkIterativeDeconvolutionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkIterativeDeconvolutionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkIterativeDeconvolutionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itkFFTConvolutionImageFilterPython
import itkSizePython
import pyBasePython
import itkImagePython
import itkPointPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkRGBPixelPython
import itkIndexPython
import itkOffsetPython
import itkImageRegionPython
import itkSymmetricSecondRankTensorPython
import itkConvolutionImageFilterBasePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageBoundaryConditionPython

def itkIterativeDeconvolutionImageFilterID3ID3_New():
  return itkIterativeDeconvolutionImageFilterID3ID3.New()


def itkIterativeDeconvolutionImageFilterID2ID2_New():
  return itkIterativeDeconvolutionImageFilterID2ID2.New()


def itkIterativeDeconvolutionImageFilterIF3IF3_New():
  return itkIterativeDeconvolutionImageFilterIF3IF3.New()


def itkIterativeDeconvolutionImageFilterIF2IF2_New():
  return itkIterativeDeconvolutionImageFilterIF2IF2.New()


def itkIterativeDeconvolutionImageFilterIUS3IUS3_New():
  return itkIterativeDeconvolutionImageFilterIUS3IUS3.New()


def itkIterativeDeconvolutionImageFilterIUS2IUS2_New():
  return itkIterativeDeconvolutionImageFilterIUS2IUS2.New()


def itkIterativeDeconvolutionImageFilterIUC3IUC3_New():
  return itkIterativeDeconvolutionImageFilterIUC3IUC3.New()


def itkIterativeDeconvolutionImageFilterIUC2IUC2_New():
  return itkIterativeDeconvolutionImageFilterIUC2IUC2.New()


def itkIterativeDeconvolutionImageFilterISS3ISS3_New():
  return itkIterativeDeconvolutionImageFilterISS3ISS3.New()


def itkIterativeDeconvolutionImageFilterISS2ISS2_New():
  return itkIterativeDeconvolutionImageFilterISS2ISS2.New()

class itkIterativeDeconvolutionImageFilterID2ID2(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID2ID2):
    r"""Proxy of C++ itkIterativeDeconvolutionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2_GetNumberOfIterations)
    GetModifiableCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2_GetModifiableCurrentEstimate)
    GetCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2_GetCurrentEstimate)
    SetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2_SetStopIteration)
    GetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2_GetStopIteration)
    GetIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2_GetIteration)
    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterID2ID2
    cast = _swig_new_static_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterID2ID2

        Create a new object of the class itkIterativeDeconvolutionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeDeconvolutionImageFilterID2ID2 in _itkIterativeDeconvolutionImageFilterPython:
_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2_swigregister(itkIterativeDeconvolutionImageFilterID2ID2)
itkIterativeDeconvolutionImageFilterID2ID2_cast = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2_cast

class itkIterativeDeconvolutionImageFilterID3ID3(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID3ID3):
    r"""Proxy of C++ itkIterativeDeconvolutionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3_GetNumberOfIterations)
    GetModifiableCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3_GetModifiableCurrentEstimate)
    GetCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3_GetCurrentEstimate)
    SetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3_SetStopIteration)
    GetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3_GetStopIteration)
    GetIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3_GetIteration)
    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterID3ID3
    cast = _swig_new_static_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterID3ID3

        Create a new object of the class itkIterativeDeconvolutionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeDeconvolutionImageFilterID3ID3 in _itkIterativeDeconvolutionImageFilterPython:
_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3_swigregister(itkIterativeDeconvolutionImageFilterID3ID3)
itkIterativeDeconvolutionImageFilterID3ID3_cast = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3_cast

class itkIterativeDeconvolutionImageFilterIF2IF2(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF2IF2):
    r"""Proxy of C++ itkIterativeDeconvolutionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetNumberOfIterations)
    GetModifiableCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetModifiableCurrentEstimate)
    GetCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetCurrentEstimate)
    SetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_SetStopIteration)
    GetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetStopIteration)
    GetIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetIteration)
    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterIF2IF2
    cast = _swig_new_static_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterIF2IF2

        Create a new object of the class itkIterativeDeconvolutionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeDeconvolutionImageFilterIF2IF2 in _itkIterativeDeconvolutionImageFilterPython:
_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_swigregister(itkIterativeDeconvolutionImageFilterIF2IF2)
itkIterativeDeconvolutionImageFilterIF2IF2_cast = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_cast

class itkIterativeDeconvolutionImageFilterIF3IF3(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF3IF3):
    r"""Proxy of C++ itkIterativeDeconvolutionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetNumberOfIterations)
    GetModifiableCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetModifiableCurrentEstimate)
    GetCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetCurrentEstimate)
    SetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_SetStopIteration)
    GetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetStopIteration)
    GetIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetIteration)
    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterIF3IF3
    cast = _swig_new_static_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterIF3IF3

        Create a new object of the class itkIterativeDeconvolutionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeDeconvolutionImageFilterIF3IF3 in _itkIterativeDeconvolutionImageFilterPython:
_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_swigregister(itkIterativeDeconvolutionImageFilterIF3IF3)
itkIterativeDeconvolutionImageFilterIF3IF3_cast = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_cast

class itkIterativeDeconvolutionImageFilterISS2ISS2(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS2ISS2):
    r"""Proxy of C++ itkIterativeDeconvolutionImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetNumberOfIterations)
    GetModifiableCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetModifiableCurrentEstimate)
    GetCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetCurrentEstimate)
    SetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_SetStopIteration)
    GetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetStopIteration)
    GetIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetIteration)
    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterISS2ISS2

        Create a new object of the class itkIterativeDeconvolutionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeDeconvolutionImageFilterISS2ISS2 in _itkIterativeDeconvolutionImageFilterPython:
_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_swigregister(itkIterativeDeconvolutionImageFilterISS2ISS2)
itkIterativeDeconvolutionImageFilterISS2ISS2_cast = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_cast

class itkIterativeDeconvolutionImageFilterISS3ISS3(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS3ISS3):
    r"""Proxy of C++ itkIterativeDeconvolutionImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetNumberOfIterations)
    GetModifiableCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetModifiableCurrentEstimate)
    GetCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetCurrentEstimate)
    SetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_SetStopIteration)
    GetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetStopIteration)
    GetIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetIteration)
    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterISS3ISS3

        Create a new object of the class itkIterativeDeconvolutionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeDeconvolutionImageFilterISS3ISS3 in _itkIterativeDeconvolutionImageFilterPython:
_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_swigregister(itkIterativeDeconvolutionImageFilterISS3ISS3)
itkIterativeDeconvolutionImageFilterISS3ISS3_cast = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_cast

class itkIterativeDeconvolutionImageFilterIUC2IUC2(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC2IUC2):
    r"""Proxy of C++ itkIterativeDeconvolutionImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetNumberOfIterations)
    GetModifiableCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetModifiableCurrentEstimate)
    GetCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetCurrentEstimate)
    SetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_SetStopIteration)
    GetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetStopIteration)
    GetIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetIteration)
    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterIUC2IUC2

        Create a new object of the class itkIterativeDeconvolutionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeDeconvolutionImageFilterIUC2IUC2 in _itkIterativeDeconvolutionImageFilterPython:
_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_swigregister(itkIterativeDeconvolutionImageFilterIUC2IUC2)
itkIterativeDeconvolutionImageFilterIUC2IUC2_cast = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_cast

class itkIterativeDeconvolutionImageFilterIUC3IUC3(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC3IUC3):
    r"""Proxy of C++ itkIterativeDeconvolutionImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetNumberOfIterations)
    GetModifiableCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetModifiableCurrentEstimate)
    GetCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetCurrentEstimate)
    SetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_SetStopIteration)
    GetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetStopIteration)
    GetIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetIteration)
    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterIUC3IUC3

        Create a new object of the class itkIterativeDeconvolutionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeDeconvolutionImageFilterIUC3IUC3 in _itkIterativeDeconvolutionImageFilterPython:
_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_swigregister(itkIterativeDeconvolutionImageFilterIUC3IUC3)
itkIterativeDeconvolutionImageFilterIUC3IUC3_cast = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_cast

class itkIterativeDeconvolutionImageFilterIUS2IUS2(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS2IUS2):
    r"""Proxy of C++ itkIterativeDeconvolutionImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2_GetNumberOfIterations)
    GetModifiableCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2_GetModifiableCurrentEstimate)
    GetCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2_GetCurrentEstimate)
    SetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2_SetStopIteration)
    GetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2_GetStopIteration)
    GetIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2_GetIteration)
    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterIUS2IUS2

        Create a new object of the class itkIterativeDeconvolutionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeDeconvolutionImageFilterIUS2IUS2 in _itkIterativeDeconvolutionImageFilterPython:
_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2_swigregister(itkIterativeDeconvolutionImageFilterIUS2IUS2)
itkIterativeDeconvolutionImageFilterIUS2IUS2_cast = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2_cast

class itkIterativeDeconvolutionImageFilterIUS3IUS3(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS3IUS3):
    r"""Proxy of C++ itkIterativeDeconvolutionImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3_GetNumberOfIterations)
    GetModifiableCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3_GetModifiableCurrentEstimate)
    GetCurrentEstimate = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3_GetCurrentEstimate)
    SetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3_SetStopIteration)
    GetStopIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3_GetStopIteration)
    GetIteration = _swig_new_instance_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3_GetIteration)
    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterIUS3IUS3

        Create a new object of the class itkIterativeDeconvolutionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeDeconvolutionImageFilterIUS3IUS3 in _itkIterativeDeconvolutionImageFilterPython:
_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3_swigregister(itkIterativeDeconvolutionImageFilterIUS3IUS3)
itkIterativeDeconvolutionImageFilterIUS3IUS3_cast = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def iterative_deconvolution_image_filter(*args, **kwargs):
    """Procedural interface for IterativeDeconvolutionImageFilter"""
    import itk
    instance = itk.IterativeDeconvolutionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def iterative_deconvolution_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.IterativeDeconvolutionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.IterativeDeconvolutionImageFilter.values()[0]
    else:
        filter_object = itk.IterativeDeconvolutionImageFilter

    iterative_deconvolution_image_filter.__doc__ = filter_object.__doc__
    iterative_deconvolution_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    iterative_deconvolution_image_filter.__doc__ += "Available Keyword Arguments:\n"
    iterative_deconvolution_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



