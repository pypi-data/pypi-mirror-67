# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkFastChamferDistanceImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkFastChamferDistanceImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkFastChamferDistanceImageFilterPython
            return _itkFastChamferDistanceImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkFastChamferDistanceImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkFastChamferDistanceImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkFastChamferDistanceImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import ITKCommonBasePython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkFixedArrayPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImagePython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vector_refPython
import itkRGBPixelPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import ITKNarrowBandBasePython

def itkFastChamferDistanceImageFilterID3ID3_New():
  return itkFastChamferDistanceImageFilterID3ID3.New()


def itkFastChamferDistanceImageFilterID2ID2_New():
  return itkFastChamferDistanceImageFilterID2ID2.New()


def itkFastChamferDistanceImageFilterIF3IF3_New():
  return itkFastChamferDistanceImageFilterIF3IF3.New()


def itkFastChamferDistanceImageFilterIF2IF2_New():
  return itkFastChamferDistanceImageFilterIF2IF2.New()


def itkFastChamferDistanceImageFilterISS3ISS3_New():
  return itkFastChamferDistanceImageFilterISS3ISS3.New()


def itkFastChamferDistanceImageFilterISS2ISS2_New():
  return itkFastChamferDistanceImageFilterISS2ISS2.New()

class itkFastChamferDistanceImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set
    MethodsKrissian K. and Westin C.F., EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003.

    C++ includes: itkFastChamferDistanceImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFastChamferDistanceImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkFastChamferDistanceImageFilterID2ID2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFastChamferDistanceImageFilterID2ID2_Pointer":
        """Clone(itkFastChamferDistanceImageFilterID2ID2 self) -> itkFastChamferDistanceImageFilterID2ID2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_Clone(self)


    def SetWeights(self, _arg: 'itkFixedArrayF2') -> "void":
        """
        SetWeights(itkFastChamferDistanceImageFilterID2ID2 self, itkFixedArrayF2 _arg)

        coefficients of the
        Chamfer distance for each kind of neighbor. 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetWeights(self, _arg)


    def GetWeights(self) -> "itkFixedArrayF2 const &":
        """GetWeights(itkFastChamferDistanceImageFilterID2ID2 self) -> itkFixedArrayF2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetWeights(self)


    def SetMaximumDistance(self, _arg: 'float const') -> "void":
        """
        SetMaximumDistance(itkFastChamferDistanceImageFilterID2ID2 self, float const _arg)

        Maximal computed
        distance 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetMaximumDistance(self, _arg)


    def GetMaximumDistance(self) -> "float":
        """GetMaximumDistance(itkFastChamferDistanceImageFilterID2ID2 self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetMaximumDistance(self)


    def SetRegionToProcess(self, r: 'itkImageRegion2') -> "void":
        """SetRegionToProcess(itkFastChamferDistanceImageFilterID2ID2 self, itkImageRegion2 r)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetRegionToProcess(self, r)


    def GetRegionToProcess(self) -> "itkImageRegion2":
        """GetRegionToProcess(itkFastChamferDistanceImageFilterID2ID2 self) -> itkImageRegion2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetRegionToProcess(self)


    def SetNarrowBand(self, ptr: 'itkNarrowBandBNI2D') -> "void":
        """SetNarrowBand(itkFastChamferDistanceImageFilterID2ID2 self, itkNarrowBandBNI2D ptr)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetNarrowBand(self, ptr)


    def GetNarrowBand(self) -> "itkNarrowBandBNI2D_Pointer":
        """GetNarrowBand(itkFastChamferDistanceImageFilterID2ID2 self) -> itkNarrowBandBNI2D_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetNarrowBand(self)

    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SameDimensionCheck
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SameTypeCheck
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_FloatConvertibleToPixelTypeCheck
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeConvertibleToFloatCheck
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeGreaterThanFloatCheck
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeLessThanFloatCheck
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeFloatAdditiveOperatorsCheck
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_FloatGreaterThanPixelTypeCheck
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_FloatLessThanPixelTypeCheck
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterID2ID2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterID2ID2

        Create a new object of the class itkFastChamferDistanceImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastChamferDistanceImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastChamferDistanceImageFilterID2ID2.Clone = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_Clone, None, itkFastChamferDistanceImageFilterID2ID2)
itkFastChamferDistanceImageFilterID2ID2.SetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetWeights, None, itkFastChamferDistanceImageFilterID2ID2)
itkFastChamferDistanceImageFilterID2ID2.GetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetWeights, None, itkFastChamferDistanceImageFilterID2ID2)
itkFastChamferDistanceImageFilterID2ID2.SetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetMaximumDistance, None, itkFastChamferDistanceImageFilterID2ID2)
itkFastChamferDistanceImageFilterID2ID2.GetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetMaximumDistance, None, itkFastChamferDistanceImageFilterID2ID2)
itkFastChamferDistanceImageFilterID2ID2.SetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetRegionToProcess, None, itkFastChamferDistanceImageFilterID2ID2)
itkFastChamferDistanceImageFilterID2ID2.GetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetRegionToProcess, None, itkFastChamferDistanceImageFilterID2ID2)
itkFastChamferDistanceImageFilterID2ID2.SetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetNarrowBand, None, itkFastChamferDistanceImageFilterID2ID2)
itkFastChamferDistanceImageFilterID2ID2.GetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetNarrowBand, None, itkFastChamferDistanceImageFilterID2ID2)
itkFastChamferDistanceImageFilterID2ID2_swigregister = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_swigregister
itkFastChamferDistanceImageFilterID2ID2_swigregister(itkFastChamferDistanceImageFilterID2ID2)

def itkFastChamferDistanceImageFilterID2ID2___New_orig__() -> "itkFastChamferDistanceImageFilterID2ID2_Pointer":
    """itkFastChamferDistanceImageFilterID2ID2___New_orig__() -> itkFastChamferDistanceImageFilterID2ID2_Pointer"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2___New_orig__()

def itkFastChamferDistanceImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterID2ID2 *":
    """itkFastChamferDistanceImageFilterID2ID2_cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterID2ID2"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_cast(obj)

class itkFastChamferDistanceImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set
    MethodsKrissian K. and Westin C.F., EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003.

    C++ includes: itkFastChamferDistanceImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFastChamferDistanceImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkFastChamferDistanceImageFilterID3ID3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFastChamferDistanceImageFilterID3ID3_Pointer":
        """Clone(itkFastChamferDistanceImageFilterID3ID3 self) -> itkFastChamferDistanceImageFilterID3ID3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_Clone(self)


    def SetWeights(self, _arg: 'itkFixedArrayF3') -> "void":
        """
        SetWeights(itkFastChamferDistanceImageFilterID3ID3 self, itkFixedArrayF3 _arg)

        coefficients of the
        Chamfer distance for each kind of neighbor. 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetWeights(self, _arg)


    def GetWeights(self) -> "itkFixedArrayF3 const &":
        """GetWeights(itkFastChamferDistanceImageFilterID3ID3 self) -> itkFixedArrayF3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetWeights(self)


    def SetMaximumDistance(self, _arg: 'float const') -> "void":
        """
        SetMaximumDistance(itkFastChamferDistanceImageFilterID3ID3 self, float const _arg)

        Maximal computed
        distance 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetMaximumDistance(self, _arg)


    def GetMaximumDistance(self) -> "float":
        """GetMaximumDistance(itkFastChamferDistanceImageFilterID3ID3 self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetMaximumDistance(self)


    def SetRegionToProcess(self, r: 'itkImageRegion3') -> "void":
        """SetRegionToProcess(itkFastChamferDistanceImageFilterID3ID3 self, itkImageRegion3 r)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetRegionToProcess(self, r)


    def GetRegionToProcess(self) -> "itkImageRegion3":
        """GetRegionToProcess(itkFastChamferDistanceImageFilterID3ID3 self) -> itkImageRegion3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetRegionToProcess(self)


    def SetNarrowBand(self, ptr: 'itkNarrowBandBNI3D') -> "void":
        """SetNarrowBand(itkFastChamferDistanceImageFilterID3ID3 self, itkNarrowBandBNI3D ptr)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetNarrowBand(self, ptr)


    def GetNarrowBand(self) -> "itkNarrowBandBNI3D_Pointer":
        """GetNarrowBand(itkFastChamferDistanceImageFilterID3ID3 self) -> itkNarrowBandBNI3D_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetNarrowBand(self)

    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SameDimensionCheck
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SameTypeCheck
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_FloatConvertibleToPixelTypeCheck
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeConvertibleToFloatCheck
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeGreaterThanFloatCheck
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeLessThanFloatCheck
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeFloatAdditiveOperatorsCheck
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_FloatGreaterThanPixelTypeCheck
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_FloatLessThanPixelTypeCheck
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterID3ID3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterID3ID3

        Create a new object of the class itkFastChamferDistanceImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastChamferDistanceImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastChamferDistanceImageFilterID3ID3.Clone = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_Clone, None, itkFastChamferDistanceImageFilterID3ID3)
itkFastChamferDistanceImageFilterID3ID3.SetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetWeights, None, itkFastChamferDistanceImageFilterID3ID3)
itkFastChamferDistanceImageFilterID3ID3.GetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetWeights, None, itkFastChamferDistanceImageFilterID3ID3)
itkFastChamferDistanceImageFilterID3ID3.SetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetMaximumDistance, None, itkFastChamferDistanceImageFilterID3ID3)
itkFastChamferDistanceImageFilterID3ID3.GetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetMaximumDistance, None, itkFastChamferDistanceImageFilterID3ID3)
itkFastChamferDistanceImageFilterID3ID3.SetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetRegionToProcess, None, itkFastChamferDistanceImageFilterID3ID3)
itkFastChamferDistanceImageFilterID3ID3.GetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetRegionToProcess, None, itkFastChamferDistanceImageFilterID3ID3)
itkFastChamferDistanceImageFilterID3ID3.SetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetNarrowBand, None, itkFastChamferDistanceImageFilterID3ID3)
itkFastChamferDistanceImageFilterID3ID3.GetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetNarrowBand, None, itkFastChamferDistanceImageFilterID3ID3)
itkFastChamferDistanceImageFilterID3ID3_swigregister = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_swigregister
itkFastChamferDistanceImageFilterID3ID3_swigregister(itkFastChamferDistanceImageFilterID3ID3)

def itkFastChamferDistanceImageFilterID3ID3___New_orig__() -> "itkFastChamferDistanceImageFilterID3ID3_Pointer":
    """itkFastChamferDistanceImageFilterID3ID3___New_orig__() -> itkFastChamferDistanceImageFilterID3ID3_Pointer"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3___New_orig__()

def itkFastChamferDistanceImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterID3ID3 *":
    """itkFastChamferDistanceImageFilterID3ID3_cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterID3ID3"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_cast(obj)

class itkFastChamferDistanceImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set
    MethodsKrissian K. and Westin C.F., EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003.

    C++ includes: itkFastChamferDistanceImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFastChamferDistanceImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkFastChamferDistanceImageFilterIF2IF2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFastChamferDistanceImageFilterIF2IF2_Pointer":
        """Clone(itkFastChamferDistanceImageFilterIF2IF2 self) -> itkFastChamferDistanceImageFilterIF2IF2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_Clone(self)


    def SetWeights(self, _arg: 'itkFixedArrayF2') -> "void":
        """
        SetWeights(itkFastChamferDistanceImageFilterIF2IF2 self, itkFixedArrayF2 _arg)

        coefficients of the
        Chamfer distance for each kind of neighbor. 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetWeights(self, _arg)


    def GetWeights(self) -> "itkFixedArrayF2 const &":
        """GetWeights(itkFastChamferDistanceImageFilterIF2IF2 self) -> itkFixedArrayF2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetWeights(self)


    def SetMaximumDistance(self, _arg: 'float const') -> "void":
        """
        SetMaximumDistance(itkFastChamferDistanceImageFilterIF2IF2 self, float const _arg)

        Maximal computed
        distance 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetMaximumDistance(self, _arg)


    def GetMaximumDistance(self) -> "float":
        """GetMaximumDistance(itkFastChamferDistanceImageFilterIF2IF2 self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetMaximumDistance(self)


    def SetRegionToProcess(self, r: 'itkImageRegion2') -> "void":
        """SetRegionToProcess(itkFastChamferDistanceImageFilterIF2IF2 self, itkImageRegion2 r)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetRegionToProcess(self, r)


    def GetRegionToProcess(self) -> "itkImageRegion2":
        """GetRegionToProcess(itkFastChamferDistanceImageFilterIF2IF2 self) -> itkImageRegion2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetRegionToProcess(self)


    def SetNarrowBand(self, ptr: 'itkNarrowBandBNI2F') -> "void":
        """SetNarrowBand(itkFastChamferDistanceImageFilterIF2IF2 self, itkNarrowBandBNI2F ptr)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetNarrowBand(self, ptr)


    def GetNarrowBand(self) -> "itkNarrowBandBNI2F_Pointer":
        """GetNarrowBand(itkFastChamferDistanceImageFilterIF2IF2 self) -> itkNarrowBandBNI2F_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetNarrowBand(self)

    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SameDimensionCheck
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SameTypeCheck
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_FloatConvertibleToPixelTypeCheck
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeConvertibleToFloatCheck
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeGreaterThanFloatCheck
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeLessThanFloatCheck
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeFloatAdditiveOperatorsCheck
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_FloatGreaterThanPixelTypeCheck
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_FloatLessThanPixelTypeCheck
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterIF2IF2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterIF2IF2

        Create a new object of the class itkFastChamferDistanceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastChamferDistanceImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastChamferDistanceImageFilterIF2IF2.Clone = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_Clone, None, itkFastChamferDistanceImageFilterIF2IF2)
itkFastChamferDistanceImageFilterIF2IF2.SetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetWeights, None, itkFastChamferDistanceImageFilterIF2IF2)
itkFastChamferDistanceImageFilterIF2IF2.GetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetWeights, None, itkFastChamferDistanceImageFilterIF2IF2)
itkFastChamferDistanceImageFilterIF2IF2.SetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetMaximumDistance, None, itkFastChamferDistanceImageFilterIF2IF2)
itkFastChamferDistanceImageFilterIF2IF2.GetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetMaximumDistance, None, itkFastChamferDistanceImageFilterIF2IF2)
itkFastChamferDistanceImageFilterIF2IF2.SetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetRegionToProcess, None, itkFastChamferDistanceImageFilterIF2IF2)
itkFastChamferDistanceImageFilterIF2IF2.GetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetRegionToProcess, None, itkFastChamferDistanceImageFilterIF2IF2)
itkFastChamferDistanceImageFilterIF2IF2.SetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetNarrowBand, None, itkFastChamferDistanceImageFilterIF2IF2)
itkFastChamferDistanceImageFilterIF2IF2.GetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetNarrowBand, None, itkFastChamferDistanceImageFilterIF2IF2)
itkFastChamferDistanceImageFilterIF2IF2_swigregister = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_swigregister
itkFastChamferDistanceImageFilterIF2IF2_swigregister(itkFastChamferDistanceImageFilterIF2IF2)

def itkFastChamferDistanceImageFilterIF2IF2___New_orig__() -> "itkFastChamferDistanceImageFilterIF2IF2_Pointer":
    """itkFastChamferDistanceImageFilterIF2IF2___New_orig__() -> itkFastChamferDistanceImageFilterIF2IF2_Pointer"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2___New_orig__()

def itkFastChamferDistanceImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterIF2IF2 *":
    """itkFastChamferDistanceImageFilterIF2IF2_cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterIF2IF2"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_cast(obj)

class itkFastChamferDistanceImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set
    MethodsKrissian K. and Westin C.F., EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003.

    C++ includes: itkFastChamferDistanceImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFastChamferDistanceImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkFastChamferDistanceImageFilterIF3IF3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFastChamferDistanceImageFilterIF3IF3_Pointer":
        """Clone(itkFastChamferDistanceImageFilterIF3IF3 self) -> itkFastChamferDistanceImageFilterIF3IF3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_Clone(self)


    def SetWeights(self, _arg: 'itkFixedArrayF3') -> "void":
        """
        SetWeights(itkFastChamferDistanceImageFilterIF3IF3 self, itkFixedArrayF3 _arg)

        coefficients of the
        Chamfer distance for each kind of neighbor. 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetWeights(self, _arg)


    def GetWeights(self) -> "itkFixedArrayF3 const &":
        """GetWeights(itkFastChamferDistanceImageFilterIF3IF3 self) -> itkFixedArrayF3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetWeights(self)


    def SetMaximumDistance(self, _arg: 'float const') -> "void":
        """
        SetMaximumDistance(itkFastChamferDistanceImageFilterIF3IF3 self, float const _arg)

        Maximal computed
        distance 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetMaximumDistance(self, _arg)


    def GetMaximumDistance(self) -> "float":
        """GetMaximumDistance(itkFastChamferDistanceImageFilterIF3IF3 self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetMaximumDistance(self)


    def SetRegionToProcess(self, r: 'itkImageRegion3') -> "void":
        """SetRegionToProcess(itkFastChamferDistanceImageFilterIF3IF3 self, itkImageRegion3 r)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetRegionToProcess(self, r)


    def GetRegionToProcess(self) -> "itkImageRegion3":
        """GetRegionToProcess(itkFastChamferDistanceImageFilterIF3IF3 self) -> itkImageRegion3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetRegionToProcess(self)


    def SetNarrowBand(self, ptr: 'itkNarrowBandBNI3F') -> "void":
        """SetNarrowBand(itkFastChamferDistanceImageFilterIF3IF3 self, itkNarrowBandBNI3F ptr)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetNarrowBand(self, ptr)


    def GetNarrowBand(self) -> "itkNarrowBandBNI3F_Pointer":
        """GetNarrowBand(itkFastChamferDistanceImageFilterIF3IF3 self) -> itkNarrowBandBNI3F_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetNarrowBand(self)

    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SameDimensionCheck
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SameTypeCheck
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_FloatConvertibleToPixelTypeCheck
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeConvertibleToFloatCheck
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeGreaterThanFloatCheck
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeLessThanFloatCheck
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeFloatAdditiveOperatorsCheck
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_FloatGreaterThanPixelTypeCheck
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_FloatLessThanPixelTypeCheck
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterIF3IF3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterIF3IF3

        Create a new object of the class itkFastChamferDistanceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastChamferDistanceImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastChamferDistanceImageFilterIF3IF3.Clone = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_Clone, None, itkFastChamferDistanceImageFilterIF3IF3)
itkFastChamferDistanceImageFilterIF3IF3.SetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetWeights, None, itkFastChamferDistanceImageFilterIF3IF3)
itkFastChamferDistanceImageFilterIF3IF3.GetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetWeights, None, itkFastChamferDistanceImageFilterIF3IF3)
itkFastChamferDistanceImageFilterIF3IF3.SetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetMaximumDistance, None, itkFastChamferDistanceImageFilterIF3IF3)
itkFastChamferDistanceImageFilterIF3IF3.GetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetMaximumDistance, None, itkFastChamferDistanceImageFilterIF3IF3)
itkFastChamferDistanceImageFilterIF3IF3.SetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetRegionToProcess, None, itkFastChamferDistanceImageFilterIF3IF3)
itkFastChamferDistanceImageFilterIF3IF3.GetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetRegionToProcess, None, itkFastChamferDistanceImageFilterIF3IF3)
itkFastChamferDistanceImageFilterIF3IF3.SetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetNarrowBand, None, itkFastChamferDistanceImageFilterIF3IF3)
itkFastChamferDistanceImageFilterIF3IF3.GetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetNarrowBand, None, itkFastChamferDistanceImageFilterIF3IF3)
itkFastChamferDistanceImageFilterIF3IF3_swigregister = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_swigregister
itkFastChamferDistanceImageFilterIF3IF3_swigregister(itkFastChamferDistanceImageFilterIF3IF3)

def itkFastChamferDistanceImageFilterIF3IF3___New_orig__() -> "itkFastChamferDistanceImageFilterIF3IF3_Pointer":
    """itkFastChamferDistanceImageFilterIF3IF3___New_orig__() -> itkFastChamferDistanceImageFilterIF3IF3_Pointer"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3___New_orig__()

def itkFastChamferDistanceImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterIF3IF3 *":
    """itkFastChamferDistanceImageFilterIF3IF3_cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterIF3IF3"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_cast(obj)

class itkFastChamferDistanceImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set
    MethodsKrissian K. and Westin C.F., EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003.

    C++ includes: itkFastChamferDistanceImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFastChamferDistanceImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkFastChamferDistanceImageFilterISS2ISS2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFastChamferDistanceImageFilterISS2ISS2_Pointer":
        """Clone(itkFastChamferDistanceImageFilterISS2ISS2 self) -> itkFastChamferDistanceImageFilterISS2ISS2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_Clone(self)


    def SetWeights(self, _arg: 'itkFixedArrayF2') -> "void":
        """
        SetWeights(itkFastChamferDistanceImageFilterISS2ISS2 self, itkFixedArrayF2 _arg)

        coefficients of the
        Chamfer distance for each kind of neighbor. 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetWeights(self, _arg)


    def GetWeights(self) -> "itkFixedArrayF2 const &":
        """GetWeights(itkFastChamferDistanceImageFilterISS2ISS2 self) -> itkFixedArrayF2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetWeights(self)


    def SetMaximumDistance(self, _arg: 'float const') -> "void":
        """
        SetMaximumDistance(itkFastChamferDistanceImageFilterISS2ISS2 self, float const _arg)

        Maximal computed
        distance 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetMaximumDistance(self, _arg)


    def GetMaximumDistance(self) -> "float":
        """GetMaximumDistance(itkFastChamferDistanceImageFilterISS2ISS2 self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetMaximumDistance(self)


    def SetRegionToProcess(self, r: 'itkImageRegion2') -> "void":
        """SetRegionToProcess(itkFastChamferDistanceImageFilterISS2ISS2 self, itkImageRegion2 r)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetRegionToProcess(self, r)


    def GetRegionToProcess(self) -> "itkImageRegion2":
        """GetRegionToProcess(itkFastChamferDistanceImageFilterISS2ISS2 self) -> itkImageRegion2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetRegionToProcess(self)


    def SetNarrowBand(self, ptr: 'itkNarrowBandBNI2SS') -> "void":
        """SetNarrowBand(itkFastChamferDistanceImageFilterISS2ISS2 self, itkNarrowBandBNI2SS ptr)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetNarrowBand(self, ptr)


    def GetNarrowBand(self) -> "itkNarrowBandBNI2SS_Pointer":
        """GetNarrowBand(itkFastChamferDistanceImageFilterISS2ISS2 self) -> itkNarrowBandBNI2SS_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetNarrowBand(self)

    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SameDimensionCheck
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SameTypeCheck
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_FloatConvertibleToPixelTypeCheck
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeConvertibleToFloatCheck
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeGreaterThanFloatCheck
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeLessThanFloatCheck
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeFloatAdditiveOperatorsCheck
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_FloatGreaterThanPixelTypeCheck
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_FloatLessThanPixelTypeCheck
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterISS2ISS2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterISS2ISS2

        Create a new object of the class itkFastChamferDistanceImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastChamferDistanceImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastChamferDistanceImageFilterISS2ISS2.Clone = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_Clone, None, itkFastChamferDistanceImageFilterISS2ISS2)
itkFastChamferDistanceImageFilterISS2ISS2.SetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetWeights, None, itkFastChamferDistanceImageFilterISS2ISS2)
itkFastChamferDistanceImageFilterISS2ISS2.GetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetWeights, None, itkFastChamferDistanceImageFilterISS2ISS2)
itkFastChamferDistanceImageFilterISS2ISS2.SetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetMaximumDistance, None, itkFastChamferDistanceImageFilterISS2ISS2)
itkFastChamferDistanceImageFilterISS2ISS2.GetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetMaximumDistance, None, itkFastChamferDistanceImageFilterISS2ISS2)
itkFastChamferDistanceImageFilterISS2ISS2.SetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetRegionToProcess, None, itkFastChamferDistanceImageFilterISS2ISS2)
itkFastChamferDistanceImageFilterISS2ISS2.GetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetRegionToProcess, None, itkFastChamferDistanceImageFilterISS2ISS2)
itkFastChamferDistanceImageFilterISS2ISS2.SetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetNarrowBand, None, itkFastChamferDistanceImageFilterISS2ISS2)
itkFastChamferDistanceImageFilterISS2ISS2.GetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetNarrowBand, None, itkFastChamferDistanceImageFilterISS2ISS2)
itkFastChamferDistanceImageFilterISS2ISS2_swigregister = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_swigregister
itkFastChamferDistanceImageFilterISS2ISS2_swigregister(itkFastChamferDistanceImageFilterISS2ISS2)

def itkFastChamferDistanceImageFilterISS2ISS2___New_orig__() -> "itkFastChamferDistanceImageFilterISS2ISS2_Pointer":
    """itkFastChamferDistanceImageFilterISS2ISS2___New_orig__() -> itkFastChamferDistanceImageFilterISS2ISS2_Pointer"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2___New_orig__()

def itkFastChamferDistanceImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterISS2ISS2 *":
    """itkFastChamferDistanceImageFilterISS2ISS2_cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterISS2ISS2"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_cast(obj)

class itkFastChamferDistanceImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set
    MethodsKrissian K. and Westin C.F., EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003.

    C++ includes: itkFastChamferDistanceImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFastChamferDistanceImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkFastChamferDistanceImageFilterISS3ISS3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFastChamferDistanceImageFilterISS3ISS3_Pointer":
        """Clone(itkFastChamferDistanceImageFilterISS3ISS3 self) -> itkFastChamferDistanceImageFilterISS3ISS3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_Clone(self)


    def SetWeights(self, _arg: 'itkFixedArrayF3') -> "void":
        """
        SetWeights(itkFastChamferDistanceImageFilterISS3ISS3 self, itkFixedArrayF3 _arg)

        coefficients of the
        Chamfer distance for each kind of neighbor. 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetWeights(self, _arg)


    def GetWeights(self) -> "itkFixedArrayF3 const &":
        """GetWeights(itkFastChamferDistanceImageFilterISS3ISS3 self) -> itkFixedArrayF3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetWeights(self)


    def SetMaximumDistance(self, _arg: 'float const') -> "void":
        """
        SetMaximumDistance(itkFastChamferDistanceImageFilterISS3ISS3 self, float const _arg)

        Maximal computed
        distance 
        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetMaximumDistance(self, _arg)


    def GetMaximumDistance(self) -> "float":
        """GetMaximumDistance(itkFastChamferDistanceImageFilterISS3ISS3 self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetMaximumDistance(self)


    def SetRegionToProcess(self, r: 'itkImageRegion3') -> "void":
        """SetRegionToProcess(itkFastChamferDistanceImageFilterISS3ISS3 self, itkImageRegion3 r)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetRegionToProcess(self, r)


    def GetRegionToProcess(self) -> "itkImageRegion3":
        """GetRegionToProcess(itkFastChamferDistanceImageFilterISS3ISS3 self) -> itkImageRegion3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetRegionToProcess(self)


    def SetNarrowBand(self, ptr: 'itkNarrowBandBNI3SS') -> "void":
        """SetNarrowBand(itkFastChamferDistanceImageFilterISS3ISS3 self, itkNarrowBandBNI3SS ptr)"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetNarrowBand(self, ptr)


    def GetNarrowBand(self) -> "itkNarrowBandBNI3SS_Pointer":
        """GetNarrowBand(itkFastChamferDistanceImageFilterISS3ISS3 self) -> itkNarrowBandBNI3SS_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetNarrowBand(self)

    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SameDimensionCheck
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SameTypeCheck
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_FloatConvertibleToPixelTypeCheck
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeConvertibleToFloatCheck
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeGreaterThanFloatCheck
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeLessThanFloatCheck
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeFloatAdditiveOperatorsCheck
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_FloatGreaterThanPixelTypeCheck
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_FloatLessThanPixelTypeCheck
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterISS3ISS3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterISS3ISS3

        Create a new object of the class itkFastChamferDistanceImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFastChamferDistanceImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFastChamferDistanceImageFilterISS3ISS3.Clone = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_Clone, None, itkFastChamferDistanceImageFilterISS3ISS3)
itkFastChamferDistanceImageFilterISS3ISS3.SetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetWeights, None, itkFastChamferDistanceImageFilterISS3ISS3)
itkFastChamferDistanceImageFilterISS3ISS3.GetWeights = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetWeights, None, itkFastChamferDistanceImageFilterISS3ISS3)
itkFastChamferDistanceImageFilterISS3ISS3.SetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetMaximumDistance, None, itkFastChamferDistanceImageFilterISS3ISS3)
itkFastChamferDistanceImageFilterISS3ISS3.GetMaximumDistance = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetMaximumDistance, None, itkFastChamferDistanceImageFilterISS3ISS3)
itkFastChamferDistanceImageFilterISS3ISS3.SetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetRegionToProcess, None, itkFastChamferDistanceImageFilterISS3ISS3)
itkFastChamferDistanceImageFilterISS3ISS3.GetRegionToProcess = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetRegionToProcess, None, itkFastChamferDistanceImageFilterISS3ISS3)
itkFastChamferDistanceImageFilterISS3ISS3.SetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetNarrowBand, None, itkFastChamferDistanceImageFilterISS3ISS3)
itkFastChamferDistanceImageFilterISS3ISS3.GetNarrowBand = new_instancemethod(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetNarrowBand, None, itkFastChamferDistanceImageFilterISS3ISS3)
itkFastChamferDistanceImageFilterISS3ISS3_swigregister = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_swigregister
itkFastChamferDistanceImageFilterISS3ISS3_swigregister(itkFastChamferDistanceImageFilterISS3ISS3)

def itkFastChamferDistanceImageFilterISS3ISS3___New_orig__() -> "itkFastChamferDistanceImageFilterISS3ISS3_Pointer":
    """itkFastChamferDistanceImageFilterISS3ISS3___New_orig__() -> itkFastChamferDistanceImageFilterISS3ISS3_Pointer"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3___New_orig__()

def itkFastChamferDistanceImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkFastChamferDistanceImageFilterISS3ISS3 *":
    """itkFastChamferDistanceImageFilterISS3ISS3_cast(itkLightObject obj) -> itkFastChamferDistanceImageFilterISS3ISS3"""
    return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def fast_chamfer_distance_image_filter(*args, **kwargs):
    """Procedural interface for FastChamferDistanceImageFilter"""
    import itk
    instance = itk.FastChamferDistanceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def fast_chamfer_distance_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.FastChamferDistanceImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.FastChamferDistanceImageFilter.values()[0]
    else:
        filter_object = itk.FastChamferDistanceImageFilter

    fast_chamfer_distance_image_filter.__doc__ = filter_object.__doc__
    fast_chamfer_distance_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    fast_chamfer_distance_image_filter.__doc__ += "Available Keyword Arguments:\n"
    fast_chamfer_distance_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



