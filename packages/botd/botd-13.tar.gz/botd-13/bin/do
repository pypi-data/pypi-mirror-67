#!/usr/bin/env python3
# build botd. no copyright. no LICENSE.
#
#

import os; import sys
sys.path.insert(0, os.getcwd())
sys.path.insert(0, os.getcwd() + os.sep + "..")

for x in os.popen("bin/clean").readlines():
    print(x)

import importlib

importlib.invalidate_caches()

import shutil
import urllib
import urllib.parse
import urllib.request

pipurl = "https://bootstrap.pypa.io/get-pip.py"
buildouturl = "https://bootstrap.pypa.io/bootstrap-buildout.py"

fname = "run"
installdir = os.path.join(os.getcwd(), fname)

sys.path.insert(0, installdir)

print("setting PYTHONPATH to %s" % installdir)
os.environ['PYTHONPATH'] = installdir
os.environ['PYTHONUSERBASE'] = installdir

def get_url(url):
    url = urllib.parse.urlunparse(urllib.parse.urlparse(url))
    req = urllib.request.Request(url)
    response = urllib.request.urlopen(req)
    response.data = response.read()
    return response

try:
    shutil.rmtree(installdir)
except:
    pass

try:
    os.mkdir(installdir)
except:
    pass

if not os.path.exists("%s/get-pip.py" % installdir):
    print("downloading pip")
    resp = get_url(pipurl)
    f = open("%s/get-pip.py" % installdir, "w")
    f.write(str(resp.data, "utf-8"))
    f.flush()
    f.close()
    for l in os.popen("python3 %s/get-pip.py -t %s" % (installdir, installdir)).readlines():
        print(l)

try:
    import setuptools
    import setuptools.command
    from setuptools.command.easy_install import main
except ImportError as ex:
    print("setuptools is needed" % str(ex))
    os._exit(0)


try:
    shutil.rmtree("build")
except:
    pass

try:
    shutil.rmtree("dist")
except:
    pass

try:
    shutil.rmtree("%s.egg-info" % fname)
except:
    pass

try:
    os.mkdir("dist")
except:
    pass

for line in os.popen("python3 setup.py sdist").readlines():
    print(line.strip())

fns = os.listdir("dist")
target = fname
highest = 0

for fn in fns:
    ff = fn.split(".")
    for f in ff:
        try:
            nr = int(f.split("-")[-1])
            break
        except:
            pass
    if nr > highest:
        highest = nr
        target = fn

if os.path.exists("dist"):
    runstring = '--always-copy --install-dir=%s --script-dir=%s/bin -a -U -l %s/dist/%s ' % (installdir, installdir, os.getcwd(), target)
    main(runstring.split())

runstring = '--always-copy --install-dir=%s --script-dir=%s/bin -a -U feedparser' % (installdir, installdir)
main(runstring.split())

try:
    shutil.rmtree("%s/pip" % installdir)
except:
    pass

try:
    shutil.rmtree("%s/pip-19.1.1.dist-info" % installdir)
except:
    pass

try:
    shutil.rmtree("%s/wheel" % installdir)
except:
    pass

try:
    shutil.rmtree("%s/wheel-0.33.4.dist-info" % installdir)
except:
    pass

try:
    shutil.rmtree("%s/__pycache__" % installdir)
except:
    pass

try:
    shutil.copytree("mods", installdir + os.sep + "mods")
except:
    pass

try:
    shutil.copyfile("bin/install", installdir + os.sep + "bin/install")
except:
    pass

try:
    shutil.copytree("data", installdir + os.sep + "data")
except:
    pass

try:
    os.remove(installdir + os.sep + "get-pip.py")
except:
    pass

for line in os.popen("tar zcvf %s.tar.gz %s" % (fname.lower(), fname)).readlines():
    print(line.strip())
