name: Unit tests and linting

on: [ push ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install -qq --upgrade pip flit
        pip install '.[test]'
    - name: Test and print
      run: |
        python -m testver src/ --dryrun
  build:
    needs:
      test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install -qq --upgrade pip flit
        pip install .
    - name: Assign temporary version number
      if: github.event_name == 'push' && !startsWith(github.event.ref, 'refs/tags')
      run: |
        python -m testver src/testver/__init__.py
        git add src/testver/__init__.py
    - name: Build package
      run: flit build
    - name: Publish to Test PYPI
      if: github.event_name == 'push' && !startsWith(github.event.ref, 'refs/tags')
      run: flit publish
      env:
        FLIT_INDEX_URL: https://test.pypi.org/legacy/
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.test_pypi_token }}
    - name: Publish to real PYPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      run: flit publish
      env:
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.pypi_token }}
