Metadata-Version: 2.1
Name: azure-kusto-ingest
Version: 0.0.45
Summary: Kusto Ingest Client
Home-page: https://github.com/Azure/azure-kusto-python
Author: Microsoft Corporation
Author-email: kustalk@microsoft.com
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: License :: OSI Approved :: MIT License
Requires-Dist: azure-kusto-data (>=0.0.45)
Requires-Dist: azure-storage-blob (==2.1.0)
Requires-Dist: azure-storage-common (==2.1.0)
Requires-Dist: azure-storage-queue (==2.1.0)
Requires-Dist: azure-nspkg ; python_version<'3.0'
Provides-Extra: pandas
Requires-Dist: pandas (==0.24.1) ; extra == 'pandas'

Microsoft Azure Kusto Ingest Library for Python
===============================================

.. code-block:: python

    from azure.kusto.data.request import KustoConnectionStringBuilder
    from azure.kusto.ingest import KustoIngestClient, IngestionProperties, FileDescriptor, BlobDescriptor, DataFormat

    ingestion_props = IngestionProperties(database="{database_name}", table="{table_name}", dataFormat=DataFormat.CSV)
    client = KustoIngestClient("https://ingest-{cluster_name}.kusto.windows.net")

    file_descriptor = FileDescriptor("{filename}.csv", 15360)  # in this example, the raw (uncompressed) size of the data is 15KB (15360 bytes)
    client.ingest_from_file(file_descriptor, ingestion_properties=ingestion_props)
    client.ingest_from_file("{filename}.csv", ingestion_properties=ingestion_props)

    blob_descriptor = BlobDescriptor("https://{path_to_blob}.csv.gz?sas", 51200)  # in this example, the raw (uncompressed) size of the data is 50KB (52100 bytes)
    client.ingest_from_blob(blob_descriptor, ingestion_properties=ingestion_props)


Overview
--------

*Kusto Python Ingest Client* Library provides the capability to ingest data into Kusto clusters using Python.
It is Python 2.x/3.x compatible and supports data types through familiar Python DB API interface.

It's possible to use the library, for instance, from `Jupyter Notebooks <http://jupyter.org/>`_ which are attached to Spark clusters,
including, but not exclusively, `Azure Databricks <https://azure.microsoft.com/en-us/services/databricks>`_ instances.

* `How to install the package <https://github.com/Azure/azure-kusto-python#install>`_.

* `Data ingest sample <https://github.com/Azure/azure-kusto-python/blob/master/azure-kusto-ingest/tests/sample.py>`_.

* `GitHub Repository <https://github.com/Azure/azure-kusto-python/tree/master/azure-kusto-data>`_.

.. image:: https://travis-ci.org/Azure/azure-kusto-python.svg
    :target: https://travis-ci.org/Azure/azure-kusto-python


