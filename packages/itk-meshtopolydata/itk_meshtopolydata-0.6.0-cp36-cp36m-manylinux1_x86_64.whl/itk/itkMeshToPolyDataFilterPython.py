# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMeshToPolyDataFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMeshToPolyDataFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMeshToPolyDataFilterPython
            return _itkMeshToPolyDataFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMeshToPolyDataFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMeshToPolyDataFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMeshToPolyDataFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkMeshBasePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import itkMapContainerPython
import ITKCommonBasePython
import itkVectorPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkPointPython
import itkBoundingBoxPython
import itkVectorContainerPython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkContinuousIndexPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkPointSetPython
import itkPolyDataPython

def itkMeshToPolyDataFilterPSD3_New():
  return itkMeshToPolyDataFilterPSD3.New()


def itkMeshToPolyDataFilterMD3_New():
  return itkMeshToPolyDataFilterMD3.New()


def itkMeshToPolyDataFilterPSF3_New():
  return itkMeshToPolyDataFilterPSF3.New()


def itkMeshToPolyDataFilterMF3_New():
  return itkMeshToPolyDataFilterMF3.New()


def itkMeshToPolyDataFilterPSUS3_New():
  return itkMeshToPolyDataFilterPSUS3.New()


def itkMeshToPolyDataFilterMUS3_New():
  return itkMeshToPolyDataFilterMUS3.New()


def itkMeshToPolyDataFilterPSUC3_New():
  return itkMeshToPolyDataFilterPSUC3.New()


def itkMeshToPolyDataFilterMUC3_New():
  return itkMeshToPolyDataFilterMUC3.New()


def itkMeshToPolyDataFilterPSSS3_New():
  return itkMeshToPolyDataFilterPSSS3.New()


def itkMeshToPolyDataFilterMSS3_New():
  return itkMeshToPolyDataFilterMSS3.New()


def itkMeshToPolyDataFilterPSD2_New():
  return itkMeshToPolyDataFilterPSD2.New()


def itkMeshToPolyDataFilterMD2_New():
  return itkMeshToPolyDataFilterMD2.New()


def itkMeshToPolyDataFilterPSF2_New():
  return itkMeshToPolyDataFilterPSF2.New()


def itkMeshToPolyDataFilterMF2_New():
  return itkMeshToPolyDataFilterMF2.New()


def itkMeshToPolyDataFilterPSUS2_New():
  return itkMeshToPolyDataFilterPSUS2.New()


def itkMeshToPolyDataFilterMUS2_New():
  return itkMeshToPolyDataFilterMUS2.New()


def itkMeshToPolyDataFilterPSUC2_New():
  return itkMeshToPolyDataFilterPSUC2.New()


def itkMeshToPolyDataFilterMUC2_New():
  return itkMeshToPolyDataFilterMUC2.New()


def itkMeshToPolyDataFilterPSSS2_New():
  return itkMeshToPolyDataFilterPSSS2.New()


def itkMeshToPolyDataFilterMSS2_New():
  return itkMeshToPolyDataFilterMSS2.New()

class itkMeshToPolyDataFilterMD2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterMD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterMD2_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterMD2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterMD2_Pointer":
        """Clone(itkMeshToPolyDataFilterMD2 self) -> itkMeshToPolyDataFilterMD2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_Clone(self)


    def SetInput(self, input: 'itkMeshD2') -> "void":
        """SetInput(itkMeshToPolyDataFilterMD2 self, itkMeshD2 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshD2 const *":
        """
        GetInput(itkMeshToPolyDataFilterMD2 self) -> itkMeshD2
        GetInput(itkMeshToPolyDataFilterMD2 self, unsigned int idx) -> itkMeshD2
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataD *":
        """
        GetOutput(itkMeshToPolyDataFilterMD2 self) -> itkPolyDataD
        GetOutput(itkMeshToPolyDataFilterMD2 self) -> itkPolyDataD
        GetOutput(itkMeshToPolyDataFilterMD2 self, unsigned int idx) -> itkPolyDataD
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMD2

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMD2 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterMD2"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMD2

        Create a new object of the class itkMeshToPolyDataFilterMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterMD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterMD2.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_Clone, None, itkMeshToPolyDataFilterMD2)
itkMeshToPolyDataFilterMD2.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_SetInput, None, itkMeshToPolyDataFilterMD2)
itkMeshToPolyDataFilterMD2.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_GetInput, None, itkMeshToPolyDataFilterMD2)
itkMeshToPolyDataFilterMD2.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_GetOutput, None, itkMeshToPolyDataFilterMD2)
itkMeshToPolyDataFilterMD2_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_swigregister
itkMeshToPolyDataFilterMD2_swigregister(itkMeshToPolyDataFilterMD2)

def itkMeshToPolyDataFilterMD2___New_orig__() -> "itkMeshToPolyDataFilterMD2_Pointer":
    """itkMeshToPolyDataFilterMD2___New_orig__() -> itkMeshToPolyDataFilterMD2_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2___New_orig__()

def itkMeshToPolyDataFilterMD2_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMD2 *":
    """itkMeshToPolyDataFilterMD2_cast(itkLightObject obj) -> itkMeshToPolyDataFilterMD2"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_cast(obj)

class itkMeshToPolyDataFilterMD3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterMD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterMD3_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterMD3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterMD3_Pointer":
        """Clone(itkMeshToPolyDataFilterMD3 self) -> itkMeshToPolyDataFilterMD3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_Clone(self)


    def SetInput(self, input: 'itkMeshD3') -> "void":
        """SetInput(itkMeshToPolyDataFilterMD3 self, itkMeshD3 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshD3 const *":
        """
        GetInput(itkMeshToPolyDataFilterMD3 self) -> itkMeshD3
        GetInput(itkMeshToPolyDataFilterMD3 self, unsigned int idx) -> itkMeshD3
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataD *":
        """
        GetOutput(itkMeshToPolyDataFilterMD3 self) -> itkPolyDataD
        GetOutput(itkMeshToPolyDataFilterMD3 self) -> itkPolyDataD
        GetOutput(itkMeshToPolyDataFilterMD3 self, unsigned int idx) -> itkPolyDataD
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMD3

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMD3 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterMD3"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMD3

        Create a new object of the class itkMeshToPolyDataFilterMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterMD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterMD3.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_Clone, None, itkMeshToPolyDataFilterMD3)
itkMeshToPolyDataFilterMD3.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_SetInput, None, itkMeshToPolyDataFilterMD3)
itkMeshToPolyDataFilterMD3.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_GetInput, None, itkMeshToPolyDataFilterMD3)
itkMeshToPolyDataFilterMD3.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_GetOutput, None, itkMeshToPolyDataFilterMD3)
itkMeshToPolyDataFilterMD3_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_swigregister
itkMeshToPolyDataFilterMD3_swigregister(itkMeshToPolyDataFilterMD3)

def itkMeshToPolyDataFilterMD3___New_orig__() -> "itkMeshToPolyDataFilterMD3_Pointer":
    """itkMeshToPolyDataFilterMD3___New_orig__() -> itkMeshToPolyDataFilterMD3_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3___New_orig__()

def itkMeshToPolyDataFilterMD3_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMD3 *":
    """itkMeshToPolyDataFilterMD3_cast(itkLightObject obj) -> itkMeshToPolyDataFilterMD3"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_cast(obj)

class itkMeshToPolyDataFilterMF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterMF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterMF2_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterMF2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterMF2_Pointer":
        """Clone(itkMeshToPolyDataFilterMF2 self) -> itkMeshToPolyDataFilterMF2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_Clone(self)


    def SetInput(self, input: 'itkMeshF2') -> "void":
        """SetInput(itkMeshToPolyDataFilterMF2 self, itkMeshF2 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshF2 const *":
        """
        GetInput(itkMeshToPolyDataFilterMF2 self) -> itkMeshF2
        GetInput(itkMeshToPolyDataFilterMF2 self, unsigned int idx) -> itkMeshF2
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataF *":
        """
        GetOutput(itkMeshToPolyDataFilterMF2 self) -> itkPolyDataF
        GetOutput(itkMeshToPolyDataFilterMF2 self) -> itkPolyDataF
        GetOutput(itkMeshToPolyDataFilterMF2 self, unsigned int idx) -> itkPolyDataF
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMF2

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMF2 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterMF2"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMF2

        Create a new object of the class itkMeshToPolyDataFilterMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterMF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterMF2.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_Clone, None, itkMeshToPolyDataFilterMF2)
itkMeshToPolyDataFilterMF2.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_SetInput, None, itkMeshToPolyDataFilterMF2)
itkMeshToPolyDataFilterMF2.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_GetInput, None, itkMeshToPolyDataFilterMF2)
itkMeshToPolyDataFilterMF2.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_GetOutput, None, itkMeshToPolyDataFilterMF2)
itkMeshToPolyDataFilterMF2_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_swigregister
itkMeshToPolyDataFilterMF2_swigregister(itkMeshToPolyDataFilterMF2)

def itkMeshToPolyDataFilterMF2___New_orig__() -> "itkMeshToPolyDataFilterMF2_Pointer":
    """itkMeshToPolyDataFilterMF2___New_orig__() -> itkMeshToPolyDataFilterMF2_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2___New_orig__()

def itkMeshToPolyDataFilterMF2_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMF2 *":
    """itkMeshToPolyDataFilterMF2_cast(itkLightObject obj) -> itkMeshToPolyDataFilterMF2"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_cast(obj)

class itkMeshToPolyDataFilterMF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterMF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterMF3_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterMF3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterMF3_Pointer":
        """Clone(itkMeshToPolyDataFilterMF3 self) -> itkMeshToPolyDataFilterMF3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_Clone(self)


    def SetInput(self, input: 'itkMeshF3') -> "void":
        """SetInput(itkMeshToPolyDataFilterMF3 self, itkMeshF3 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshF3 const *":
        """
        GetInput(itkMeshToPolyDataFilterMF3 self) -> itkMeshF3
        GetInput(itkMeshToPolyDataFilterMF3 self, unsigned int idx) -> itkMeshF3
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataF *":
        """
        GetOutput(itkMeshToPolyDataFilterMF3 self) -> itkPolyDataF
        GetOutput(itkMeshToPolyDataFilterMF3 self) -> itkPolyDataF
        GetOutput(itkMeshToPolyDataFilterMF3 self, unsigned int idx) -> itkPolyDataF
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMF3

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMF3 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterMF3"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMF3

        Create a new object of the class itkMeshToPolyDataFilterMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterMF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterMF3.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_Clone, None, itkMeshToPolyDataFilterMF3)
itkMeshToPolyDataFilterMF3.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_SetInput, None, itkMeshToPolyDataFilterMF3)
itkMeshToPolyDataFilterMF3.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_GetInput, None, itkMeshToPolyDataFilterMF3)
itkMeshToPolyDataFilterMF3.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_GetOutput, None, itkMeshToPolyDataFilterMF3)
itkMeshToPolyDataFilterMF3_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_swigregister
itkMeshToPolyDataFilterMF3_swigregister(itkMeshToPolyDataFilterMF3)

def itkMeshToPolyDataFilterMF3___New_orig__() -> "itkMeshToPolyDataFilterMF3_Pointer":
    """itkMeshToPolyDataFilterMF3___New_orig__() -> itkMeshToPolyDataFilterMF3_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3___New_orig__()

def itkMeshToPolyDataFilterMF3_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMF3 *":
    """itkMeshToPolyDataFilterMF3_cast(itkLightObject obj) -> itkMeshToPolyDataFilterMF3"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_cast(obj)

class itkMeshToPolyDataFilterMSS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterMSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterMSS2_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterMSS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterMSS2_Pointer":
        """Clone(itkMeshToPolyDataFilterMSS2 self) -> itkMeshToPolyDataFilterMSS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_Clone(self)


    def SetInput(self, input: 'itkMeshSS2') -> "void":
        """SetInput(itkMeshToPolyDataFilterMSS2 self, itkMeshSS2 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshSS2 const *":
        """
        GetInput(itkMeshToPolyDataFilterMSS2 self) -> itkMeshSS2
        GetInput(itkMeshToPolyDataFilterMSS2 self, unsigned int idx) -> itkMeshSS2
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataSS *":
        """
        GetOutput(itkMeshToPolyDataFilterMSS2 self) -> itkPolyDataSS
        GetOutput(itkMeshToPolyDataFilterMSS2 self) -> itkPolyDataSS
        GetOutput(itkMeshToPolyDataFilterMSS2 self, unsigned int idx) -> itkPolyDataSS
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMSS2

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMSS2 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterMSS2"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMSS2

        Create a new object of the class itkMeshToPolyDataFilterMSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterMSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterMSS2.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_Clone, None, itkMeshToPolyDataFilterMSS2)
itkMeshToPolyDataFilterMSS2.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_SetInput, None, itkMeshToPolyDataFilterMSS2)
itkMeshToPolyDataFilterMSS2.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_GetInput, None, itkMeshToPolyDataFilterMSS2)
itkMeshToPolyDataFilterMSS2.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_GetOutput, None, itkMeshToPolyDataFilterMSS2)
itkMeshToPolyDataFilterMSS2_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_swigregister
itkMeshToPolyDataFilterMSS2_swigregister(itkMeshToPolyDataFilterMSS2)

def itkMeshToPolyDataFilterMSS2___New_orig__() -> "itkMeshToPolyDataFilterMSS2_Pointer":
    """itkMeshToPolyDataFilterMSS2___New_orig__() -> itkMeshToPolyDataFilterMSS2_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2___New_orig__()

def itkMeshToPolyDataFilterMSS2_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMSS2 *":
    """itkMeshToPolyDataFilterMSS2_cast(itkLightObject obj) -> itkMeshToPolyDataFilterMSS2"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_cast(obj)

class itkMeshToPolyDataFilterMSS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterMSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterMSS3_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterMSS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterMSS3_Pointer":
        """Clone(itkMeshToPolyDataFilterMSS3 self) -> itkMeshToPolyDataFilterMSS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_Clone(self)


    def SetInput(self, input: 'itkMeshSS3') -> "void":
        """SetInput(itkMeshToPolyDataFilterMSS3 self, itkMeshSS3 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshSS3 const *":
        """
        GetInput(itkMeshToPolyDataFilterMSS3 self) -> itkMeshSS3
        GetInput(itkMeshToPolyDataFilterMSS3 self, unsigned int idx) -> itkMeshSS3
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataSS *":
        """
        GetOutput(itkMeshToPolyDataFilterMSS3 self) -> itkPolyDataSS
        GetOutput(itkMeshToPolyDataFilterMSS3 self) -> itkPolyDataSS
        GetOutput(itkMeshToPolyDataFilterMSS3 self, unsigned int idx) -> itkPolyDataSS
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMSS3

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMSS3 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterMSS3"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMSS3

        Create a new object of the class itkMeshToPolyDataFilterMSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterMSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterMSS3.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_Clone, None, itkMeshToPolyDataFilterMSS3)
itkMeshToPolyDataFilterMSS3.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_SetInput, None, itkMeshToPolyDataFilterMSS3)
itkMeshToPolyDataFilterMSS3.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_GetInput, None, itkMeshToPolyDataFilterMSS3)
itkMeshToPolyDataFilterMSS3.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_GetOutput, None, itkMeshToPolyDataFilterMSS3)
itkMeshToPolyDataFilterMSS3_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_swigregister
itkMeshToPolyDataFilterMSS3_swigregister(itkMeshToPolyDataFilterMSS3)

def itkMeshToPolyDataFilterMSS3___New_orig__() -> "itkMeshToPolyDataFilterMSS3_Pointer":
    """itkMeshToPolyDataFilterMSS3___New_orig__() -> itkMeshToPolyDataFilterMSS3_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3___New_orig__()

def itkMeshToPolyDataFilterMSS3_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMSS3 *":
    """itkMeshToPolyDataFilterMSS3_cast(itkLightObject obj) -> itkMeshToPolyDataFilterMSS3"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_cast(obj)

class itkMeshToPolyDataFilterMUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterMUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterMUC2_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterMUC2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterMUC2_Pointer":
        """Clone(itkMeshToPolyDataFilterMUC2 self) -> itkMeshToPolyDataFilterMUC2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_Clone(self)


    def SetInput(self, input: 'itkMeshUC2') -> "void":
        """SetInput(itkMeshToPolyDataFilterMUC2 self, itkMeshUC2 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshUC2 const *":
        """
        GetInput(itkMeshToPolyDataFilterMUC2 self) -> itkMeshUC2
        GetInput(itkMeshToPolyDataFilterMUC2 self, unsigned int idx) -> itkMeshUC2
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataUC *":
        """
        GetOutput(itkMeshToPolyDataFilterMUC2 self) -> itkPolyDataUC
        GetOutput(itkMeshToPolyDataFilterMUC2 self) -> itkPolyDataUC
        GetOutput(itkMeshToPolyDataFilterMUC2 self, unsigned int idx) -> itkPolyDataUC
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUC2

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMUC2 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterMUC2"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUC2

        Create a new object of the class itkMeshToPolyDataFilterMUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterMUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterMUC2.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_Clone, None, itkMeshToPolyDataFilterMUC2)
itkMeshToPolyDataFilterMUC2.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_SetInput, None, itkMeshToPolyDataFilterMUC2)
itkMeshToPolyDataFilterMUC2.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_GetInput, None, itkMeshToPolyDataFilterMUC2)
itkMeshToPolyDataFilterMUC2.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_GetOutput, None, itkMeshToPolyDataFilterMUC2)
itkMeshToPolyDataFilterMUC2_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_swigregister
itkMeshToPolyDataFilterMUC2_swigregister(itkMeshToPolyDataFilterMUC2)

def itkMeshToPolyDataFilterMUC2___New_orig__() -> "itkMeshToPolyDataFilterMUC2_Pointer":
    """itkMeshToPolyDataFilterMUC2___New_orig__() -> itkMeshToPolyDataFilterMUC2_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2___New_orig__()

def itkMeshToPolyDataFilterMUC2_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMUC2 *":
    """itkMeshToPolyDataFilterMUC2_cast(itkLightObject obj) -> itkMeshToPolyDataFilterMUC2"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_cast(obj)

class itkMeshToPolyDataFilterMUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterMUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterMUC3_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterMUC3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterMUC3_Pointer":
        """Clone(itkMeshToPolyDataFilterMUC3 self) -> itkMeshToPolyDataFilterMUC3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_Clone(self)


    def SetInput(self, input: 'itkMeshUC3') -> "void":
        """SetInput(itkMeshToPolyDataFilterMUC3 self, itkMeshUC3 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshUC3 const *":
        """
        GetInput(itkMeshToPolyDataFilterMUC3 self) -> itkMeshUC3
        GetInput(itkMeshToPolyDataFilterMUC3 self, unsigned int idx) -> itkMeshUC3
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataUC *":
        """
        GetOutput(itkMeshToPolyDataFilterMUC3 self) -> itkPolyDataUC
        GetOutput(itkMeshToPolyDataFilterMUC3 self) -> itkPolyDataUC
        GetOutput(itkMeshToPolyDataFilterMUC3 self, unsigned int idx) -> itkPolyDataUC
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUC3

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMUC3 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterMUC3"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUC3

        Create a new object of the class itkMeshToPolyDataFilterMUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterMUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterMUC3.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_Clone, None, itkMeshToPolyDataFilterMUC3)
itkMeshToPolyDataFilterMUC3.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_SetInput, None, itkMeshToPolyDataFilterMUC3)
itkMeshToPolyDataFilterMUC3.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_GetInput, None, itkMeshToPolyDataFilterMUC3)
itkMeshToPolyDataFilterMUC3.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_GetOutput, None, itkMeshToPolyDataFilterMUC3)
itkMeshToPolyDataFilterMUC3_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_swigregister
itkMeshToPolyDataFilterMUC3_swigregister(itkMeshToPolyDataFilterMUC3)

def itkMeshToPolyDataFilterMUC3___New_orig__() -> "itkMeshToPolyDataFilterMUC3_Pointer":
    """itkMeshToPolyDataFilterMUC3___New_orig__() -> itkMeshToPolyDataFilterMUC3_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3___New_orig__()

def itkMeshToPolyDataFilterMUC3_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMUC3 *":
    """itkMeshToPolyDataFilterMUC3_cast(itkLightObject obj) -> itkMeshToPolyDataFilterMUC3"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_cast(obj)

class itkMeshToPolyDataFilterMUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterMUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterMUS2_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterMUS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterMUS2_Pointer":
        """Clone(itkMeshToPolyDataFilterMUS2 self) -> itkMeshToPolyDataFilterMUS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_Clone(self)


    def SetInput(self, input: 'itkMeshUS2') -> "void":
        """SetInput(itkMeshToPolyDataFilterMUS2 self, itkMeshUS2 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshUS2 const *":
        """
        GetInput(itkMeshToPolyDataFilterMUS2 self) -> itkMeshUS2
        GetInput(itkMeshToPolyDataFilterMUS2 self, unsigned int idx) -> itkMeshUS2
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataUS *":
        """
        GetOutput(itkMeshToPolyDataFilterMUS2 self) -> itkPolyDataUS
        GetOutput(itkMeshToPolyDataFilterMUS2 self) -> itkPolyDataUS
        GetOutput(itkMeshToPolyDataFilterMUS2 self, unsigned int idx) -> itkPolyDataUS
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUS2

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMUS2 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterMUS2"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUS2

        Create a new object of the class itkMeshToPolyDataFilterMUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterMUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterMUS2.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_Clone, None, itkMeshToPolyDataFilterMUS2)
itkMeshToPolyDataFilterMUS2.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_SetInput, None, itkMeshToPolyDataFilterMUS2)
itkMeshToPolyDataFilterMUS2.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_GetInput, None, itkMeshToPolyDataFilterMUS2)
itkMeshToPolyDataFilterMUS2.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_GetOutput, None, itkMeshToPolyDataFilterMUS2)
itkMeshToPolyDataFilterMUS2_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_swigregister
itkMeshToPolyDataFilterMUS2_swigregister(itkMeshToPolyDataFilterMUS2)

def itkMeshToPolyDataFilterMUS2___New_orig__() -> "itkMeshToPolyDataFilterMUS2_Pointer":
    """itkMeshToPolyDataFilterMUS2___New_orig__() -> itkMeshToPolyDataFilterMUS2_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2___New_orig__()

def itkMeshToPolyDataFilterMUS2_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMUS2 *":
    """itkMeshToPolyDataFilterMUS2_cast(itkLightObject obj) -> itkMeshToPolyDataFilterMUS2"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_cast(obj)

class itkMeshToPolyDataFilterMUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterMUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterMUS3_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterMUS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterMUS3_Pointer":
        """Clone(itkMeshToPolyDataFilterMUS3 self) -> itkMeshToPolyDataFilterMUS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_Clone(self)


    def SetInput(self, input: 'itkMeshUS3') -> "void":
        """SetInput(itkMeshToPolyDataFilterMUS3 self, itkMeshUS3 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshUS3 const *":
        """
        GetInput(itkMeshToPolyDataFilterMUS3 self) -> itkMeshUS3
        GetInput(itkMeshToPolyDataFilterMUS3 self, unsigned int idx) -> itkMeshUS3
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataUS *":
        """
        GetOutput(itkMeshToPolyDataFilterMUS3 self) -> itkPolyDataUS
        GetOutput(itkMeshToPolyDataFilterMUS3 self) -> itkPolyDataUS
        GetOutput(itkMeshToPolyDataFilterMUS3 self, unsigned int idx) -> itkPolyDataUS
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUS3

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMUS3 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterMUS3"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUS3

        Create a new object of the class itkMeshToPolyDataFilterMUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterMUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterMUS3.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_Clone, None, itkMeshToPolyDataFilterMUS3)
itkMeshToPolyDataFilterMUS3.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_SetInput, None, itkMeshToPolyDataFilterMUS3)
itkMeshToPolyDataFilterMUS3.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_GetInput, None, itkMeshToPolyDataFilterMUS3)
itkMeshToPolyDataFilterMUS3.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_GetOutput, None, itkMeshToPolyDataFilterMUS3)
itkMeshToPolyDataFilterMUS3_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_swigregister
itkMeshToPolyDataFilterMUS3_swigregister(itkMeshToPolyDataFilterMUS3)

def itkMeshToPolyDataFilterMUS3___New_orig__() -> "itkMeshToPolyDataFilterMUS3_Pointer":
    """itkMeshToPolyDataFilterMUS3___New_orig__() -> itkMeshToPolyDataFilterMUS3_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3___New_orig__()

def itkMeshToPolyDataFilterMUS3_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterMUS3 *":
    """itkMeshToPolyDataFilterMUS3_cast(itkLightObject obj) -> itkMeshToPolyDataFilterMUS3"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_cast(obj)

class itkMeshToPolyDataFilterPSD2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterPSD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterPSD2_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterPSD2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterPSD2_Pointer":
        """Clone(itkMeshToPolyDataFilterPSD2 self) -> itkMeshToPolyDataFilterPSD2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_Clone(self)


    def SetInput(self, input: 'itkPointSetD2') -> "void":
        """SetInput(itkMeshToPolyDataFilterPSD2 self, itkPointSetD2 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_SetInput(self, input)


    def GetInput(self, *args) -> "itkPointSetD2 const *":
        """
        GetInput(itkMeshToPolyDataFilterPSD2 self) -> itkPointSetD2
        GetInput(itkMeshToPolyDataFilterPSD2 self, unsigned int idx) -> itkPointSetD2
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataD *":
        """
        GetOutput(itkMeshToPolyDataFilterPSD2 self) -> itkPolyDataD
        GetOutput(itkMeshToPolyDataFilterPSD2 self) -> itkPolyDataD
        GetOutput(itkMeshToPolyDataFilterPSD2 self, unsigned int idx) -> itkPolyDataD
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSD2

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSD2 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSD2"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSD2

        Create a new object of the class itkMeshToPolyDataFilterPSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterPSD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterPSD2.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_Clone, None, itkMeshToPolyDataFilterPSD2)
itkMeshToPolyDataFilterPSD2.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_SetInput, None, itkMeshToPolyDataFilterPSD2)
itkMeshToPolyDataFilterPSD2.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_GetInput, None, itkMeshToPolyDataFilterPSD2)
itkMeshToPolyDataFilterPSD2.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_GetOutput, None, itkMeshToPolyDataFilterPSD2)
itkMeshToPolyDataFilterPSD2_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_swigregister
itkMeshToPolyDataFilterPSD2_swigregister(itkMeshToPolyDataFilterPSD2)

def itkMeshToPolyDataFilterPSD2___New_orig__() -> "itkMeshToPolyDataFilterPSD2_Pointer":
    """itkMeshToPolyDataFilterPSD2___New_orig__() -> itkMeshToPolyDataFilterPSD2_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2___New_orig__()

def itkMeshToPolyDataFilterPSD2_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSD2 *":
    """itkMeshToPolyDataFilterPSD2_cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSD2"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_cast(obj)

class itkMeshToPolyDataFilterPSD3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterPSD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterPSD3_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterPSD3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterPSD3_Pointer":
        """Clone(itkMeshToPolyDataFilterPSD3 self) -> itkMeshToPolyDataFilterPSD3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_Clone(self)


    def SetInput(self, input: 'itkPointSetD3') -> "void":
        """SetInput(itkMeshToPolyDataFilterPSD3 self, itkPointSetD3 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_SetInput(self, input)


    def GetInput(self, *args) -> "itkPointSetD3 const *":
        """
        GetInput(itkMeshToPolyDataFilterPSD3 self) -> itkPointSetD3
        GetInput(itkMeshToPolyDataFilterPSD3 self, unsigned int idx) -> itkPointSetD3
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataD *":
        """
        GetOutput(itkMeshToPolyDataFilterPSD3 self) -> itkPolyDataD
        GetOutput(itkMeshToPolyDataFilterPSD3 self) -> itkPolyDataD
        GetOutput(itkMeshToPolyDataFilterPSD3 self, unsigned int idx) -> itkPolyDataD
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSD3

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSD3 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSD3"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSD3

        Create a new object of the class itkMeshToPolyDataFilterPSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterPSD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterPSD3.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_Clone, None, itkMeshToPolyDataFilterPSD3)
itkMeshToPolyDataFilterPSD3.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_SetInput, None, itkMeshToPolyDataFilterPSD3)
itkMeshToPolyDataFilterPSD3.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_GetInput, None, itkMeshToPolyDataFilterPSD3)
itkMeshToPolyDataFilterPSD3.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_GetOutput, None, itkMeshToPolyDataFilterPSD3)
itkMeshToPolyDataFilterPSD3_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_swigregister
itkMeshToPolyDataFilterPSD3_swigregister(itkMeshToPolyDataFilterPSD3)

def itkMeshToPolyDataFilterPSD3___New_orig__() -> "itkMeshToPolyDataFilterPSD3_Pointer":
    """itkMeshToPolyDataFilterPSD3___New_orig__() -> itkMeshToPolyDataFilterPSD3_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3___New_orig__()

def itkMeshToPolyDataFilterPSD3_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSD3 *":
    """itkMeshToPolyDataFilterPSD3_cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSD3"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_cast(obj)

class itkMeshToPolyDataFilterPSF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterPSF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterPSF2_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterPSF2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterPSF2_Pointer":
        """Clone(itkMeshToPolyDataFilterPSF2 self) -> itkMeshToPolyDataFilterPSF2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_Clone(self)


    def SetInput(self, input: 'itkPointSetF2') -> "void":
        """SetInput(itkMeshToPolyDataFilterPSF2 self, itkPointSetF2 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_SetInput(self, input)


    def GetInput(self, *args) -> "itkPointSetF2 const *":
        """
        GetInput(itkMeshToPolyDataFilterPSF2 self) -> itkPointSetF2
        GetInput(itkMeshToPolyDataFilterPSF2 self, unsigned int idx) -> itkPointSetF2
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataF *":
        """
        GetOutput(itkMeshToPolyDataFilterPSF2 self) -> itkPolyDataF
        GetOutput(itkMeshToPolyDataFilterPSF2 self) -> itkPolyDataF
        GetOutput(itkMeshToPolyDataFilterPSF2 self, unsigned int idx) -> itkPolyDataF
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSF2

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSF2 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSF2"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSF2

        Create a new object of the class itkMeshToPolyDataFilterPSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterPSF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterPSF2.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_Clone, None, itkMeshToPolyDataFilterPSF2)
itkMeshToPolyDataFilterPSF2.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_SetInput, None, itkMeshToPolyDataFilterPSF2)
itkMeshToPolyDataFilterPSF2.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_GetInput, None, itkMeshToPolyDataFilterPSF2)
itkMeshToPolyDataFilterPSF2.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_GetOutput, None, itkMeshToPolyDataFilterPSF2)
itkMeshToPolyDataFilterPSF2_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_swigregister
itkMeshToPolyDataFilterPSF2_swigregister(itkMeshToPolyDataFilterPSF2)

def itkMeshToPolyDataFilterPSF2___New_orig__() -> "itkMeshToPolyDataFilterPSF2_Pointer":
    """itkMeshToPolyDataFilterPSF2___New_orig__() -> itkMeshToPolyDataFilterPSF2_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2___New_orig__()

def itkMeshToPolyDataFilterPSF2_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSF2 *":
    """itkMeshToPolyDataFilterPSF2_cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSF2"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_cast(obj)

class itkMeshToPolyDataFilterPSF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterPSF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterPSF3_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterPSF3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterPSF3_Pointer":
        """Clone(itkMeshToPolyDataFilterPSF3 self) -> itkMeshToPolyDataFilterPSF3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_Clone(self)


    def SetInput(self, input: 'itkPointSetF3') -> "void":
        """SetInput(itkMeshToPolyDataFilterPSF3 self, itkPointSetF3 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_SetInput(self, input)


    def GetInput(self, *args) -> "itkPointSetF3 const *":
        """
        GetInput(itkMeshToPolyDataFilterPSF3 self) -> itkPointSetF3
        GetInput(itkMeshToPolyDataFilterPSF3 self, unsigned int idx) -> itkPointSetF3
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataF *":
        """
        GetOutput(itkMeshToPolyDataFilterPSF3 self) -> itkPolyDataF
        GetOutput(itkMeshToPolyDataFilterPSF3 self) -> itkPolyDataF
        GetOutput(itkMeshToPolyDataFilterPSF3 self, unsigned int idx) -> itkPolyDataF
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSF3

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSF3 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSF3"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSF3

        Create a new object of the class itkMeshToPolyDataFilterPSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterPSF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterPSF3.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_Clone, None, itkMeshToPolyDataFilterPSF3)
itkMeshToPolyDataFilterPSF3.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_SetInput, None, itkMeshToPolyDataFilterPSF3)
itkMeshToPolyDataFilterPSF3.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_GetInput, None, itkMeshToPolyDataFilterPSF3)
itkMeshToPolyDataFilterPSF3.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_GetOutput, None, itkMeshToPolyDataFilterPSF3)
itkMeshToPolyDataFilterPSF3_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_swigregister
itkMeshToPolyDataFilterPSF3_swigregister(itkMeshToPolyDataFilterPSF3)

def itkMeshToPolyDataFilterPSF3___New_orig__() -> "itkMeshToPolyDataFilterPSF3_Pointer":
    """itkMeshToPolyDataFilterPSF3___New_orig__() -> itkMeshToPolyDataFilterPSF3_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3___New_orig__()

def itkMeshToPolyDataFilterPSF3_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSF3 *":
    """itkMeshToPolyDataFilterPSF3_cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSF3"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_cast(obj)

class itkMeshToPolyDataFilterPSSS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterPSSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterPSSS2_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterPSSS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterPSSS2_Pointer":
        """Clone(itkMeshToPolyDataFilterPSSS2 self) -> itkMeshToPolyDataFilterPSSS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_Clone(self)


    def SetInput(self, input: 'itkPointSetSS2') -> "void":
        """SetInput(itkMeshToPolyDataFilterPSSS2 self, itkPointSetSS2 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_SetInput(self, input)


    def GetInput(self, *args) -> "itkPointSetSS2 const *":
        """
        GetInput(itkMeshToPolyDataFilterPSSS2 self) -> itkPointSetSS2
        GetInput(itkMeshToPolyDataFilterPSSS2 self, unsigned int idx) -> itkPointSetSS2
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataSS *":
        """
        GetOutput(itkMeshToPolyDataFilterPSSS2 self) -> itkPolyDataSS
        GetOutput(itkMeshToPolyDataFilterPSSS2 self) -> itkPolyDataSS
        GetOutput(itkMeshToPolyDataFilterPSSS2 self, unsigned int idx) -> itkPolyDataSS
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSSS2

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSSS2 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSSS2"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSSS2

        Create a new object of the class itkMeshToPolyDataFilterPSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterPSSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterPSSS2.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_Clone, None, itkMeshToPolyDataFilterPSSS2)
itkMeshToPolyDataFilterPSSS2.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_SetInput, None, itkMeshToPolyDataFilterPSSS2)
itkMeshToPolyDataFilterPSSS2.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_GetInput, None, itkMeshToPolyDataFilterPSSS2)
itkMeshToPolyDataFilterPSSS2.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_GetOutput, None, itkMeshToPolyDataFilterPSSS2)
itkMeshToPolyDataFilterPSSS2_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_swigregister
itkMeshToPolyDataFilterPSSS2_swigregister(itkMeshToPolyDataFilterPSSS2)

def itkMeshToPolyDataFilterPSSS2___New_orig__() -> "itkMeshToPolyDataFilterPSSS2_Pointer":
    """itkMeshToPolyDataFilterPSSS2___New_orig__() -> itkMeshToPolyDataFilterPSSS2_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2___New_orig__()

def itkMeshToPolyDataFilterPSSS2_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSSS2 *":
    """itkMeshToPolyDataFilterPSSS2_cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSSS2"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_cast(obj)

class itkMeshToPolyDataFilterPSSS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterPSSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterPSSS3_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterPSSS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterPSSS3_Pointer":
        """Clone(itkMeshToPolyDataFilterPSSS3 self) -> itkMeshToPolyDataFilterPSSS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_Clone(self)


    def SetInput(self, input: 'itkPointSetSS3') -> "void":
        """SetInput(itkMeshToPolyDataFilterPSSS3 self, itkPointSetSS3 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_SetInput(self, input)


    def GetInput(self, *args) -> "itkPointSetSS3 const *":
        """
        GetInput(itkMeshToPolyDataFilterPSSS3 self) -> itkPointSetSS3
        GetInput(itkMeshToPolyDataFilterPSSS3 self, unsigned int idx) -> itkPointSetSS3
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataSS *":
        """
        GetOutput(itkMeshToPolyDataFilterPSSS3 self) -> itkPolyDataSS
        GetOutput(itkMeshToPolyDataFilterPSSS3 self) -> itkPolyDataSS
        GetOutput(itkMeshToPolyDataFilterPSSS3 self, unsigned int idx) -> itkPolyDataSS
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSSS3

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSSS3 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSSS3"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSSS3

        Create a new object of the class itkMeshToPolyDataFilterPSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterPSSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterPSSS3.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_Clone, None, itkMeshToPolyDataFilterPSSS3)
itkMeshToPolyDataFilterPSSS3.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_SetInput, None, itkMeshToPolyDataFilterPSSS3)
itkMeshToPolyDataFilterPSSS3.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_GetInput, None, itkMeshToPolyDataFilterPSSS3)
itkMeshToPolyDataFilterPSSS3.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_GetOutput, None, itkMeshToPolyDataFilterPSSS3)
itkMeshToPolyDataFilterPSSS3_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_swigregister
itkMeshToPolyDataFilterPSSS3_swigregister(itkMeshToPolyDataFilterPSSS3)

def itkMeshToPolyDataFilterPSSS3___New_orig__() -> "itkMeshToPolyDataFilterPSSS3_Pointer":
    """itkMeshToPolyDataFilterPSSS3___New_orig__() -> itkMeshToPolyDataFilterPSSS3_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3___New_orig__()

def itkMeshToPolyDataFilterPSSS3_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSSS3 *":
    """itkMeshToPolyDataFilterPSSS3_cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSSS3"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_cast(obj)

class itkMeshToPolyDataFilterPSUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterPSUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterPSUC2_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterPSUC2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterPSUC2_Pointer":
        """Clone(itkMeshToPolyDataFilterPSUC2 self) -> itkMeshToPolyDataFilterPSUC2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_Clone(self)


    def SetInput(self, input: 'itkPointSetUC2') -> "void":
        """SetInput(itkMeshToPolyDataFilterPSUC2 self, itkPointSetUC2 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_SetInput(self, input)


    def GetInput(self, *args) -> "itkPointSetUC2 const *":
        """
        GetInput(itkMeshToPolyDataFilterPSUC2 self) -> itkPointSetUC2
        GetInput(itkMeshToPolyDataFilterPSUC2 self, unsigned int idx) -> itkPointSetUC2
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataUC *":
        """
        GetOutput(itkMeshToPolyDataFilterPSUC2 self) -> itkPolyDataUC
        GetOutput(itkMeshToPolyDataFilterPSUC2 self) -> itkPolyDataUC
        GetOutput(itkMeshToPolyDataFilterPSUC2 self, unsigned int idx) -> itkPolyDataUC
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUC2

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSUC2 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSUC2"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUC2

        Create a new object of the class itkMeshToPolyDataFilterPSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterPSUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterPSUC2.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_Clone, None, itkMeshToPolyDataFilterPSUC2)
itkMeshToPolyDataFilterPSUC2.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_SetInput, None, itkMeshToPolyDataFilterPSUC2)
itkMeshToPolyDataFilterPSUC2.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_GetInput, None, itkMeshToPolyDataFilterPSUC2)
itkMeshToPolyDataFilterPSUC2.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_GetOutput, None, itkMeshToPolyDataFilterPSUC2)
itkMeshToPolyDataFilterPSUC2_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_swigregister
itkMeshToPolyDataFilterPSUC2_swigregister(itkMeshToPolyDataFilterPSUC2)

def itkMeshToPolyDataFilterPSUC2___New_orig__() -> "itkMeshToPolyDataFilterPSUC2_Pointer":
    """itkMeshToPolyDataFilterPSUC2___New_orig__() -> itkMeshToPolyDataFilterPSUC2_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2___New_orig__()

def itkMeshToPolyDataFilterPSUC2_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSUC2 *":
    """itkMeshToPolyDataFilterPSUC2_cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSUC2"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_cast(obj)

class itkMeshToPolyDataFilterPSUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterPSUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterPSUC3_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterPSUC3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterPSUC3_Pointer":
        """Clone(itkMeshToPolyDataFilterPSUC3 self) -> itkMeshToPolyDataFilterPSUC3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_Clone(self)


    def SetInput(self, input: 'itkPointSetUC3') -> "void":
        """SetInput(itkMeshToPolyDataFilterPSUC3 self, itkPointSetUC3 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_SetInput(self, input)


    def GetInput(self, *args) -> "itkPointSetUC3 const *":
        """
        GetInput(itkMeshToPolyDataFilterPSUC3 self) -> itkPointSetUC3
        GetInput(itkMeshToPolyDataFilterPSUC3 self, unsigned int idx) -> itkPointSetUC3
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataUC *":
        """
        GetOutput(itkMeshToPolyDataFilterPSUC3 self) -> itkPolyDataUC
        GetOutput(itkMeshToPolyDataFilterPSUC3 self) -> itkPolyDataUC
        GetOutput(itkMeshToPolyDataFilterPSUC3 self, unsigned int idx) -> itkPolyDataUC
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUC3

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSUC3 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSUC3"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUC3

        Create a new object of the class itkMeshToPolyDataFilterPSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterPSUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterPSUC3.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_Clone, None, itkMeshToPolyDataFilterPSUC3)
itkMeshToPolyDataFilterPSUC3.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_SetInput, None, itkMeshToPolyDataFilterPSUC3)
itkMeshToPolyDataFilterPSUC3.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_GetInput, None, itkMeshToPolyDataFilterPSUC3)
itkMeshToPolyDataFilterPSUC3.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_GetOutput, None, itkMeshToPolyDataFilterPSUC3)
itkMeshToPolyDataFilterPSUC3_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_swigregister
itkMeshToPolyDataFilterPSUC3_swigregister(itkMeshToPolyDataFilterPSUC3)

def itkMeshToPolyDataFilterPSUC3___New_orig__() -> "itkMeshToPolyDataFilterPSUC3_Pointer":
    """itkMeshToPolyDataFilterPSUC3___New_orig__() -> itkMeshToPolyDataFilterPSUC3_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3___New_orig__()

def itkMeshToPolyDataFilterPSUC3_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSUC3 *":
    """itkMeshToPolyDataFilterPSUC3_cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSUC3"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_cast(obj)

class itkMeshToPolyDataFilterPSUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterPSUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterPSUS2_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterPSUS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterPSUS2_Pointer":
        """Clone(itkMeshToPolyDataFilterPSUS2 self) -> itkMeshToPolyDataFilterPSUS2_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_Clone(self)


    def SetInput(self, input: 'itkPointSetUS2') -> "void":
        """SetInput(itkMeshToPolyDataFilterPSUS2 self, itkPointSetUS2 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_SetInput(self, input)


    def GetInput(self, *args) -> "itkPointSetUS2 const *":
        """
        GetInput(itkMeshToPolyDataFilterPSUS2 self) -> itkPointSetUS2
        GetInput(itkMeshToPolyDataFilterPSUS2 self, unsigned int idx) -> itkPointSetUS2
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataUS *":
        """
        GetOutput(itkMeshToPolyDataFilterPSUS2 self) -> itkPolyDataUS
        GetOutput(itkMeshToPolyDataFilterPSUS2 self) -> itkPolyDataUS
        GetOutput(itkMeshToPolyDataFilterPSUS2 self, unsigned int idx) -> itkPolyDataUS
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUS2

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSUS2 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSUS2"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUS2

        Create a new object of the class itkMeshToPolyDataFilterPSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterPSUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterPSUS2.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_Clone, None, itkMeshToPolyDataFilterPSUS2)
itkMeshToPolyDataFilterPSUS2.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_SetInput, None, itkMeshToPolyDataFilterPSUS2)
itkMeshToPolyDataFilterPSUS2.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_GetInput, None, itkMeshToPolyDataFilterPSUS2)
itkMeshToPolyDataFilterPSUS2.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_GetOutput, None, itkMeshToPolyDataFilterPSUS2)
itkMeshToPolyDataFilterPSUS2_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_swigregister
itkMeshToPolyDataFilterPSUS2_swigregister(itkMeshToPolyDataFilterPSUS2)

def itkMeshToPolyDataFilterPSUS2___New_orig__() -> "itkMeshToPolyDataFilterPSUS2_Pointer":
    """itkMeshToPolyDataFilterPSUS2___New_orig__() -> itkMeshToPolyDataFilterPSUS2_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2___New_orig__()

def itkMeshToPolyDataFilterPSUS2_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSUS2 *":
    """itkMeshToPolyDataFilterPSUS2_cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSUS2"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_cast(obj)

class itkMeshToPolyDataFilterPSUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkMeshToPolyDataFilterPSUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshToPolyDataFilterPSUS3_Pointer":
        """__New_orig__() -> itkMeshToPolyDataFilterPSUS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshToPolyDataFilterPSUS3_Pointer":
        """Clone(itkMeshToPolyDataFilterPSUS3 self) -> itkMeshToPolyDataFilterPSUS3_Pointer"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_Clone(self)


    def SetInput(self, input: 'itkPointSetUS3') -> "void":
        """SetInput(itkMeshToPolyDataFilterPSUS3 self, itkPointSetUS3 input)"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_SetInput(self, input)


    def GetInput(self, *args) -> "itkPointSetUS3 const *":
        """
        GetInput(itkMeshToPolyDataFilterPSUS3 self) -> itkPointSetUS3
        GetInput(itkMeshToPolyDataFilterPSUS3 self, unsigned int idx) -> itkPointSetUS3
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_GetInput(self, *args)


    def GetOutput(self, *args) -> "itkPolyDataUS *":
        """
        GetOutput(itkMeshToPolyDataFilterPSUS3 self) -> itkPolyDataUS
        GetOutput(itkMeshToPolyDataFilterPSUS3 self) -> itkPolyDataUS
        GetOutput(itkMeshToPolyDataFilterPSUS3 self, unsigned int idx) -> itkPolyDataUS
        """
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_GetOutput(self, *args)

    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUS3

    def cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSUS3 *":
        """cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSUS3"""
        return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUS3

        Create a new object of the class itkMeshToPolyDataFilterPSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshToPolyDataFilterPSUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshToPolyDataFilterPSUS3.Clone = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_Clone, None, itkMeshToPolyDataFilterPSUS3)
itkMeshToPolyDataFilterPSUS3.SetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_SetInput, None, itkMeshToPolyDataFilterPSUS3)
itkMeshToPolyDataFilterPSUS3.GetInput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_GetInput, None, itkMeshToPolyDataFilterPSUS3)
itkMeshToPolyDataFilterPSUS3.GetOutput = new_instancemethod(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_GetOutput, None, itkMeshToPolyDataFilterPSUS3)
itkMeshToPolyDataFilterPSUS3_swigregister = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_swigregister
itkMeshToPolyDataFilterPSUS3_swigregister(itkMeshToPolyDataFilterPSUS3)

def itkMeshToPolyDataFilterPSUS3___New_orig__() -> "itkMeshToPolyDataFilterPSUS3_Pointer":
    """itkMeshToPolyDataFilterPSUS3___New_orig__() -> itkMeshToPolyDataFilterPSUS3_Pointer"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3___New_orig__()

def itkMeshToPolyDataFilterPSUS3_cast(obj: 'itkLightObject') -> "itkMeshToPolyDataFilterPSUS3 *":
    """itkMeshToPolyDataFilterPSUS3_cast(itkLightObject obj) -> itkMeshToPolyDataFilterPSUS3"""
    return _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def mesh_to_poly_data_filter(*args, **kwargs):
    """Procedural interface for MeshToPolyDataFilter"""
    import itk
    instance = itk.MeshToPolyDataFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def mesh_to_poly_data_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MeshToPolyDataFilter, itkTemplate.itkTemplate):
        filter_object = itk.MeshToPolyDataFilter.values()[0]
    else:
        filter_object = itk.MeshToPolyDataFilter

    mesh_to_poly_data_filter.__doc__ = filter_object.__doc__
    mesh_to_poly_data_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    mesh_to_poly_data_filter.__doc__ += "Available Keyword Arguments:\n"
    mesh_to_poly_data_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



