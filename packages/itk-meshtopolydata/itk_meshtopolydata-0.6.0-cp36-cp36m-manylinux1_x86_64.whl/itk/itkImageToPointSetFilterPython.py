# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkImageToPointSetFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageToPointSetFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkImageToPointSetFilterPython
            return _itkImageToPointSetFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageToPointSetFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageToPointSetFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageToPointSetFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToMeshFilterPython
import itkImagePython
import itkCovariantVectorPython
import vnl_vector_refPython
import stdcomplexPython
import pyBasePython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkImageRegionPython
import itkRGBPixelPython
import itkMeshBasePython
import itkArrayPython
import itkMapContainerPython
import itkBoundingBoxPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkPointSetPython
import itkMeshSourcePython


HAVE_NUMPY = True
try:
  import numpy
except ImportError:
  HAVE_NUMPY = False

def _get_numpy_pixelid(itk_Image_type):
    """Returns a ITK PixelID given a numpy array."""

    if not HAVE_NUMPY:
        raise ImportError('Numpy not available.')
# This is a Mapping from numpy array types to itk pixel types.
    _np_itk = {"UC":numpy.uint8,
               "US":numpy.uint16,
               "UI":numpy.uint32,
               "UL":numpy.uint64,
               "SC":numpy.int8,
               "SS":numpy.int16,
               "SI":numpy.int32,
               "SL":numpy.int64,
               "F":numpy.float32,
               "D":numpy.float64,
               "PF2":numpy.float32,
               "PF3":numpy.float32,
                }
    import os
    if os.name == 'nt':
        _np_itk['UL'] = numpy.uint32
        _np_itk['SL'] = numpy.int32
    try:
        return _np_itk[itk_Image_type]
    except KeyError as e:
        raise e


def itkImageToPointSetFilterID3PSD3_New():
  return itkImageToPointSetFilterID3PSD3.New()


def itkImageToPointSetFilterID2PSD2_New():
  return itkImageToPointSetFilterID2PSD2.New()


def itkImageToPointSetFilterIF3PSF3_New():
  return itkImageToPointSetFilterIF3PSF3.New()


def itkImageToPointSetFilterIF2PSF2_New():
  return itkImageToPointSetFilterIF2PSF2.New()


def itkImageToPointSetFilterIUS3PSUS3_New():
  return itkImageToPointSetFilterIUS3PSUS3.New()


def itkImageToPointSetFilterIUS2PSUS2_New():
  return itkImageToPointSetFilterIUS2PSUS2.New()


def itkImageToPointSetFilterIUC3PSUC3_New():
  return itkImageToPointSetFilterIUC3PSUC3.New()


def itkImageToPointSetFilterIUC2PSUC2_New():
  return itkImageToPointSetFilterIUC2PSUC2.New()


def itkImageToPointSetFilterISS3PSSS3_New():
  return itkImageToPointSetFilterISS3PSSS3.New()


def itkImageToPointSetFilterISS2PSSS2_New():
  return itkImageToPointSetFilterISS2PSSS2.New()

class itkImageToPointSetFilterID2PSD2(itkImageToMeshFilterPython.itkImageToMeshFilterID2PSD2):
    """Proxy of C++ itkImageToPointSetFilterID2PSD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToPointSetFilterID2PSD2_Pointer":
        """__New_orig__() -> itkImageToPointSetFilterID2PSD2_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterID2PSD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToPointSetFilterID2PSD2_Pointer":
        """Clone(itkImageToPointSetFilterID2PSD2 self) -> itkImageToPointSetFilterID2PSD2_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterID2PSD2_Clone(self)

    __swig_destroy__ = _itkImageToPointSetFilterPython.delete_itkImageToPointSetFilterID2PSD2

    def cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterID2PSD2 *":
        """cast(itkLightObject obj) -> itkImageToPointSetFilterID2PSD2"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterID2PSD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToPointSetFilterID2PSD2

        Create a new object of the class itkImageToPointSetFilterID2PSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToPointSetFilterID2PSD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToPointSetFilterID2PSD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPointSetFilterID2PSD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPointSetFilterID2PSD2.Clone = new_instancemethod(_itkImageToPointSetFilterPython.itkImageToPointSetFilterID2PSD2_Clone, None, itkImageToPointSetFilterID2PSD2)
itkImageToPointSetFilterID2PSD2_swigregister = _itkImageToPointSetFilterPython.itkImageToPointSetFilterID2PSD2_swigregister
itkImageToPointSetFilterID2PSD2_swigregister(itkImageToPointSetFilterID2PSD2)

def itkImageToPointSetFilterID2PSD2___New_orig__() -> "itkImageToPointSetFilterID2PSD2_Pointer":
    """itkImageToPointSetFilterID2PSD2___New_orig__() -> itkImageToPointSetFilterID2PSD2_Pointer"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterID2PSD2___New_orig__()

def itkImageToPointSetFilterID2PSD2_cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterID2PSD2 *":
    """itkImageToPointSetFilterID2PSD2_cast(itkLightObject obj) -> itkImageToPointSetFilterID2PSD2"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterID2PSD2_cast(obj)

class itkImageToPointSetFilterID3PSD3(itkImageToMeshFilterPython.itkImageToMeshFilterID3PSD3):
    """Proxy of C++ itkImageToPointSetFilterID3PSD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToPointSetFilterID3PSD3_Pointer":
        """__New_orig__() -> itkImageToPointSetFilterID3PSD3_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterID3PSD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToPointSetFilterID3PSD3_Pointer":
        """Clone(itkImageToPointSetFilterID3PSD3 self) -> itkImageToPointSetFilterID3PSD3_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterID3PSD3_Clone(self)

    __swig_destroy__ = _itkImageToPointSetFilterPython.delete_itkImageToPointSetFilterID3PSD3

    def cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterID3PSD3 *":
        """cast(itkLightObject obj) -> itkImageToPointSetFilterID3PSD3"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterID3PSD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToPointSetFilterID3PSD3

        Create a new object of the class itkImageToPointSetFilterID3PSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToPointSetFilterID3PSD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToPointSetFilterID3PSD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPointSetFilterID3PSD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPointSetFilterID3PSD3.Clone = new_instancemethod(_itkImageToPointSetFilterPython.itkImageToPointSetFilterID3PSD3_Clone, None, itkImageToPointSetFilterID3PSD3)
itkImageToPointSetFilterID3PSD3_swigregister = _itkImageToPointSetFilterPython.itkImageToPointSetFilterID3PSD3_swigregister
itkImageToPointSetFilterID3PSD3_swigregister(itkImageToPointSetFilterID3PSD3)

def itkImageToPointSetFilterID3PSD3___New_orig__() -> "itkImageToPointSetFilterID3PSD3_Pointer":
    """itkImageToPointSetFilterID3PSD3___New_orig__() -> itkImageToPointSetFilterID3PSD3_Pointer"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterID3PSD3___New_orig__()

def itkImageToPointSetFilterID3PSD3_cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterID3PSD3 *":
    """itkImageToPointSetFilterID3PSD3_cast(itkLightObject obj) -> itkImageToPointSetFilterID3PSD3"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterID3PSD3_cast(obj)

class itkImageToPointSetFilterIF2PSF2(itkImageToMeshFilterPython.itkImageToMeshFilterIF2PSF2):
    """Proxy of C++ itkImageToPointSetFilterIF2PSF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToPointSetFilterIF2PSF2_Pointer":
        """__New_orig__() -> itkImageToPointSetFilterIF2PSF2_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF2PSF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToPointSetFilterIF2PSF2_Pointer":
        """Clone(itkImageToPointSetFilterIF2PSF2 self) -> itkImageToPointSetFilterIF2PSF2_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF2PSF2_Clone(self)

    __swig_destroy__ = _itkImageToPointSetFilterPython.delete_itkImageToPointSetFilterIF2PSF2

    def cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIF2PSF2 *":
        """cast(itkLightObject obj) -> itkImageToPointSetFilterIF2PSF2"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF2PSF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToPointSetFilterIF2PSF2

        Create a new object of the class itkImageToPointSetFilterIF2PSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToPointSetFilterIF2PSF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToPointSetFilterIF2PSF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPointSetFilterIF2PSF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPointSetFilterIF2PSF2.Clone = new_instancemethod(_itkImageToPointSetFilterPython.itkImageToPointSetFilterIF2PSF2_Clone, None, itkImageToPointSetFilterIF2PSF2)
itkImageToPointSetFilterIF2PSF2_swigregister = _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF2PSF2_swigregister
itkImageToPointSetFilterIF2PSF2_swigregister(itkImageToPointSetFilterIF2PSF2)

def itkImageToPointSetFilterIF2PSF2___New_orig__() -> "itkImageToPointSetFilterIF2PSF2_Pointer":
    """itkImageToPointSetFilterIF2PSF2___New_orig__() -> itkImageToPointSetFilterIF2PSF2_Pointer"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF2PSF2___New_orig__()

def itkImageToPointSetFilterIF2PSF2_cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIF2PSF2 *":
    """itkImageToPointSetFilterIF2PSF2_cast(itkLightObject obj) -> itkImageToPointSetFilterIF2PSF2"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF2PSF2_cast(obj)

class itkImageToPointSetFilterIF3PSF3(itkImageToMeshFilterPython.itkImageToMeshFilterIF3PSF3):
    """Proxy of C++ itkImageToPointSetFilterIF3PSF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToPointSetFilterIF3PSF3_Pointer":
        """__New_orig__() -> itkImageToPointSetFilterIF3PSF3_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF3PSF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToPointSetFilterIF3PSF3_Pointer":
        """Clone(itkImageToPointSetFilterIF3PSF3 self) -> itkImageToPointSetFilterIF3PSF3_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF3PSF3_Clone(self)

    __swig_destroy__ = _itkImageToPointSetFilterPython.delete_itkImageToPointSetFilterIF3PSF3

    def cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIF3PSF3 *":
        """cast(itkLightObject obj) -> itkImageToPointSetFilterIF3PSF3"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF3PSF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToPointSetFilterIF3PSF3

        Create a new object of the class itkImageToPointSetFilterIF3PSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToPointSetFilterIF3PSF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToPointSetFilterIF3PSF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPointSetFilterIF3PSF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPointSetFilterIF3PSF3.Clone = new_instancemethod(_itkImageToPointSetFilterPython.itkImageToPointSetFilterIF3PSF3_Clone, None, itkImageToPointSetFilterIF3PSF3)
itkImageToPointSetFilterIF3PSF3_swigregister = _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF3PSF3_swigregister
itkImageToPointSetFilterIF3PSF3_swigregister(itkImageToPointSetFilterIF3PSF3)

def itkImageToPointSetFilterIF3PSF3___New_orig__() -> "itkImageToPointSetFilterIF3PSF3_Pointer":
    """itkImageToPointSetFilterIF3PSF3___New_orig__() -> itkImageToPointSetFilterIF3PSF3_Pointer"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF3PSF3___New_orig__()

def itkImageToPointSetFilterIF3PSF3_cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIF3PSF3 *":
    """itkImageToPointSetFilterIF3PSF3_cast(itkLightObject obj) -> itkImageToPointSetFilterIF3PSF3"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIF3PSF3_cast(obj)

class itkImageToPointSetFilterISS2PSSS2(itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSSS2):
    """Proxy of C++ itkImageToPointSetFilterISS2PSSS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToPointSetFilterISS2PSSS2_Pointer":
        """__New_orig__() -> itkImageToPointSetFilterISS2PSSS2_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS2PSSS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToPointSetFilterISS2PSSS2_Pointer":
        """Clone(itkImageToPointSetFilterISS2PSSS2 self) -> itkImageToPointSetFilterISS2PSSS2_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS2PSSS2_Clone(self)

    __swig_destroy__ = _itkImageToPointSetFilterPython.delete_itkImageToPointSetFilterISS2PSSS2

    def cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterISS2PSSS2 *":
        """cast(itkLightObject obj) -> itkImageToPointSetFilterISS2PSSS2"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS2PSSS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToPointSetFilterISS2PSSS2

        Create a new object of the class itkImageToPointSetFilterISS2PSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToPointSetFilterISS2PSSS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToPointSetFilterISS2PSSS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPointSetFilterISS2PSSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPointSetFilterISS2PSSS2.Clone = new_instancemethod(_itkImageToPointSetFilterPython.itkImageToPointSetFilterISS2PSSS2_Clone, None, itkImageToPointSetFilterISS2PSSS2)
itkImageToPointSetFilterISS2PSSS2_swigregister = _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS2PSSS2_swigregister
itkImageToPointSetFilterISS2PSSS2_swigregister(itkImageToPointSetFilterISS2PSSS2)

def itkImageToPointSetFilterISS2PSSS2___New_orig__() -> "itkImageToPointSetFilterISS2PSSS2_Pointer":
    """itkImageToPointSetFilterISS2PSSS2___New_orig__() -> itkImageToPointSetFilterISS2PSSS2_Pointer"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS2PSSS2___New_orig__()

def itkImageToPointSetFilterISS2PSSS2_cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterISS2PSSS2 *":
    """itkImageToPointSetFilterISS2PSSS2_cast(itkLightObject obj) -> itkImageToPointSetFilterISS2PSSS2"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS2PSSS2_cast(obj)

class itkImageToPointSetFilterISS3PSSS3(itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSSS3):
    """Proxy of C++ itkImageToPointSetFilterISS3PSSS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToPointSetFilterISS3PSSS3_Pointer":
        """__New_orig__() -> itkImageToPointSetFilterISS3PSSS3_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS3PSSS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToPointSetFilterISS3PSSS3_Pointer":
        """Clone(itkImageToPointSetFilterISS3PSSS3 self) -> itkImageToPointSetFilterISS3PSSS3_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS3PSSS3_Clone(self)

    __swig_destroy__ = _itkImageToPointSetFilterPython.delete_itkImageToPointSetFilterISS3PSSS3

    def cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterISS3PSSS3 *":
        """cast(itkLightObject obj) -> itkImageToPointSetFilterISS3PSSS3"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS3PSSS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToPointSetFilterISS3PSSS3

        Create a new object of the class itkImageToPointSetFilterISS3PSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToPointSetFilterISS3PSSS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToPointSetFilterISS3PSSS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPointSetFilterISS3PSSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPointSetFilterISS3PSSS3.Clone = new_instancemethod(_itkImageToPointSetFilterPython.itkImageToPointSetFilterISS3PSSS3_Clone, None, itkImageToPointSetFilterISS3PSSS3)
itkImageToPointSetFilterISS3PSSS3_swigregister = _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS3PSSS3_swigregister
itkImageToPointSetFilterISS3PSSS3_swigregister(itkImageToPointSetFilterISS3PSSS3)

def itkImageToPointSetFilterISS3PSSS3___New_orig__() -> "itkImageToPointSetFilterISS3PSSS3_Pointer":
    """itkImageToPointSetFilterISS3PSSS3___New_orig__() -> itkImageToPointSetFilterISS3PSSS3_Pointer"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS3PSSS3___New_orig__()

def itkImageToPointSetFilterISS3PSSS3_cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterISS3PSSS3 *":
    """itkImageToPointSetFilterISS3PSSS3_cast(itkLightObject obj) -> itkImageToPointSetFilterISS3PSSS3"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterISS3PSSS3_cast(obj)

class itkImageToPointSetFilterIUC2PSUC2(itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSUC2):
    """Proxy of C++ itkImageToPointSetFilterIUC2PSUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToPointSetFilterIUC2PSUC2_Pointer":
        """__New_orig__() -> itkImageToPointSetFilterIUC2PSUC2_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC2PSUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToPointSetFilterIUC2PSUC2_Pointer":
        """Clone(itkImageToPointSetFilterIUC2PSUC2 self) -> itkImageToPointSetFilterIUC2PSUC2_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC2PSUC2_Clone(self)

    __swig_destroy__ = _itkImageToPointSetFilterPython.delete_itkImageToPointSetFilterIUC2PSUC2

    def cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIUC2PSUC2 *":
        """cast(itkLightObject obj) -> itkImageToPointSetFilterIUC2PSUC2"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC2PSUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToPointSetFilterIUC2PSUC2

        Create a new object of the class itkImageToPointSetFilterIUC2PSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToPointSetFilterIUC2PSUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToPointSetFilterIUC2PSUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPointSetFilterIUC2PSUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPointSetFilterIUC2PSUC2.Clone = new_instancemethod(_itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC2PSUC2_Clone, None, itkImageToPointSetFilterIUC2PSUC2)
itkImageToPointSetFilterIUC2PSUC2_swigregister = _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC2PSUC2_swigregister
itkImageToPointSetFilterIUC2PSUC2_swigregister(itkImageToPointSetFilterIUC2PSUC2)

def itkImageToPointSetFilterIUC2PSUC2___New_orig__() -> "itkImageToPointSetFilterIUC2PSUC2_Pointer":
    """itkImageToPointSetFilterIUC2PSUC2___New_orig__() -> itkImageToPointSetFilterIUC2PSUC2_Pointer"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC2PSUC2___New_orig__()

def itkImageToPointSetFilterIUC2PSUC2_cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIUC2PSUC2 *":
    """itkImageToPointSetFilterIUC2PSUC2_cast(itkLightObject obj) -> itkImageToPointSetFilterIUC2PSUC2"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC2PSUC2_cast(obj)

class itkImageToPointSetFilterIUC3PSUC3(itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSUC3):
    """Proxy of C++ itkImageToPointSetFilterIUC3PSUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToPointSetFilterIUC3PSUC3_Pointer":
        """__New_orig__() -> itkImageToPointSetFilterIUC3PSUC3_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC3PSUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToPointSetFilterIUC3PSUC3_Pointer":
        """Clone(itkImageToPointSetFilterIUC3PSUC3 self) -> itkImageToPointSetFilterIUC3PSUC3_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC3PSUC3_Clone(self)

    __swig_destroy__ = _itkImageToPointSetFilterPython.delete_itkImageToPointSetFilterIUC3PSUC3

    def cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIUC3PSUC3 *":
        """cast(itkLightObject obj) -> itkImageToPointSetFilterIUC3PSUC3"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC3PSUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToPointSetFilterIUC3PSUC3

        Create a new object of the class itkImageToPointSetFilterIUC3PSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToPointSetFilterIUC3PSUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToPointSetFilterIUC3PSUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPointSetFilterIUC3PSUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPointSetFilterIUC3PSUC3.Clone = new_instancemethod(_itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC3PSUC3_Clone, None, itkImageToPointSetFilterIUC3PSUC3)
itkImageToPointSetFilterIUC3PSUC3_swigregister = _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC3PSUC3_swigregister
itkImageToPointSetFilterIUC3PSUC3_swigregister(itkImageToPointSetFilterIUC3PSUC3)

def itkImageToPointSetFilterIUC3PSUC3___New_orig__() -> "itkImageToPointSetFilterIUC3PSUC3_Pointer":
    """itkImageToPointSetFilterIUC3PSUC3___New_orig__() -> itkImageToPointSetFilterIUC3PSUC3_Pointer"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC3PSUC3___New_orig__()

def itkImageToPointSetFilterIUC3PSUC3_cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIUC3PSUC3 *":
    """itkImageToPointSetFilterIUC3PSUC3_cast(itkLightObject obj) -> itkImageToPointSetFilterIUC3PSUC3"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUC3PSUC3_cast(obj)

class itkImageToPointSetFilterIUS2PSUS2(itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSUS2):
    """Proxy of C++ itkImageToPointSetFilterIUS2PSUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToPointSetFilterIUS2PSUS2_Pointer":
        """__New_orig__() -> itkImageToPointSetFilterIUS2PSUS2_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS2PSUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToPointSetFilterIUS2PSUS2_Pointer":
        """Clone(itkImageToPointSetFilterIUS2PSUS2 self) -> itkImageToPointSetFilterIUS2PSUS2_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS2PSUS2_Clone(self)

    __swig_destroy__ = _itkImageToPointSetFilterPython.delete_itkImageToPointSetFilterIUS2PSUS2

    def cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIUS2PSUS2 *":
        """cast(itkLightObject obj) -> itkImageToPointSetFilterIUS2PSUS2"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS2PSUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToPointSetFilterIUS2PSUS2

        Create a new object of the class itkImageToPointSetFilterIUS2PSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToPointSetFilterIUS2PSUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToPointSetFilterIUS2PSUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPointSetFilterIUS2PSUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPointSetFilterIUS2PSUS2.Clone = new_instancemethod(_itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS2PSUS2_Clone, None, itkImageToPointSetFilterIUS2PSUS2)
itkImageToPointSetFilterIUS2PSUS2_swigregister = _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS2PSUS2_swigregister
itkImageToPointSetFilterIUS2PSUS2_swigregister(itkImageToPointSetFilterIUS2PSUS2)

def itkImageToPointSetFilterIUS2PSUS2___New_orig__() -> "itkImageToPointSetFilterIUS2PSUS2_Pointer":
    """itkImageToPointSetFilterIUS2PSUS2___New_orig__() -> itkImageToPointSetFilterIUS2PSUS2_Pointer"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS2PSUS2___New_orig__()

def itkImageToPointSetFilterIUS2PSUS2_cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIUS2PSUS2 *":
    """itkImageToPointSetFilterIUS2PSUS2_cast(itkLightObject obj) -> itkImageToPointSetFilterIUS2PSUS2"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS2PSUS2_cast(obj)

class itkImageToPointSetFilterIUS3PSUS3(itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSUS3):
    """Proxy of C++ itkImageToPointSetFilterIUS3PSUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkImageToPointSetFilterIUS3PSUS3_Pointer":
        """__New_orig__() -> itkImageToPointSetFilterIUS3PSUS3_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS3PSUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkImageToPointSetFilterIUS3PSUS3_Pointer":
        """Clone(itkImageToPointSetFilterIUS3PSUS3 self) -> itkImageToPointSetFilterIUS3PSUS3_Pointer"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS3PSUS3_Clone(self)

    __swig_destroy__ = _itkImageToPointSetFilterPython.delete_itkImageToPointSetFilterIUS3PSUS3

    def cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIUS3PSUS3 *":
        """cast(itkLightObject obj) -> itkImageToPointSetFilterIUS3PSUS3"""
        return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS3PSUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToPointSetFilterIUS3PSUS3

        Create a new object of the class itkImageToPointSetFilterIUS3PSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToPointSetFilterIUS3PSUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToPointSetFilterIUS3PSUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPointSetFilterIUS3PSUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPointSetFilterIUS3PSUS3.Clone = new_instancemethod(_itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS3PSUS3_Clone, None, itkImageToPointSetFilterIUS3PSUS3)
itkImageToPointSetFilterIUS3PSUS3_swigregister = _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS3PSUS3_swigregister
itkImageToPointSetFilterIUS3PSUS3_swigregister(itkImageToPointSetFilterIUS3PSUS3)

def itkImageToPointSetFilterIUS3PSUS3___New_orig__() -> "itkImageToPointSetFilterIUS3PSUS3_Pointer":
    """itkImageToPointSetFilterIUS3PSUS3___New_orig__() -> itkImageToPointSetFilterIUS3PSUS3_Pointer"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS3PSUS3___New_orig__()

def itkImageToPointSetFilterIUS3PSUS3_cast(obj: 'itkLightObject') -> "itkImageToPointSetFilterIUS3PSUS3 *":
    """itkImageToPointSetFilterIUS3PSUS3_cast(itkLightObject obj) -> itkImageToPointSetFilterIUS3PSUS3"""
    return _itkImageToPointSetFilterPython.itkImageToPointSetFilterIUS3PSUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_to_point_set_filter(*args, **kwargs):
    """Procedural interface for ImageToPointSetFilter"""
    import itk
    instance = itk.ImageToPointSetFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_to_point_set_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageToPointSetFilter, itkTemplate.itkTemplate):
        filter_object = itk.ImageToPointSetFilter.values()[0]
    else:
        filter_object = itk.ImageToPointSetFilter

    image_to_point_set_filter.__doc__ = filter_object.__doc__
    image_to_point_set_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_to_point_set_filter.__doc__ += "Available Keyword Arguments:\n"
    image_to_point_set_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



