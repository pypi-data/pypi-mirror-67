{"version":3,"sources":["webpack:///./node_modules/@polymer/iron-icon/iron-icon.js","webpack:///./src/components/ha-icon.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/data/integration.ts","webpack:///./src/data/config_entries.ts","webpack:///./src/data/config_flow.ts","webpack:///./src/dialogs/config-flow/show-dialog-data-entry-flow.ts","webpack:///./src/dialogs/config-flow/show-dialog-config-flow.ts","webpack:///./src/onboarding/action-badge.ts","webpack:///./src/onboarding/integration-badge.ts","webpack:///./src/onboarding/onboarding-integrations.ts"],"names":["Polymer","_template","html","_templateObject","is","properties","icon","type","String","theme","src","_meta","value","Base","create","observers","_DEFAULT_ICONSET","_iconChanged","parts","split","this","_iconName","pop","_iconsetName","_updateIcon","_srcChanged","_usesIconset","_img","parentNode","dom","root","removeChild","_iconset","removeIcon","byKey","applyIcon","unlisten","window","listen","document","createElement","style","width","height","draggable","appendChild","ironIconClass","customElements","get","loaded","HaIcon","_ironIconClass","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","key","node","eventName","methodName","_get","_getPrototypeOf","prototype","__webpack_require__","e","then","bind","define","d","__webpack_exports__","compare","caseInsensitiveCompare","a","b","toLowerCase","integrationIssuesUrl","domainToName","fetchIntegrationManifests","fetchIntegrationManifest","domain","localize","hass","callWS","integration","getConfigEntries","updateConfigEntry","deleteConfigEntry","getConfigEntrySystemOptions","updateConfigEntrySystemOptions","callApi","configEntryId","updatedValues","Object","assign","entry_id","params","DISCOVERY_SOURCES","createConfigFlow","fetchConfigFlow","handleConfigFlowStep","ignoreConfigFlow","deleteConfigFlow","getConfigFlowHandlers","getConfigFlowInProgressCollection","subscribeConfigFlowInProgress","localizeConfigFlowTitle","home_assistant_js_websocket__WEBPACK_IMPORTED_MODULE_0__","_common_util_debounce__WEBPACK_IMPORTED_MODULE_1__","_integration__WEBPACK_IMPORTED_MODULE_2__","handler","flowId","data","flow_id","fetchConfigFlowInProgress","conn","sendMessagePromise","subscribeConfigFlowInProgressUpdates","store","subscribeEvents","debounce","flows","setState","getCollection","onChange","connection","subscribe","flow","placeholders","context","title_placeholders","placeholderKeys","keys","forEach","push","loadDataEntryFlowDialog","showFlowDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","Promise","all","element","dialogParams","flowConfig","fireEvent","dialogTag","dialogImport","loadConfigFlowDialog","showConfigFlowDialog","loadDevicesAndAreas","getFlowHandlers","_getFlowHandlers","_asyncToGenerator","regeneratorRuntime","mark","_callee","_yield$Promise$all","_yield$Promise$all2","handlers","wrap","_context","prev","next","loadBackendTranslation","undefined","sent","_slicedToArray","abrupt","sort","handlerA","handlerB","stop","_x","createFlow","_createFlow","_callee2","_yield$Promise$all3","_yield$Promise$all4","step","_context2","_x2","_x3","fetchFlow","_fetchFlow","_callee3","_context3","_x4","_x5","handleFlowStep","deleteFlow","renderAbortDescription","description","localizeKey","reason","description_placeholders","renderShowFormStepHeader","step_id","renderShowFormStepDescription","_templateObject2","renderShowFormStepFieldLabel","field","name","renderShowFormStepFieldError","error","renderExternalStepHeader","renderExternalStepDescription","_templateObject3","_templateObject4","renderCreateEntryDescription","_templateObject5","_templateObject6","title","customElement","property","Boolean","reflect","badgeIcon","css","LitElement","integration_badge_templateObject","integration_badge_templateObject2","integration_badge_templateObject3","OnboardingIntegrations","_this2","onboarding_integrations_getPrototypeOf","_unsubEvents","_discovered","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","_this3","_entries","onboarding_integrations_templateObject","entries","map","entry","onboarding_integrations_templateObject2","discovered","onboarding_integrations_templateObject3","_continueFlow","content","_toConsumableArray","item","onboardingLocalize","_finish","changedProps","_loadConfigEntries","t","_this4","dialogClosedCallback","refresh","ev","_this5","continueFlowId","currentTarget","filter","result","onboardIntegrationStep","client_id","genClientId"],"mappings":"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","file":"chunk.f0d7cb95e6fbd4f4325a.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {Base} from '@polymer/polymer/polymer-legacy.js';\n\n/**\n\nThe `iron-icon` element displays an icon. By default an icon renders as a 24px\nsquare.\n\nExample using src:\n\n    <iron-icon src=\"star.png\"></iron-icon>\n\nExample setting size to 32px x 32px:\n\n    <iron-icon class=\"big\" src=\"big_star.png\"></iron-icon>\n\n    <style is=\"custom-style\">\n      .big {\n        --iron-icon-height: 32px;\n        --iron-icon-width: 32px;\n      }\n    </style>\n\nThe iron elements include several sets of icons. To use the default set of\nicons, import `iron-icons.js` and use the `icon` attribute to specify an icon:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/iron-icons.js\";\n    </script>\n\n    <iron-icon icon=\"menu\"></iron-icon>\n\nTo use a different built-in set of icons, import the specific\n`iron-icons/<iconset>-icons.js`, and specify the icon as `<iconset>:<icon>`.\nFor example, to use a communication icon, you would use:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/communication-icons.js\";\n    </script>\n\n    <iron-icon icon=\"communication:email\"></iron-icon>\n\nYou can also create custom icon sets of bitmap or SVG icons.\n\nExample of using an icon named `cherry` from a custom iconset with the ID\n`fruit`:\n\n    <iron-icon icon=\"fruit:cherry\"></iron-icon>\n\nSee `<iron-iconset>` and `<iron-iconset-svg>` for more information about how to\ncreate a custom iconset.\n\nSee the `iron-icons` demo to see the icons available in the various iconsets.\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-icon` | Mixin applied to the icon | {}\n`--iron-icon-width` | Width of the icon | `24px`\n`--iron-icon-height` | Height of the icon | `24px`\n`--iron-icon-fill-color` | Fill color of the svg icon | `currentcolor`\n`--iron-icon-stroke-color` | Stroke color of the svg icon | none\n\n@group Iron Elements\n@element iron-icon\n@demo demo/index.html\n@hero hero.svg\n@homepage polymer.github.io\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        @apply --layout-inline;\n        @apply --layout-center-center;\n        position: relative;\n\n        vertical-align: middle;\n\n        fill: var(--iron-icon-fill-color, currentcolor);\n        stroke: var(--iron-icon-stroke-color, none);\n\n        width: var(--iron-icon-width, 24px);\n        height: var(--iron-icon-height, 24px);\n        @apply --iron-icon;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n    </style>\n`,\n\n  is: 'iron-icon',\n\n  properties: {\n\n    /**\n     * The name of the icon to use. The name should be of the form:\n     * `iconset_name:icon_name`.\n     */\n    icon: {type: String},\n\n    /**\n     * The name of the theme to used, if one is specified by the\n     * iconset.\n     */\n    theme: {type: String},\n\n    /**\n     * If using iron-icon without an iconset, you can set the src to be\n     * the URL of an individual icon image file. Note that this will take\n     * precedence over a given icon attribute.\n     */\n    src: {type: String},\n\n    /**\n     * @type {!IronMeta}\n     */\n    _meta: {value: Base.create('iron-meta', {type: 'iconset'})}\n\n  },\n\n  observers: [\n    '_updateIcon(_meta, isAttached)',\n    '_updateIcon(theme, isAttached)',\n    '_srcChanged(src, isAttached)',\n    '_iconChanged(icon, isAttached)'\n  ],\n\n  _DEFAULT_ICONSET: 'icons',\n\n  _iconChanged: function(icon) {\n    var parts = (icon || '').split(':');\n    this._iconName = parts.pop();\n    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;\n    this._updateIcon();\n  },\n\n  _srcChanged: function(src) {\n    this._updateIcon();\n  },\n\n  _usesIconset: function() {\n    return this.icon || !this.src;\n  },\n\n  /** @suppress {visibility} */\n  _updateIcon: function() {\n    if (this._usesIconset()) {\n      if (this._img && this._img.parentNode) {\n        dom(this.root).removeChild(this._img);\n      }\n      if (this._iconName === '') {\n        if (this._iconset) {\n          this._iconset.removeIcon(this);\n        }\n      } else if (this._iconsetName && this._meta) {\n        this._iconset = /** @type {?Polymer.Iconset} */ (\n            this._meta.byKey(this._iconsetName));\n        if (this._iconset) {\n          this._iconset.applyIcon(this, this._iconName, this.theme);\n          this.unlisten(window, 'iron-iconset-added', '_updateIcon');\n        } else {\n          this.listen(window, 'iron-iconset-added', '_updateIcon');\n        }\n      }\n    } else {\n      if (this._iconset) {\n        this._iconset.removeIcon(this);\n      }\n      if (!this._img) {\n        this._img = document.createElement('img');\n        this._img.style.width = '100%';\n        this._img.style.height = '100%';\n        this._img.draggable = false;\n      }\n      this._img.src = this.src;\n      dom(this.root).appendChild(this._img);\n    }\n  }\n});\n","import \"@polymer/iron-icon/iron-icon\";\nimport type { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\nimport { Constructor } from \"../types\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { LocalizeFunc } from \"../common/translations/localize\";\nimport { HomeAssistant } from \"../types\";\n\nexport interface IntegrationManifest {\n  is_built_in: boolean;\n  domain: string;\n  name: string;\n  config_flow: boolean;\n  documentation: string;\n  dependencies?: string[];\n  after_dependencies?: string[];\n  codeowners?: string[];\n  requirements?: string[];\n  ssdp?: Array<{ manufacturer?: string; modelName?: string; st?: string }>;\n  zeroconf?: string[];\n  homekit?: { models: string[] };\n  quality_scale?: string;\n}\n\nexport const integrationIssuesUrl = (domain: string) =>\n  `https://github.com/home-assistant/home-assistant/issues?q=is%3Aissue+is%3Aopen+label%3A%22integration%3A+${domain}%22`;\n\nexport const domainToName = (localize: LocalizeFunc, domain: string) =>\n  localize(`component.${domain}.title`) || domain;\n\nexport const fetchIntegrationManifests = (hass: HomeAssistant) =>\n  hass.callWS<IntegrationManifest[]>({ type: \"manifest/list\" });\n\nexport const fetchIntegrationManifest = (\n  hass: HomeAssistant,\n  integration: string\n) => hass.callWS<IntegrationManifest>({ type: \"manifest/get\", integration });\n","import { HomeAssistant } from \"../types\";\n\nexport interface ConfigEntry {\n  entry_id: string;\n  domain: string;\n  title: string;\n  source: string;\n  state: string;\n  connection_class: string;\n  supports_options: boolean;\n}\n\nexport interface ConfigEntryMutableParams {\n  title: string;\n}\n\nexport interface ConfigEntrySystemOptions {\n  disable_new_entities: boolean;\n}\n\nexport const getConfigEntries = (hass: HomeAssistant) =>\n  hass.callApi<ConfigEntry[]>(\"GET\", \"config/config_entries/entry\");\n\nexport const updateConfigEntry = (\n  hass: HomeAssistant,\n  configEntryId: string,\n  updatedValues: Partial<ConfigEntryMutableParams>\n) =>\n  hass.callWS<ConfigEntry>({\n    type: \"config_entries/update\",\n    entry_id: configEntryId,\n    ...updatedValues,\n  });\n\nexport const deleteConfigEntry = (hass: HomeAssistant, configEntryId: string) =>\n  hass.callApi<{\n    require_restart: boolean;\n  }>(\"DELETE\", `config/config_entries/entry/${configEntryId}`);\n\nexport const getConfigEntrySystemOptions = (\n  hass: HomeAssistant,\n  configEntryId: string\n) =>\n  hass.callWS<ConfigEntrySystemOptions>({\n    type: \"config_entries/system_options/list\",\n    entry_id: configEntryId,\n  });\n\nexport const updateConfigEntrySystemOptions = (\n  hass: HomeAssistant,\n  configEntryId: string,\n  params: Partial<ConfigEntrySystemOptions>\n) =>\n  hass.callWS({\n    type: \"config_entries/system_options/update\",\n    entry_id: configEntryId,\n    ...params,\n  });\n","import { Connection, getCollection } from \"home-assistant-js-websocket\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { debounce } from \"../common/util/debounce\";\nimport { HomeAssistant } from \"../types\";\nimport { DataEntryFlowProgress, DataEntryFlowStep } from \"./data_entry_flow\";\nimport { domainToName } from \"./integration\";\n\nexport const DISCOVERY_SOURCES = [\"unignore\", \"homekit\", \"ssdp\", \"zeroconf\"];\n\nexport const createConfigFlow = (hass: HomeAssistant, handler: string) =>\n  hass.callApi<DataEntryFlowStep>(\"POST\", \"config/config_entries/flow\", {\n    handler,\n  });\n\nexport const fetchConfigFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callApi<DataEntryFlowStep>(\n    \"GET\",\n    `config/config_entries/flow/${flowId}`\n  );\n\nexport const handleConfigFlowStep = (\n  hass: HomeAssistant,\n  flowId: string,\n  data: { [key: string]: any }\n) =>\n  hass.callApi<DataEntryFlowStep>(\n    \"POST\",\n    `config/config_entries/flow/${flowId}`,\n    data\n  );\n\nexport const ignoreConfigFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callWS({ type: \"config_entries/ignore_flow\", flow_id: flowId });\n\nexport const deleteConfigFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callApi(\"DELETE\", `config/config_entries/flow/${flowId}`);\n\nexport const getConfigFlowHandlers = (hass: HomeAssistant) =>\n  hass.callApi<string[]>(\"GET\", \"config/config_entries/flow_handlers\");\n\nconst fetchConfigFlowInProgress = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config_entries/flow/progress\",\n  });\n\nconst subscribeConfigFlowInProgressUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchConfigFlowInProgress(conn).then((flows) =>\n          store.setState(flows, true)\n        ),\n      500,\n      true\n    ),\n    \"config_entry_discovered\"\n  );\n\nexport const getConfigFlowInProgressCollection = (conn: Connection) =>\n  getCollection<DataEntryFlowProgress[]>(\n    conn,\n    \"_configFlowProgress\",\n    fetchConfigFlowInProgress,\n    subscribeConfigFlowInProgressUpdates\n  );\n\nexport const subscribeConfigFlowInProgress = (\n  hass: HomeAssistant,\n  onChange: (flows: DataEntryFlowProgress[]) => void\n) => getConfigFlowInProgressCollection(hass.connection).subscribe(onChange);\n\nexport const localizeConfigFlowTitle = (\n  localize: LocalizeFunc,\n  flow: DataEntryFlowProgress\n) => {\n  const placeholders = flow.context.title_placeholders || {};\n  const placeholderKeys = Object.keys(placeholders);\n  if (placeholderKeys.length === 0) {\n    return domainToName(localize, flow.handler);\n  }\n  const args: string[] = [];\n  placeholderKeys.forEach((key) => {\n    args.push(key);\n    args.push(placeholders[key]);\n  });\n  return localize(`component.${flow.handler}.config.flow_title`, ...args);\n};\n","import { TemplateResult } from \"lit-html\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { HaFormSchema } from \"../../components/ha-form/ha-form\";\nimport {\n  DataEntryFlowStep,\n  DataEntryFlowStepAbort,\n  DataEntryFlowStepCreateEntry,\n  DataEntryFlowStepExternal,\n  DataEntryFlowStepForm,\n} from \"../../data/data_entry_flow\";\nimport { HomeAssistant } from \"../../types\";\n\nexport interface FlowConfig {\n  loadDevicesAndAreas: boolean;\n\n  getFlowHandlers?: (hass: HomeAssistant) => Promise<string[]>;\n\n  createFlow(hass: HomeAssistant, handler: string): Promise<DataEntryFlowStep>;\n\n  fetchFlow(hass: HomeAssistant, flowId: string): Promise<DataEntryFlowStep>;\n\n  handleFlowStep(\n    hass: HomeAssistant,\n    flowId: string,\n    data: { [key: string]: any }\n  ): Promise<DataEntryFlowStep>;\n\n  deleteFlow(hass: HomeAssistant, flowId: string): Promise<unknown>;\n\n  renderAbortDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepAbort\n  ): TemplateResult | \"\";\n\n  renderShowFormStepHeader(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm\n  ): string;\n\n  renderShowFormStepDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm\n  ): TemplateResult | \"\";\n\n  renderShowFormStepFieldLabel(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm,\n    field: HaFormSchema\n  ): string;\n\n  renderShowFormStepFieldError(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm,\n    error: string\n  ): string;\n\n  renderExternalStepHeader(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepExternal\n  ): string;\n\n  renderExternalStepDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepExternal\n  ): TemplateResult | \"\";\n\n  renderCreateEntryDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepCreateEntry\n  ): TemplateResult | \"\";\n}\n\nexport interface DataEntryFlowDialogParams {\n  startFlowHandler?: string;\n  continueFlowId?: string;\n  dialogClosedCallback?: (params: { flowFinished: boolean }) => void;\n  flowConfig: FlowConfig;\n  showAdvanced?: boolean;\n}\n\nexport const loadDataEntryFlowDialog = () =>\n  import(\n    /* webpackChunkName: \"dialog-config-flow\" */ \"./dialog-data-entry-flow\"\n  );\n\nexport const showFlowDialog = (\n  element: HTMLElement,\n  dialogParams: Omit<DataEntryFlowDialogParams, \"flowConfig\">,\n  flowConfig: FlowConfig\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-data-entry-flow\",\n    dialogImport: loadDataEntryFlowDialog,\n    dialogParams: {\n      ...dialogParams,\n      flowConfig,\n    },\n  });\n};\n","import { html } from \"lit-element\";\nimport { caseInsensitiveCompare } from \"../../common/string/compare\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport {\n  createConfigFlow,\n  deleteConfigFlow,\n  fetchConfigFlow,\n  getConfigFlowHandlers,\n  handleConfigFlowStep,\n} from \"../../data/config_flow\";\nimport { domainToName } from \"../../data/integration\";\nimport {\n  DataEntryFlowDialogParams,\n  loadDataEntryFlowDialog,\n  showFlowDialog,\n} from \"./show-dialog-data-entry-flow\";\n\nexport const loadConfigFlowDialog = loadDataEntryFlowDialog;\n\nexport const showConfigFlowDialog = (\n  element: HTMLElement,\n  dialogParams: Omit<DataEntryFlowDialogParams, \"flowConfig\">\n): void =>\n  showFlowDialog(element, dialogParams, {\n    loadDevicesAndAreas: true,\n    getFlowHandlers: async (hass) => {\n      const [handlers] = await Promise.all([\n        getConfigFlowHandlers(hass),\n        hass.loadBackendTranslation(\"title\", undefined, true),\n      ]);\n\n      return handlers.sort((handlerA, handlerB) =>\n        caseInsensitiveCompare(\n          domainToName(hass.localize, handlerA),\n          domainToName(hass.localize, handlerB)\n        )\n      );\n    },\n    createFlow: async (hass, handler) => {\n      const [step] = await Promise.all([\n        createConfigFlow(hass, handler),\n        hass.loadBackendTranslation(\"config\", handler),\n      ]);\n      return step;\n    },\n    fetchFlow: async (hass, flowId) => {\n      const step = await fetchConfigFlow(hass, flowId);\n      await hass.loadBackendTranslation(\"config\", step.handler);\n      return step;\n    },\n    handleFlowStep: handleConfigFlowStep,\n    deleteFlow: deleteConfigFlow,\n\n    renderAbortDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.abort.${step.reason}`,\n        step.description_placeholders\n      );\n\n      return description\n        ? html` <ha-markdown allowsvg .content=${description}></ha-markdown> `\n        : \"\";\n    },\n\n    renderShowFormStepHeader(hass, step) {\n      return (\n        hass.localize(\n          `component.${step.handler}.config.step.${step.step_id}.title`\n        ) || hass.localize(`component.${step.handler}.title`)\n      );\n    },\n\n    renderShowFormStepDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.step.${step.step_id}.description`,\n        step.description_placeholders\n      );\n      return description\n        ? html` <ha-markdown allowsvg .content=${description}></ha-markdown> `\n        : \"\";\n    },\n\n    renderShowFormStepFieldLabel(hass, step, field) {\n      return hass.localize(\n        `component.${step.handler}.config.step.${step.step_id}.data.${field.name}`\n      );\n    },\n\n    renderShowFormStepFieldError(hass, step, error) {\n      return hass.localize(`component.${step.handler}.config.error.${error}`);\n    },\n\n    renderExternalStepHeader(hass, step) {\n      return hass.localize(\n        `component.${step.handler}.config.step.${step.step_id}.title`\n      );\n    },\n\n    renderExternalStepDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.${step.step_id}.description`,\n        step.description_placeholders\n      );\n\n      return html`\n        <p>\n          ${hass.localize(\n            \"ui.panel.config.integrations.config_flow.external_step.description\"\n          )}\n        </p>\n        ${description\n          ? html` <ha-markdown allowsvg .content=${description}></ha-markdown> `\n          : \"\"}\n      `;\n    },\n\n    renderCreateEntryDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.create_entry.${\n          step.description || \"default\"\n        }`,\n        step.description_placeholders\n      );\n\n      return html`\n        ${description\n          ? html` <ha-markdown allowsvg .content=${description}></ha-markdown> `\n          : \"\"}\n        <p>\n          ${hass.localize(\n            \"ui.panel.config.integrations.config_flow.created_config\",\n            \"name\",\n            step.title\n          )}\n        </p>\n      `;\n    },\n  });\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../components/ha-icon\";\n\n@customElement(\"action-badge\")\nclass ActionBadge extends LitElement {\n  @property() public icon!: string;\n\n  @property() public title!: string;\n\n  @property() public badgeIcon?: string;\n\n  @property({ type: Boolean, reflect: true }) public clickable = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"icon\">\n        <iron-icon .icon=${this.icon}></iron-icon>\n        ${this.badgeIcon\n          ? html` <ha-icon class=\"badge\" .icon=${this.badgeIcon}></ha-icon> `\n          : \"\"}\n      </div>\n      <div class=\"title\">${this.title}</div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: inline-flex;\n        flex-direction: column;\n        text-align: center;\n        color: var(--primary-text-color);\n      }\n\n      :host([clickable]) {\n        color: var(--primary-text-color);\n      }\n\n      .icon {\n        position: relative;\n        box-sizing: border-box;\n        margin: 0 auto 8px;\n        height: 40px;\n        width: 40px;\n        border-radius: 50%;\n        border: 1px solid var(--secondary-text-color);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      :host([clickable]) .icon {\n        border-color: var(--primary-color);\n        border-width: 2px;\n      }\n\n      .badge {\n        position: absolute;\n        color: var(--primary-color);\n        bottom: -5px;\n        right: -5px;\n        background-color: white;\n        border-radius: 50%;\n        width: 18px;\n        display: block;\n        height: 18px;\n      }\n\n      .title {\n        min-height: 2.3em;\n        word-break: break-word;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"action-badge\": ActionBadge;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../components/ha-icon\";\n\n@customElement(\"integration-badge\")\nclass IntegrationBadge extends LitElement {\n  @property() public domain!: string;\n\n  @property() public title!: string;\n\n  @property() public badgeIcon?: string;\n\n  @property({ type: Boolean, reflect: true }) public clickable = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"icon\">\n        <img\n          src=\"https://brands.home-assistant.io/${this.domain}/icon.png\"\n          referrerpolicy=\"no-referrer\"\n        />\n        ${this.badgeIcon\n          ? html` <ha-icon class=\"badge\" .icon=${this.badgeIcon}></ha-icon> `\n          : \"\"}\n      </div>\n      <div class=\"title\">${this.title}</div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: inline-flex;\n        flex-direction: column;\n        text-align: center;\n        color: var(--primary-text-color);\n      }\n\n      :host([clickable]) {\n        color: var(--primary-text-color);\n      }\n\n      img {\n        max-width: 100%;\n        max-height: 100%;\n      }\n\n      .icon {\n        position: relative;\n        margin: 0 auto 8px;\n        height: 40px;\n        width: 40px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      :host([clickable]) .icon {\n      }\n\n      .badge {\n        position: absolute;\n        color: white;\n        bottom: -7px;\n        right: -10px;\n        background-color: var(--label-badge-green);\n        border-radius: 50%;\n        width: 18px;\n        display: block;\n        height: 18px;\n        border: 2px solid white;\n      }\n\n      .title {\n        min-height: 2.3em;\n        word-break: break-word;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"integration-badge\": IntegrationBadge;\n  }\n}\n","import \"@material/mwc-button/mwc-button\";\nimport { genClientId } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { compare } from \"../common/string/compare\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { ConfigEntry, getConfigEntries } from \"../data/config_entries\";\nimport {\n  getConfigFlowInProgressCollection,\n  localizeConfigFlowTitle,\n  subscribeConfigFlowInProgress,\n} from \"../data/config_flow\";\nimport { DataEntryFlowProgress } from \"../data/data_entry_flow\";\nimport { domainToName } from \"../data/integration\";\nimport { onboardIntegrationStep } from \"../data/onboarding\";\nimport {\n  loadConfigFlowDialog,\n  showConfigFlowDialog,\n} from \"../dialogs/config-flow/show-dialog-config-flow\";\nimport { HomeAssistant } from \"../types\";\nimport \"./action-badge\";\nimport \"./integration-badge\";\n\n@customElement(\"onboarding-integrations\")\nclass OnboardingIntegrations extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _entries?: ConfigEntry[];\n\n  @property() private _discovered?: DataEntryFlowProgress[];\n\n  private _unsubEvents?: () => void;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this.hass.loadBackendTranslation(\"title\", undefined, true);\n    this._unsubEvents = subscribeConfigFlowInProgress(this.hass, (flows) => {\n      this._discovered = flows;\n      for (const flow of flows) {\n        // To render title placeholders\n        if (flow.context.title_placeholders) {\n          this.hass.loadBackendTranslation(\"config\", flow.handler);\n        }\n      }\n    });\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubEvents) {\n      this._unsubEvents();\n      this._unsubEvents = undefined;\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this._entries || !this._discovered) {\n      return html``;\n    }\n    // Render discovered and existing entries together sorted by localized title.\n    const entries: Array<[string, TemplateResult]> = this._entries.map(\n      (entry) => {\n        const title = domainToName(this.hass.localize, entry.domain);\n        return [\n          title,\n          html`\n            <integration-badge\n              .domain=${entry.domain}\n              .title=${title}\n              badgeIcon=\"hass:check\"\n            ></integration-badge>\n          `,\n        ];\n      }\n    );\n    const discovered: Array<[string, TemplateResult]> = this._discovered.map(\n      (flow) => {\n        const title = localizeConfigFlowTitle(this.hass.localize, flow);\n        return [\n          title,\n          html`\n            <button .flowId=${flow.flow_id} @click=${this._continueFlow}>\n              <integration-badge\n                clickable\n                .domain=${flow.handler}\n                .title=${title}\n              ></integration-badge>\n            </button>\n          `,\n        ];\n      }\n    );\n    const content = [...entries, ...discovered]\n      .sort((a, b) => compare(a[0], b[0]))\n      .map((item) => item[1]);\n\n    return html`\n      <p>\n        ${this.onboardingLocalize(\"ui.panel.page-onboarding.integration.intro\")}\n      </p>\n      <div class=\"badges\">\n        ${content}\n        <button @click=${this._createFlow}>\n          <action-badge\n            clickable\n            title=${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.integration.more_integrations\"\n            )}\n            icon=\"hass:dots-horizontal\"\n          ></action-badge>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <mwc-button @click=${this._finish}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.integration.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    loadConfigFlowDialog();\n    this._loadConfigEntries();\n    /* polyfill for paper-dropdown */\n    import(\n      /* webpackChunkName: \"polyfill-web-animations-next\" */ \"web-animations-js/web-animations-next-lite.min\"\n    );\n  }\n\n  private _createFlow() {\n    showConfigFlowDialog(this, {\n      dialogClosedCallback: () => {\n        this._loadConfigEntries();\n        getConfigFlowInProgressCollection(this.hass!.connection).refresh();\n      },\n    });\n  }\n\n  private _continueFlow(ev) {\n    showConfigFlowDialog(this, {\n      continueFlowId: ev.currentTarget.flowId,\n      dialogClosedCallback: () => {\n        this._loadConfigEntries();\n        getConfigFlowInProgressCollection(this.hass!.connection).refresh();\n      },\n    });\n  }\n\n  private async _loadConfigEntries() {\n    const entries = await getConfigEntries(this.hass!);\n    // We filter out the config entry for the local weather.\n    // It is one that we create automatically and it will confuse the user\n    // if it starts showing up during onboarding.\n    this._entries = entries.filter((entry) => entry.domain !== \"met\");\n  }\n\n  private async _finish() {\n    const result = await onboardIntegrationStep(this.hass, {\n      client_id: genClientId(),\n    });\n    fireEvent(this, \"onboarding-step\", {\n      type: \"integration\",\n      result,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .badges {\n        margin-top: 24px;\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n        align-items: flex-start;\n      }\n      .badges > * {\n        width: 96px;\n        margin-bottom: 24px;\n      }\n      button {\n        cursor: pointer;\n        padding: 0;\n        border: 0;\n        background: 0;\n        font: inherit;\n      }\n      .footer {\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-integrations\": OnboardingIntegrations;\n  }\n}\n"],"sourceRoot":""}