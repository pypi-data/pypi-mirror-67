{"version":3,"sources":["webpack:///./src/components/ha-card.ts","webpack:///./src/dialogs/generic/show-dialog-box.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/panels/config/ha-config-section.ts","webpack:///./src/layouts/hass-tabs-subpage.ts","webpack:///./src/components/ha-fab.ts","webpack:///./src/data/user.ts","webpack:///./src/data/person.ts","webpack:///./src/panels/config/person/show-dialog-person-detail.ts","webpack:///./src/panels/config/person/ha-config-person.ts"],"names":["customElement","property","css","_templateObject","html","_templateObject2","this","header","_templateObject3","_templateObject4","LitElement","__webpack_require__","d","__webpack_exports__","showAlertDialog","showConfirmationDialog","showPromptDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","loadGenericDialog","Promise","all","e","then","bind","showDialogHelper","element","dialogParams","extra","resolve","origCancel","cancel","origConfirm","confirm","fireEvent","dialogTag","dialogImport","Object","assign","prompt","out","confirmation","compare","caseInsensitiveCompare","a","b","toLowerCase","_decorate","_initialize","_LitElement","F","_LitElement2","_inherits","HaConfigSection","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","kind","decorators","key","value","classMap","narrow","isWide","vertical","horizontal","static","HassTabsSubpage","type","String","attribute","Boolean","reflect","memoizeOne","tabs","activeTab","showAdvanced","_components","_language","_narrow","filter","page","component","core","isComponentLoaded","_this2","hass","advancedOnly","map","active","_tabTapped","path","icon","translationKey","localize","name","changedProperties","_this3","_get","_getPrototypeOf","prototype","has","_activeTab","find","tab","route","prefix","includes","_this$hass$userData","_getTabs","userData","config","components","language","mainPage","_templateObject5","hassio","_templateObject6","_backTapped","_templateObject7","_templateObject8","bottom-bar","ev","navigate","currentTarget","backPath","backCallback","history","back","_templateObject9","MwcFab","customElements","get","_MwcFab","_MwcFab2","HaFab","classes","mdc-fab--mini","mini","mdc-fab--exited","exited","mdc-fab--extended","extended","showLabel","label","ripple","disabled","showIconAtEnd","SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","fetchUsers","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","callWS","stop","_x","createUser","_ref2","_callee2","group_ids","_context2","_x2","_x3","_x4","updateUser","_ref3","_callee3","userId","params","_context3","user_id","_x5","_x6","_x7","deleteUser","_ref4","_callee4","_context4","_x8","_x9","createPerson","values","loadPersonDetailDialog","HaConfigPerson","undefined","_storageItems","_configItems","configSections","persons","entry","_openEditEntry","_createPerson","changedProps","_fetchData","personData","_usersLoad","sent","storage","sort","ent1","ent2","_openDialog","users","currentPerson","used","Set","_i","_arr","_step","_iterator","_createForOfIteratorHelper","s","n","done","pers","add","err","f","currentUserId","user","id","_callee5","_context5","systemLogDetailParams","_allowedUsers","createEntry","_createEntry","created","updateEntry","_updateEntry","updated","personId","updates","person_id","ent","removeEntry","_removeEntry","title","text","dismissText","confirmText","t0","define"],"mappings":"qxUAUCA,YAAc,ikBAEZC,mFAED,WACE,OAAOC,YAAPC,yCA+CF,WACE,OAAOC,YAAPC,IACIC,KAAKC,OACHH,YADFI,IACmCF,KAAKC,QACtCH,YAFFK,WArDaC,uCCVrBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAAAC,EAAAN,EAAA,IAiCaO,EAAoB,kBAC/BC,QAAAC,IAAA,CAAAT,EAAAU,EAAA,GAAAV,EAAAU,EAAA,GAAAV,EAAAU,EAAA,KAAAV,EAAAU,EAAA,MAAAC,KAAAX,EAAAY,KAAA,YAEIC,EAAmB,SACvBC,EACAC,EACAC,GAHuB,OAQvB,IAAIR,QAAQ,SAACS,GACX,IAAMC,EAAaH,EAAaI,OAC1BC,EAAcL,EAAaM,QAEjCC,YAAUR,EAAS,cAAe,CAChCS,UAAW,aACXC,aAAcjB,EACdQ,aAAYU,OAAAC,OAAA,GACPX,EADO,GAEPC,EAFO,CAGVG,OAAQ,WACNF,IAAQD,YAAOW,SAAS,MACpBT,GACFA,KAGJG,QAAS,SAACO,GACRX,EAAQD,YAAOW,QAASC,GACpBR,GACFA,EAAYQ,WAOXzB,EAAkB,SAC7BW,EACAC,GAF6B,OAG1BF,EAAiBC,EAASC,IAElBX,EAAyB,SACpCU,EACAC,GAFoC,OAIpCF,EAAiBC,EAASC,EAAc,CAAEc,cAAc,KAI7CxB,EAAmB,SAC9BS,EACAC,GAF8B,OAI9BF,EAAiBC,EAASC,EAAc,CAAEY,QAAQ,uCCxFpD3B,EAAAC,EAAAC,EAAA,sBAAA4B,IAAA9B,EAAAC,EAAAC,EAAA,sBAAA6B,IAAO,IAAMD,EAAU,SAACE,EAAWC,GACjC,OAAID,EAAIC,GACE,EAEND,EAAIC,EACC,EAGF,GAGIF,EAAyB,SAACC,EAAWC,GAAZ,OACpCH,EAAQE,EAAEE,cAAeD,EAAEC,66VCR7BC,CAAA,CADC9C,YAAc,sBACf,SAAA+C,EAAAC,GAAA,OAAAC,EAAA,SAAAC,sOAAAC,CAAAC,EAAAJ,GAAA,IAAAK,EAAAC,EAAAF,GAAA,SAAAA,IAAA,IAAAG,+FAAAC,CAAAlD,KAAA8C,GAAA,QAAAK,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,CAAA/C,MAAA2D,OAAAL,IAAAb,EAAAmB,EAAAX,MAAA,OAAAH,EAAA,GAAAxC,EAAA,EAAAuD,KAAA,QAAAC,WAAA,CACGnE,eADHoE,IAAA,SAAAC,MAAA,kBAC8B,IAD9B,CAAAH,KAAA,SAAAE,IAAA,SAAAC,MAGE,WACE,OAAOlE,YAAPD,IAEqBoE,YAAS,CACxBC,QAASlE,KAAKmE,SAKWF,YAAS,CAChCC,QAASlE,KAAKmE,OACdC,UAAWpE,KAAKmE,OAChBE,WAAYrE,KAAKmE,YAf7B,CAAAN,KAAA,MAAAS,QAAA,EAAAP,IAAA,SAAAC,MAyBE,WACE,OAAOpE,YAAPG,UA1BiCK,s9ZC2BpCV,YAAc,wCACT6E,2iBACH5E,kEAEAA,YAAS,CAAE6E,KAAMC,OAAQC,UAAW,sEAEpC/E,0EAEAA,YAAS,CAAE6E,KAAMG,gDAA2B,8BAE5ChF,YAAS,CAAE6E,KAAMG,QAASD,UAAW,sDAAiC,8BAEtE/E,mEAEAA,kEAEAA,YAAS,CAAE6E,KAAMG,QAASC,SAAS,0CAAwB,8BAE3DjF,8GAEkBkF,YACjB,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,GAUA,OARkBL,EAAKM,OACrB,SAACC,GAAD,QACIA,EAAKC,WACLD,EAAKE,MACLC,YAAkBC,EAAKC,KAAML,EAAKC,eAClCD,EAAKM,cAAgBX,KAGVY,IACf,SAACP,GAAD,OACEvF,YADFD,IAGmBoE,YAAS,CACpB4B,OAAQR,IAASN,IAEVU,EAAKK,WACNT,EAAKU,KAEXN,EAAKvB,OACHpE,YADFC,IACyBsF,EAAKW,MAC5B,GACDP,EAAKvB,QAAUmB,IAASN,EAQvB,GAPAjF,YADFI,IAGSmF,EAAKY,eACJR,EAAKC,KAAKQ,SAASb,EAAKY,gBACxBZ,EAAKc,gDAW7B,SAAkBC,GAAmC,IAAAC,EAAArG,KACnDsG,EAAAC,EAlEEhC,EAkEFiC,WAAA,UAAAxG,MAAAyD,KAAAzD,KAAcoG,GACVA,EAAkBK,IAAI,WACxBzG,KAAK0G,WAAa1G,KAAK8E,KAAK6B,KAAK,SAACC,GAAD,MAC/B,GAAAjD,OAAG0C,EAAKQ,MAAMC,QAAdnD,OAAuB0C,EAAKQ,MAAMd,MAAOgB,SAASH,EAAIb,6CAK5D,WAAmC,IAAAiB,EAC3BlC,EAAO9E,KAAKiH,SAChBjH,KAAK8E,KACL9E,KAAK0G,WAFM,QAAAM,EAGXhH,KAAK0F,KAAKwB,gBAHC,IAAAF,OAAA,EAGXA,EAAoBhC,aACpBhF,KAAK0F,KAAKyB,OAAOC,WACjBpH,KAAK0F,KAAK2B,SACVrH,KAAKkE,QAGP,OAAOpE,YAAPK,IAEMH,KAAKsH,SACHxH,YADFyH,IAGcvH,KAAK0F,KACH1F,KAAKwH,OACLxH,KAAKkE,QAGnBpE,YARF2H,IAWezH,KAAK0H,aAGpB1H,KAAKkE,OACHpE,YADF6H,KAEE,GACF7C,EAAKzB,OAAS,IAAMrD,KAAKkE,OACvBpE,YADF8H,IAE6B3D,YAAS,CAAE4D,aAAc7H,KAAKkE,SACnDY,GAGN,4CAWV,SAAmBgD,GACjBC,YAAS/H,KAAO8H,EAAGE,cAAsBjC,MAAM,4CAGjD,WACM/F,KAAKiI,SACPF,YAAS/H,KAAMA,KAAKiI,UAGlBjI,KAAKkI,aACPlI,KAAKkI,eAGPC,QAAQC,kDAGV,WACE,OAAOxI,YAAPyI,UAzI0BjI,+1FCxB9B,IAAMkI,EAASC,eAAeC,IAAI,yqMAGlChG,CAAA,CADC9C,YAAc,WACf,SAAA+C,EAAAgG,GAAA,OAAA9F,EAAA,SAAA+F,sOAAA7F,CAAA8F,EAAAF,GAAA,IAAA1F,EAAAC,EAAA2F,GAAA,SAAAA,IAAA,IAAA1F,+FAAAC,CAAAlD,KAAA2I,GAAA,QAAAxF,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,CAAA/C,MAAA2D,OAAAL,IAAAb,EAAAmB,EAAAX,MAAA,OAAA0F,EAAA,GAAArI,EAAA,EAAAuD,KAAA,SAAAE,IAAA,SAAAC,MAGE,WACE,IAAM4E,EAAU,CACdC,gBAAiB7I,KAAK8I,KACtBC,kBAAmB/I,KAAKgJ,OACxBC,oBAAqBjJ,KAAKkJ,UAEtBC,EAA2B,KAAfnJ,KAAKoJ,OAAgBpJ,KAAKkJ,SAC5C,OAAOpJ,YAAPD,IAEewJ,cACMpF,YAAS2E,GACb5I,KAAKsJ,SACJtJ,KAAKoJ,OAASpJ,KAAKgG,KAE/BmD,GAAanJ,KAAKuJ,cAAgBvJ,KAAKoJ,MAAQ,GAC/CpJ,KAAKgG,KAAOlG,YAAZC,IAAmCC,KAAKgG,MAAqB,GAC7DmD,IAAcnJ,KAAKuJ,cAAgBvJ,KAAKoJ,MAAQ,SAnB/Bd,+hBCRpB,IAAMkB,EAAwB,eACxBC,EAAuB,eAoBvBC,EAAU,eAAAC,EAAAC,EAAAC,mBAAAC,KAAG,SAAAC,EAAOrE,GAAP,OAAAmE,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACxB1E,EAAK2E,OAAe,CAClB7F,KAAM,sBAFgB,wBAAAyF,EAAAK,SAAAP,MAAH,gBAAAQ,GAAA,OAAAZ,EAAAjG,MAAA1D,KAAAoD,YAAA,GAKVoH,EAAU,eAAAC,EAAAb,EAAAC,mBAAAC,KAAG,SAAAY,EACxBhF,EACAS,EAEAwE,GAJwB,OAAAd,mBAAAG,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAR,OAAA,SAMxB1E,EAAK2E,OAAuB,CAC1B7F,KAAM,qBACN2B,OACAwE,eATsB,wBAAAC,EAAAN,SAAAI,MAAH,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAA/G,MAAA1D,KAAAoD,YAAA,GAYV4H,EAAU,eAAAC,EAAArB,EAAAC,mBAAAC,KAAG,SAAAoB,EACxBxF,EACAyF,EACAC,GAHwB,OAAAvB,mBAAAG,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAjB,OAAA,SAKxB1E,EAAK2E,OAALvI,OAAAC,OAAA,GACKqJ,EADL,CAEE5G,KAAM,qBACN8G,QAASH,MARa,wBAAAE,EAAAf,SAAAY,MAAH,gBAAAK,EAAAC,EAAAC,GAAA,OAAAR,EAAAvH,MAAA1D,KAAAoD,YAAA,GAWVsI,EAAU,eAAAC,EAAA/B,EAAAC,mBAAAC,KAAG,SAAA8B,EAAOlG,EAAqByF,GAA5B,OAAAtB,mBAAAG,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAAzB,OAAA,SACxB1E,EAAK2E,OAAa,CAChB7F,KAAM,qBACN8G,QAASH,KAHa,wBAAAU,EAAAvB,SAAAsB,MAAH,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAjI,MAAA1D,KAAAoD,YAAA,8EC/BV4I,iBAAe,SAC1BtG,EACAuG,GAF0B,OAI1BvG,EAAK2E,OAALvI,OAAAC,OAAA,CACEyC,KAAM,iBACHyH,gECfMC,EAAyB,kBACpCrL,QAAAC,IAAA,CAAAT,EAAAU,EAAA,GAAAV,EAAAU,EAAA,GAAAV,EAAAU,EAAA,GAAAV,EAAAU,EAAA,GAAAV,EAAAU,EAAA,OAAAC,KAAAX,EAAAY,KAAA,glNCmBIkL,88MACHxM,kEAEAA,oEAEAA,oEAEAA,mEAEAA,2EAEAA,+HAID,WAAmC,IAAA8F,EAAAzF,KACjC,IACGA,KAAK0F,WACiB0G,IAAvBpM,KAAKqM,oBACiBD,IAAtBpM,KAAKsM,aAEL,OAAOxM,YAAPD,KAEF,IAAM6F,EAAO1F,KAAK0F,KAClB,OAAO5F,YAAPC,IAEYC,KAAK0F,KACH1F,KAAKkE,OACNlE,KAAK6G,MAEN0F,iBAAeC,QAEMxM,KAAKmE,OAE3BuB,EAAKQ,SAAS,kCAGfR,EAAKQ,SAAS,uCACdlG,KAAKsM,aAAajJ,OAAS,EACzBvD,YADFI,IAGQwF,EAAKQ,SACL,iEAIN,GAGFlG,KAAKqM,cAAczG,IAAI,SAAC6G,GACxB,OAAO3M,YAAPK,IACuBsF,EAAKiH,eAAyBD,EAE7CA,EAAMtG,QAKgB,IAA9BnG,KAAKqM,cAAchJ,OACjBvD,YADFyH,IAGQ7B,EAAKQ,SACL,iDAEmBlG,KAAK2M,cACtBjH,EAAKQ,SACL,yCAKRpG,YAbF2H,KAeFzH,KAAKsM,aAAajJ,OAAS,EACzBvD,YADF6H,IAGQ3H,KAAKsM,aAAa1G,IAAI,SAAC6G,GACvB,OAAO3M,YAAP8H,IAGQ6E,EAAMtG,SAOpB,GAKKnG,KAAKmE,OACNnE,KAAKkE,OAENwB,EAAKQ,SAAS,qCACdlG,KAAK2M,yDAKpB,SAAuBC,GACrBtG,EAAAC,EAtGE4F,EAsGF3F,WAAA,eAAAxG,MAAAyD,KAAAzD,KAAmB4M,GACnB5M,KAAK6M,aACLX,uFAGF,SAAAnC,IAAA,IAAA+C,EAAA,OAAAjD,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACEnK,KAAK+M,WAAarD,YAAW1J,KAAK0F,MADpCuE,EAAAE,KAAA,EAEwCnK,KAAK0F,KF7HxC2E,OAGF,CAAE7F,KAAM,gBEwHX,OAEQsI,EAFR7C,EAAA+C,KAIEhN,KAAKqM,cAAgBS,EAAWG,QAAQC,KAAK,SAACC,EAAMC,GAAP,OAC3CjL,YAAQgL,EAAKhH,KAAMiH,EAAKjH,QAE1BnG,KAAKsM,aAAeQ,EAAW3F,OAAO+F,KAAK,SAACC,EAAMC,GAAP,OACzCjL,YAAQgL,EAAKhH,KAAMiH,EAAKjH,QAR5B,wBAAA8D,EAAAK,SAAAP,EAAA/J,wGAYA,WACEA,KAAKqN,0DAGP,SAAuBvF,GACrB,IAAM2E,EAAiB3E,EAAGE,cAAuByE,MACjDzM,KAAKqN,YAAYZ,8CAGnB,SAAsBa,EAAeC,GAEnC,IADA,IAAMC,EAAO,IAAIC,IACjBC,EAAA,EAAAC,EAAmB,CAAC3N,KAAKsM,aAActM,KAAKqM,eAA5CqB,EAAAC,EAAAtK,OAAAqK,IAA4D,CAAvD,IAAuDE,EAAAC,EAAAC,EAA7CH,EAAAD,IAA6C,IAC1D,IAAAG,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA0B,KAAfC,EAAeN,EAAA5J,MACpBkK,EAAK5C,SACPkC,EAAKW,IAAID,EAAK5C,UAHwC,MAAA8C,GAAAP,EAAA9M,EAAAqN,GAAA,QAAAP,EAAAQ,KAO5D,IAAMC,EAAgBf,EAAgBA,EAAcjC,aAAUc,EAC9D,OAAOkB,EAAMlI,OACX,SAACmJ,GAAD,OAAUA,EAAKC,KAAOF,IAAkBd,EAAK/G,IAAI8H,EAAKC,0FAI1D,SAAAC,EAA0BhC,GAA1B,IAAAa,EAAAjH,EAAArG,KAAA,OAAA6J,mBAAAG,KAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,cAAAuE,EAAAvE,KAAA,EACsBnK,KAAK+M,WAD3B,OACQO,EADRoB,EAAA1B,KD7JA7L,ECgKyBnB,KD/JzB2O,EC+J+B,CAC3BlC,QACAa,MAAOtN,KAAK4O,cAActB,EAAOb,GACjCoC,YAAW,eAAAC,EAAAlF,EAAAC,mBAAAC,KAAE,SAAAY,EAAOuB,GAAP,IAAA8C,EAAA,OAAAlF,mBAAAG,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAT,KAAA,EACW6B,EAAa3F,EAAKX,KAAOuG,GADpC,OACL8C,EADKnE,EAAAoC,KAEX3G,EAAKgG,cAAgBhG,EAAKgG,cAAe1I,OACvCoL,GACA7B,KAAK,SAACC,EAAMC,GAAP,OAAgBjL,YAAQgL,EAAKhH,KAAMiH,EAAKjH,QAJpC,wBAAAyE,EAAAN,SAAAI,MAAF,gBAAAG,GAAA,OAAAiE,EAAApL,MAAA1D,KAAAoD,YAAA,GAMX4L,YAAW,eAAAC,EAAArF,EAAAC,mBAAAC,KAAE,SAAAoB,EAAOe,GAAP,IAAAiD,EAAA,OAAArF,mBAAAG,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EF5JjBzE,EE6JyCW,EAAKX,KF5J9CyJ,EE4JqD1C,EAAO+B,GF3J5DY,EE2JgEnD,EFzJhEvG,EAAK2E,OAALvI,OAAAC,OAAA,CACEyC,KAAM,gBACN6K,UAAWF,GACRC,IEqJY,OACLF,EADK7D,EAAA2B,KAEX3G,EAAKgG,cAAgBhG,EAAKgG,cAAezG,IAAI,SAAC0J,GAAD,OAC3CA,IAAQ7C,EAAQyC,EAAUI,IAHjB,wBAAAjE,EAAAf,OF7JS,IAC1B5E,EACAyJ,EACAC,GE0JiBlE,MAAF,gBAAAJ,GAAA,OAAAmE,EAAAvL,MAAA1D,KAAAoD,YAAA,GAMXmM,YAAW,eAAAC,EAAA5F,EAAAC,mBAAAC,KAAE,SAAA8B,IAAA,OAAA/B,mBAAAG,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EAED1J,YAAuB4F,EAAM,CACnCoJ,MAAOpJ,EAAKX,KAAMQ,SAAS,yCAC3BwJ,KAAMrJ,EAAKX,KAAMQ,SAAS,0CAC1ByJ,YAAatJ,EAAKX,KAAMQ,SAAS,gBACjC0J,YAAavJ,EAAKX,KAAMQ,SAAS,mBAN1B,UAAA2F,EAAAmB,KAAA,CAAAnB,EAAA1B,KAAA,eAAA0B,EAAAzB,OAAA,UASF,GATE,cAAAyB,EAAA3B,KAAA,EAAA2B,EAAA1B,KAAA,EFxJUzE,EEqKAW,EAAKX,KFrKgByJ,EEqKT1C,EAAO+B,GFpK9C9I,EAAK2E,OAAO,CACV7F,KAAM,gBACN6K,UAAWF,IEqJI,cAcT9I,EAAKgG,cAAgBhG,EAAKgG,cAAejH,OACvC,SAACkK,GAAD,OAASA,IAAQ7C,IAfVZ,EAAAzB,OAAA,UAiBF,GAjBE,eAAAyB,EAAA3B,KAAA,GAAA2B,EAAAgE,GAAAhE,EAAA,SAAAA,EAAAzB,OAAA,UAmBF,GAnBE,yBAAAyB,EAAAvB,OFxJS,IAAC5E,EAAqByJ,GEwJ/BvD,EAAA,kBAAF,yBAAA4D,EAAA9L,MAAA1D,KAAAoD,YAAA,ID5KfzB,YAAUR,EAAS,cAAe,CAChCS,UAAW,uBACXC,aAAcqK,EACd9K,aAAcuN,ICuJhB,wBAAAD,EAAApE,OD9JoC,IACpCnJ,EACAwN,GC4JAF,EAAAzO,yGA2CA,WACE,OAAOJ,YAAPyI,UA3LyBjI,KAgO7BmI,eAAeuH,OAAO,mBAAoB3D","file":"chunk.b1ccbaf456da837f443b.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\n@customElement(\"ha-card\")\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html` <div class=\"card-header\">${this.header}</div> `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n","import { TemplateResult } from \"lit-html\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\ninterface BaseDialogParams {\n  confirmText?: string;\n  text?: string | TemplateResult;\n  title?: string;\n}\n\nexport interface AlertDialogParams extends BaseDialogParams {\n  confirm?: () => void;\n}\n\nexport interface ConfirmationDialogParams extends BaseDialogParams {\n  dismissText?: string;\n  confirm?: () => void;\n  cancel?: () => void;\n}\n\nexport interface PromptDialogParams extends BaseDialogParams {\n  inputLabel?: string;\n  inputType?: string;\n  defaultValue?: string;\n  confirm?: (out?: string) => void;\n}\n\nexport interface DialogParams\n  extends ConfirmationDialogParams,\n    PromptDialogParams {\n  confirm?: (out?: string) => void;\n  confirmation?: boolean;\n  prompt?: boolean;\n}\n\nexport const loadGenericDialog = () =>\n  import(/* webpackChunkName: \"confirmation\" */ \"./dialog-box\");\n\nconst showDialogHelper = (\n  element: HTMLElement,\n  dialogParams: DialogParams,\n  extra?: {\n    confirmation?: DialogParams[\"confirmation\"];\n    prompt?: DialogParams[\"prompt\"];\n  }\n) =>\n  new Promise((resolve) => {\n    const origCancel = dialogParams.cancel;\n    const origConfirm = dialogParams.confirm;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        ...extra,\n        cancel: () => {\n          resolve(extra?.prompt ? null : false);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n        confirm: (out) => {\n          resolve(extra?.prompt ? out : true);\n          if (origConfirm) {\n            origConfirm(out);\n          }\n        },\n      },\n    });\n  });\n\nexport const showAlertDialog = (\n  element: HTMLElement,\n  dialogParams: AlertDialogParams\n) => showDialogHelper(element, dialogParams);\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmationDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { confirmation: true }) as Promise<\n    boolean\n  >;\n\nexport const showPromptDialog = (\n  element: HTMLElement,\n  dialogParams: PromptDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { prompt: true }) as Promise<\n    null | string\n  >;\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { css, customElement, html, LitElement, property } from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends LitElement {\n  @property() public isWide = false;\n\n  protected render() {\n    return html`\n      <div\n        class=\"content ${classMap({\n          narrow: !this.isWide,\n        })}\"\n      >\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div\n          class=\"together layout ${classMap({\n            narrow: !this.isWide,\n            vertical: !this.isWide,\n            horizontal: this.isWide,\n          })}\"\n        >\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n      .content {\n        padding: 28px 20px 0;\n        max-width: 1040px;\n        margin: 0 auto;\n      }\n\n      .layout {\n        display: flex;\n      }\n\n      .horizontal {\n        flex-direction: row;\n      }\n\n      .vertical {\n        flex-direction: column;\n      }\n\n      .flex-auto {\n        flex: 1 1 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 32px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        max-width: 400px;\n        margin-right: 40px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n\n      .narrow.content {\n        max-width: 640px;\n      }\n      .narrow .together {\n        margin-top: 20px;\n      }\n      .narrow .intro {\n        padding-bottom: 20px;\n        margin-right: 0;\n        max-width: 500px;\n      }\n    `;\n  }\n}\n","import \"@material/mwc-ripple\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport { navigate } from \"../common/navigate\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport { HomeAssistant, Route } from \"../types\";\nimport \"../components/ha-icon\";\n\nexport interface PageNavigation {\n  path: string;\n  translationKey?: string;\n  component?: string;\n  name?: string;\n  core?: boolean;\n  advancedOnly?: boolean;\n  icon?: string;\n  info?: any;\n}\n\n@customElement(\"hass-tabs-subpage\")\nclass HassTabsSubpage extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n\n  @property() public backCallback?: () => void;\n\n  @property({ type: Boolean }) public hassio = false;\n\n  @property({ type: Boolean, attribute: \"main-page\" }) public mainPage = false;\n\n  @property() public route!: Route;\n\n  @property() public tabs!: PageNavigation[];\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property() private _activeTab?: PageNavigation;\n\n  private _getTabs = memoizeOne(\n    (\n      tabs: PageNavigation[],\n      activeTab: PageNavigation | undefined,\n      showAdvanced: boolean | undefined,\n      _components,\n      _language,\n      _narrow\n    ) => {\n      const shownTabs = tabs.filter(\n        (page) =>\n          (!page.component ||\n            page.core ||\n            isComponentLoaded(this.hass, page.component)) &&\n          (!page.advancedOnly || showAdvanced)\n      );\n\n      return shownTabs.map(\n        (page) =>\n          html`\n            <div\n              class=\"tab ${classMap({\n                active: page === activeTab,\n              })}\"\n              @click=${this._tabTapped}\n              .path=${page.path}\n            >\n              ${this.narrow\n                ? html` <ha-icon .icon=${page.icon}></ha-icon> `\n                : \"\"}\n              ${!this.narrow || page === activeTab\n                ? html`\n                    <span class=\"name\"\n                      >${page.translationKey\n                        ? this.hass.localize(page.translationKey)\n                        : page.name}</span\n                    >\n                  `\n                : \"\"}\n              <mwc-ripple></mwc-ripple>\n            </div>\n          `\n      );\n    }\n  );\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"route\")) {\n      this._activeTab = this.tabs.find((tab) =>\n        `${this.route.prefix}${this.route.path}`.includes(tab.path)\n      );\n    }\n  }\n\n  protected render(): TemplateResult {\n    const tabs = this._getTabs(\n      this.tabs,\n      this._activeTab,\n      this.hass.userData?.showAdvanced,\n      this.hass.config.components,\n      this.hass.language,\n      this.narrow\n    );\n\n    return html`\n      <div class=\"toolbar\">\n        ${this.mainPage\n          ? html`\n              <ha-menu-button\n                .hass=${this.hass}\n                .hassio=${this.hassio}\n                .narrow=${this.narrow}\n              ></ha-menu-button>\n            `\n          : html`\n              <ha-icon-button-arrow-prev\n                aria-label=\"Back\"\n                @click=${this._backTapped}\n              ></ha-icon-button-arrow-prev>\n            `}\n        ${this.narrow\n          ? html` <div class=\"main-title\"><slot name=\"header\"></slot></div> `\n          : \"\"}\n        ${tabs.length > 1 || !this.narrow\n          ? html`\n              <div id=\"tabbar\" class=${classMap({ \"bottom-bar\": this.narrow })}>\n                ${tabs}\n              </div>\n            `\n          : \"\"}\n        <div id=\"toolbar-icon\">\n          <slot name=\"toolbar-icon\"></slot>\n        </div>\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  private _tabTapped(ev: MouseEvent): void {\n    navigate(this, (ev.currentTarget as any).path, true);\n  }\n\n  private _backTapped(): void {\n    if (this.backPath) {\n      navigate(this, this.backPath);\n      return;\n    }\n    if (this.backCallback) {\n      this.backCallback();\n      return;\n    }\n    history.back();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 100%;\n        background-color: var(--primary-background-color);\n      }\n\n      .toolbar {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        height: 65px;\n        background-color: var(--sidebar-background-color);\n        font-weight: 400;\n        color: var(--sidebar-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        padding: 0 16px;\n        box-sizing: border-box;\n      }\n\n      #tabbar {\n        display: flex;\n        font-size: 14px;\n      }\n\n      #tabbar.bottom-bar {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        padding: 0 16px;\n        box-sizing: border-box;\n        background-color: var(--sidebar-background-color);\n        border-top: 1px solid var(--divider-color);\n        justify-content: space-between;\n        z-index: 1;\n        font-size: 12px;\n        width: 100%;\n      }\n\n      #tabbar:not(.bottom-bar) {\n        flex: 1;\n        justify-content: center;\n      }\n\n      .tab {\n        padding: 0 32px;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        align-items: center;\n        justify-content: center;\n        height: 64px;\n        cursor: pointer;\n      }\n\n      .name {\n        white-space: nowrap;\n      }\n\n      .tab.active {\n        color: var(--primary-color);\n      }\n\n      #tabbar:not(.bottom-bar) .tab.active {\n        border-bottom: 2px solid var(--primary-color);\n      }\n\n      .bottom-bar .tab {\n        padding: 0 16px;\n        width: 20%;\n        min-width: 0;\n      }\n\n      :host(:not([narrow])) #toolbar-icon {\n        min-width: 40px;\n      }\n\n      ha-menu-button,\n      ha-icon-button-arrow-prev,\n      ::slotted([slot=\"toolbar-icon\"]) {\n        flex-shrink: 0;\n        pointer-events: auto;\n        color: var(--sidebar-icon-color);\n      }\n\n      .main-title {\n        flex: 1;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        max-height: 40px;\n        line-height: 20px;\n      }\n\n      .content {\n        position: relative;\n        width: 100%;\n        height: calc(100% - 65px);\n        overflow-y: auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([narrow]) .content {\n        height: calc(100% - 128px);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage\": HassTabsSubpage;\n  }\n}\n","import \"@material/mwc-fab\";\nimport type { Fab } from \"@material/mwc-fab\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive\";\nimport { customElement, html, TemplateResult } from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport type { Constructor } from \"../types\";\nimport \"./ha-icon\";\n\nconst MwcFab = customElements.get(\"mwc-fab\") as Constructor<Fab>;\n\n@customElement(\"ha-fab\")\nexport class HaFab extends MwcFab {\n  // We override the render method because we don't have an icon font and mwc-fab doesn't support our svg-icon sets.\n  // Based on version mwc-fab 0.8\n  protected render(): TemplateResult {\n    const classes = {\n      \"mdc-fab--mini\": this.mini,\n      \"mdc-fab--exited\": this.exited,\n      \"mdc-fab--extended\": this.extended,\n    };\n    const showLabel = this.label !== \"\" && this.extended;\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-fab ${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label || this.icon}\"\n      >\n        ${showLabel && this.showIconAtEnd ? this.label : \"\"}\n        ${this.icon ? html` <ha-icon .icon=${this.icon}></ha-icon> ` : \"\"}\n        ${showLabel && !this.showIconAtEnd ? this.label : \"\"}\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { Credential } from \"./auth\";\n\nexport const SYSTEM_GROUP_ID_ADMIN = \"system-admin\";\nexport const SYSTEM_GROUP_ID_USER = \"system-users\";\nexport const SYSTEM_GROUP_ID_READ_ONLY = \"system-read-only\";\n\nexport const GROUPS = [SYSTEM_GROUP_ID_USER, SYSTEM_GROUP_ID_ADMIN];\n\nexport interface User {\n  id: string;\n  name: string;\n  is_owner: boolean;\n  is_active: boolean;\n  system_generated: boolean;\n  group_ids: string[];\n  credentials: Credential[];\n}\n\nexport interface UpdateUserParams {\n  name?: User[\"name\"];\n  group_ids?: User[\"group_ids\"];\n}\n\nexport const fetchUsers = async (hass: HomeAssistant) =>\n  hass.callWS<User[]>({\n    type: \"config/auth/list\",\n  });\n\nexport const createUser = async (\n  hass: HomeAssistant,\n  name: string,\n  // eslint-disable-next-line: variable-name\n  group_ids?: User[\"group_ids\"]\n) =>\n  hass.callWS<{ user: User }>({\n    type: \"config/auth/create\",\n    name,\n    group_ids,\n  });\n\nexport const updateUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  params: UpdateUserParams\n) =>\n  hass.callWS<{ user: User }>({\n    ...params,\n    type: \"config/auth/update\",\n    user_id: userId,\n  });\n\nexport const deleteUser = async (hass: HomeAssistant, userId: string) =>\n  hass.callWS<void>({\n    type: \"config/auth/delete\",\n    user_id: userId,\n  });\n","import { HomeAssistant } from \"../types\";\n\nexport interface Person {\n  id: string;\n  name: string;\n  user_id?: string;\n  device_trackers?: string[];\n}\n\nexport interface PersonMutableParams {\n  name: string;\n  user_id: string | null;\n  device_trackers: string[];\n}\n\nexport const fetchPersons = (hass: HomeAssistant) =>\n  hass.callWS<{\n    storage: Person[];\n    config: Person[];\n  }>({ type: \"person/list\" });\n\nexport const createPerson = (\n  hass: HomeAssistant,\n  values: PersonMutableParams\n) =>\n  hass.callWS<Person>({\n    type: \"person/create\",\n    ...values,\n  });\n\nexport const updatePerson = (\n  hass: HomeAssistant,\n  personId: string,\n  updates: Partial<PersonMutableParams>\n) =>\n  hass.callWS<Person>({\n    type: \"person/update\",\n    person_id: personId,\n    ...updates,\n  });\n\nexport const deletePerson = (hass: HomeAssistant, personId: string) =>\n  hass.callWS({\n    type: \"person/delete\",\n    person_id: personId,\n  });\n","import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { Person, PersonMutableParams } from \"../../../data/person\";\nimport { User } from \"../../../data/user\";\n\nexport interface PersonDetailDialogParams {\n  entry?: Person;\n  users: User[];\n  createEntry: (values: PersonMutableParams) => Promise<unknown>;\n  updateEntry: (updates: Partial<PersonMutableParams>) => Promise<unknown>;\n  removeEntry: () => Promise<boolean>;\n}\n\nexport const loadPersonDetailDialog = () =>\n  import(\n    /* webpackChunkName: \"person-detail-dialog\" */ \"./dialog-person-detail\"\n  );\n\nexport const showPersonDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: PersonDetailDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-person-detail\",\n    dialogImport: loadPersonDetailDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { compare } from \"../../../common/string/compare\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport {\n  createPerson,\n  deletePerson,\n  fetchPersons,\n  Person,\n  updatePerson,\n} from \"../../../data/person\";\nimport { fetchUsers, User } from \"../../../data/user\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../layouts/hass-tabs-subpage\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport \"../ha-config-section\";\nimport { configSections } from \"../ha-panel-config\";\nimport {\n  loadPersonDetailDialog,\n  showPersonDetailDialog,\n} from \"./show-dialog-person-detail\";\n\nclass HaConfigPerson extends LitElement {\n  @property() public hass?: HomeAssistant;\n\n  @property() public isWide?: boolean;\n\n  @property() public narrow?: boolean;\n\n  @property() public route!: Route;\n\n  @property() private _storageItems?: Person[];\n\n  @property() private _configItems?: Person[];\n\n  private _usersLoad?: Promise<User[]>;\n\n  protected render(): TemplateResult {\n    if (\n      !this.hass ||\n      this._storageItems === undefined ||\n      this._configItems === undefined\n    ) {\n      return html` <hass-loading-screen></hass-loading-screen> `;\n    }\n    const hass = this.hass;\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        back-path=\"/config\"\n        .tabs=${configSections.persons}\n      >\n        <ha-config-section .isWide=${this.isWide}>\n          <span slot=\"header\"\n            >${hass.localize(\"ui.panel.config.person.caption\")}</span\n          >\n          <span slot=\"introduction\">\n            ${hass.localize(\"ui.panel.config.person.introduction\")}\n            ${this._configItems.length > 0\n              ? html`\n                  <p>\n                    ${hass.localize(\n                      \"ui.panel.config.person.note_about_persons_configured_in_yaml\"\n                    )}\n                  </p>\n                `\n              : \"\"}\n          </span>\n          <ha-card class=\"storage\">\n            ${this._storageItems.map((entry) => {\n              return html`\n                <paper-item @click=${this._openEditEntry} .entry=${entry}>\n                  <paper-item-body>\n                    ${entry.name}\n                  </paper-item-body>\n                </paper-item>\n              `;\n            })}\n            ${this._storageItems.length === 0\n              ? html`\n                  <div class=\"empty\">\n                    ${hass.localize(\n                      \"ui.panel.config.person.no_persons_created_yet\"\n                    )}\n                    <mwc-button @click=${this._createPerson}>\n                      ${hass.localize(\n                        \"ui.panel.config.person.create_person\"\n                      )}</mwc-button\n                    >\n                  </div>\n                `\n              : html``}\n          </ha-card>\n          ${this._configItems.length > 0\n            ? html`\n                <ha-card header=\"Configuration.yaml persons\">\n                  ${this._configItems.map((entry) => {\n                    return html`\n                      <paper-item>\n                        <paper-item-body>\n                          ${entry.name}\n                        </paper-item-body>\n                      </paper-item>\n                    `;\n                  })}\n                </ha-card>\n              `\n            : \"\"}\n        </ha-config-section>\n      </hass-tabs-subpage>\n\n      <ha-fab\n        ?is-wide=${this.isWide}\n        ?narrow=${this.narrow}\n        icon=\"hass:plus\"\n        title=\"${hass.localize(\"ui.panel.config.person.add_person\")}\"\n        @click=${this._createPerson}\n      ></ha-fab>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n    loadPersonDetailDialog();\n  }\n\n  private async _fetchData() {\n    this._usersLoad = fetchUsers(this.hass!);\n    const personData = await fetchPersons(this.hass!);\n\n    this._storageItems = personData.storage.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n    this._configItems = personData.config.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n  }\n\n  private _createPerson() {\n    this._openDialog();\n  }\n\n  private _openEditEntry(ev: MouseEvent) {\n    const entry: Person = (ev.currentTarget! as any).entry;\n    this._openDialog(entry);\n  }\n\n  private _allowedUsers(users: User[], currentPerson?: Person) {\n    const used = new Set();\n    for (const coll of [this._configItems, this._storageItems]) {\n      for (const pers of coll!) {\n        if (pers.user_id) {\n          used.add(pers.user_id);\n        }\n      }\n    }\n    const currentUserId = currentPerson ? currentPerson.user_id : undefined;\n    return users.filter(\n      (user) => user.id === currentUserId || !used.has(user.id)\n    );\n  }\n\n  private async _openDialog(entry?: Person) {\n    const users = await this._usersLoad!;\n\n    showPersonDetailDialog(this, {\n      entry,\n      users: this._allowedUsers(users, entry),\n      createEntry: async (values) => {\n        const created = await createPerson(this.hass!, values);\n        this._storageItems = this._storageItems!.concat(\n          created\n        ).sort((ent1, ent2) => compare(ent1.name, ent2.name));\n      },\n      updateEntry: async (values) => {\n        const updated = await updatePerson(this.hass!, entry!.id, values);\n        this._storageItems = this._storageItems!.map((ent) =>\n          ent === entry ? updated : ent\n        );\n      },\n      removeEntry: async () => {\n        if (\n          !(await showConfirmationDialog(this, {\n            title: this.hass!.localize(\"ui.panel.config.person.confirm_delete\"),\n            text: this.hass!.localize(\"ui.panel.config.person.confirm_delete2\"),\n            dismissText: this.hass!.localize(\"ui.common.no\"),\n            confirmText: this.hass!.localize(\"ui.common.yes\"),\n          }))\n        ) {\n          return false;\n        }\n\n        try {\n          await deletePerson(this.hass!, entry!.id);\n          this._storageItems = this._storageItems!.filter(\n            (ent) => ent !== entry\n          );\n          return true;\n        } catch (err) {\n          return false;\n        }\n      },\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card {\n        max-width: 600px;\n        margin: 16px auto;\n        overflow: hidden;\n      }\n      .empty {\n        text-align: center;\n        padding: 8px;\n      }\n      paper-item {\n        padding-top: 4px;\n        padding-bottom: 4px;\n      }\n      ha-card.storage paper-item {\n        cursor: pointer;\n      }\n      ha-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n      ha-fab[narrow] {\n        bottom: 84px;\n      }\n      ha-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-config-person\", HaConfigPerson);\n"],"sourceRoot":""}