# -*- mode: python -*-

import json
import os
import shutil

import PyInstaller.config


# Create and set working directories
os.makedirs("../target/PyInstaller", exist_ok=True)
PyInstaller.config.CONF["workpath"] = "../target/PyInstaller"
PyInstaller.config.CONF["distpath"] = "../target/"
PyInstaller.config.CONF["noconfirm"] = True

# Specs
block_cipher = None

# Add user resources
with open("../.mpp_config") as fid:
    mpp_config = json.load(fid)

added_files = list()
for resource in mpp_config["resources"]:
    resource_bis = os.path.join("..", resource)
    print(resource, resource_bis)
    if os.path.isdir(resource_bis):
        added_files += [(resource_bis, resource)]
    else:
        dest = os.path.dirname(resource)
        dest = dest if dest != "" else "."
        added_files += [(resource_bis, dest)]


a = Analysis(
    ["../main.py"],
    pathex=["./"],
    binaries=[],
    datas=added_files,
    hiddenimports=%(hidden-imports)s,
    hookspath=[],
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher
)

pyz = PYZ(
    a.pure,
    a.zipped_data,
    cipher=block_cipher
)

exe = EXE(
    pyz,
    a.scripts,
    exclude_binaries=True,
    name="%(name)s",
    debug=False,
    strip=False,
    upx=True,
    console=%(console)s,
    icon="../%(icon)s"
)

coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=True,
    name="%(name)s"
)

# Clear remaining PyInstaller folders
shutil.rmtree("./build/")
shutil.rmtree("./dist/")
