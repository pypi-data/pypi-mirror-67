Metadata-Version: 2.1
Name: robolytix
Version: 0.1.1
Summary: Robolytix is the key online analytic and monitoring tool for Business / Robotic Process Automation.
Home-page: https://github.com/robolytix/robolytix-sdk/
Author: Robolytix.com
Author-email: info@robolytix.com
License: UNKNOWN
Description: # Robolytix Package
        
        Robolytix is the key online analytic and monitoring tool for Robotic Process Automation using Sonar technology to evaluate, audit, monitor and improve performance of robots operating in any application, RPA platform or custom solution. Manage your RPA projects effectively with exact KPIs. Visualise your whole process at one place.
        
        For more information, please visit https://www.robolytix.com/
        
        ## Requirements
        
        Python 3.6+
        
        ## Installation & Usage
        ### pip install
        
        You can install the Robolytix client package from PyPI
        
        ```sh
        pip install robolytix
        ```
        (you may need to run `pip` with root permission: `sudo pip install robolytix`)
        
        Then import the package:
        ```python
        import robolytix 
        ```
        
        ### Setuptools
        
        Install via [Setuptools](http://pypi.python.org/pypi/setuptools). You need to checkout package from Github `https://github.com/robolytix/robolytix-sdk.git` and step into Python directory.
        
        ```sh
        python setup.py install --user
        ```
        (or `sudo python setup.py install` to install the package for all users)
        
        Then import the package:
        ```python
        import robolytix
        ```
        
        ## Getting Started
        
        Please follow the [installation procedure](#installation--usage) and then run the following:
        
        ```python
        from __future__ import print_function
        import time
        import robolytix
        from robolytix.rest import ApiException
        from pprint import pprint
        
        # Configure API key authorization: api_key
        configuration = robolytix.Configuration()
        configuration.api_key['Authorization'] = 'YOUR_API_KEY'
        
        # create an instance of the API class
        api_instance = robolytix.CommonApi(robolytix.ApiClient(configuration))
        
        try:
            # Account details
            api_response = api_instance.account()
            pprint(api_response)
        except ApiException as e:
            print("Exception when calling CommonApi->account: %s\n" % e)
        
        # Configure API key authorization: api_key
        configuration = robolytix.Configuration()
        configuration.api_key['Authorization'] = 'YOUR_API_KEY'
        
        # create an instance of the API class
        api_instance = robolytix.CommonApi(robolytix.ApiClient(configuration))
        
        try:
            # Ping
            api_response = api_instance.ping()
            pprint(api_response)
        except ApiException as e:
            print("Exception when calling CommonApi->ping: %s\n" % e)
        ```
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Home Automation
Classifier: Topic :: System :: Monitoring
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Requires-Python: >=3.6
Description-Content-Type: text/markdown
