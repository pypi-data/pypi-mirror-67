# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gpa_api.models.base_model_ import Model
from gpa_api import util


class Ship(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, country=None, created_date=None):  # noqa: E501
        """Ship - a model defined in OpenAPI

        :param id: The id of this Ship.  # noqa: E501
        :type id: str
        :param name: The name of this Ship.  # noqa: E501
        :type name: str
        :param country: The country of this Ship.  # noqa: E501
        :type country: str
        :param created_date: The created_date of this Ship.  # noqa: E501
        :type created_date: datetime
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'country': str,
            'created_date': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'country': 'country',
            'created_date': 'createdDate'
        }

        self._id = id
        self._name = name
        self._country = country
        self._created_date = created_date

    @classmethod
    def from_dict(cls, dikt) -> 'Ship':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Ship of this Ship.  # noqa: E501
        :rtype: Ship
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Ship.


        :return: The id of this Ship.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Ship.


        :param id: The id of this Ship.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Ship.


        :return: The name of this Ship.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Ship.


        :param name: The name of this Ship.
        :type name: str
        """

        self._name = name

    @property
    def country(self):
        """Gets the country of this Ship.


        :return: The country of this Ship.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this Ship.


        :param country: The country of this Ship.
        :type country: str
        """

        self._country = country

    @property
    def created_date(self):
        """Gets the created_date of this Ship.


        :return: The created_date of this Ship.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this Ship.


        :param created_date: The created_date of this Ship.
        :type created_date: datetime
        """

        self._created_date = created_date
