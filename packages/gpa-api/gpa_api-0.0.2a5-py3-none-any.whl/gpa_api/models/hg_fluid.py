# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gpa_api.models.base_model_ import Model
from gpa_api.models.hg_component import HgComponent
from gpa_api import util

from gpa_api.models.hg_component import HgComponent  # noqa: E501

class HgFluid(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, components=None, created_date=None):  # noqa: E501
        """HgFluid - a model defined in OpenAPI

        :param id: The id of this HgFluid.  # noqa: E501
        :type id: int
        :param name: The name of this HgFluid.  # noqa: E501
        :type name: str
        :param components: The components of this HgFluid.  # noqa: E501
        :type components: List[HgComponent]
        :param created_date: The created_date of this HgFluid.  # noqa: E501
        :type created_date: datetime
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'components': List[HgComponent],
            'created_date': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'components': 'components',
            'created_date': 'createdDate'
        }

        self._id = id
        self._name = name
        self._components = components
        self._created_date = created_date

    @classmethod
    def from_dict(cls, dikt) -> 'HgFluid':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HgFluid of this HgFluid.  # noqa: E501
        :rtype: HgFluid
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this HgFluid.


        :return: The id of this HgFluid.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HgFluid.


        :param id: The id of this HgFluid.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this HgFluid.


        :return: The name of this HgFluid.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this HgFluid.


        :param name: The name of this HgFluid.
        :type name: str
        """

        self._name = name

    @property
    def components(self):
        """Gets the components of this HgFluid.


        :return: The components of this HgFluid.
        :rtype: List[HgComponent]
        """
        return self._components

    @components.setter
    def components(self, components):
        """Sets the components of this HgFluid.


        :param components: The components of this HgFluid.
        :type components: List[HgComponent]
        """

        self._components = components

    @property
    def created_date(self):
        """Gets the created_date of this HgFluid.


        :return: The created_date of this HgFluid.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this HgFluid.


        :param created_date: The created_date of this HgFluid.
        :type created_date: datetime
        """

        self._created_date = created_date
