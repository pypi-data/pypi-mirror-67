# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget SGEXT::histo SGEXT::SGCore SGEXT::SGExtract SGEXT::SGAnalyze SGEXT::SGLocate SGEXT::SGCompare SGEXT::SGGenerate SGEXT::SGDynamics)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target SGEXT::histo
add_library(SGEXT::histo INTERFACE IMPORTED)

set_target_properties(SGEXT::histo PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/sgext"
)

# Create imported target SGEXT::SGCore
add_library(SGEXT::SGCore STATIC IMPORTED)

set_target_properties(SGEXT::SGCore PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "Boost::graph;Boost::serialization;SGEXT::histo"
)

# Create imported target SGEXT::SGExtract
add_library(SGEXT::SGExtract STATIC IMPORTED)

set_target_properties(SGEXT::SGExtract PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "SGEXT::SGCore"
)

# Create imported target SGEXT::SGAnalyze
add_library(SGEXT::SGAnalyze STATIC IMPORTED)

set_target_properties(SGEXT::SGAnalyze PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "SGEXT::SGCore"
)

# Create imported target SGEXT::SGLocate
add_library(SGEXT::SGLocate STATIC IMPORTED)

set_target_properties(SGEXT::SGLocate PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;/work/VTK-build/Charts/Core;/work/VTK-src/Charts/Core;/work/VTK-build/Common/Color;/work/VTK-src/Common/Color;/work/VTK-build/Common/Core;/work/VTK-src/Common/Core;/work/VTK-build/Utilities/KWIML;/work/VTK-src/Utilities/KWIML;/work/VTK-build/Utilities/KWSys;/work/VTK-src/Utilities/KWSys;/work/VTK-build/ThirdParty/utf8;/work/VTK-src/ThirdParty/utf8;/work/VTK-build/Common/DataModel;/work/VTK-src/Common/DataModel;/work/VTK-build/Common/Math;/work/VTK-src/Common/Math;/work/VTK-build/Common/Misc;/work/VTK-src/Common/Misc;/work/VTK-build/Common/System;/work/VTK-src/Common/System;/work/VTK-build/Common/Transforms;/work/VTK-src/Common/Transforms;/work/VTK-build/Common/ExecutionModel;/work/VTK-src/Common/ExecutionModel;/work/VTK-build/Filters/General;/work/VTK-src/Filters/General;/work/VTK-build/Common/ComputationalGeometry;/work/VTK-src/Common/ComputationalGeometry;/work/VTK-build/Filters/Core;/work/VTK-src/Filters/Core;/work/VTK-build/Infovis/Core;/work/VTK-src/Infovis/Core;/work/VTK-build/Filters/Extraction;/work/VTK-src/Filters/Extraction;/work/VTK-build/Filters/Statistics;/work/VTK-src/Filters/Statistics;/work/VTK-build/Imaging/Fourier;/work/VTK-src/Imaging/Fourier;/work/VTK-build/Imaging/Core;/work/VTK-src/Imaging/Core;/work/VTK-build/ThirdParty/eigen;/work/VTK-src/ThirdParty/eigen;/work/VTK-build/Rendering/Context2D;/work/VTK-src/Rendering/Context2D;/work/VTK-build/Rendering/Core;/work/VTK-src/Rendering/Core;/work/VTK-build/Filters/Geometry;/work/VTK-src/Filters/Geometry;/work/VTK-build/Filters/Sources;/work/VTK-src/Filters/Sources;/work/VTK-build/Rendering/FreeType;/work/VTK-src/Rendering/FreeType;/work/VTK-build/ThirdParty/freetype;/work/VTK-src/ThirdParty/freetype;/work/VTK-build/ThirdParty/zlib;/work/VTK-src/ThirdParty/zlib;/work/VTK-build/Views/Infovis;/work/VTK-src/Views/Infovis;/work/VTK-build/Filters/Imaging;/work/VTK-src/Filters/Imaging;/work/VTK-build/Imaging/General;/work/VTK-src/Imaging/General;/work/VTK-build/Imaging/Sources;/work/VTK-src/Imaging/Sources;/work/VTK-build/Filters/Modeling;/work/VTK-src/Filters/Modeling;/work/VTK-build/Infovis/Layout;/work/VTK-src/Infovis/Layout;/work/VTK-build/Imaging/Hybrid;/work/VTK-src/Imaging/Hybrid;/work/VTK-build/IO/Image;/work/VTK-src/IO/Image;/work/VTK-build/Utilities/DICOMParser;/work/VTK-src/Utilities/DICOMParser;/work/VTK-build/Utilities/MetaIO/vtkmetaio;/work/VTK-build/Utilities/MetaIO;/work/VTK-src/Utilities/MetaIO;/work/VTK-build/ThirdParty/jpeg/vtkjpeg;/work/VTK-build/ThirdParty/jpeg;/work/VTK-src/ThirdParty/jpeg;/work/VTK-build/ThirdParty/png;/work/VTK-src/ThirdParty/png;/work/VTK-build/ThirdParty/tiff/vtktiff/libtiff;/work/VTK-build/ThirdParty/tiff;/work/VTK-src/ThirdParty/tiff;/work/VTK-build/Interaction/Style;/work/VTK-src/Interaction/Style;/work/VTK-build/Interaction/Widgets;/work/VTK-src/Interaction/Widgets;/work/VTK-build/Filters/Hybrid;/work/VTK-src/Filters/Hybrid;/work/VTK-build/Imaging/Color;/work/VTK-src/Imaging/Color;/work/VTK-build/Rendering/Annotation;/work/VTK-src/Rendering/Annotation;/work/VTK-build/Rendering/Volume;/work/VTK-src/Rendering/Volume;/work/VTK-build/IO/XML;/work/VTK-src/IO/XML;/work/VTK-build/IO/Core;/work/VTK-src/IO/Core;/work/VTK-src/ThirdParty/doubleconversion/vtkdoubleconversion;/work/VTK-build/ThirdParty/doubleconversion/vtkdoubleconversion;/work/VTK-build/ThirdParty/doubleconversion;/work/VTK-src/ThirdParty/doubleconversion;/work/VTK-src/ThirdParty/lz4/vtklz4/lib;/work/VTK-build/ThirdParty/lz4/vtklz4;/work/VTK-build/ThirdParty/lz4;/work/VTK-src/ThirdParty/lz4;/work/VTK-build/ThirdParty/lzma;/work/VTK-src/ThirdParty/lzma;/work/VTK-build/IO/XMLParser;/work/VTK-src/IO/XMLParser;/work/VTK-build/ThirdParty/expat;/work/VTK-src/ThirdParty/expat;/work/VTK-build/Rendering/Label;/work/VTK-src/Rendering/Label;/work/VTK-build/Views/Core;/work/VTK-src/Views/Core;/work/VTK-build/Rendering/OpenGL2;/work/VTK-src/Rendering/OpenGL2;/work/VTK-build/ThirdParty/glew;/work/VTK-src/ThirdParty/glew"
  INTERFACE_LINK_LIBRARIES "SGEXT::SGCore;vtkChartsCore;vtkCommonColor;vtkCommonCore;vtksys;vtkCommonDataModel;vtkCommonMath;vtkCommonMisc;vtkCommonSystem;vtkCommonTransforms;vtkCommonExecutionModel;vtkFiltersGeneral;vtkCommonComputationalGeometry;vtkFiltersCore;vtkInfovisCore;vtkFiltersExtraction;vtkFiltersStatistics;vtkImagingFourier;vtkImagingCore;vtkRenderingContext2D;vtkRenderingCore;vtkFiltersGeometry;vtkFiltersSources;vtkRenderingFreeType;vtkfreetype;vtkzlib;vtkViewsInfovis;vtkFiltersImaging;vtkImagingGeneral;vtkImagingSources;vtkFiltersModeling;vtkInfovisLayout;vtkImagingHybrid;vtkIOImage;vtkDICOMParser;vtkmetaio;vtkjpeg;vtkpng;vtktiff;vtkInteractionStyle;vtkInteractionWidgets;vtkFiltersHybrid;vtkImagingColor;vtkRenderingAnnotation;vtkRenderingVolume;vtkIOXML;vtkIOCore;vtkdoubleconversion;vtklz4;vtklzma;vtkIOXMLParser;vtkexpat;vtkRenderingLabel;vtkViewsCore;vtkRenderingOpenGL2;vtkglew"
)

# Create imported target SGEXT::SGCompare
add_library(SGEXT::SGCompare STATIC IMPORTED)

set_target_properties(SGEXT::SGCompare PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "SGEXT::SGCore;SGEXT::SGLocate"
)

# Create imported target SGEXT::SGGenerate
add_library(SGEXT::SGGenerate STATIC IMPORTED)

set_target_properties(SGEXT::SGGenerate PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "SGEXT::SGCore;PERM::PERMCore;SGEXT::histo"
)

# Create imported target SGEXT::SGDynamics
add_library(SGEXT::SGDynamics STATIC IMPORTED)

set_target_properties(SGEXT::SGDynamics PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "SG_USING_VTK"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "SGEXT::SGCore;vtkChartsCore;vtkCommonColor;vtkCommonCore;vtksys;vtkCommonDataModel;vtkCommonMath;vtkCommonMisc;vtkCommonSystem;vtkCommonTransforms;vtkCommonExecutionModel;vtkFiltersGeneral;vtkCommonComputationalGeometry;vtkFiltersCore;vtkInfovisCore;vtkFiltersExtraction;vtkFiltersStatistics;vtkImagingFourier;vtkImagingCore;vtkRenderingContext2D;vtkRenderingCore;vtkFiltersGeometry;vtkFiltersSources;vtkRenderingFreeType;vtkfreetype;vtkzlib;vtkViewsInfovis;vtkFiltersImaging;vtkImagingGeneral;vtkImagingSources;vtkFiltersModeling;vtkInfovisLayout;vtkImagingHybrid;vtkIOImage;vtkDICOMParser;vtkmetaio;vtkjpeg;vtkpng;vtktiff;vtkInteractionStyle;vtkInteractionWidgets;vtkFiltersHybrid;vtkImagingColor;vtkRenderingAnnotation;vtkRenderingVolume;vtkIOXML;vtkIOCore;vtkdoubleconversion;vtklz4;vtklzma;vtkIOXMLParser;vtkexpat;vtkRenderingLabel;vtkViewsCore;vtkRenderingOpenGL2;vtkglew"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/SGEXTTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# Make sure the targets which have been exported in some other 
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "PERM::PERMCore" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
