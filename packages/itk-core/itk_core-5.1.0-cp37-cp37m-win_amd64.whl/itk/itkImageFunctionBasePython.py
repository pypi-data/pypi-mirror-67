# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageFunctionBasePython
else:
    import _itkImageFunctionBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageFunctionBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageFunctionBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itkRGBPixelPython
import itkFixedArrayPython
import pyBasePython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkRGBAPixelPython
import itkImagePython
import ITKCommonBasePython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkContinuousIndexPython
import itkFunctionBasePython
import itkArrayPython

def itkImageFunctionIRGBAUC3RGBADD_New():
  return itkImageFunctionIRGBAUC3RGBADD.New()


def itkImageFunctionIRGBUC3RGBDD_New():
  return itkImageFunctionIRGBUC3RGBDD.New()


def itkImageFunctionIRGBAUC3RGBAUCD_New():
  return itkImageFunctionIRGBAUC3RGBAUCD.New()


def itkImageFunctionIRGBUC3RGBUCD_New():
  return itkImageFunctionIRGBUC3RGBUCD.New()


def itkImageFunctionICVF33DD_New():
  return itkImageFunctionICVF33DD.New()


def itkImageFunctionICVF33CVD3D_New():
  return itkImageFunctionICVF33CVD3D.New()


def itkImageFunctionICVF33VD3D_New():
  return itkImageFunctionICVF33VD3D.New()


def itkImageFunctionIVF33DD_New():
  return itkImageFunctionIVF33DD.New()


def itkImageFunctionIVF33CVD3D_New():
  return itkImageFunctionIVF33CVD3D.New()


def itkImageFunctionIVF33VD3D_New():
  return itkImageFunctionIVF33VD3D.New()


def itkImageFunctionID3DD_New():
  return itkImageFunctionID3DD.New()


def itkImageFunctionID3DF_New():
  return itkImageFunctionID3DF.New()


def itkImageFunctionIF3DD_New():
  return itkImageFunctionIF3DD.New()


def itkImageFunctionIF3DF_New():
  return itkImageFunctionIF3DF.New()


def itkImageFunctionIUS3DD_New():
  return itkImageFunctionIUS3DD.New()


def itkImageFunctionIUS3DF_New():
  return itkImageFunctionIUS3DF.New()


def itkImageFunctionIUC3DD_New():
  return itkImageFunctionIUC3DD.New()


def itkImageFunctionIUC3DF_New():
  return itkImageFunctionIUC3DF.New()


def itkImageFunctionISS3DD_New():
  return itkImageFunctionISS3DD.New()


def itkImageFunctionISS3DF_New():
  return itkImageFunctionISS3DF.New()


def itkImageFunctionIRGBAUC2RGBADD_New():
  return itkImageFunctionIRGBAUC2RGBADD.New()


def itkImageFunctionIRGBUC2RGBDD_New():
  return itkImageFunctionIRGBUC2RGBDD.New()


def itkImageFunctionIRGBAUC2RGBAUCD_New():
  return itkImageFunctionIRGBAUC2RGBAUCD.New()


def itkImageFunctionIRGBUC2RGBUCD_New():
  return itkImageFunctionIRGBUC2RGBUCD.New()


def itkImageFunctionICVF22DD_New():
  return itkImageFunctionICVF22DD.New()


def itkImageFunctionICVF22CVD2D_New():
  return itkImageFunctionICVF22CVD2D.New()


def itkImageFunctionICVF22VD2D_New():
  return itkImageFunctionICVF22VD2D.New()


def itkImageFunctionIVF22DD_New():
  return itkImageFunctionIVF22DD.New()


def itkImageFunctionIVF22CVD2D_New():
  return itkImageFunctionIVF22CVD2D.New()


def itkImageFunctionIVF22VD2D_New():
  return itkImageFunctionIVF22VD2D.New()


def itkImageFunctionID2DD_New():
  return itkImageFunctionID2DD.New()


def itkImageFunctionID2DF_New():
  return itkImageFunctionID2DF.New()


def itkImageFunctionIF2DD_New():
  return itkImageFunctionIF2DD.New()


def itkImageFunctionIF2DF_New():
  return itkImageFunctionIF2DF.New()


def itkImageFunctionIUS2DD_New():
  return itkImageFunctionIUS2DD.New()


def itkImageFunctionIUS2DF_New():
  return itkImageFunctionIUS2DF.New()


def itkImageFunctionIUC2DD_New():
  return itkImageFunctionIUC2DD.New()


def itkImageFunctionIUC2DF_New():
  return itkImageFunctionIUC2DF.New()


def itkImageFunctionISS2DD_New():
  return itkImageFunctionISS2DD.New()


def itkImageFunctionISS2DF_New():
  return itkImageFunctionISS2DF.New()

class itkImageFunctionICVF22CVD2D(itkFunctionBasePython.itkFunctionBasePD2CVD2):
    r"""Proxy of C++ itkImageFunctionICVF22CVD2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF22CVD2D
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF22CVD2D

        Create a new object of the class itkImageFunctionICVF22CVD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF22CVD2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF22CVD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF22CVD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionICVF22CVD2D in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_swigregister(itkImageFunctionICVF22CVD2D)
itkImageFunctionICVF22CVD2D_cast = _itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D_cast

class itkImageFunctionICVF22DD(itkFunctionBasePython.itkFunctionBasePD2D):
    r"""Proxy of C++ itkImageFunctionICVF22DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF22DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionICVF22DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF22DD

        Create a new object of the class itkImageFunctionICVF22DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF22DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF22DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF22DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionICVF22DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionICVF22DD_swigregister(itkImageFunctionICVF22DD)
itkImageFunctionICVF22DD_cast = _itkImageFunctionBasePython.itkImageFunctionICVF22DD_cast

class itkImageFunctionICVF22VD2D(itkFunctionBasePython.itkFunctionBasePD2VD2):
    r"""Proxy of C++ itkImageFunctionICVF22VD2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF22VD2D
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF22VD2D

        Create a new object of the class itkImageFunctionICVF22VD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF22VD2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF22VD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF22VD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionICVF22VD2D in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_swigregister(itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D_cast = _itkImageFunctionBasePython.itkImageFunctionICVF22VD2D_cast

class itkImageFunctionICVF33CVD3D(itkFunctionBasePython.itkFunctionBasePD3CVD3):
    r"""Proxy of C++ itkImageFunctionICVF33CVD3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF33CVD3D
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF33CVD3D

        Create a new object of the class itkImageFunctionICVF33CVD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF33CVD3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF33CVD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF33CVD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionICVF33CVD3D in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_swigregister(itkImageFunctionICVF33CVD3D)
itkImageFunctionICVF33CVD3D_cast = _itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D_cast

class itkImageFunctionICVF33DD(itkFunctionBasePython.itkFunctionBasePD3D):
    r"""Proxy of C++ itkImageFunctionICVF33DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF33DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionICVF33DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF33DD

        Create a new object of the class itkImageFunctionICVF33DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF33DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF33DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF33DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionICVF33DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionICVF33DD_swigregister(itkImageFunctionICVF33DD)
itkImageFunctionICVF33DD_cast = _itkImageFunctionBasePython.itkImageFunctionICVF33DD_cast

class itkImageFunctionICVF33VD3D(itkFunctionBasePython.itkFunctionBasePD3VD3):
    r"""Proxy of C++ itkImageFunctionICVF33VD3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionICVF33VD3D
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF33VD3D

        Create a new object of the class itkImageFunctionICVF33VD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionICVF33VD3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionICVF33VD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF33VD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionICVF33VD3D in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_swigregister(itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D_cast = _itkImageFunctionBasePython.itkImageFunctionICVF33VD3D_cast

class itkImageFunctionID2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    r"""Proxy of C++ itkImageFunctionID2DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionID2DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionID2DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionID2DD

        Create a new object of the class itkImageFunctionID2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionID2DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionID2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionID2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionID2DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionID2DD_swigregister(itkImageFunctionID2DD)
itkImageFunctionID2DD_cast = _itkImageFunctionBasePython.itkImageFunctionID2DD_cast

class itkImageFunctionID2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    r"""Proxy of C++ itkImageFunctionID2DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionID2DF
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionID2DF_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionID2DF

        Create a new object of the class itkImageFunctionID2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionID2DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionID2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionID2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionID2DF in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionID2DF_swigregister(itkImageFunctionID2DF)
itkImageFunctionID2DF_cast = _itkImageFunctionBasePython.itkImageFunctionID2DF_cast

class itkImageFunctionID3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    r"""Proxy of C++ itkImageFunctionID3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionID3DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionID3DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionID3DD

        Create a new object of the class itkImageFunctionID3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionID3DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionID3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionID3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionID3DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionID3DD_swigregister(itkImageFunctionID3DD)
itkImageFunctionID3DD_cast = _itkImageFunctionBasePython.itkImageFunctionID3DD_cast

class itkImageFunctionID3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    r"""Proxy of C++ itkImageFunctionID3DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionID3DF
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionID3DF_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionID3DF

        Create a new object of the class itkImageFunctionID3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionID3DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionID3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionID3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionID3DF in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionID3DF_swigregister(itkImageFunctionID3DF)
itkImageFunctionID3DF_cast = _itkImageFunctionBasePython.itkImageFunctionID3DF_cast

class itkImageFunctionIF2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    r"""Proxy of C++ itkImageFunctionIF2DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIF2DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIF2DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF2DD

        Create a new object of the class itkImageFunctionIF2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIF2DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIF2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIF2DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIF2DD_swigregister(itkImageFunctionIF2DD)
itkImageFunctionIF2DD_cast = _itkImageFunctionBasePython.itkImageFunctionIF2DD_cast

class itkImageFunctionIF2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    r"""Proxy of C++ itkImageFunctionIF2DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIF2DF
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIF2DF_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF2DF

        Create a new object of the class itkImageFunctionIF2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIF2DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIF2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIF2DF in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIF2DF_swigregister(itkImageFunctionIF2DF)
itkImageFunctionIF2DF_cast = _itkImageFunctionBasePython.itkImageFunctionIF2DF_cast

class itkImageFunctionIF3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    r"""Proxy of C++ itkImageFunctionIF3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIF3DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIF3DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF3DD

        Create a new object of the class itkImageFunctionIF3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIF3DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIF3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIF3DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIF3DD_swigregister(itkImageFunctionIF3DD)
itkImageFunctionIF3DD_cast = _itkImageFunctionBasePython.itkImageFunctionIF3DD_cast

class itkImageFunctionIF3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    r"""Proxy of C++ itkImageFunctionIF3DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIF3DF
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIF3DF_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF3DF

        Create a new object of the class itkImageFunctionIF3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIF3DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIF3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIF3DF in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIF3DF_swigregister(itkImageFunctionIF3DF)
itkImageFunctionIF3DF_cast = _itkImageFunctionBasePython.itkImageFunctionIF3DF_cast

class itkImageFunctionIRGBAUC2RGBADD(itkFunctionBasePython.itkFunctionBasePD2RGBAD):
    r"""Proxy of C++ itkImageFunctionIRGBAUC2RGBADD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBAUC2RGBADD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBAUC2RGBADD

        Create a new object of the class itkImageFunctionIRGBAUC2RGBADD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBAUC2RGBADD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBAUC2RGBADD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBAUC2RGBADD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIRGBAUC2RGBADD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_swigregister(itkImageFunctionIRGBAUC2RGBADD)
itkImageFunctionIRGBAUC2RGBADD_cast = _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD_cast

class itkImageFunctionIRGBAUC2RGBAUCD(itkFunctionBasePython.itkFunctionBasePD2RGBAUC):
    r"""Proxy of C++ itkImageFunctionIRGBAUC2RGBAUCD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBAUC2RGBAUCD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBAUC2RGBAUCD

        Create a new object of the class itkImageFunctionIRGBAUC2RGBAUCD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBAUC2RGBAUCD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBAUC2RGBAUCD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBAUC2RGBAUCD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIRGBAUC2RGBAUCD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_swigregister(itkImageFunctionIRGBAUC2RGBAUCD)
itkImageFunctionIRGBAUC2RGBAUCD_cast = _itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBAUCD_cast

class itkImageFunctionIRGBAUC3RGBADD(itkFunctionBasePython.itkFunctionBasePD3RGBAD):
    r"""Proxy of C++ itkImageFunctionIRGBAUC3RGBADD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBAUC3RGBADD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBAUC3RGBADD

        Create a new object of the class itkImageFunctionIRGBAUC3RGBADD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBAUC3RGBADD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBAUC3RGBADD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBAUC3RGBADD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIRGBAUC3RGBADD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_swigregister(itkImageFunctionIRGBAUC3RGBADD)
itkImageFunctionIRGBAUC3RGBADD_cast = _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD_cast

class itkImageFunctionIRGBAUC3RGBAUCD(itkFunctionBasePython.itkFunctionBasePD3RGBAUC):
    r"""Proxy of C++ itkImageFunctionIRGBAUC3RGBAUCD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBAUC3RGBAUCD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBAUC3RGBAUCD

        Create a new object of the class itkImageFunctionIRGBAUC3RGBAUCD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBAUC3RGBAUCD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBAUC3RGBAUCD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBAUC3RGBAUCD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIRGBAUC3RGBAUCD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_swigregister(itkImageFunctionIRGBAUC3RGBAUCD)
itkImageFunctionIRGBAUC3RGBAUCD_cast = _itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBAUCD_cast

class itkImageFunctionIRGBUC2RGBDD(itkFunctionBasePython.itkFunctionBasePD2RGBD):
    r"""Proxy of C++ itkImageFunctionIRGBUC2RGBDD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBUC2RGBDD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBUC2RGBDD

        Create a new object of the class itkImageFunctionIRGBUC2RGBDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBUC2RGBDD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBUC2RGBDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBUC2RGBDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIRGBUC2RGBDD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_swigregister(itkImageFunctionIRGBUC2RGBDD)
itkImageFunctionIRGBUC2RGBDD_cast = _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD_cast

class itkImageFunctionIRGBUC2RGBUCD(itkFunctionBasePython.itkFunctionBasePD2RGBUC):
    r"""Proxy of C++ itkImageFunctionIRGBUC2RGBUCD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBUC2RGBUCD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBUC2RGBUCD

        Create a new object of the class itkImageFunctionIRGBUC2RGBUCD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBUC2RGBUCD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBUC2RGBUCD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBUC2RGBUCD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIRGBUC2RGBUCD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_swigregister(itkImageFunctionIRGBUC2RGBUCD)
itkImageFunctionIRGBUC2RGBUCD_cast = _itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBUCD_cast

class itkImageFunctionIRGBUC3RGBDD(itkFunctionBasePython.itkFunctionBasePD3RGBD):
    r"""Proxy of C++ itkImageFunctionIRGBUC3RGBDD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBUC3RGBDD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBUC3RGBDD

        Create a new object of the class itkImageFunctionIRGBUC3RGBDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBUC3RGBDD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBUC3RGBDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBUC3RGBDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIRGBUC3RGBDD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_swigregister(itkImageFunctionIRGBUC3RGBDD)
itkImageFunctionIRGBUC3RGBDD_cast = _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD_cast

class itkImageFunctionIRGBUC3RGBUCD(itkFunctionBasePython.itkFunctionBasePD3RGBUC):
    r"""Proxy of C++ itkImageFunctionIRGBUC3RGBUCD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIRGBUC3RGBUCD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIRGBUC3RGBUCD

        Create a new object of the class itkImageFunctionIRGBUC3RGBUCD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIRGBUC3RGBUCD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIRGBUC3RGBUCD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIRGBUC3RGBUCD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIRGBUC3RGBUCD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_swigregister(itkImageFunctionIRGBUC3RGBUCD)
itkImageFunctionIRGBUC3RGBUCD_cast = _itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBUCD_cast

class itkImageFunctionISS2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    r"""Proxy of C++ itkImageFunctionISS2DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionISS2DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionISS2DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionISS2DD

        Create a new object of the class itkImageFunctionISS2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionISS2DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionISS2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionISS2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionISS2DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionISS2DD_swigregister(itkImageFunctionISS2DD)
itkImageFunctionISS2DD_cast = _itkImageFunctionBasePython.itkImageFunctionISS2DD_cast

class itkImageFunctionISS2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    r"""Proxy of C++ itkImageFunctionISS2DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionISS2DF
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionISS2DF_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionISS2DF

        Create a new object of the class itkImageFunctionISS2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionISS2DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionISS2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionISS2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionISS2DF in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionISS2DF_swigregister(itkImageFunctionISS2DF)
itkImageFunctionISS2DF_cast = _itkImageFunctionBasePython.itkImageFunctionISS2DF_cast

class itkImageFunctionISS3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    r"""Proxy of C++ itkImageFunctionISS3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionISS3DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionISS3DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionISS3DD

        Create a new object of the class itkImageFunctionISS3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionISS3DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionISS3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionISS3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionISS3DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionISS3DD_swigregister(itkImageFunctionISS3DD)
itkImageFunctionISS3DD_cast = _itkImageFunctionBasePython.itkImageFunctionISS3DD_cast

class itkImageFunctionISS3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    r"""Proxy of C++ itkImageFunctionISS3DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionISS3DF
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionISS3DF_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionISS3DF

        Create a new object of the class itkImageFunctionISS3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionISS3DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionISS3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionISS3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionISS3DF in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionISS3DF_swigregister(itkImageFunctionISS3DF)
itkImageFunctionISS3DF_cast = _itkImageFunctionBasePython.itkImageFunctionISS3DF_cast

class itkImageFunctionIUC2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    r"""Proxy of C++ itkImageFunctionIUC2DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUC2DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC2DD

        Create a new object of the class itkImageFunctionIUC2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUC2DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUC2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIUC2DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIUC2DD_swigregister(itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD_cast = _itkImageFunctionBasePython.itkImageFunctionIUC2DD_cast

class itkImageFunctionIUC2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    r"""Proxy of C++ itkImageFunctionIUC2DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUC2DF
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIUC2DF_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC2DF

        Create a new object of the class itkImageFunctionIUC2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUC2DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUC2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIUC2DF in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIUC2DF_swigregister(itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF_cast = _itkImageFunctionBasePython.itkImageFunctionIUC2DF_cast

class itkImageFunctionIUC3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    r"""Proxy of C++ itkImageFunctionIUC3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUC3DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC3DD

        Create a new object of the class itkImageFunctionIUC3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUC3DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUC3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIUC3DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIUC3DD_swigregister(itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD_cast = _itkImageFunctionBasePython.itkImageFunctionIUC3DD_cast

class itkImageFunctionIUC3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    r"""Proxy of C++ itkImageFunctionIUC3DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUC3DF
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIUC3DF_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC3DF

        Create a new object of the class itkImageFunctionIUC3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUC3DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUC3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIUC3DF in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIUC3DF_swigregister(itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF_cast = _itkImageFunctionBasePython.itkImageFunctionIUC3DF_cast

class itkImageFunctionIUS2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    r"""Proxy of C++ itkImageFunctionIUS2DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUS2DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS2DD

        Create a new object of the class itkImageFunctionIUS2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUS2DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUS2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIUS2DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIUS2DD_swigregister(itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD_cast = _itkImageFunctionBasePython.itkImageFunctionIUS2DD_cast

class itkImageFunctionIUS2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    r"""Proxy of C++ itkImageFunctionIUS2DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUS2DF
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIUS2DF_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS2DF

        Create a new object of the class itkImageFunctionIUS2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUS2DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUS2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIUS2DF in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIUS2DF_swigregister(itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF_cast = _itkImageFunctionBasePython.itkImageFunctionIUS2DF_cast

class itkImageFunctionIUS3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    r"""Proxy of C++ itkImageFunctionIUS3DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUS3DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS3DD

        Create a new object of the class itkImageFunctionIUS3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUS3DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUS3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIUS3DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIUS3DD_swigregister(itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD_cast = _itkImageFunctionBasePython.itkImageFunctionIUS3DD_cast

class itkImageFunctionIUS3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    r"""Proxy of C++ itkImageFunctionIUS3DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIUS3DF
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIUS3DF_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS3DF

        Create a new object of the class itkImageFunctionIUS3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIUS3DF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIUS3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIUS3DF in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIUS3DF_swigregister(itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF_cast = _itkImageFunctionBasePython.itkImageFunctionIUS3DF_cast

class itkImageFunctionIVF22CVD2D(itkFunctionBasePython.itkFunctionBasePD2CVD2):
    r"""Proxy of C++ itkImageFunctionIVF22CVD2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF22CVD2D
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF22CVD2D

        Create a new object of the class itkImageFunctionIVF22CVD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF22CVD2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF22CVD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF22CVD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIVF22CVD2D in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_swigregister(itkImageFunctionIVF22CVD2D)
itkImageFunctionIVF22CVD2D_cast = _itkImageFunctionBasePython.itkImageFunctionIVF22CVD2D_cast

class itkImageFunctionIVF22DD(itkFunctionBasePython.itkFunctionBasePD2D):
    r"""Proxy of C++ itkImageFunctionIVF22DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF22DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIVF22DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF22DD

        Create a new object of the class itkImageFunctionIVF22DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF22DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF22DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF22DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIVF22DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIVF22DD_swigregister(itkImageFunctionIVF22DD)
itkImageFunctionIVF22DD_cast = _itkImageFunctionBasePython.itkImageFunctionIVF22DD_cast

class itkImageFunctionIVF22VD2D(itkFunctionBasePython.itkFunctionBasePD2VD2):
    r"""Proxy of C++ itkImageFunctionIVF22VD2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF22VD2D
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF22VD2D

        Create a new object of the class itkImageFunctionIVF22VD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF22VD2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF22VD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF22VD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIVF22VD2D in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_swigregister(itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D_cast = _itkImageFunctionBasePython.itkImageFunctionIVF22VD2D_cast

class itkImageFunctionIVF33CVD3D(itkFunctionBasePython.itkFunctionBasePD3CVD3):
    r"""Proxy of C++ itkImageFunctionIVF33CVD3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF33CVD3D
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF33CVD3D

        Create a new object of the class itkImageFunctionIVF33CVD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF33CVD3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF33CVD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF33CVD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIVF33CVD3D in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_swigregister(itkImageFunctionIVF33CVD3D)
itkImageFunctionIVF33CVD3D_cast = _itkImageFunctionBasePython.itkImageFunctionIVF33CVD3D_cast

class itkImageFunctionIVF33DD(itkFunctionBasePython.itkFunctionBasePD3D):
    r"""Proxy of C++ itkImageFunctionIVF33DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF33DD
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIVF33DD_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF33DD

        Create a new object of the class itkImageFunctionIVF33DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF33DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF33DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF33DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIVF33DD in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIVF33DD_swigregister(itkImageFunctionIVF33DD)
itkImageFunctionIVF33DD_cast = _itkImageFunctionBasePython.itkImageFunctionIVF33DD_cast

class itkImageFunctionIVF33VD3D(itkFunctionBasePython.itkFunctionBasePD3VD3):
    r"""Proxy of C++ itkImageFunctionIVF33VD3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_SetInputImage)
    GetInputImage = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetInputImage)
    EvaluateAtIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_EvaluateAtIndex)
    EvaluateAtContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_EvaluateAtContinuousIndex)
    IsInsideBuffer = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_IsInsideBuffer)
    ConvertPointToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_ConvertPointToNearestIndex)
    ConvertPointToContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_ConvertPointToContinuousIndex)
    ConvertContinuousIndexToNearestIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_ConvertContinuousIndexToNearestIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetStartIndex)
    GetEndIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetEndIndex)
    GetStartContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetStartContinuousIndex)
    GetEndContinuousIndex = _swig_new_instance_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_GetEndContinuousIndex)
    __swig_destroy__ = _itkImageFunctionBasePython.delete_itkImageFunctionIVF33VD3D
    cast = _swig_new_static_method(_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_cast)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF33VD3D

        Create a new object of the class itkImageFunctionIVF33VD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFunctionIVF33VD3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageFunctionIVF33VD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF33VD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFunctionIVF33VD3D in _itkImageFunctionBasePython:
_itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_swigregister(itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D_cast = _itkImageFunctionBasePython.itkImageFunctionIVF33VD3D_cast



