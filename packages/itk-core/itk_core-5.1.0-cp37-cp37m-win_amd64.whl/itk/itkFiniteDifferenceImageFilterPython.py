# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFiniteDifferenceImageFilterPython
else:
    import _itkFiniteDifferenceImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkFiniteDifferenceImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkFiniteDifferenceImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import ITKCommonBasePython
import pyBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import stdcomplexPython
import itkVectorPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkOffsetPython
import itkSizePython
import itkCovariantVectorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterBPython
import itkFiniteDifferenceFunctionPython

def itkFiniteDifferenceImageFilterICVF43ICVF43_New():
  return itkFiniteDifferenceImageFilterICVF43ICVF43.New()


def itkFiniteDifferenceImageFilterICVF42ICVF42_New():
  return itkFiniteDifferenceImageFilterICVF42ICVF42.New()


def itkFiniteDifferenceImageFilterICVF33ICVF33_New():
  return itkFiniteDifferenceImageFilterICVF33ICVF33.New()


def itkFiniteDifferenceImageFilterICVF32ICVF32_New():
  return itkFiniteDifferenceImageFilterICVF32ICVF32.New()


def itkFiniteDifferenceImageFilterICVF23ICVF23_New():
  return itkFiniteDifferenceImageFilterICVF23ICVF23.New()


def itkFiniteDifferenceImageFilterICVF22ICVF22_New():
  return itkFiniteDifferenceImageFilterICVF22ICVF22.New()


def itkFiniteDifferenceImageFilterIVF43IVF43_New():
  return itkFiniteDifferenceImageFilterIVF43IVF43.New()


def itkFiniteDifferenceImageFilterIVF42IVF42_New():
  return itkFiniteDifferenceImageFilterIVF42IVF42.New()


def itkFiniteDifferenceImageFilterIVF33IVF33_New():
  return itkFiniteDifferenceImageFilterIVF33IVF33.New()


def itkFiniteDifferenceImageFilterIVF32IVF32_New():
  return itkFiniteDifferenceImageFilterIVF32IVF32.New()


def itkFiniteDifferenceImageFilterIVF23IVF23_New():
  return itkFiniteDifferenceImageFilterIVF23IVF23.New()


def itkFiniteDifferenceImageFilterIVF22IVF22_New():
  return itkFiniteDifferenceImageFilterIVF22IVF22.New()


def itkFiniteDifferenceImageFilterID3ID3_New():
  return itkFiniteDifferenceImageFilterID3ID3.New()


def itkFiniteDifferenceImageFilterID2ID2_New():
  return itkFiniteDifferenceImageFilterID2ID2.New()


def itkFiniteDifferenceImageFilterIF3IF3_New():
  return itkFiniteDifferenceImageFilterIF3IF3.New()


def itkFiniteDifferenceImageFilterIF2IF2_New():
  return itkFiniteDifferenceImageFilterIF2IF2.New()

class itkFiniteDifferenceImageFilterICVF22ICVF22(itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterICVF22ICVF22
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterICVF22ICVF22

        Create a new object of the class itkFiniteDifferenceImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterICVF22ICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterICVF22ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterICVF22ICVF22 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_swigregister(itkFiniteDifferenceImageFilterICVF22ICVF22)
itkFiniteDifferenceImageFilterICVF22ICVF22_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF22ICVF22_cast

class itkFiniteDifferenceImageFilterICVF23ICVF23(itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterICVF23ICVF23
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterICVF23ICVF23

        Create a new object of the class itkFiniteDifferenceImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterICVF23ICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterICVF23ICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterICVF23ICVF23 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_swigregister(itkFiniteDifferenceImageFilterICVF23ICVF23)
itkFiniteDifferenceImageFilterICVF23ICVF23_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF23ICVF23_cast

class itkFiniteDifferenceImageFilterICVF32ICVF32(itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterICVF32ICVF32
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterICVF32ICVF32

        Create a new object of the class itkFiniteDifferenceImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterICVF32ICVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterICVF32ICVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterICVF32ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterICVF32ICVF32 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_swigregister(itkFiniteDifferenceImageFilterICVF32ICVF32)
itkFiniteDifferenceImageFilterICVF32ICVF32_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF32ICVF32_cast

class itkFiniteDifferenceImageFilterICVF33ICVF33(itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterICVF33ICVF33
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterICVF33ICVF33

        Create a new object of the class itkFiniteDifferenceImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterICVF33ICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterICVF33ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterICVF33ICVF33 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_swigregister(itkFiniteDifferenceImageFilterICVF33ICVF33)
itkFiniteDifferenceImageFilterICVF33ICVF33_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF33ICVF33_cast

class itkFiniteDifferenceImageFilterICVF42ICVF42(itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterICVF42ICVF42
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterICVF42ICVF42

        Create a new object of the class itkFiniteDifferenceImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterICVF42ICVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterICVF42ICVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterICVF42ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterICVF42ICVF42 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_swigregister(itkFiniteDifferenceImageFilterICVF42ICVF42)
itkFiniteDifferenceImageFilterICVF42ICVF42_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF42ICVF42_cast

class itkFiniteDifferenceImageFilterICVF43ICVF43(itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterICVF43ICVF43
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterICVF43ICVF43

        Create a new object of the class itkFiniteDifferenceImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterICVF43ICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterICVF43ICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterICVF43ICVF43 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_swigregister(itkFiniteDifferenceImageFilterICVF43ICVF43)
itkFiniteDifferenceImageFilterICVF43ICVF43_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterICVF43ICVF43_cast

class itkFiniteDifferenceImageFilterID2ID2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterID2ID2
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterID2ID2

        Create a new object of the class itkFiniteDifferenceImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterID2ID2 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_swigregister(itkFiniteDifferenceImageFilterID2ID2)
itkFiniteDifferenceImageFilterID2ID2_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2_cast

class itkFiniteDifferenceImageFilterID3ID3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterID3ID3
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterID3ID3

        Create a new object of the class itkFiniteDifferenceImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterID3ID3 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_swigregister(itkFiniteDifferenceImageFilterID3ID3)
itkFiniteDifferenceImageFilterID3ID3_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3_cast

class itkFiniteDifferenceImageFilterIF2IF2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterIF2IF2
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterIF2IF2

        Create a new object of the class itkFiniteDifferenceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterIF2IF2 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_swigregister(itkFiniteDifferenceImageFilterIF2IF2)
itkFiniteDifferenceImageFilterIF2IF2_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2_cast

class itkFiniteDifferenceImageFilterIF3IF3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterIF3IF3
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterIF3IF3

        Create a new object of the class itkFiniteDifferenceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterIF3IF3 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_swigregister(itkFiniteDifferenceImageFilterIF3IF3)
itkFiniteDifferenceImageFilterIF3IF3_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3_cast

class itkFiniteDifferenceImageFilterIVF22IVF22(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterIVF22IVF22
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterIVF22IVF22

        Create a new object of the class itkFiniteDifferenceImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterIVF22IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterIVF22IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterIVF22IVF22 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_swigregister(itkFiniteDifferenceImageFilterIVF22IVF22)
itkFiniteDifferenceImageFilterIVF22IVF22_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF22IVF22_cast

class itkFiniteDifferenceImageFilterIVF23IVF23(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF23IVF23):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterIVF23IVF23

        Create a new object of the class itkFiniteDifferenceImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterIVF23IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterIVF23IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterIVF23IVF23 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_swigregister(itkFiniteDifferenceImageFilterIVF23IVF23)
itkFiniteDifferenceImageFilterIVF23IVF23_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF23IVF23_cast

class itkFiniteDifferenceImageFilterIVF32IVF32(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF32IVF32):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterIVF32IVF32
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterIVF32IVF32

        Create a new object of the class itkFiniteDifferenceImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterIVF32IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterIVF32IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterIVF32IVF32 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_swigregister(itkFiniteDifferenceImageFilterIVF32IVF32)
itkFiniteDifferenceImageFilterIVF32IVF32_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF32IVF32_cast

class itkFiniteDifferenceImageFilterIVF33IVF33(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterIVF33IVF33

        Create a new object of the class itkFiniteDifferenceImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterIVF33IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterIVF33IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterIVF33IVF33 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_swigregister(itkFiniteDifferenceImageFilterIVF33IVF33)
itkFiniteDifferenceImageFilterIVF33IVF33_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF33IVF33_cast

class itkFiniteDifferenceImageFilterIVF42IVF42(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF42IVF42):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterIVF42IVF42
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterIVF42IVF42

        Create a new object of the class itkFiniteDifferenceImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterIVF42IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterIVF42IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterIVF42IVF42 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_swigregister(itkFiniteDifferenceImageFilterIVF42IVF42)
itkFiniteDifferenceImageFilterIVF42IVF42_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF42IVF42_cast

class itkFiniteDifferenceImageFilterIVF43IVF43(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF43IVF43):
    r"""Proxy of C++ itkFiniteDifferenceImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetElapsedIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_GetElapsedIterations)
    GetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_GetDifferenceFunction)
    SetDifferenceFunction = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_SetDifferenceFunction)
    SetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_GetNumberOfIterations)
    SetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_SetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_UseImageSpacingOff)
    GetUseImageSpacing = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_GetUseImageSpacing)
    SetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_SetMaximumRMSError)
    GetMaximumRMSError = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_GetMaximumRMSError)
    SetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_SetRMSChange)
    GetRMSChange = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_GetRMSChange)
    SetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_SetManualReinitialization)
    GetManualReinitialization = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_GetManualReinitialization)
    ManualReinitializationOn = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_ManualReinitializationOn)
    ManualReinitializationOff = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_ManualReinitializationOff)
    SetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_SetIsInitialized)
    GetIsInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_GetIsInitialized)
    SetStateToUninitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_SetStateToUninitialized)
    SetStateToInitialized = _swig_new_instance_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_SetStateToInitialized)
    OutputPixelIsFloatingPointCheck = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_OutputPixelIsFloatingPointCheck
    
    __swig_destroy__ = _itkFiniteDifferenceImageFilterPython.delete_itkFiniteDifferenceImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkFiniteDifferenceImageFilterIVF43IVF43

        Create a new object of the class itkFiniteDifferenceImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFiniteDifferenceImageFilterIVF43IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFiniteDifferenceImageFilterIVF43IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFiniteDifferenceImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFiniteDifferenceImageFilterIVF43IVF43 in _itkFiniteDifferenceImageFilterPython:
_itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_swigregister(itkFiniteDifferenceImageFilterIVF43IVF43)
itkFiniteDifferenceImageFilterIVF43IVF43_cast = _itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def finite_difference_image_filter(*args, **kwargs):
    """Procedural interface for FiniteDifferenceImageFilter"""
    import itk
    instance = itk.FiniteDifferenceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def finite_difference_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.FiniteDifferenceImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.FiniteDifferenceImageFilter.values()[0]
    else:
        filter_object = itk.FiniteDifferenceImageFilter

    finite_difference_image_filter.__doc__ = filter_object.__doc__
    finite_difference_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    finite_difference_image_filter.__doc__ += "Available Keyword Arguments:\n"
    finite_difference_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



