# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkHistogramToRunLengthFeaturesFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkHistogramToRunLengthFeaturesFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkHistogramToRunLengthFeaturesFilterPython
            return _itkHistogramToRunLengthFeaturesFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkHistogramToRunLengthFeaturesFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkHistogramToRunLengthFeaturesFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkHistogramToRunLengthFeaturesFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSimpleDataObjectDecoratorPython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import itkRGBPixelPython
import itkFixedArrayPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkCovariantVectorPython
import vnl_vector_refPython
import itkVectorPython
import itkHistogramPython
import itkSamplePython

def itkHistogramToRunLengthFeaturesFilterHD_New():
  return itkHistogramToRunLengthFeaturesFilterHD.New()


def itkHistogramToRunLengthFeaturesFilterHF_New():
  return itkHistogramToRunLengthFeaturesFilterHF.New()

class itkHistogramToRunLengthFeaturesFilterEnums(object):
    """Proxy of C++ itkHistogramToRunLengthFeaturesFilterEnums class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    RunLengthFeature_ShortRunEmphasis = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_RunLengthFeature_ShortRunEmphasis
    RunLengthFeature_LongRunEmphasis = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_RunLengthFeature_LongRunEmphasis
    RunLengthFeature_GreyLevelNonuniformity = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_RunLengthFeature_GreyLevelNonuniformity
    RunLengthFeature_RunLengthNonuniformity = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_RunLengthFeature_RunLengthNonuniformity
    RunLengthFeature_LowGreyLevelRunEmphasis = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_RunLengthFeature_LowGreyLevelRunEmphasis
    RunLengthFeature_HighGreyLevelRunEmphasis = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_RunLengthFeature_HighGreyLevelRunEmphasis
    RunLengthFeature_ShortRunLowGreyLevelEmphasis = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_RunLengthFeature_ShortRunLowGreyLevelEmphasis
    RunLengthFeature_ShortRunHighGreyLevelEmphasis = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_RunLengthFeature_ShortRunHighGreyLevelEmphasis
    RunLengthFeature_LongRunLowGreyLevelEmphasis = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_RunLengthFeature_LongRunLowGreyLevelEmphasis
    RunLengthFeature_LongRunHighGreyLevelEmphasis = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_RunLengthFeature_LongRunHighGreyLevelEmphasis

    def __init__(self, *args):
        """
        __init__(itkHistogramToRunLengthFeaturesFilterEnums self) -> itkHistogramToRunLengthFeaturesFilterEnums
        __init__(itkHistogramToRunLengthFeaturesFilterEnums self, itkHistogramToRunLengthFeaturesFilterEnums arg0) -> itkHistogramToRunLengthFeaturesFilterEnums
        """
        _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_swiginit(self, _itkHistogramToRunLengthFeaturesFilterPython.new_itkHistogramToRunLengthFeaturesFilterEnums(*args))
    __swig_destroy__ = _itkHistogramToRunLengthFeaturesFilterPython.delete_itkHistogramToRunLengthFeaturesFilterEnums
itkHistogramToRunLengthFeaturesFilterEnums_swigregister = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterEnums_swigregister
itkHistogramToRunLengthFeaturesFilterEnums_swigregister(itkHistogramToRunLengthFeaturesFilterEnums)

class itkHistogramToRunLengthFeaturesFilterHD(ITKCommonBasePython.itkProcessObject):
    """


    This class computes texture feature coefficients from a grey level
    run-length matrix.

    By default, run length features are computed for each spatial
    direction and then averaged afterward, so it is possible to access the
    standard deviations of the texture features. These values give a clue
    as to texture anisotropy. However, doing this is much more work,
    because it involved computing one for each offset given. To compute a
    single matrix using the first offset, call FastCalculationsOn(). If
    this is called, then the texture standard deviations will not be
    computed (and will be set to zero), but texture computation will be
    much faster.

    This class is templated over the input histogram type.

    Print references: M. M. Galloway. Texture analysis using gray level
    run lengths. Computer Graphics and Image Processing, 4:172-179, 1975.

    A. Chu, C. M. Sehgal, and J. F. Greenleaf. Use of gray value
    distribution of run lengths for texture analysis. Pattern Recognition
    Letters, 11:415-420, 1990.

    B. R. Dasarathy and E. B. Holder. Image characterizations based on
    joint gray-level run-length distributions. Pattern Recognition
    Letters, 12:490-502, 1991.

    IJ article:https://hdl.handle.net/1926/1374

    See:   ScalarImageToRunLengthFeaturesFilter

    See:   ScalarImageToRunLengthMatrixFilter

    See:   HistogramToRunLengthFeaturesFilter

    : Nick Tustison

    C++ includes: itkHistogramToRunLengthFeaturesFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramToRunLengthFeaturesFilterHD_Pointer":
        """__New_orig__() -> itkHistogramToRunLengthFeaturesFilterHD_Pointer"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramToRunLengthFeaturesFilterHD_Pointer":
        """Clone(itkHistogramToRunLengthFeaturesFilterHD self) -> itkHistogramToRunLengthFeaturesFilterHD_Pointer"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_Clone(self)


    def SetInput(self, histogram: 'itkHistogramD') -> "void":
        """SetInput(itkHistogramToRunLengthFeaturesFilterHD self, itkHistogramD histogram)"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_SetInput(self, histogram)


    def GetInput(self) -> "itkHistogramD const *":
        """GetInput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkHistogramD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetInput(self)


    def GetShortRunEmphasis(self) -> "double":
        """
        GetShortRunEmphasis(itkHistogramToRunLengthFeaturesFilterHD self) -> double

        Methods to
        return the short run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunEmphasis(self)


    def GetShortRunEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetShortRunEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkSimpleDataObjectDecoratorD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunEmphasisOutput(self)


    def GetLongRunEmphasis(self) -> "double":
        """
        GetLongRunEmphasis(itkHistogramToRunLengthFeaturesFilterHD self) -> double

        Methods to
        return the long run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunEmphasis(self)


    def GetLongRunEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetLongRunEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkSimpleDataObjectDecoratorD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunEmphasisOutput(self)


    def GetGreyLevelNonuniformity(self) -> "double":
        """
        GetGreyLevelNonuniformity(itkHistogramToRunLengthFeaturesFilterHD self) -> double

        Methods
        to return the grey level nonuniformity. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetGreyLevelNonuniformity(self)


    def GetGreyLevelNonuniformityOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetGreyLevelNonuniformityOutput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkSimpleDataObjectDecoratorD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetGreyLevelNonuniformityOutput(self)


    def GetRunLengthNonuniformity(self) -> "double":
        """
        GetRunLengthNonuniformity(itkHistogramToRunLengthFeaturesFilterHD self) -> double

        Methods
        to return the run length nonuniformity. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetRunLengthNonuniformity(self)


    def GetRunLengthNonuniformityOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetRunLengthNonuniformityOutput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkSimpleDataObjectDecoratorD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetRunLengthNonuniformityOutput(self)


    def GetLowGreyLevelRunEmphasis(self) -> "double":
        """
        GetLowGreyLevelRunEmphasis(itkHistogramToRunLengthFeaturesFilterHD self) -> double

        Methods
        to return the low grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLowGreyLevelRunEmphasis(self)


    def GetLowGreyLevelRunEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetLowGreyLevelRunEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkSimpleDataObjectDecoratorD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLowGreyLevelRunEmphasisOutput(self)


    def GetHighGreyLevelRunEmphasis(self) -> "double":
        """
        GetHighGreyLevelRunEmphasis(itkHistogramToRunLengthFeaturesFilterHD self) -> double

        Methods
        to return the high grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetHighGreyLevelRunEmphasis(self)


    def GetHighGreyLevelRunEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetHighGreyLevelRunEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkSimpleDataObjectDecoratorD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetHighGreyLevelRunEmphasisOutput(self)


    def GetShortRunLowGreyLevelEmphasis(self) -> "double":
        """
        GetShortRunLowGreyLevelEmphasis(itkHistogramToRunLengthFeaturesFilterHD self) -> double

        Methods to return the short run low grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunLowGreyLevelEmphasis(self)


    def GetShortRunLowGreyLevelEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetShortRunLowGreyLevelEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkSimpleDataObjectDecoratorD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunLowGreyLevelEmphasisOutput(self)


    def GetShortRunHighGreyLevelEmphasis(self) -> "double":
        """
        GetShortRunHighGreyLevelEmphasis(itkHistogramToRunLengthFeaturesFilterHD self) -> double

        Methods to return the short run high grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunHighGreyLevelEmphasis(self)


    def GetShortRunHighGreyLevelEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetShortRunHighGreyLevelEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkSimpleDataObjectDecoratorD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunHighGreyLevelEmphasisOutput(self)


    def GetLongRunLowGreyLevelEmphasis(self) -> "double":
        """
        GetLongRunLowGreyLevelEmphasis(itkHistogramToRunLengthFeaturesFilterHD self) -> double

        Methods to return the long run low grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunLowGreyLevelEmphasis(self)


    def GetLongRunLowGreyLevelEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetLongRunLowGreyLevelEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkSimpleDataObjectDecoratorD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunLowGreyLevelEmphasisOutput(self)


    def GetLongRunHighGreyLevelEmphasis(self) -> "double":
        """
        GetLongRunHighGreyLevelEmphasis(itkHistogramToRunLengthFeaturesFilterHD self) -> double

        Methods to return the long run high grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunHighGreyLevelEmphasis(self)


    def GetLongRunHighGreyLevelEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetLongRunHighGreyLevelEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHD self) -> itkSimpleDataObjectDecoratorD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunHighGreyLevelEmphasisOutput(self)


    def GetTotalNumberOfRuns(self) -> "unsigned long":
        """GetTotalNumberOfRuns(itkHistogramToRunLengthFeaturesFilterHD self) -> unsigned long"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetTotalNumberOfRuns(self)


    def GetFeature(self, name: 'itkHistogramToRunLengthFeaturesFilterEnums::RunLengthFeature') -> "double":
        """
        GetFeature(itkHistogramToRunLengthFeaturesFilterHD self, itkHistogramToRunLengthFeaturesFilterEnums::RunLengthFeature name) -> double

        convenience method to
        access the run length values 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetFeature(self, name)

    __swig_destroy__ = _itkHistogramToRunLengthFeaturesFilterPython.delete_itkHistogramToRunLengthFeaturesFilterHD

    def cast(obj: 'itkLightObject') -> "itkHistogramToRunLengthFeaturesFilterHD *":
        """cast(itkLightObject obj) -> itkHistogramToRunLengthFeaturesFilterHD"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramToRunLengthFeaturesFilterHD

        Create a new object of the class itkHistogramToRunLengthFeaturesFilterHD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramToRunLengthFeaturesFilterHD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramToRunLengthFeaturesFilterHD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramToRunLengthFeaturesFilterHD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramToRunLengthFeaturesFilterHD.Clone = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_Clone, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.SetInput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_SetInput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetInput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetInput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetShortRunEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunEmphasis, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetShortRunEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetLongRunEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunEmphasis, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetLongRunEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetGreyLevelNonuniformity = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetGreyLevelNonuniformity, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetGreyLevelNonuniformityOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetGreyLevelNonuniformityOutput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetRunLengthNonuniformity = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetRunLengthNonuniformity, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetRunLengthNonuniformityOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetRunLengthNonuniformityOutput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetLowGreyLevelRunEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLowGreyLevelRunEmphasis, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetLowGreyLevelRunEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLowGreyLevelRunEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetHighGreyLevelRunEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetHighGreyLevelRunEmphasis, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetHighGreyLevelRunEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetHighGreyLevelRunEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetShortRunLowGreyLevelEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunLowGreyLevelEmphasis, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetShortRunLowGreyLevelEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunLowGreyLevelEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetShortRunHighGreyLevelEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunHighGreyLevelEmphasis, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetShortRunHighGreyLevelEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetShortRunHighGreyLevelEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetLongRunLowGreyLevelEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunLowGreyLevelEmphasis, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetLongRunLowGreyLevelEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunLowGreyLevelEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetLongRunHighGreyLevelEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunHighGreyLevelEmphasis, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetLongRunHighGreyLevelEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetLongRunHighGreyLevelEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetTotalNumberOfRuns = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetTotalNumberOfRuns, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD.GetFeature = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_GetFeature, None, itkHistogramToRunLengthFeaturesFilterHD)
itkHistogramToRunLengthFeaturesFilterHD_swigregister = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_swigregister
itkHistogramToRunLengthFeaturesFilterHD_swigregister(itkHistogramToRunLengthFeaturesFilterHD)

def itkHistogramToRunLengthFeaturesFilterHD___New_orig__() -> "itkHistogramToRunLengthFeaturesFilterHD_Pointer":
    """itkHistogramToRunLengthFeaturesFilterHD___New_orig__() -> itkHistogramToRunLengthFeaturesFilterHD_Pointer"""
    return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD___New_orig__()

def itkHistogramToRunLengthFeaturesFilterHD_cast(obj: 'itkLightObject') -> "itkHistogramToRunLengthFeaturesFilterHD *":
    """itkHistogramToRunLengthFeaturesFilterHD_cast(itkLightObject obj) -> itkHistogramToRunLengthFeaturesFilterHD"""
    return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHD_cast(obj)

class itkHistogramToRunLengthFeaturesFilterHF(ITKCommonBasePython.itkProcessObject):
    """


    This class computes texture feature coefficients from a grey level
    run-length matrix.

    By default, run length features are computed for each spatial
    direction and then averaged afterward, so it is possible to access the
    standard deviations of the texture features. These values give a clue
    as to texture anisotropy. However, doing this is much more work,
    because it involved computing one for each offset given. To compute a
    single matrix using the first offset, call FastCalculationsOn(). If
    this is called, then the texture standard deviations will not be
    computed (and will be set to zero), but texture computation will be
    much faster.

    This class is templated over the input histogram type.

    Print references: M. M. Galloway. Texture analysis using gray level
    run lengths. Computer Graphics and Image Processing, 4:172-179, 1975.

    A. Chu, C. M. Sehgal, and J. F. Greenleaf. Use of gray value
    distribution of run lengths for texture analysis. Pattern Recognition
    Letters, 11:415-420, 1990.

    B. R. Dasarathy and E. B. Holder. Image characterizations based on
    joint gray-level run-length distributions. Pattern Recognition
    Letters, 12:490-502, 1991.

    IJ article:https://hdl.handle.net/1926/1374

    See:   ScalarImageToRunLengthFeaturesFilter

    See:   ScalarImageToRunLengthMatrixFilter

    See:   HistogramToRunLengthFeaturesFilter

    : Nick Tustison

    C++ includes: itkHistogramToRunLengthFeaturesFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramToRunLengthFeaturesFilterHF_Pointer":
        """__New_orig__() -> itkHistogramToRunLengthFeaturesFilterHF_Pointer"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramToRunLengthFeaturesFilterHF_Pointer":
        """Clone(itkHistogramToRunLengthFeaturesFilterHF self) -> itkHistogramToRunLengthFeaturesFilterHF_Pointer"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_Clone(self)


    def SetInput(self, histogram: 'itkHistogramF') -> "void":
        """SetInput(itkHistogramToRunLengthFeaturesFilterHF self, itkHistogramF histogram)"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_SetInput(self, histogram)


    def GetInput(self) -> "itkHistogramF const *":
        """GetInput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkHistogramF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetInput(self)


    def GetShortRunEmphasis(self) -> "float":
        """
        GetShortRunEmphasis(itkHistogramToRunLengthFeaturesFilterHF self) -> float

        Methods to
        return the short run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunEmphasis(self)


    def GetShortRunEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetShortRunEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkSimpleDataObjectDecoratorF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunEmphasisOutput(self)


    def GetLongRunEmphasis(self) -> "float":
        """
        GetLongRunEmphasis(itkHistogramToRunLengthFeaturesFilterHF self) -> float

        Methods to
        return the long run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunEmphasis(self)


    def GetLongRunEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetLongRunEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkSimpleDataObjectDecoratorF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunEmphasisOutput(self)


    def GetGreyLevelNonuniformity(self) -> "float":
        """
        GetGreyLevelNonuniformity(itkHistogramToRunLengthFeaturesFilterHF self) -> float

        Methods
        to return the grey level nonuniformity. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetGreyLevelNonuniformity(self)


    def GetGreyLevelNonuniformityOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetGreyLevelNonuniformityOutput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkSimpleDataObjectDecoratorF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetGreyLevelNonuniformityOutput(self)


    def GetRunLengthNonuniformity(self) -> "float":
        """
        GetRunLengthNonuniformity(itkHistogramToRunLengthFeaturesFilterHF self) -> float

        Methods
        to return the run length nonuniformity. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetRunLengthNonuniformity(self)


    def GetRunLengthNonuniformityOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetRunLengthNonuniformityOutput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkSimpleDataObjectDecoratorF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetRunLengthNonuniformityOutput(self)


    def GetLowGreyLevelRunEmphasis(self) -> "float":
        """
        GetLowGreyLevelRunEmphasis(itkHistogramToRunLengthFeaturesFilterHF self) -> float

        Methods
        to return the low grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLowGreyLevelRunEmphasis(self)


    def GetLowGreyLevelRunEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetLowGreyLevelRunEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkSimpleDataObjectDecoratorF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLowGreyLevelRunEmphasisOutput(self)


    def GetHighGreyLevelRunEmphasis(self) -> "float":
        """
        GetHighGreyLevelRunEmphasis(itkHistogramToRunLengthFeaturesFilterHF self) -> float

        Methods
        to return the high grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetHighGreyLevelRunEmphasis(self)


    def GetHighGreyLevelRunEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetHighGreyLevelRunEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkSimpleDataObjectDecoratorF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetHighGreyLevelRunEmphasisOutput(self)


    def GetShortRunLowGreyLevelEmphasis(self) -> "float":
        """
        GetShortRunLowGreyLevelEmphasis(itkHistogramToRunLengthFeaturesFilterHF self) -> float

        Methods to return the short run low grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunLowGreyLevelEmphasis(self)


    def GetShortRunLowGreyLevelEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetShortRunLowGreyLevelEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkSimpleDataObjectDecoratorF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunLowGreyLevelEmphasisOutput(self)


    def GetShortRunHighGreyLevelEmphasis(self) -> "float":
        """
        GetShortRunHighGreyLevelEmphasis(itkHistogramToRunLengthFeaturesFilterHF self) -> float

        Methods to return the short run high grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunHighGreyLevelEmphasis(self)


    def GetShortRunHighGreyLevelEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetShortRunHighGreyLevelEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkSimpleDataObjectDecoratorF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunHighGreyLevelEmphasisOutput(self)


    def GetLongRunLowGreyLevelEmphasis(self) -> "float":
        """
        GetLongRunLowGreyLevelEmphasis(itkHistogramToRunLengthFeaturesFilterHF self) -> float

        Methods to return the long run low grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunLowGreyLevelEmphasis(self)


    def GetLongRunLowGreyLevelEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetLongRunLowGreyLevelEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkSimpleDataObjectDecoratorF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunLowGreyLevelEmphasisOutput(self)


    def GetLongRunHighGreyLevelEmphasis(self) -> "float":
        """
        GetLongRunHighGreyLevelEmphasis(itkHistogramToRunLengthFeaturesFilterHF self) -> float

        Methods to return the long run high grey level run emphasis. 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunHighGreyLevelEmphasis(self)


    def GetLongRunHighGreyLevelEmphasisOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetLongRunHighGreyLevelEmphasisOutput(itkHistogramToRunLengthFeaturesFilterHF self) -> itkSimpleDataObjectDecoratorF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunHighGreyLevelEmphasisOutput(self)


    def GetTotalNumberOfRuns(self) -> "unsigned long":
        """GetTotalNumberOfRuns(itkHistogramToRunLengthFeaturesFilterHF self) -> unsigned long"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetTotalNumberOfRuns(self)


    def GetFeature(self, name: 'itkHistogramToRunLengthFeaturesFilterEnums::RunLengthFeature') -> "float":
        """
        GetFeature(itkHistogramToRunLengthFeaturesFilterHF self, itkHistogramToRunLengthFeaturesFilterEnums::RunLengthFeature name) -> float

        convenience method to
        access the run length values 
        """
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetFeature(self, name)

    __swig_destroy__ = _itkHistogramToRunLengthFeaturesFilterPython.delete_itkHistogramToRunLengthFeaturesFilterHF

    def cast(obj: 'itkLightObject') -> "itkHistogramToRunLengthFeaturesFilterHF *":
        """cast(itkLightObject obj) -> itkHistogramToRunLengthFeaturesFilterHF"""
        return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramToRunLengthFeaturesFilterHF

        Create a new object of the class itkHistogramToRunLengthFeaturesFilterHF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramToRunLengthFeaturesFilterHF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramToRunLengthFeaturesFilterHF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramToRunLengthFeaturesFilterHF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramToRunLengthFeaturesFilterHF.Clone = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_Clone, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.SetInput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_SetInput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetInput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetInput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetShortRunEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunEmphasis, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetShortRunEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetLongRunEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunEmphasis, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetLongRunEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetGreyLevelNonuniformity = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetGreyLevelNonuniformity, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetGreyLevelNonuniformityOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetGreyLevelNonuniformityOutput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetRunLengthNonuniformity = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetRunLengthNonuniformity, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetRunLengthNonuniformityOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetRunLengthNonuniformityOutput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetLowGreyLevelRunEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLowGreyLevelRunEmphasis, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetLowGreyLevelRunEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLowGreyLevelRunEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetHighGreyLevelRunEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetHighGreyLevelRunEmphasis, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetHighGreyLevelRunEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetHighGreyLevelRunEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetShortRunLowGreyLevelEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunLowGreyLevelEmphasis, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetShortRunLowGreyLevelEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunLowGreyLevelEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetShortRunHighGreyLevelEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunHighGreyLevelEmphasis, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetShortRunHighGreyLevelEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetShortRunHighGreyLevelEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetLongRunLowGreyLevelEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunLowGreyLevelEmphasis, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetLongRunLowGreyLevelEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunLowGreyLevelEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetLongRunHighGreyLevelEmphasis = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunHighGreyLevelEmphasis, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetLongRunHighGreyLevelEmphasisOutput = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetLongRunHighGreyLevelEmphasisOutput, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetTotalNumberOfRuns = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetTotalNumberOfRuns, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF.GetFeature = new_instancemethod(_itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_GetFeature, None, itkHistogramToRunLengthFeaturesFilterHF)
itkHistogramToRunLengthFeaturesFilterHF_swigregister = _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_swigregister
itkHistogramToRunLengthFeaturesFilterHF_swigregister(itkHistogramToRunLengthFeaturesFilterHF)

def itkHistogramToRunLengthFeaturesFilterHF___New_orig__() -> "itkHistogramToRunLengthFeaturesFilterHF_Pointer":
    """itkHistogramToRunLengthFeaturesFilterHF___New_orig__() -> itkHistogramToRunLengthFeaturesFilterHF_Pointer"""
    return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF___New_orig__()

def itkHistogramToRunLengthFeaturesFilterHF_cast(obj: 'itkLightObject') -> "itkHistogramToRunLengthFeaturesFilterHF *":
    """itkHistogramToRunLengthFeaturesFilterHF_cast(itkLightObject obj) -> itkHistogramToRunLengthFeaturesFilterHF"""
    return _itkHistogramToRunLengthFeaturesFilterPython.itkHistogramToRunLengthFeaturesFilterHF_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def histogram_to_run_length_features_filter(*args, **kwargs):
    """Procedural interface for HistogramToRunLengthFeaturesFilter"""
    import itk
    instance = itk.HistogramToRunLengthFeaturesFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def histogram_to_run_length_features_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.HistogramToRunLengthFeaturesFilter, itkTemplate.itkTemplate):
        filter_object = itk.HistogramToRunLengthFeaturesFilter.values()[0]
    else:
        filter_object = itk.HistogramToRunLengthFeaturesFilter

    histogram_to_run_length_features_filter.__doc__ = filter_object.__doc__
    histogram_to_run_length_features_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    histogram_to_run_length_features_filter.__doc__ += "Available Keyword Arguments:\n"
    histogram_to_run_length_features_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



