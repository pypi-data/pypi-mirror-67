# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkDefaultDynamicMeshTraitsPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkDefaultDynamicMeshTraitsPython', [dirname(__file__)])
        except ImportError:
            import _itkDefaultDynamicMeshTraitsPython
            return _itkDefaultDynamicMeshTraitsPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkDefaultDynamicMeshTraitsPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkDefaultDynamicMeshTraitsPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkDefaultDynamicMeshTraitsPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import pyBasePython
class itkDefaultDynamicMeshTraitsD2(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsD2 self) -> itkDefaultDynamicMeshTraitsD2
        __init__(itkDefaultDynamicMeshTraitsD2 self, itkDefaultDynamicMeshTraitsD2 arg0) -> itkDefaultDynamicMeshTraitsD2



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD2_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD2(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD2
itkDefaultDynamicMeshTraitsD2_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD2_swigregister
itkDefaultDynamicMeshTraitsD2_swigregister(itkDefaultDynamicMeshTraitsD2)

class itkDefaultDynamicMeshTraitsD22DD(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsD22DD self) -> itkDefaultDynamicMeshTraitsD22DD
        __init__(itkDefaultDynamicMeshTraitsD22DD self, itkDefaultDynamicMeshTraitsD22DD arg0) -> itkDefaultDynamicMeshTraitsD22DD



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD22DD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD22DD
itkDefaultDynamicMeshTraitsD22DD_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DD_swigregister
itkDefaultDynamicMeshTraitsD22DD_swigregister(itkDefaultDynamicMeshTraitsD22DD)

class itkDefaultDynamicMeshTraitsD22DDD(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsD22DDD self) -> itkDefaultDynamicMeshTraitsD22DDD
        __init__(itkDefaultDynamicMeshTraitsD22DDD self, itkDefaultDynamicMeshTraitsD22DD arg0) -> itkDefaultDynamicMeshTraitsD22DDD



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DDD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD22DDD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD22DDD
itkDefaultDynamicMeshTraitsD22DDD_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DDD_swigregister
itkDefaultDynamicMeshTraitsD22DDD_swigregister(itkDefaultDynamicMeshTraitsD22DDD)

class itkDefaultDynamicMeshTraitsD22DFD(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsD22DFD self) -> itkDefaultDynamicMeshTraitsD22DFD
        __init__(itkDefaultDynamicMeshTraitsD22DFD self, itkDefaultDynamicMeshTraitsD22DFD arg0) -> itkDefaultDynamicMeshTraitsD22DFD



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DFD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD22DFD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD22DFD
itkDefaultDynamicMeshTraitsD22DFD_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DFD_swigregister
itkDefaultDynamicMeshTraitsD22DFD_swigregister(itkDefaultDynamicMeshTraitsD22DFD)

class itkDefaultDynamicMeshTraitsD3(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsD3 self) -> itkDefaultDynamicMeshTraitsD3
        __init__(itkDefaultDynamicMeshTraitsD3 self, itkDefaultDynamicMeshTraitsD3 arg0) -> itkDefaultDynamicMeshTraitsD3



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD3_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD3(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD3
itkDefaultDynamicMeshTraitsD3_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD3_swigregister
itkDefaultDynamicMeshTraitsD3_swigregister(itkDefaultDynamicMeshTraitsD3)

class itkDefaultDynamicMeshTraitsD33DD(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsD33DD self) -> itkDefaultDynamicMeshTraitsD33DD
        __init__(itkDefaultDynamicMeshTraitsD33DD self, itkDefaultDynamicMeshTraitsD33DD arg0) -> itkDefaultDynamicMeshTraitsD33DD



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD33DD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD33DD
itkDefaultDynamicMeshTraitsD33DD_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DD_swigregister
itkDefaultDynamicMeshTraitsD33DD_swigregister(itkDefaultDynamicMeshTraitsD33DD)

class itkDefaultDynamicMeshTraitsD33DDD(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsD33DDD self) -> itkDefaultDynamicMeshTraitsD33DDD
        __init__(itkDefaultDynamicMeshTraitsD33DDD self, itkDefaultDynamicMeshTraitsD33DD arg0) -> itkDefaultDynamicMeshTraitsD33DDD



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DDD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD33DDD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD33DDD
itkDefaultDynamicMeshTraitsD33DDD_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DDD_swigregister
itkDefaultDynamicMeshTraitsD33DDD_swigregister(itkDefaultDynamicMeshTraitsD33DDD)

class itkDefaultDynamicMeshTraitsD33DFD(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsD33DFD self) -> itkDefaultDynamicMeshTraitsD33DFD
        __init__(itkDefaultDynamicMeshTraitsD33DFD self, itkDefaultDynamicMeshTraitsD33DFD arg0) -> itkDefaultDynamicMeshTraitsD33DFD



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DFD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD33DFD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD33DFD
itkDefaultDynamicMeshTraitsD33DFD_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DFD_swigregister
itkDefaultDynamicMeshTraitsD33DFD_swigregister(itkDefaultDynamicMeshTraitsD33DFD)

class itkDefaultDynamicMeshTraitsF2(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsF2 self) -> itkDefaultDynamicMeshTraitsF2
        __init__(itkDefaultDynamicMeshTraitsF2 self, itkDefaultDynamicMeshTraitsF2 arg0) -> itkDefaultDynamicMeshTraitsF2



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF2_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF2(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF2
itkDefaultDynamicMeshTraitsF2_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF2_swigregister
itkDefaultDynamicMeshTraitsF2_swigregister(itkDefaultDynamicMeshTraitsF2)

class itkDefaultDynamicMeshTraitsF22FF(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsF22FF self) -> itkDefaultDynamicMeshTraitsF22FF
        __init__(itkDefaultDynamicMeshTraitsF22FF self, itkDefaultDynamicMeshTraitsF2 arg0) -> itkDefaultDynamicMeshTraitsF22FF



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF22FF_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF22FF(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF22FF
itkDefaultDynamicMeshTraitsF22FF_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF22FF_swigregister
itkDefaultDynamicMeshTraitsF22FF_swigregister(itkDefaultDynamicMeshTraitsF22FF)

class itkDefaultDynamicMeshTraitsF22FFF(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsF22FFF self) -> itkDefaultDynamicMeshTraitsF22FFF
        __init__(itkDefaultDynamicMeshTraitsF22FFF self, itkDefaultDynamicMeshTraitsF2 arg0) -> itkDefaultDynamicMeshTraitsF22FFF



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF22FFF_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF22FFF(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF22FFF
itkDefaultDynamicMeshTraitsF22FFF_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF22FFF_swigregister
itkDefaultDynamicMeshTraitsF22FFF_swigregister(itkDefaultDynamicMeshTraitsF22FFF)

class itkDefaultDynamicMeshTraitsF3(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsF3 self) -> itkDefaultDynamicMeshTraitsF3
        __init__(itkDefaultDynamicMeshTraitsF3 self, itkDefaultDynamicMeshTraitsF3 arg0) -> itkDefaultDynamicMeshTraitsF3



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF3_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF3(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF3
itkDefaultDynamicMeshTraitsF3_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF3_swigregister
itkDefaultDynamicMeshTraitsF3_swigregister(itkDefaultDynamicMeshTraitsF3)

class itkDefaultDynamicMeshTraitsF33FF(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsF33FF self) -> itkDefaultDynamicMeshTraitsF33FF
        __init__(itkDefaultDynamicMeshTraitsF33FF self, itkDefaultDynamicMeshTraitsF3 arg0) -> itkDefaultDynamicMeshTraitsF33FF



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF33FF_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF33FF(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF33FF
itkDefaultDynamicMeshTraitsF33FF_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF33FF_swigregister
itkDefaultDynamicMeshTraitsF33FF_swigregister(itkDefaultDynamicMeshTraitsF33FF)

class itkDefaultDynamicMeshTraitsF33FFF(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsF33FFF self) -> itkDefaultDynamicMeshTraitsF33FFF
        __init__(itkDefaultDynamicMeshTraitsF33FFF self, itkDefaultDynamicMeshTraitsF3 arg0) -> itkDefaultDynamicMeshTraitsF33FFF



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF33FFF_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF33FFF(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF33FFF
itkDefaultDynamicMeshTraitsF33FFF_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF33FFF_swigregister
itkDefaultDynamicMeshTraitsF33FFF_swigregister(itkDefaultDynamicMeshTraitsF33FFF)

class itkDefaultDynamicMeshTraitsMD2222FFMD22(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsMD2222FFMD22 self) -> itkDefaultDynamicMeshTraitsMD2222FFMD22
        __init__(itkDefaultDynamicMeshTraitsMD2222FFMD22 self, itkDefaultDynamicMeshTraitsMD2222FFMD22 arg0) -> itkDefaultDynamicMeshTraitsMD2222FFMD22



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsMD2222FFMD22_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsMD2222FFMD22(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsMD2222FFMD22
itkDefaultDynamicMeshTraitsMD2222FFMD22_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsMD2222FFMD22_swigregister
itkDefaultDynamicMeshTraitsMD2222FFMD22_swigregister(itkDefaultDynamicMeshTraitsMD2222FFMD22)

class itkDefaultDynamicMeshTraitsMD3333FFMD33(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsMD3333FFMD33 self) -> itkDefaultDynamicMeshTraitsMD3333FFMD33
        __init__(itkDefaultDynamicMeshTraitsMD3333FFMD33 self, itkDefaultDynamicMeshTraitsMD3333FFMD33 arg0) -> itkDefaultDynamicMeshTraitsMD3333FFMD33



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsMD3333FFMD33_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsMD3333FFMD33(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsMD3333FFMD33
itkDefaultDynamicMeshTraitsMD3333FFMD33_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsMD3333FFMD33_swigregister
itkDefaultDynamicMeshTraitsMD3333FFMD33_swigregister(itkDefaultDynamicMeshTraitsMD3333FFMD33)

class itkDefaultDynamicMeshTraitsSS2(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsSS2 self) -> itkDefaultDynamicMeshTraitsSS2
        __init__(itkDefaultDynamicMeshTraitsSS2 self, itkDefaultDynamicMeshTraitsSS2 arg0) -> itkDefaultDynamicMeshTraitsSS2



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS2_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS2(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS2
itkDefaultDynamicMeshTraitsSS2_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS2_swigregister
itkDefaultDynamicMeshTraitsSS2_swigregister(itkDefaultDynamicMeshTraitsSS2)

class itkDefaultDynamicMeshTraitsSS22SSSS(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsSS22SSSS self) -> itkDefaultDynamicMeshTraitsSS22SSSS
        __init__(itkDefaultDynamicMeshTraitsSS22SSSS self, itkDefaultDynamicMeshTraitsSS22SSSS arg0) -> itkDefaultDynamicMeshTraitsSS22SSSS



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS22SSSS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS22SSSS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS22SSSS
itkDefaultDynamicMeshTraitsSS22SSSS_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS22SSSS_swigregister
itkDefaultDynamicMeshTraitsSS22SSSS_swigregister(itkDefaultDynamicMeshTraitsSS22SSSS)

class itkDefaultDynamicMeshTraitsSS22SSSSSS(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsSS22SSSSSS self) -> itkDefaultDynamicMeshTraitsSS22SSSSSS
        __init__(itkDefaultDynamicMeshTraitsSS22SSSSSS self, itkDefaultDynamicMeshTraitsSS22SSSS arg0) -> itkDefaultDynamicMeshTraitsSS22SSSSSS



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS22SSSSSS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS22SSSSSS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS22SSSSSS
itkDefaultDynamicMeshTraitsSS22SSSSSS_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS22SSSSSS_swigregister
itkDefaultDynamicMeshTraitsSS22SSSSSS_swigregister(itkDefaultDynamicMeshTraitsSS22SSSSSS)

class itkDefaultDynamicMeshTraitsSS3(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsSS3 self) -> itkDefaultDynamicMeshTraitsSS3
        __init__(itkDefaultDynamicMeshTraitsSS3 self, itkDefaultDynamicMeshTraitsSS3 arg0) -> itkDefaultDynamicMeshTraitsSS3



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS3_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS3(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS3
itkDefaultDynamicMeshTraitsSS3_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS3_swigregister
itkDefaultDynamicMeshTraitsSS3_swigregister(itkDefaultDynamicMeshTraitsSS3)

class itkDefaultDynamicMeshTraitsSS33SSSS(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsSS33SSSS self) -> itkDefaultDynamicMeshTraitsSS33SSSS
        __init__(itkDefaultDynamicMeshTraitsSS33SSSS self, itkDefaultDynamicMeshTraitsSS33SSSS arg0) -> itkDefaultDynamicMeshTraitsSS33SSSS



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS33SSSS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS33SSSS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS33SSSS
itkDefaultDynamicMeshTraitsSS33SSSS_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS33SSSS_swigregister
itkDefaultDynamicMeshTraitsSS33SSSS_swigregister(itkDefaultDynamicMeshTraitsSS33SSSS)

class itkDefaultDynamicMeshTraitsSS33SSSSSS(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsSS33SSSSSS self) -> itkDefaultDynamicMeshTraitsSS33SSSSSS
        __init__(itkDefaultDynamicMeshTraitsSS33SSSSSS self, itkDefaultDynamicMeshTraitsSS33SSSS arg0) -> itkDefaultDynamicMeshTraitsSS33SSSSSS



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS33SSSSSS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS33SSSSSS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS33SSSSSS
itkDefaultDynamicMeshTraitsSS33SSSSSS_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS33SSSSSS_swigregister
itkDefaultDynamicMeshTraitsSS33SSSSSS_swigregister(itkDefaultDynamicMeshTraitsSS33SSSSSS)

class itkDefaultDynamicMeshTraitsUC2(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUC2 self) -> itkDefaultDynamicMeshTraitsUC2
        __init__(itkDefaultDynamicMeshTraitsUC2 self, itkDefaultDynamicMeshTraitsUC2 arg0) -> itkDefaultDynamicMeshTraitsUC2



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC2_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC2(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC2
itkDefaultDynamicMeshTraitsUC2_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC2_swigregister
itkDefaultDynamicMeshTraitsUC2_swigregister(itkDefaultDynamicMeshTraitsUC2)

class itkDefaultDynamicMeshTraitsUC22UCUC(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUC22UCUC self) -> itkDefaultDynamicMeshTraitsUC22UCUC
        __init__(itkDefaultDynamicMeshTraitsUC22UCUC self, itkDefaultDynamicMeshTraitsUC22UCUC arg0) -> itkDefaultDynamicMeshTraitsUC22UCUC



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC22UCUC_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC22UCUC(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC22UCUC
itkDefaultDynamicMeshTraitsUC22UCUC_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC22UCUC_swigregister
itkDefaultDynamicMeshTraitsUC22UCUC_swigregister(itkDefaultDynamicMeshTraitsUC22UCUC)

class itkDefaultDynamicMeshTraitsUC22UCUCUC(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUC22UCUCUC self) -> itkDefaultDynamicMeshTraitsUC22UCUCUC
        __init__(itkDefaultDynamicMeshTraitsUC22UCUCUC self, itkDefaultDynamicMeshTraitsUC22UCUC arg0) -> itkDefaultDynamicMeshTraitsUC22UCUCUC



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC22UCUCUC_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC22UCUCUC(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC22UCUCUC
itkDefaultDynamicMeshTraitsUC22UCUCUC_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC22UCUCUC_swigregister
itkDefaultDynamicMeshTraitsUC22UCUCUC_swigregister(itkDefaultDynamicMeshTraitsUC22UCUCUC)

class itkDefaultDynamicMeshTraitsUC3(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUC3 self) -> itkDefaultDynamicMeshTraitsUC3
        __init__(itkDefaultDynamicMeshTraitsUC3 self, itkDefaultDynamicMeshTraitsUC3 arg0) -> itkDefaultDynamicMeshTraitsUC3



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC3_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC3(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC3
itkDefaultDynamicMeshTraitsUC3_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC3_swigregister
itkDefaultDynamicMeshTraitsUC3_swigregister(itkDefaultDynamicMeshTraitsUC3)

class itkDefaultDynamicMeshTraitsUC33UCUC(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUC33UCUC self) -> itkDefaultDynamicMeshTraitsUC33UCUC
        __init__(itkDefaultDynamicMeshTraitsUC33UCUC self, itkDefaultDynamicMeshTraitsUC33UCUC arg0) -> itkDefaultDynamicMeshTraitsUC33UCUC



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC33UCUC_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC33UCUC(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC33UCUC
itkDefaultDynamicMeshTraitsUC33UCUC_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC33UCUC_swigregister
itkDefaultDynamicMeshTraitsUC33UCUC_swigregister(itkDefaultDynamicMeshTraitsUC33UCUC)

class itkDefaultDynamicMeshTraitsUC33UCUCUC(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUC33UCUCUC self) -> itkDefaultDynamicMeshTraitsUC33UCUCUC
        __init__(itkDefaultDynamicMeshTraitsUC33UCUCUC self, itkDefaultDynamicMeshTraitsUC33UCUC arg0) -> itkDefaultDynamicMeshTraitsUC33UCUCUC



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC33UCUCUC_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC33UCUCUC(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC33UCUCUC
itkDefaultDynamicMeshTraitsUC33UCUCUC_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC33UCUCUC_swigregister
itkDefaultDynamicMeshTraitsUC33UCUCUC_swigregister(itkDefaultDynamicMeshTraitsUC33UCUCUC)

class itkDefaultDynamicMeshTraitsUS2(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUS2 self) -> itkDefaultDynamicMeshTraitsUS2
        __init__(itkDefaultDynamicMeshTraitsUS2 self, itkDefaultDynamicMeshTraitsUS2 arg0) -> itkDefaultDynamicMeshTraitsUS2



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS2_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS2(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS2
itkDefaultDynamicMeshTraitsUS2_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS2_swigregister
itkDefaultDynamicMeshTraitsUS2_swigregister(itkDefaultDynamicMeshTraitsUS2)

class itkDefaultDynamicMeshTraitsUS22USUS(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUS22USUS self) -> itkDefaultDynamicMeshTraitsUS22USUS
        __init__(itkDefaultDynamicMeshTraitsUS22USUS self, itkDefaultDynamicMeshTraitsUS22USUS arg0) -> itkDefaultDynamicMeshTraitsUS22USUS



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS22USUS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS22USUS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS22USUS
itkDefaultDynamicMeshTraitsUS22USUS_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS22USUS_swigregister
itkDefaultDynamicMeshTraitsUS22USUS_swigregister(itkDefaultDynamicMeshTraitsUS22USUS)

class itkDefaultDynamicMeshTraitsUS22USUSUS(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUS22USUSUS self) -> itkDefaultDynamicMeshTraitsUS22USUSUS
        __init__(itkDefaultDynamicMeshTraitsUS22USUSUS self, itkDefaultDynamicMeshTraitsUS22USUS arg0) -> itkDefaultDynamicMeshTraitsUS22USUSUS



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS22USUSUS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS22USUSUS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS22USUSUS
itkDefaultDynamicMeshTraitsUS22USUSUS_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS22USUSUS_swigregister
itkDefaultDynamicMeshTraitsUS22USUSUS_swigregister(itkDefaultDynamicMeshTraitsUS22USUSUS)

class itkDefaultDynamicMeshTraitsUS3(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUS3 self) -> itkDefaultDynamicMeshTraitsUS3
        __init__(itkDefaultDynamicMeshTraitsUS3 self, itkDefaultDynamicMeshTraitsUS3 arg0) -> itkDefaultDynamicMeshTraitsUS3



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS3_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS3(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS3
itkDefaultDynamicMeshTraitsUS3_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS3_swigregister
itkDefaultDynamicMeshTraitsUS3_swigregister(itkDefaultDynamicMeshTraitsUS3)

class itkDefaultDynamicMeshTraitsUS33USUS(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUS33USUS self) -> itkDefaultDynamicMeshTraitsUS33USUS
        __init__(itkDefaultDynamicMeshTraitsUS33USUS self, itkDefaultDynamicMeshTraitsUS33USUS arg0) -> itkDefaultDynamicMeshTraitsUS33USUS



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS33USUS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS33USUS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS33USUS
itkDefaultDynamicMeshTraitsUS33USUS_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS33USUS_swigregister
itkDefaultDynamicMeshTraitsUS33USUS_swigregister(itkDefaultDynamicMeshTraitsUS33USUS)

class itkDefaultDynamicMeshTraitsUS33USUSUS(object):
    """


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    C++ includes: itkDefaultDynamicMeshTraits.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(itkDefaultDynamicMeshTraitsUS33USUSUS self) -> itkDefaultDynamicMeshTraitsUS33USUSUS
        __init__(itkDefaultDynamicMeshTraitsUS33USUSUS self, itkDefaultDynamicMeshTraitsUS33USUS arg0) -> itkDefaultDynamicMeshTraitsUS33USUSUS



        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        C++ includes: itkDefaultDynamicMeshTraits.h 
        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS33USUSUS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS33USUSUS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS33USUSUS
itkDefaultDynamicMeshTraitsUS33USUSUS_swigregister = _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS33USUSUS_swigregister
itkDefaultDynamicMeshTraitsUS33USUSUS_swigregister(itkDefaultDynamicMeshTraitsUS33USUSUS)



