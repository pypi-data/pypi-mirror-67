# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkBSplineTransformInitializerPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBSplineTransformInitializerPython', [dirname(__file__)])
        except ImportError:
            import _itkBSplineTransformInitializerPython
            return _itkBSplineTransformInitializerPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBSplineTransformInitializerPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBSplineTransformInitializerPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBSplineTransformInitializerPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import pyBasePython
import itkMatrixPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRegionPython
import ITKCommonBasePython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkBSplineTransformPython
import itkArrayPython
import itkBSplineBaseTransformPython
import itkBSplineInterpolationWeightFunctionPython
import itkContinuousIndexPython
import itkFunctionBasePython
import itkArray2DPython
import itkOptimizerParametersPython
import itkTransformBasePython
import itkDiffusionTensor3DPython
import itkVariableLengthVectorPython

def itkBSplineTransformInitializerBSTD33ID3_New():
  return itkBSplineTransformInitializerBSTD33ID3.New()


def itkBSplineTransformInitializerBSTD33IF3_New():
  return itkBSplineTransformInitializerBSTD33IF3.New()


def itkBSplineTransformInitializerBSTD33IUS3_New():
  return itkBSplineTransformInitializerBSTD33IUS3.New()


def itkBSplineTransformInitializerBSTD33IUC3_New():
  return itkBSplineTransformInitializerBSTD33IUC3.New()


def itkBSplineTransformInitializerBSTD33ISS3_New():
  return itkBSplineTransformInitializerBSTD33ISS3.New()


def itkBSplineTransformInitializerBSTD23ID2_New():
  return itkBSplineTransformInitializerBSTD23ID2.New()


def itkBSplineTransformInitializerBSTD23IF2_New():
  return itkBSplineTransformInitializerBSTD23IF2.New()


def itkBSplineTransformInitializerBSTD23IUS2_New():
  return itkBSplineTransformInitializerBSTD23IUS2.New()


def itkBSplineTransformInitializerBSTD23IUC2_New():
  return itkBSplineTransformInitializerBSTD23IUC2.New()


def itkBSplineTransformInitializerBSTD23ISS2_New():
  return itkBSplineTransformInitializerBSTD23ISS2.New()

class itkBSplineTransformInitializerBSTD23ID2(ITKCommonBasePython.itkObject):
    """


    BSplineTransformInitializer is a helper class intended to initialize
    the control point grid such that it has a physically consistent
    definition. It sets the transform domain origin, physical dimensions
    and direction from information obtained from the image. It also sets
    the mesh size if asked to do so by calling
    SetTransformDomainMeshSize() before calling InitializeTransform().

    Luis Ibanez

    Nick Tustison

    C++ includes: itkBSplineTransformInitializer.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineTransformInitializerBSTD23ID2_Pointer":
        """__New_orig__() -> itkBSplineTransformInitializerBSTD23ID2_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineTransformInitializerBSTD23ID2_Pointer":
        """Clone(itkBSplineTransformInitializerBSTD23ID2 self) -> itkBSplineTransformInitializerBSTD23ID2_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_Clone(self)


    def GetTransform(self) -> "itkBSplineTransformD23 const *":
        """
        GetTransform(itkBSplineTransformInitializerBSTD23ID2 self) -> itkBSplineTransformD23

        Set/Get the transform
        to be initialized. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_GetTransform(self)


    def SetTransform(self, _arg: 'itkBSplineTransformD23') -> "void":
        """SetTransform(itkBSplineTransformInitializerBSTD23ID2 self, itkBSplineTransformD23 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_SetTransform(self, _arg)


    def GetImage(self) -> "itkImageD2 const *":
        """
        GetImage(itkBSplineTransformInitializerBSTD23ID2 self) -> itkImageD2

        Set/Get the image to
        initialize the domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_GetImage(self)


    def SetImage(self, _arg: 'itkImageD2') -> "void":
        """SetImage(itkBSplineTransformInitializerBSTD23ID2 self, itkImageD2 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_SetImage(self, _arg)


    def GetTransformDomainMeshSize(self) -> "itkSize2":
        """
        GetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD23ID2 self) -> itkSize2

        Allow
        the user to set the mesh size of the transform via the initializer,
        even though the initializer does not do anything with that
        information. Default size is 1^ImageDimension. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_GetTransformDomainMeshSize(self)


    def SetTransformDomainMeshSize(self, arg0: 'itkSize2') -> "void":
        """SetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD23ID2 self, itkSize2 arg0)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_SetTransformDomainMeshSize(self, arg0)


    def InitializeTransform(self) -> "void":
        """
        InitializeTransform(itkBSplineTransformInitializerBSTD23ID2 self)

        Initialize the
        transform using the specified transformation domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_InitializeTransform(self)

    __swig_destroy__ = _itkBSplineTransformInitializerPython.delete_itkBSplineTransformInitializerBSTD23ID2

    def cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD23ID2 *":
        """cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD23ID2"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineTransformInitializerBSTD23ID2

        Create a new object of the class itkBSplineTransformInitializerBSTD23ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineTransformInitializerBSTD23ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineTransformInitializerBSTD23ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineTransformInitializerBSTD23ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineTransformInitializerBSTD23ID2.Clone = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_Clone, None, itkBSplineTransformInitializerBSTD23ID2)
itkBSplineTransformInitializerBSTD23ID2.GetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_GetTransform, None, itkBSplineTransformInitializerBSTD23ID2)
itkBSplineTransformInitializerBSTD23ID2.SetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_SetTransform, None, itkBSplineTransformInitializerBSTD23ID2)
itkBSplineTransformInitializerBSTD23ID2.GetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_GetImage, None, itkBSplineTransformInitializerBSTD23ID2)
itkBSplineTransformInitializerBSTD23ID2.SetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_SetImage, None, itkBSplineTransformInitializerBSTD23ID2)
itkBSplineTransformInitializerBSTD23ID2.GetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_GetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD23ID2)
itkBSplineTransformInitializerBSTD23ID2.SetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_SetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD23ID2)
itkBSplineTransformInitializerBSTD23ID2.InitializeTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_InitializeTransform, None, itkBSplineTransformInitializerBSTD23ID2)
itkBSplineTransformInitializerBSTD23ID2_swigregister = _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_swigregister
itkBSplineTransformInitializerBSTD23ID2_swigregister(itkBSplineTransformInitializerBSTD23ID2)

def itkBSplineTransformInitializerBSTD23ID2___New_orig__() -> "itkBSplineTransformInitializerBSTD23ID2_Pointer":
    """itkBSplineTransformInitializerBSTD23ID2___New_orig__() -> itkBSplineTransformInitializerBSTD23ID2_Pointer"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2___New_orig__()

def itkBSplineTransformInitializerBSTD23ID2_cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD23ID2 *":
    """itkBSplineTransformInitializerBSTD23ID2_cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD23ID2"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ID2_cast(obj)

class itkBSplineTransformInitializerBSTD23IF2(ITKCommonBasePython.itkObject):
    """


    BSplineTransformInitializer is a helper class intended to initialize
    the control point grid such that it has a physically consistent
    definition. It sets the transform domain origin, physical dimensions
    and direction from information obtained from the image. It also sets
    the mesh size if asked to do so by calling
    SetTransformDomainMeshSize() before calling InitializeTransform().

    Luis Ibanez

    Nick Tustison

    C++ includes: itkBSplineTransformInitializer.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineTransformInitializerBSTD23IF2_Pointer":
        """__New_orig__() -> itkBSplineTransformInitializerBSTD23IF2_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineTransformInitializerBSTD23IF2_Pointer":
        """Clone(itkBSplineTransformInitializerBSTD23IF2 self) -> itkBSplineTransformInitializerBSTD23IF2_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_Clone(self)


    def GetTransform(self) -> "itkBSplineTransformD23 const *":
        """
        GetTransform(itkBSplineTransformInitializerBSTD23IF2 self) -> itkBSplineTransformD23

        Set/Get the transform
        to be initialized. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_GetTransform(self)


    def SetTransform(self, _arg: 'itkBSplineTransformD23') -> "void":
        """SetTransform(itkBSplineTransformInitializerBSTD23IF2 self, itkBSplineTransformD23 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_SetTransform(self, _arg)


    def GetImage(self) -> "itkImageF2 const *":
        """
        GetImage(itkBSplineTransformInitializerBSTD23IF2 self) -> itkImageF2

        Set/Get the image to
        initialize the domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_GetImage(self)


    def SetImage(self, _arg: 'itkImageF2') -> "void":
        """SetImage(itkBSplineTransformInitializerBSTD23IF2 self, itkImageF2 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_SetImage(self, _arg)


    def GetTransformDomainMeshSize(self) -> "itkSize2":
        """
        GetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD23IF2 self) -> itkSize2

        Allow
        the user to set the mesh size of the transform via the initializer,
        even though the initializer does not do anything with that
        information. Default size is 1^ImageDimension. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_GetTransformDomainMeshSize(self)


    def SetTransformDomainMeshSize(self, arg0: 'itkSize2') -> "void":
        """SetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD23IF2 self, itkSize2 arg0)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_SetTransformDomainMeshSize(self, arg0)


    def InitializeTransform(self) -> "void":
        """
        InitializeTransform(itkBSplineTransformInitializerBSTD23IF2 self)

        Initialize the
        transform using the specified transformation domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_InitializeTransform(self)

    __swig_destroy__ = _itkBSplineTransformInitializerPython.delete_itkBSplineTransformInitializerBSTD23IF2

    def cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD23IF2 *":
        """cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD23IF2"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineTransformInitializerBSTD23IF2

        Create a new object of the class itkBSplineTransformInitializerBSTD23IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineTransformInitializerBSTD23IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineTransformInitializerBSTD23IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineTransformInitializerBSTD23IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineTransformInitializerBSTD23IF2.Clone = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_Clone, None, itkBSplineTransformInitializerBSTD23IF2)
itkBSplineTransformInitializerBSTD23IF2.GetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_GetTransform, None, itkBSplineTransformInitializerBSTD23IF2)
itkBSplineTransformInitializerBSTD23IF2.SetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_SetTransform, None, itkBSplineTransformInitializerBSTD23IF2)
itkBSplineTransformInitializerBSTD23IF2.GetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_GetImage, None, itkBSplineTransformInitializerBSTD23IF2)
itkBSplineTransformInitializerBSTD23IF2.SetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_SetImage, None, itkBSplineTransformInitializerBSTD23IF2)
itkBSplineTransformInitializerBSTD23IF2.GetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_GetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD23IF2)
itkBSplineTransformInitializerBSTD23IF2.SetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_SetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD23IF2)
itkBSplineTransformInitializerBSTD23IF2.InitializeTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_InitializeTransform, None, itkBSplineTransformInitializerBSTD23IF2)
itkBSplineTransformInitializerBSTD23IF2_swigregister = _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_swigregister
itkBSplineTransformInitializerBSTD23IF2_swigregister(itkBSplineTransformInitializerBSTD23IF2)

def itkBSplineTransformInitializerBSTD23IF2___New_orig__() -> "itkBSplineTransformInitializerBSTD23IF2_Pointer":
    """itkBSplineTransformInitializerBSTD23IF2___New_orig__() -> itkBSplineTransformInitializerBSTD23IF2_Pointer"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2___New_orig__()

def itkBSplineTransformInitializerBSTD23IF2_cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD23IF2 *":
    """itkBSplineTransformInitializerBSTD23IF2_cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD23IF2"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IF2_cast(obj)

class itkBSplineTransformInitializerBSTD23ISS2(ITKCommonBasePython.itkObject):
    """


    BSplineTransformInitializer is a helper class intended to initialize
    the control point grid such that it has a physically consistent
    definition. It sets the transform domain origin, physical dimensions
    and direction from information obtained from the image. It also sets
    the mesh size if asked to do so by calling
    SetTransformDomainMeshSize() before calling InitializeTransform().

    Luis Ibanez

    Nick Tustison

    C++ includes: itkBSplineTransformInitializer.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineTransformInitializerBSTD23ISS2_Pointer":
        """__New_orig__() -> itkBSplineTransformInitializerBSTD23ISS2_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineTransformInitializerBSTD23ISS2_Pointer":
        """Clone(itkBSplineTransformInitializerBSTD23ISS2 self) -> itkBSplineTransformInitializerBSTD23ISS2_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_Clone(self)


    def GetTransform(self) -> "itkBSplineTransformD23 const *":
        """
        GetTransform(itkBSplineTransformInitializerBSTD23ISS2 self) -> itkBSplineTransformD23

        Set/Get the transform
        to be initialized. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_GetTransform(self)


    def SetTransform(self, _arg: 'itkBSplineTransformD23') -> "void":
        """SetTransform(itkBSplineTransformInitializerBSTD23ISS2 self, itkBSplineTransformD23 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_SetTransform(self, _arg)


    def GetImage(self) -> "itkImageSS2 const *":
        """
        GetImage(itkBSplineTransformInitializerBSTD23ISS2 self) -> itkImageSS2

        Set/Get the image to
        initialize the domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_GetImage(self)


    def SetImage(self, _arg: 'itkImageSS2') -> "void":
        """SetImage(itkBSplineTransformInitializerBSTD23ISS2 self, itkImageSS2 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_SetImage(self, _arg)


    def GetTransformDomainMeshSize(self) -> "itkSize2":
        """
        GetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD23ISS2 self) -> itkSize2

        Allow
        the user to set the mesh size of the transform via the initializer,
        even though the initializer does not do anything with that
        information. Default size is 1^ImageDimension. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_GetTransformDomainMeshSize(self)


    def SetTransformDomainMeshSize(self, arg0: 'itkSize2') -> "void":
        """SetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD23ISS2 self, itkSize2 arg0)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_SetTransformDomainMeshSize(self, arg0)


    def InitializeTransform(self) -> "void":
        """
        InitializeTransform(itkBSplineTransformInitializerBSTD23ISS2 self)

        Initialize the
        transform using the specified transformation domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_InitializeTransform(self)

    __swig_destroy__ = _itkBSplineTransformInitializerPython.delete_itkBSplineTransformInitializerBSTD23ISS2

    def cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD23ISS2 *":
        """cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD23ISS2"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineTransformInitializerBSTD23ISS2

        Create a new object of the class itkBSplineTransformInitializerBSTD23ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineTransformInitializerBSTD23ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineTransformInitializerBSTD23ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineTransformInitializerBSTD23ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineTransformInitializerBSTD23ISS2.Clone = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_Clone, None, itkBSplineTransformInitializerBSTD23ISS2)
itkBSplineTransformInitializerBSTD23ISS2.GetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_GetTransform, None, itkBSplineTransformInitializerBSTD23ISS2)
itkBSplineTransformInitializerBSTD23ISS2.SetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_SetTransform, None, itkBSplineTransformInitializerBSTD23ISS2)
itkBSplineTransformInitializerBSTD23ISS2.GetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_GetImage, None, itkBSplineTransformInitializerBSTD23ISS2)
itkBSplineTransformInitializerBSTD23ISS2.SetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_SetImage, None, itkBSplineTransformInitializerBSTD23ISS2)
itkBSplineTransformInitializerBSTD23ISS2.GetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_GetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD23ISS2)
itkBSplineTransformInitializerBSTD23ISS2.SetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_SetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD23ISS2)
itkBSplineTransformInitializerBSTD23ISS2.InitializeTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_InitializeTransform, None, itkBSplineTransformInitializerBSTD23ISS2)
itkBSplineTransformInitializerBSTD23ISS2_swigregister = _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_swigregister
itkBSplineTransformInitializerBSTD23ISS2_swigregister(itkBSplineTransformInitializerBSTD23ISS2)

def itkBSplineTransformInitializerBSTD23ISS2___New_orig__() -> "itkBSplineTransformInitializerBSTD23ISS2_Pointer":
    """itkBSplineTransformInitializerBSTD23ISS2___New_orig__() -> itkBSplineTransformInitializerBSTD23ISS2_Pointer"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2___New_orig__()

def itkBSplineTransformInitializerBSTD23ISS2_cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD23ISS2 *":
    """itkBSplineTransformInitializerBSTD23ISS2_cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD23ISS2"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23ISS2_cast(obj)

class itkBSplineTransformInitializerBSTD23IUC2(ITKCommonBasePython.itkObject):
    """


    BSplineTransformInitializer is a helper class intended to initialize
    the control point grid such that it has a physically consistent
    definition. It sets the transform domain origin, physical dimensions
    and direction from information obtained from the image. It also sets
    the mesh size if asked to do so by calling
    SetTransformDomainMeshSize() before calling InitializeTransform().

    Luis Ibanez

    Nick Tustison

    C++ includes: itkBSplineTransformInitializer.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineTransformInitializerBSTD23IUC2_Pointer":
        """__New_orig__() -> itkBSplineTransformInitializerBSTD23IUC2_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineTransformInitializerBSTD23IUC2_Pointer":
        """Clone(itkBSplineTransformInitializerBSTD23IUC2 self) -> itkBSplineTransformInitializerBSTD23IUC2_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_Clone(self)


    def GetTransform(self) -> "itkBSplineTransformD23 const *":
        """
        GetTransform(itkBSplineTransformInitializerBSTD23IUC2 self) -> itkBSplineTransformD23

        Set/Get the transform
        to be initialized. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_GetTransform(self)


    def SetTransform(self, _arg: 'itkBSplineTransformD23') -> "void":
        """SetTransform(itkBSplineTransformInitializerBSTD23IUC2 self, itkBSplineTransformD23 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_SetTransform(self, _arg)


    def GetImage(self) -> "itkImageUC2 const *":
        """
        GetImage(itkBSplineTransformInitializerBSTD23IUC2 self) -> itkImageUC2

        Set/Get the image to
        initialize the domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_GetImage(self)


    def SetImage(self, _arg: 'itkImageUC2') -> "void":
        """SetImage(itkBSplineTransformInitializerBSTD23IUC2 self, itkImageUC2 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_SetImage(self, _arg)


    def GetTransformDomainMeshSize(self) -> "itkSize2":
        """
        GetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD23IUC2 self) -> itkSize2

        Allow
        the user to set the mesh size of the transform via the initializer,
        even though the initializer does not do anything with that
        information. Default size is 1^ImageDimension. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_GetTransformDomainMeshSize(self)


    def SetTransformDomainMeshSize(self, arg0: 'itkSize2') -> "void":
        """SetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD23IUC2 self, itkSize2 arg0)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_SetTransformDomainMeshSize(self, arg0)


    def InitializeTransform(self) -> "void":
        """
        InitializeTransform(itkBSplineTransformInitializerBSTD23IUC2 self)

        Initialize the
        transform using the specified transformation domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_InitializeTransform(self)

    __swig_destroy__ = _itkBSplineTransformInitializerPython.delete_itkBSplineTransformInitializerBSTD23IUC2

    def cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD23IUC2 *":
        """cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD23IUC2"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineTransformInitializerBSTD23IUC2

        Create a new object of the class itkBSplineTransformInitializerBSTD23IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineTransformInitializerBSTD23IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineTransformInitializerBSTD23IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineTransformInitializerBSTD23IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineTransformInitializerBSTD23IUC2.Clone = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_Clone, None, itkBSplineTransformInitializerBSTD23IUC2)
itkBSplineTransformInitializerBSTD23IUC2.GetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_GetTransform, None, itkBSplineTransformInitializerBSTD23IUC2)
itkBSplineTransformInitializerBSTD23IUC2.SetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_SetTransform, None, itkBSplineTransformInitializerBSTD23IUC2)
itkBSplineTransformInitializerBSTD23IUC2.GetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_GetImage, None, itkBSplineTransformInitializerBSTD23IUC2)
itkBSplineTransformInitializerBSTD23IUC2.SetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_SetImage, None, itkBSplineTransformInitializerBSTD23IUC2)
itkBSplineTransformInitializerBSTD23IUC2.GetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_GetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD23IUC2)
itkBSplineTransformInitializerBSTD23IUC2.SetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_SetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD23IUC2)
itkBSplineTransformInitializerBSTD23IUC2.InitializeTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_InitializeTransform, None, itkBSplineTransformInitializerBSTD23IUC2)
itkBSplineTransformInitializerBSTD23IUC2_swigregister = _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_swigregister
itkBSplineTransformInitializerBSTD23IUC2_swigregister(itkBSplineTransformInitializerBSTD23IUC2)

def itkBSplineTransformInitializerBSTD23IUC2___New_orig__() -> "itkBSplineTransformInitializerBSTD23IUC2_Pointer":
    """itkBSplineTransformInitializerBSTD23IUC2___New_orig__() -> itkBSplineTransformInitializerBSTD23IUC2_Pointer"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2___New_orig__()

def itkBSplineTransformInitializerBSTD23IUC2_cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD23IUC2 *":
    """itkBSplineTransformInitializerBSTD23IUC2_cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD23IUC2"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUC2_cast(obj)

class itkBSplineTransformInitializerBSTD23IUS2(ITKCommonBasePython.itkObject):
    """


    BSplineTransformInitializer is a helper class intended to initialize
    the control point grid such that it has a physically consistent
    definition. It sets the transform domain origin, physical dimensions
    and direction from information obtained from the image. It also sets
    the mesh size if asked to do so by calling
    SetTransformDomainMeshSize() before calling InitializeTransform().

    Luis Ibanez

    Nick Tustison

    C++ includes: itkBSplineTransformInitializer.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineTransformInitializerBSTD23IUS2_Pointer":
        """__New_orig__() -> itkBSplineTransformInitializerBSTD23IUS2_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineTransformInitializerBSTD23IUS2_Pointer":
        """Clone(itkBSplineTransformInitializerBSTD23IUS2 self) -> itkBSplineTransformInitializerBSTD23IUS2_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_Clone(self)


    def GetTransform(self) -> "itkBSplineTransformD23 const *":
        """
        GetTransform(itkBSplineTransformInitializerBSTD23IUS2 self) -> itkBSplineTransformD23

        Set/Get the transform
        to be initialized. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_GetTransform(self)


    def SetTransform(self, _arg: 'itkBSplineTransformD23') -> "void":
        """SetTransform(itkBSplineTransformInitializerBSTD23IUS2 self, itkBSplineTransformD23 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_SetTransform(self, _arg)


    def GetImage(self) -> "itkImageUS2 const *":
        """
        GetImage(itkBSplineTransformInitializerBSTD23IUS2 self) -> itkImageUS2

        Set/Get the image to
        initialize the domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_GetImage(self)


    def SetImage(self, _arg: 'itkImageUS2') -> "void":
        """SetImage(itkBSplineTransformInitializerBSTD23IUS2 self, itkImageUS2 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_SetImage(self, _arg)


    def GetTransformDomainMeshSize(self) -> "itkSize2":
        """
        GetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD23IUS2 self) -> itkSize2

        Allow
        the user to set the mesh size of the transform via the initializer,
        even though the initializer does not do anything with that
        information. Default size is 1^ImageDimension. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_GetTransformDomainMeshSize(self)


    def SetTransformDomainMeshSize(self, arg0: 'itkSize2') -> "void":
        """SetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD23IUS2 self, itkSize2 arg0)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_SetTransformDomainMeshSize(self, arg0)


    def InitializeTransform(self) -> "void":
        """
        InitializeTransform(itkBSplineTransformInitializerBSTD23IUS2 self)

        Initialize the
        transform using the specified transformation domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_InitializeTransform(self)

    __swig_destroy__ = _itkBSplineTransformInitializerPython.delete_itkBSplineTransformInitializerBSTD23IUS2

    def cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD23IUS2 *":
        """cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD23IUS2"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineTransformInitializerBSTD23IUS2

        Create a new object of the class itkBSplineTransformInitializerBSTD23IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineTransformInitializerBSTD23IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineTransformInitializerBSTD23IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineTransformInitializerBSTD23IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineTransformInitializerBSTD23IUS2.Clone = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_Clone, None, itkBSplineTransformInitializerBSTD23IUS2)
itkBSplineTransformInitializerBSTD23IUS2.GetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_GetTransform, None, itkBSplineTransformInitializerBSTD23IUS2)
itkBSplineTransformInitializerBSTD23IUS2.SetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_SetTransform, None, itkBSplineTransformInitializerBSTD23IUS2)
itkBSplineTransformInitializerBSTD23IUS2.GetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_GetImage, None, itkBSplineTransformInitializerBSTD23IUS2)
itkBSplineTransformInitializerBSTD23IUS2.SetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_SetImage, None, itkBSplineTransformInitializerBSTD23IUS2)
itkBSplineTransformInitializerBSTD23IUS2.GetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_GetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD23IUS2)
itkBSplineTransformInitializerBSTD23IUS2.SetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_SetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD23IUS2)
itkBSplineTransformInitializerBSTD23IUS2.InitializeTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_InitializeTransform, None, itkBSplineTransformInitializerBSTD23IUS2)
itkBSplineTransformInitializerBSTD23IUS2_swigregister = _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_swigregister
itkBSplineTransformInitializerBSTD23IUS2_swigregister(itkBSplineTransformInitializerBSTD23IUS2)

def itkBSplineTransformInitializerBSTD23IUS2___New_orig__() -> "itkBSplineTransformInitializerBSTD23IUS2_Pointer":
    """itkBSplineTransformInitializerBSTD23IUS2___New_orig__() -> itkBSplineTransformInitializerBSTD23IUS2_Pointer"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2___New_orig__()

def itkBSplineTransformInitializerBSTD23IUS2_cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD23IUS2 *":
    """itkBSplineTransformInitializerBSTD23IUS2_cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD23IUS2"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD23IUS2_cast(obj)

class itkBSplineTransformInitializerBSTD33ID3(ITKCommonBasePython.itkObject):
    """


    BSplineTransformInitializer is a helper class intended to initialize
    the control point grid such that it has a physically consistent
    definition. It sets the transform domain origin, physical dimensions
    and direction from information obtained from the image. It also sets
    the mesh size if asked to do so by calling
    SetTransformDomainMeshSize() before calling InitializeTransform().

    Luis Ibanez

    Nick Tustison

    C++ includes: itkBSplineTransformInitializer.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineTransformInitializerBSTD33ID3_Pointer":
        """__New_orig__() -> itkBSplineTransformInitializerBSTD33ID3_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineTransformInitializerBSTD33ID3_Pointer":
        """Clone(itkBSplineTransformInitializerBSTD33ID3 self) -> itkBSplineTransformInitializerBSTD33ID3_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_Clone(self)


    def GetTransform(self) -> "itkBSplineTransformD33 const *":
        """
        GetTransform(itkBSplineTransformInitializerBSTD33ID3 self) -> itkBSplineTransformD33

        Set/Get the transform
        to be initialized. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_GetTransform(self)


    def SetTransform(self, _arg: 'itkBSplineTransformD33') -> "void":
        """SetTransform(itkBSplineTransformInitializerBSTD33ID3 self, itkBSplineTransformD33 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_SetTransform(self, _arg)


    def GetImage(self) -> "itkImageD3 const *":
        """
        GetImage(itkBSplineTransformInitializerBSTD33ID3 self) -> itkImageD3

        Set/Get the image to
        initialize the domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_GetImage(self)


    def SetImage(self, _arg: 'itkImageD3') -> "void":
        """SetImage(itkBSplineTransformInitializerBSTD33ID3 self, itkImageD3 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_SetImage(self, _arg)


    def GetTransformDomainMeshSize(self) -> "itkSize3":
        """
        GetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD33ID3 self) -> itkSize3

        Allow
        the user to set the mesh size of the transform via the initializer,
        even though the initializer does not do anything with that
        information. Default size is 1^ImageDimension. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_GetTransformDomainMeshSize(self)


    def SetTransformDomainMeshSize(self, arg0: 'itkSize3') -> "void":
        """SetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD33ID3 self, itkSize3 arg0)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_SetTransformDomainMeshSize(self, arg0)


    def InitializeTransform(self) -> "void":
        """
        InitializeTransform(itkBSplineTransformInitializerBSTD33ID3 self)

        Initialize the
        transform using the specified transformation domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_InitializeTransform(self)

    __swig_destroy__ = _itkBSplineTransformInitializerPython.delete_itkBSplineTransformInitializerBSTD33ID3

    def cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD33ID3 *":
        """cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD33ID3"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineTransformInitializerBSTD33ID3

        Create a new object of the class itkBSplineTransformInitializerBSTD33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineTransformInitializerBSTD33ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineTransformInitializerBSTD33ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineTransformInitializerBSTD33ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineTransformInitializerBSTD33ID3.Clone = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_Clone, None, itkBSplineTransformInitializerBSTD33ID3)
itkBSplineTransformInitializerBSTD33ID3.GetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_GetTransform, None, itkBSplineTransformInitializerBSTD33ID3)
itkBSplineTransformInitializerBSTD33ID3.SetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_SetTransform, None, itkBSplineTransformInitializerBSTD33ID3)
itkBSplineTransformInitializerBSTD33ID3.GetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_GetImage, None, itkBSplineTransformInitializerBSTD33ID3)
itkBSplineTransformInitializerBSTD33ID3.SetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_SetImage, None, itkBSplineTransformInitializerBSTD33ID3)
itkBSplineTransformInitializerBSTD33ID3.GetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_GetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD33ID3)
itkBSplineTransformInitializerBSTD33ID3.SetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_SetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD33ID3)
itkBSplineTransformInitializerBSTD33ID3.InitializeTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_InitializeTransform, None, itkBSplineTransformInitializerBSTD33ID3)
itkBSplineTransformInitializerBSTD33ID3_swigregister = _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_swigregister
itkBSplineTransformInitializerBSTD33ID3_swigregister(itkBSplineTransformInitializerBSTD33ID3)

def itkBSplineTransformInitializerBSTD33ID3___New_orig__() -> "itkBSplineTransformInitializerBSTD33ID3_Pointer":
    """itkBSplineTransformInitializerBSTD33ID3___New_orig__() -> itkBSplineTransformInitializerBSTD33ID3_Pointer"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3___New_orig__()

def itkBSplineTransformInitializerBSTD33ID3_cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD33ID3 *":
    """itkBSplineTransformInitializerBSTD33ID3_cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD33ID3"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ID3_cast(obj)

class itkBSplineTransformInitializerBSTD33IF3(ITKCommonBasePython.itkObject):
    """


    BSplineTransformInitializer is a helper class intended to initialize
    the control point grid such that it has a physically consistent
    definition. It sets the transform domain origin, physical dimensions
    and direction from information obtained from the image. It also sets
    the mesh size if asked to do so by calling
    SetTransformDomainMeshSize() before calling InitializeTransform().

    Luis Ibanez

    Nick Tustison

    C++ includes: itkBSplineTransformInitializer.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineTransformInitializerBSTD33IF3_Pointer":
        """__New_orig__() -> itkBSplineTransformInitializerBSTD33IF3_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineTransformInitializerBSTD33IF3_Pointer":
        """Clone(itkBSplineTransformInitializerBSTD33IF3 self) -> itkBSplineTransformInitializerBSTD33IF3_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_Clone(self)


    def GetTransform(self) -> "itkBSplineTransformD33 const *":
        """
        GetTransform(itkBSplineTransformInitializerBSTD33IF3 self) -> itkBSplineTransformD33

        Set/Get the transform
        to be initialized. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_GetTransform(self)


    def SetTransform(self, _arg: 'itkBSplineTransformD33') -> "void":
        """SetTransform(itkBSplineTransformInitializerBSTD33IF3 self, itkBSplineTransformD33 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_SetTransform(self, _arg)


    def GetImage(self) -> "itkImageF3 const *":
        """
        GetImage(itkBSplineTransformInitializerBSTD33IF3 self) -> itkImageF3

        Set/Get the image to
        initialize the domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_GetImage(self)


    def SetImage(self, _arg: 'itkImageF3') -> "void":
        """SetImage(itkBSplineTransformInitializerBSTD33IF3 self, itkImageF3 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_SetImage(self, _arg)


    def GetTransformDomainMeshSize(self) -> "itkSize3":
        """
        GetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD33IF3 self) -> itkSize3

        Allow
        the user to set the mesh size of the transform via the initializer,
        even though the initializer does not do anything with that
        information. Default size is 1^ImageDimension. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_GetTransformDomainMeshSize(self)


    def SetTransformDomainMeshSize(self, arg0: 'itkSize3') -> "void":
        """SetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD33IF3 self, itkSize3 arg0)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_SetTransformDomainMeshSize(self, arg0)


    def InitializeTransform(self) -> "void":
        """
        InitializeTransform(itkBSplineTransformInitializerBSTD33IF3 self)

        Initialize the
        transform using the specified transformation domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_InitializeTransform(self)

    __swig_destroy__ = _itkBSplineTransformInitializerPython.delete_itkBSplineTransformInitializerBSTD33IF3

    def cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD33IF3 *":
        """cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD33IF3"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineTransformInitializerBSTD33IF3

        Create a new object of the class itkBSplineTransformInitializerBSTD33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineTransformInitializerBSTD33IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineTransformInitializerBSTD33IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineTransformInitializerBSTD33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineTransformInitializerBSTD33IF3.Clone = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_Clone, None, itkBSplineTransformInitializerBSTD33IF3)
itkBSplineTransformInitializerBSTD33IF3.GetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_GetTransform, None, itkBSplineTransformInitializerBSTD33IF3)
itkBSplineTransformInitializerBSTD33IF3.SetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_SetTransform, None, itkBSplineTransformInitializerBSTD33IF3)
itkBSplineTransformInitializerBSTD33IF3.GetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_GetImage, None, itkBSplineTransformInitializerBSTD33IF3)
itkBSplineTransformInitializerBSTD33IF3.SetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_SetImage, None, itkBSplineTransformInitializerBSTD33IF3)
itkBSplineTransformInitializerBSTD33IF3.GetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_GetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD33IF3)
itkBSplineTransformInitializerBSTD33IF3.SetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_SetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD33IF3)
itkBSplineTransformInitializerBSTD33IF3.InitializeTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_InitializeTransform, None, itkBSplineTransformInitializerBSTD33IF3)
itkBSplineTransformInitializerBSTD33IF3_swigregister = _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_swigregister
itkBSplineTransformInitializerBSTD33IF3_swigregister(itkBSplineTransformInitializerBSTD33IF3)

def itkBSplineTransformInitializerBSTD33IF3___New_orig__() -> "itkBSplineTransformInitializerBSTD33IF3_Pointer":
    """itkBSplineTransformInitializerBSTD33IF3___New_orig__() -> itkBSplineTransformInitializerBSTD33IF3_Pointer"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3___New_orig__()

def itkBSplineTransformInitializerBSTD33IF3_cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD33IF3 *":
    """itkBSplineTransformInitializerBSTD33IF3_cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD33IF3"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IF3_cast(obj)

class itkBSplineTransformInitializerBSTD33ISS3(ITKCommonBasePython.itkObject):
    """


    BSplineTransformInitializer is a helper class intended to initialize
    the control point grid such that it has a physically consistent
    definition. It sets the transform domain origin, physical dimensions
    and direction from information obtained from the image. It also sets
    the mesh size if asked to do so by calling
    SetTransformDomainMeshSize() before calling InitializeTransform().

    Luis Ibanez

    Nick Tustison

    C++ includes: itkBSplineTransformInitializer.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineTransformInitializerBSTD33ISS3_Pointer":
        """__New_orig__() -> itkBSplineTransformInitializerBSTD33ISS3_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineTransformInitializerBSTD33ISS3_Pointer":
        """Clone(itkBSplineTransformInitializerBSTD33ISS3 self) -> itkBSplineTransformInitializerBSTD33ISS3_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_Clone(self)


    def GetTransform(self) -> "itkBSplineTransformD33 const *":
        """
        GetTransform(itkBSplineTransformInitializerBSTD33ISS3 self) -> itkBSplineTransformD33

        Set/Get the transform
        to be initialized. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_GetTransform(self)


    def SetTransform(self, _arg: 'itkBSplineTransformD33') -> "void":
        """SetTransform(itkBSplineTransformInitializerBSTD33ISS3 self, itkBSplineTransformD33 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_SetTransform(self, _arg)


    def GetImage(self) -> "itkImageSS3 const *":
        """
        GetImage(itkBSplineTransformInitializerBSTD33ISS3 self) -> itkImageSS3

        Set/Get the image to
        initialize the domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_GetImage(self)


    def SetImage(self, _arg: 'itkImageSS3') -> "void":
        """SetImage(itkBSplineTransformInitializerBSTD33ISS3 self, itkImageSS3 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_SetImage(self, _arg)


    def GetTransformDomainMeshSize(self) -> "itkSize3":
        """
        GetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD33ISS3 self) -> itkSize3

        Allow
        the user to set the mesh size of the transform via the initializer,
        even though the initializer does not do anything with that
        information. Default size is 1^ImageDimension. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_GetTransformDomainMeshSize(self)


    def SetTransformDomainMeshSize(self, arg0: 'itkSize3') -> "void":
        """SetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD33ISS3 self, itkSize3 arg0)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_SetTransformDomainMeshSize(self, arg0)


    def InitializeTransform(self) -> "void":
        """
        InitializeTransform(itkBSplineTransformInitializerBSTD33ISS3 self)

        Initialize the
        transform using the specified transformation domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_InitializeTransform(self)

    __swig_destroy__ = _itkBSplineTransformInitializerPython.delete_itkBSplineTransformInitializerBSTD33ISS3

    def cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD33ISS3 *":
        """cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD33ISS3"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineTransformInitializerBSTD33ISS3

        Create a new object of the class itkBSplineTransformInitializerBSTD33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineTransformInitializerBSTD33ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineTransformInitializerBSTD33ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineTransformInitializerBSTD33ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineTransformInitializerBSTD33ISS3.Clone = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_Clone, None, itkBSplineTransformInitializerBSTD33ISS3)
itkBSplineTransformInitializerBSTD33ISS3.GetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_GetTransform, None, itkBSplineTransformInitializerBSTD33ISS3)
itkBSplineTransformInitializerBSTD33ISS3.SetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_SetTransform, None, itkBSplineTransformInitializerBSTD33ISS3)
itkBSplineTransformInitializerBSTD33ISS3.GetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_GetImage, None, itkBSplineTransformInitializerBSTD33ISS3)
itkBSplineTransformInitializerBSTD33ISS3.SetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_SetImage, None, itkBSplineTransformInitializerBSTD33ISS3)
itkBSplineTransformInitializerBSTD33ISS3.GetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_GetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD33ISS3)
itkBSplineTransformInitializerBSTD33ISS3.SetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_SetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD33ISS3)
itkBSplineTransformInitializerBSTD33ISS3.InitializeTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_InitializeTransform, None, itkBSplineTransformInitializerBSTD33ISS3)
itkBSplineTransformInitializerBSTD33ISS3_swigregister = _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_swigregister
itkBSplineTransformInitializerBSTD33ISS3_swigregister(itkBSplineTransformInitializerBSTD33ISS3)

def itkBSplineTransformInitializerBSTD33ISS3___New_orig__() -> "itkBSplineTransformInitializerBSTD33ISS3_Pointer":
    """itkBSplineTransformInitializerBSTD33ISS3___New_orig__() -> itkBSplineTransformInitializerBSTD33ISS3_Pointer"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3___New_orig__()

def itkBSplineTransformInitializerBSTD33ISS3_cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD33ISS3 *":
    """itkBSplineTransformInitializerBSTD33ISS3_cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD33ISS3"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33ISS3_cast(obj)

class itkBSplineTransformInitializerBSTD33IUC3(ITKCommonBasePython.itkObject):
    """


    BSplineTransformInitializer is a helper class intended to initialize
    the control point grid such that it has a physically consistent
    definition. It sets the transform domain origin, physical dimensions
    and direction from information obtained from the image. It also sets
    the mesh size if asked to do so by calling
    SetTransformDomainMeshSize() before calling InitializeTransform().

    Luis Ibanez

    Nick Tustison

    C++ includes: itkBSplineTransformInitializer.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineTransformInitializerBSTD33IUC3_Pointer":
        """__New_orig__() -> itkBSplineTransformInitializerBSTD33IUC3_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineTransformInitializerBSTD33IUC3_Pointer":
        """Clone(itkBSplineTransformInitializerBSTD33IUC3 self) -> itkBSplineTransformInitializerBSTD33IUC3_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_Clone(self)


    def GetTransform(self) -> "itkBSplineTransformD33 const *":
        """
        GetTransform(itkBSplineTransformInitializerBSTD33IUC3 self) -> itkBSplineTransformD33

        Set/Get the transform
        to be initialized. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_GetTransform(self)


    def SetTransform(self, _arg: 'itkBSplineTransformD33') -> "void":
        """SetTransform(itkBSplineTransformInitializerBSTD33IUC3 self, itkBSplineTransformD33 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_SetTransform(self, _arg)


    def GetImage(self) -> "itkImageUC3 const *":
        """
        GetImage(itkBSplineTransformInitializerBSTD33IUC3 self) -> itkImageUC3

        Set/Get the image to
        initialize the domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_GetImage(self)


    def SetImage(self, _arg: 'itkImageUC3') -> "void":
        """SetImage(itkBSplineTransformInitializerBSTD33IUC3 self, itkImageUC3 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_SetImage(self, _arg)


    def GetTransformDomainMeshSize(self) -> "itkSize3":
        """
        GetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD33IUC3 self) -> itkSize3

        Allow
        the user to set the mesh size of the transform via the initializer,
        even though the initializer does not do anything with that
        information. Default size is 1^ImageDimension. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_GetTransformDomainMeshSize(self)


    def SetTransformDomainMeshSize(self, arg0: 'itkSize3') -> "void":
        """SetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD33IUC3 self, itkSize3 arg0)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_SetTransformDomainMeshSize(self, arg0)


    def InitializeTransform(self) -> "void":
        """
        InitializeTransform(itkBSplineTransformInitializerBSTD33IUC3 self)

        Initialize the
        transform using the specified transformation domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_InitializeTransform(self)

    __swig_destroy__ = _itkBSplineTransformInitializerPython.delete_itkBSplineTransformInitializerBSTD33IUC3

    def cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD33IUC3 *":
        """cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD33IUC3"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineTransformInitializerBSTD33IUC3

        Create a new object of the class itkBSplineTransformInitializerBSTD33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineTransformInitializerBSTD33IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineTransformInitializerBSTD33IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineTransformInitializerBSTD33IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineTransformInitializerBSTD33IUC3.Clone = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_Clone, None, itkBSplineTransformInitializerBSTD33IUC3)
itkBSplineTransformInitializerBSTD33IUC3.GetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_GetTransform, None, itkBSplineTransformInitializerBSTD33IUC3)
itkBSplineTransformInitializerBSTD33IUC3.SetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_SetTransform, None, itkBSplineTransformInitializerBSTD33IUC3)
itkBSplineTransformInitializerBSTD33IUC3.GetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_GetImage, None, itkBSplineTransformInitializerBSTD33IUC3)
itkBSplineTransformInitializerBSTD33IUC3.SetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_SetImage, None, itkBSplineTransformInitializerBSTD33IUC3)
itkBSplineTransformInitializerBSTD33IUC3.GetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_GetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD33IUC3)
itkBSplineTransformInitializerBSTD33IUC3.SetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_SetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD33IUC3)
itkBSplineTransformInitializerBSTD33IUC3.InitializeTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_InitializeTransform, None, itkBSplineTransformInitializerBSTD33IUC3)
itkBSplineTransformInitializerBSTD33IUC3_swigregister = _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_swigregister
itkBSplineTransformInitializerBSTD33IUC3_swigregister(itkBSplineTransformInitializerBSTD33IUC3)

def itkBSplineTransformInitializerBSTD33IUC3___New_orig__() -> "itkBSplineTransformInitializerBSTD33IUC3_Pointer":
    """itkBSplineTransformInitializerBSTD33IUC3___New_orig__() -> itkBSplineTransformInitializerBSTD33IUC3_Pointer"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3___New_orig__()

def itkBSplineTransformInitializerBSTD33IUC3_cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD33IUC3 *":
    """itkBSplineTransformInitializerBSTD33IUC3_cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD33IUC3"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUC3_cast(obj)

class itkBSplineTransformInitializerBSTD33IUS3(ITKCommonBasePython.itkObject):
    """


    BSplineTransformInitializer is a helper class intended to initialize
    the control point grid such that it has a physically consistent
    definition. It sets the transform domain origin, physical dimensions
    and direction from information obtained from the image. It also sets
    the mesh size if asked to do so by calling
    SetTransformDomainMeshSize() before calling InitializeTransform().

    Luis Ibanez

    Nick Tustison

    C++ includes: itkBSplineTransformInitializer.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBSplineTransformInitializerBSTD33IUS3_Pointer":
        """__New_orig__() -> itkBSplineTransformInitializerBSTD33IUS3_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBSplineTransformInitializerBSTD33IUS3_Pointer":
        """Clone(itkBSplineTransformInitializerBSTD33IUS3 self) -> itkBSplineTransformInitializerBSTD33IUS3_Pointer"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_Clone(self)


    def GetTransform(self) -> "itkBSplineTransformD33 const *":
        """
        GetTransform(itkBSplineTransformInitializerBSTD33IUS3 self) -> itkBSplineTransformD33

        Set/Get the transform
        to be initialized. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_GetTransform(self)


    def SetTransform(self, _arg: 'itkBSplineTransformD33') -> "void":
        """SetTransform(itkBSplineTransformInitializerBSTD33IUS3 self, itkBSplineTransformD33 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_SetTransform(self, _arg)


    def GetImage(self) -> "itkImageUS3 const *":
        """
        GetImage(itkBSplineTransformInitializerBSTD33IUS3 self) -> itkImageUS3

        Set/Get the image to
        initialize the domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_GetImage(self)


    def SetImage(self, _arg: 'itkImageUS3') -> "void":
        """SetImage(itkBSplineTransformInitializerBSTD33IUS3 self, itkImageUS3 _arg)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_SetImage(self, _arg)


    def GetTransformDomainMeshSize(self) -> "itkSize3":
        """
        GetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD33IUS3 self) -> itkSize3

        Allow
        the user to set the mesh size of the transform via the initializer,
        even though the initializer does not do anything with that
        information. Default size is 1^ImageDimension. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_GetTransformDomainMeshSize(self)


    def SetTransformDomainMeshSize(self, arg0: 'itkSize3') -> "void":
        """SetTransformDomainMeshSize(itkBSplineTransformInitializerBSTD33IUS3 self, itkSize3 arg0)"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_SetTransformDomainMeshSize(self, arg0)


    def InitializeTransform(self) -> "void":
        """
        InitializeTransform(itkBSplineTransformInitializerBSTD33IUS3 self)

        Initialize the
        transform using the specified transformation domain. 
        """
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_InitializeTransform(self)

    __swig_destroy__ = _itkBSplineTransformInitializerPython.delete_itkBSplineTransformInitializerBSTD33IUS3

    def cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD33IUS3 *":
        """cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD33IUS3"""
        return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBSplineTransformInitializerBSTD33IUS3

        Create a new object of the class itkBSplineTransformInitializerBSTD33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineTransformInitializerBSTD33IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBSplineTransformInitializerBSTD33IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineTransformInitializerBSTD33IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineTransformInitializerBSTD33IUS3.Clone = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_Clone, None, itkBSplineTransformInitializerBSTD33IUS3)
itkBSplineTransformInitializerBSTD33IUS3.GetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_GetTransform, None, itkBSplineTransformInitializerBSTD33IUS3)
itkBSplineTransformInitializerBSTD33IUS3.SetTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_SetTransform, None, itkBSplineTransformInitializerBSTD33IUS3)
itkBSplineTransformInitializerBSTD33IUS3.GetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_GetImage, None, itkBSplineTransformInitializerBSTD33IUS3)
itkBSplineTransformInitializerBSTD33IUS3.SetImage = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_SetImage, None, itkBSplineTransformInitializerBSTD33IUS3)
itkBSplineTransformInitializerBSTD33IUS3.GetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_GetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD33IUS3)
itkBSplineTransformInitializerBSTD33IUS3.SetTransformDomainMeshSize = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_SetTransformDomainMeshSize, None, itkBSplineTransformInitializerBSTD33IUS3)
itkBSplineTransformInitializerBSTD33IUS3.InitializeTransform = new_instancemethod(_itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_InitializeTransform, None, itkBSplineTransformInitializerBSTD33IUS3)
itkBSplineTransformInitializerBSTD33IUS3_swigregister = _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_swigregister
itkBSplineTransformInitializerBSTD33IUS3_swigregister(itkBSplineTransformInitializerBSTD33IUS3)

def itkBSplineTransformInitializerBSTD33IUS3___New_orig__() -> "itkBSplineTransformInitializerBSTD33IUS3_Pointer":
    """itkBSplineTransformInitializerBSTD33IUS3___New_orig__() -> itkBSplineTransformInitializerBSTD33IUS3_Pointer"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3___New_orig__()

def itkBSplineTransformInitializerBSTD33IUS3_cast(obj: 'itkLightObject') -> "itkBSplineTransformInitializerBSTD33IUS3 *":
    """itkBSplineTransformInitializerBSTD33IUS3_cast(itkLightObject obj) -> itkBSplineTransformInitializerBSTD33IUS3"""
    return _itkBSplineTransformInitializerPython.itkBSplineTransformInitializerBSTD33IUS3_cast(obj)



