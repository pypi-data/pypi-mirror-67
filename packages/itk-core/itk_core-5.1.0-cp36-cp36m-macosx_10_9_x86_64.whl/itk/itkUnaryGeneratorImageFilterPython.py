# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkUnaryGeneratorImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkUnaryGeneratorImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkUnaryGeneratorImageFilterPython
            return _itkUnaryGeneratorImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkUnaryGeneratorImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkUnaryGeneratorImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkUnaryGeneratorImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython
import ITKCommonBasePython
import pyBasePython
import itkImageSourcePython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkImageSourceCommonPython
import itkVectorImagePython
import stdcomplexPython
import itkVariableLengthVectorPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrixPython
import vnl_vectorPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterBPython
import itkInPlaceImageFilterBPython

def itkUnaryGeneratorImageFilterIRGBAUC3IUC3_New():
  return itkUnaryGeneratorImageFilterIRGBAUC3IUC3.New()


def itkUnaryGeneratorImageFilterIRGBAUC2IUC2_New():
  return itkUnaryGeneratorImageFilterIRGBAUC2IUC2.New()


def itkUnaryGeneratorImageFilterIRGBUC3IUC3_New():
  return itkUnaryGeneratorImageFilterIRGBUC3IUC3.New()


def itkUnaryGeneratorImageFilterIRGBUC2IUC2_New():
  return itkUnaryGeneratorImageFilterIRGBUC2IUC2.New()


def itkUnaryGeneratorImageFilterICF3ICF3_New():
  return itkUnaryGeneratorImageFilterICF3ICF3.New()


def itkUnaryGeneratorImageFilterICF2ICF2_New():
  return itkUnaryGeneratorImageFilterICF2ICF2.New()


def itkUnaryGeneratorImageFilterICF3ID3_New():
  return itkUnaryGeneratorImageFilterICF3ID3.New()


def itkUnaryGeneratorImageFilterICF2ID2_New():
  return itkUnaryGeneratorImageFilterICF2ID2.New()


def itkUnaryGeneratorImageFilterICF3IF3_New():
  return itkUnaryGeneratorImageFilterICF3IF3.New()


def itkUnaryGeneratorImageFilterICF2IF2_New():
  return itkUnaryGeneratorImageFilterICF2IF2.New()


def itkUnaryGeneratorImageFilterICF3IUS3_New():
  return itkUnaryGeneratorImageFilterICF3IUS3.New()


def itkUnaryGeneratorImageFilterICF2IUS2_New():
  return itkUnaryGeneratorImageFilterICF2IUS2.New()


def itkUnaryGeneratorImageFilterICF3IUC3_New():
  return itkUnaryGeneratorImageFilterICF3IUC3.New()


def itkUnaryGeneratorImageFilterICF2IUC2_New():
  return itkUnaryGeneratorImageFilterICF2IUC2.New()


def itkUnaryGeneratorImageFilterICF3ISS3_New():
  return itkUnaryGeneratorImageFilterICF3ISS3.New()


def itkUnaryGeneratorImageFilterICF2ISS2_New():
  return itkUnaryGeneratorImageFilterICF2ISS2.New()


def itkUnaryGeneratorImageFilterID3ICF3_New():
  return itkUnaryGeneratorImageFilterID3ICF3.New()


def itkUnaryGeneratorImageFilterID2ICF2_New():
  return itkUnaryGeneratorImageFilterID2ICF2.New()


def itkUnaryGeneratorImageFilterID3ID3_New():
  return itkUnaryGeneratorImageFilterID3ID3.New()


def itkUnaryGeneratorImageFilterID2ID2_New():
  return itkUnaryGeneratorImageFilterID2ID2.New()


def itkUnaryGeneratorImageFilterID3IF3_New():
  return itkUnaryGeneratorImageFilterID3IF3.New()


def itkUnaryGeneratorImageFilterID2IF2_New():
  return itkUnaryGeneratorImageFilterID2IF2.New()


def itkUnaryGeneratorImageFilterID3IUS3_New():
  return itkUnaryGeneratorImageFilterID3IUS3.New()


def itkUnaryGeneratorImageFilterID2IUS2_New():
  return itkUnaryGeneratorImageFilterID2IUS2.New()


def itkUnaryGeneratorImageFilterID3IUC3_New():
  return itkUnaryGeneratorImageFilterID3IUC3.New()


def itkUnaryGeneratorImageFilterID2IUC2_New():
  return itkUnaryGeneratorImageFilterID2IUC2.New()


def itkUnaryGeneratorImageFilterID3ISS3_New():
  return itkUnaryGeneratorImageFilterID3ISS3.New()


def itkUnaryGeneratorImageFilterID2ISS2_New():
  return itkUnaryGeneratorImageFilterID2ISS2.New()


def itkUnaryGeneratorImageFilterIF3ICF3_New():
  return itkUnaryGeneratorImageFilterIF3ICF3.New()


def itkUnaryGeneratorImageFilterIF2ICF2_New():
  return itkUnaryGeneratorImageFilterIF2ICF2.New()


def itkUnaryGeneratorImageFilterIF3ID3_New():
  return itkUnaryGeneratorImageFilterIF3ID3.New()


def itkUnaryGeneratorImageFilterIF2ID2_New():
  return itkUnaryGeneratorImageFilterIF2ID2.New()


def itkUnaryGeneratorImageFilterIF3IF3_New():
  return itkUnaryGeneratorImageFilterIF3IF3.New()


def itkUnaryGeneratorImageFilterIF2IF2_New():
  return itkUnaryGeneratorImageFilterIF2IF2.New()


def itkUnaryGeneratorImageFilterIF3IUS3_New():
  return itkUnaryGeneratorImageFilterIF3IUS3.New()


def itkUnaryGeneratorImageFilterIF2IUS2_New():
  return itkUnaryGeneratorImageFilterIF2IUS2.New()


def itkUnaryGeneratorImageFilterIF3IUC3_New():
  return itkUnaryGeneratorImageFilterIF3IUC3.New()


def itkUnaryGeneratorImageFilterIF2IUC2_New():
  return itkUnaryGeneratorImageFilterIF2IUC2.New()


def itkUnaryGeneratorImageFilterIF3ISS3_New():
  return itkUnaryGeneratorImageFilterIF3ISS3.New()


def itkUnaryGeneratorImageFilterIF2ISS2_New():
  return itkUnaryGeneratorImageFilterIF2ISS2.New()


def itkUnaryGeneratorImageFilterIUS3ICF3_New():
  return itkUnaryGeneratorImageFilterIUS3ICF3.New()


def itkUnaryGeneratorImageFilterIUS2ICF2_New():
  return itkUnaryGeneratorImageFilterIUS2ICF2.New()


def itkUnaryGeneratorImageFilterIUS3ID3_New():
  return itkUnaryGeneratorImageFilterIUS3ID3.New()


def itkUnaryGeneratorImageFilterIUS2ID2_New():
  return itkUnaryGeneratorImageFilterIUS2ID2.New()


def itkUnaryGeneratorImageFilterIUS3IF3_New():
  return itkUnaryGeneratorImageFilterIUS3IF3.New()


def itkUnaryGeneratorImageFilterIUS2IF2_New():
  return itkUnaryGeneratorImageFilterIUS2IF2.New()


def itkUnaryGeneratorImageFilterIUS3IUS3_New():
  return itkUnaryGeneratorImageFilterIUS3IUS3.New()


def itkUnaryGeneratorImageFilterIUS2IUS2_New():
  return itkUnaryGeneratorImageFilterIUS2IUS2.New()


def itkUnaryGeneratorImageFilterIUS3IUC3_New():
  return itkUnaryGeneratorImageFilterIUS3IUC3.New()


def itkUnaryGeneratorImageFilterIUS2IUC2_New():
  return itkUnaryGeneratorImageFilterIUS2IUC2.New()


def itkUnaryGeneratorImageFilterIUS3ISS3_New():
  return itkUnaryGeneratorImageFilterIUS3ISS3.New()


def itkUnaryGeneratorImageFilterIUS2ISS2_New():
  return itkUnaryGeneratorImageFilterIUS2ISS2.New()


def itkUnaryGeneratorImageFilterIUC3ICF3_New():
  return itkUnaryGeneratorImageFilterIUC3ICF3.New()


def itkUnaryGeneratorImageFilterIUC2ICF2_New():
  return itkUnaryGeneratorImageFilterIUC2ICF2.New()


def itkUnaryGeneratorImageFilterIUC3ID3_New():
  return itkUnaryGeneratorImageFilterIUC3ID3.New()


def itkUnaryGeneratorImageFilterIUC2ID2_New():
  return itkUnaryGeneratorImageFilterIUC2ID2.New()


def itkUnaryGeneratorImageFilterIUC3IF3_New():
  return itkUnaryGeneratorImageFilterIUC3IF3.New()


def itkUnaryGeneratorImageFilterIUC2IF2_New():
  return itkUnaryGeneratorImageFilterIUC2IF2.New()


def itkUnaryGeneratorImageFilterIUC3IUS3_New():
  return itkUnaryGeneratorImageFilterIUC3IUS3.New()


def itkUnaryGeneratorImageFilterIUC2IUS2_New():
  return itkUnaryGeneratorImageFilterIUC2IUS2.New()


def itkUnaryGeneratorImageFilterIUC3IUC3_New():
  return itkUnaryGeneratorImageFilterIUC3IUC3.New()


def itkUnaryGeneratorImageFilterIUC2IUC2_New():
  return itkUnaryGeneratorImageFilterIUC2IUC2.New()


def itkUnaryGeneratorImageFilterIUC3ISS3_New():
  return itkUnaryGeneratorImageFilterIUC3ISS3.New()


def itkUnaryGeneratorImageFilterIUC2ISS2_New():
  return itkUnaryGeneratorImageFilterIUC2ISS2.New()


def itkUnaryGeneratorImageFilterISS3ICF3_New():
  return itkUnaryGeneratorImageFilterISS3ICF3.New()


def itkUnaryGeneratorImageFilterISS2ICF2_New():
  return itkUnaryGeneratorImageFilterISS2ICF2.New()


def itkUnaryGeneratorImageFilterISS3ID3_New():
  return itkUnaryGeneratorImageFilterISS3ID3.New()


def itkUnaryGeneratorImageFilterISS2ID2_New():
  return itkUnaryGeneratorImageFilterISS2ID2.New()


def itkUnaryGeneratorImageFilterISS3IF3_New():
  return itkUnaryGeneratorImageFilterISS3IF3.New()


def itkUnaryGeneratorImageFilterISS2IF2_New():
  return itkUnaryGeneratorImageFilterISS2IF2.New()


def itkUnaryGeneratorImageFilterISS3IUS3_New():
  return itkUnaryGeneratorImageFilterISS3IUS3.New()


def itkUnaryGeneratorImageFilterISS2IUS2_New():
  return itkUnaryGeneratorImageFilterISS2IUS2.New()


def itkUnaryGeneratorImageFilterISS3IUC3_New():
  return itkUnaryGeneratorImageFilterISS3IUC3.New()


def itkUnaryGeneratorImageFilterISS2IUC2_New():
  return itkUnaryGeneratorImageFilterISS2IUC2.New()


def itkUnaryGeneratorImageFilterISS3ISS3_New():
  return itkUnaryGeneratorImageFilterISS3ISS3.New()


def itkUnaryGeneratorImageFilterISS2ISS2_New():
  return itkUnaryGeneratorImageFilterISS2ISS2.New()

class itkUnaryGeneratorImageFilterICF2ICF2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF2ICF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF2ICF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF2ICF2 self) -> itkUnaryGeneratorImageFilterICF2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ICF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF2ICF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2ICF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2ICF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ICF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF2ICF2

        Create a new object of the class itkUnaryGeneratorImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF2ICF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ICF2_Clone, None, itkUnaryGeneratorImageFilterICF2ICF2)
itkUnaryGeneratorImageFilterICF2ICF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ICF2_swigregister
itkUnaryGeneratorImageFilterICF2ICF2_swigregister(itkUnaryGeneratorImageFilterICF2ICF2)

def itkUnaryGeneratorImageFilterICF2ICF2___New_orig__() -> "itkUnaryGeneratorImageFilterICF2ICF2_Pointer":
    """itkUnaryGeneratorImageFilterICF2ICF2___New_orig__() -> itkUnaryGeneratorImageFilterICF2ICF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ICF2___New_orig__()

def itkUnaryGeneratorImageFilterICF2ICF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2ICF2 *":
    """itkUnaryGeneratorImageFilterICF2ICF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2ICF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ICF2_cast(obj)

class itkUnaryGeneratorImageFilterICF2ID2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF2ID2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF2ID2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF2ID2 self) -> itkUnaryGeneratorImageFilterICF2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ID2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF2ID2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2ID2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2ID2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF2ID2

        Create a new object of the class itkUnaryGeneratorImageFilterICF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF2ID2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ID2_Clone, None, itkUnaryGeneratorImageFilterICF2ID2)
itkUnaryGeneratorImageFilterICF2ID2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ID2_swigregister
itkUnaryGeneratorImageFilterICF2ID2_swigregister(itkUnaryGeneratorImageFilterICF2ID2)

def itkUnaryGeneratorImageFilterICF2ID2___New_orig__() -> "itkUnaryGeneratorImageFilterICF2ID2_Pointer":
    """itkUnaryGeneratorImageFilterICF2ID2___New_orig__() -> itkUnaryGeneratorImageFilterICF2ID2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ID2___New_orig__()

def itkUnaryGeneratorImageFilterICF2ID2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2ID2 *":
    """itkUnaryGeneratorImageFilterICF2ID2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2ID2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ID2_cast(obj)

class itkUnaryGeneratorImageFilterICF2IF2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF2IF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF2IF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF2IF2 self) -> itkUnaryGeneratorImageFilterICF2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF2IF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2IF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2IF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF2IF2

        Create a new object of the class itkUnaryGeneratorImageFilterICF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF2IF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IF2_Clone, None, itkUnaryGeneratorImageFilterICF2IF2)
itkUnaryGeneratorImageFilterICF2IF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IF2_swigregister
itkUnaryGeneratorImageFilterICF2IF2_swigregister(itkUnaryGeneratorImageFilterICF2IF2)

def itkUnaryGeneratorImageFilterICF2IF2___New_orig__() -> "itkUnaryGeneratorImageFilterICF2IF2_Pointer":
    """itkUnaryGeneratorImageFilterICF2IF2___New_orig__() -> itkUnaryGeneratorImageFilterICF2IF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IF2___New_orig__()

def itkUnaryGeneratorImageFilterICF2IF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2IF2 *":
    """itkUnaryGeneratorImageFilterICF2IF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2IF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IF2_cast(obj)

class itkUnaryGeneratorImageFilterICF2ISS2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ISS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF2ISS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF2ISS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF2ISS2 self) -> itkUnaryGeneratorImageFilterICF2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ISS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF2ISS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2ISS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2ISS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF2ISS2

        Create a new object of the class itkUnaryGeneratorImageFilterICF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF2ISS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ISS2_Clone, None, itkUnaryGeneratorImageFilterICF2ISS2)
itkUnaryGeneratorImageFilterICF2ISS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ISS2_swigregister
itkUnaryGeneratorImageFilterICF2ISS2_swigregister(itkUnaryGeneratorImageFilterICF2ISS2)

def itkUnaryGeneratorImageFilterICF2ISS2___New_orig__() -> "itkUnaryGeneratorImageFilterICF2ISS2_Pointer":
    """itkUnaryGeneratorImageFilterICF2ISS2___New_orig__() -> itkUnaryGeneratorImageFilterICF2ISS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ISS2___New_orig__()

def itkUnaryGeneratorImageFilterICF2ISS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2ISS2 *":
    """itkUnaryGeneratorImageFilterICF2ISS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2ISS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2ISS2_cast(obj)

class itkUnaryGeneratorImageFilterICF2IUC2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IUC2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF2IUC2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF2IUC2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF2IUC2 self) -> itkUnaryGeneratorImageFilterICF2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUC2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF2IUC2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2IUC2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2IUC2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF2IUC2

        Create a new object of the class itkUnaryGeneratorImageFilterICF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF2IUC2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUC2_Clone, None, itkUnaryGeneratorImageFilterICF2IUC2)
itkUnaryGeneratorImageFilterICF2IUC2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUC2_swigregister
itkUnaryGeneratorImageFilterICF2IUC2_swigregister(itkUnaryGeneratorImageFilterICF2IUC2)

def itkUnaryGeneratorImageFilterICF2IUC2___New_orig__() -> "itkUnaryGeneratorImageFilterICF2IUC2_Pointer":
    """itkUnaryGeneratorImageFilterICF2IUC2___New_orig__() -> itkUnaryGeneratorImageFilterICF2IUC2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUC2___New_orig__()

def itkUnaryGeneratorImageFilterICF2IUC2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2IUC2 *":
    """itkUnaryGeneratorImageFilterICF2IUC2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2IUC2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUC2_cast(obj)

class itkUnaryGeneratorImageFilterICF2IUS2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IUS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF2IUS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF2IUS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF2IUS2 self) -> itkUnaryGeneratorImageFilterICF2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF2IUS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2IUS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2IUS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF2IUS2

        Create a new object of the class itkUnaryGeneratorImageFilterICF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF2IUS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUS2_Clone, None, itkUnaryGeneratorImageFilterICF2IUS2)
itkUnaryGeneratorImageFilterICF2IUS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUS2_swigregister
itkUnaryGeneratorImageFilterICF2IUS2_swigregister(itkUnaryGeneratorImageFilterICF2IUS2)

def itkUnaryGeneratorImageFilterICF2IUS2___New_orig__() -> "itkUnaryGeneratorImageFilterICF2IUS2_Pointer":
    """itkUnaryGeneratorImageFilterICF2IUS2___New_orig__() -> itkUnaryGeneratorImageFilterICF2IUS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUS2___New_orig__()

def itkUnaryGeneratorImageFilterICF2IUS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF2IUS2 *":
    """itkUnaryGeneratorImageFilterICF2IUS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF2IUS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IUS2_cast(obj)

class itkUnaryGeneratorImageFilterICF3ICF3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF3ICF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF3ICF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF3ICF3 self) -> itkUnaryGeneratorImageFilterICF3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ICF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF3ICF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3ICF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3ICF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ICF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF3ICF3

        Create a new object of the class itkUnaryGeneratorImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF3ICF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ICF3_Clone, None, itkUnaryGeneratorImageFilterICF3ICF3)
itkUnaryGeneratorImageFilterICF3ICF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ICF3_swigregister
itkUnaryGeneratorImageFilterICF3ICF3_swigregister(itkUnaryGeneratorImageFilterICF3ICF3)

def itkUnaryGeneratorImageFilterICF3ICF3___New_orig__() -> "itkUnaryGeneratorImageFilterICF3ICF3_Pointer":
    """itkUnaryGeneratorImageFilterICF3ICF3___New_orig__() -> itkUnaryGeneratorImageFilterICF3ICF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ICF3___New_orig__()

def itkUnaryGeneratorImageFilterICF3ICF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3ICF3 *":
    """itkUnaryGeneratorImageFilterICF3ICF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3ICF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ICF3_cast(obj)

class itkUnaryGeneratorImageFilterICF3ID3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF3ID3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF3ID3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF3ID3 self) -> itkUnaryGeneratorImageFilterICF3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ID3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF3ID3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3ID3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3ID3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF3ID3

        Create a new object of the class itkUnaryGeneratorImageFilterICF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF3ID3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ID3_Clone, None, itkUnaryGeneratorImageFilterICF3ID3)
itkUnaryGeneratorImageFilterICF3ID3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ID3_swigregister
itkUnaryGeneratorImageFilterICF3ID3_swigregister(itkUnaryGeneratorImageFilterICF3ID3)

def itkUnaryGeneratorImageFilterICF3ID3___New_orig__() -> "itkUnaryGeneratorImageFilterICF3ID3_Pointer":
    """itkUnaryGeneratorImageFilterICF3ID3___New_orig__() -> itkUnaryGeneratorImageFilterICF3ID3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ID3___New_orig__()

def itkUnaryGeneratorImageFilterICF3ID3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3ID3 *":
    """itkUnaryGeneratorImageFilterICF3ID3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3ID3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ID3_cast(obj)

class itkUnaryGeneratorImageFilterICF3IF3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF3IF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF3IF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF3IF3 self) -> itkUnaryGeneratorImageFilterICF3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF3IF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3IF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3IF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF3IF3

        Create a new object of the class itkUnaryGeneratorImageFilterICF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF3IF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IF3_Clone, None, itkUnaryGeneratorImageFilterICF3IF3)
itkUnaryGeneratorImageFilterICF3IF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IF3_swigregister
itkUnaryGeneratorImageFilterICF3IF3_swigregister(itkUnaryGeneratorImageFilterICF3IF3)

def itkUnaryGeneratorImageFilterICF3IF3___New_orig__() -> "itkUnaryGeneratorImageFilterICF3IF3_Pointer":
    """itkUnaryGeneratorImageFilterICF3IF3___New_orig__() -> itkUnaryGeneratorImageFilterICF3IF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IF3___New_orig__()

def itkUnaryGeneratorImageFilterICF3IF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3IF3 *":
    """itkUnaryGeneratorImageFilterICF3IF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3IF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IF3_cast(obj)

class itkUnaryGeneratorImageFilterICF3ISS3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ISS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF3ISS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF3ISS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF3ISS3 self) -> itkUnaryGeneratorImageFilterICF3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ISS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF3ISS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3ISS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3ISS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF3ISS3

        Create a new object of the class itkUnaryGeneratorImageFilterICF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF3ISS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ISS3_Clone, None, itkUnaryGeneratorImageFilterICF3ISS3)
itkUnaryGeneratorImageFilterICF3ISS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ISS3_swigregister
itkUnaryGeneratorImageFilterICF3ISS3_swigregister(itkUnaryGeneratorImageFilterICF3ISS3)

def itkUnaryGeneratorImageFilterICF3ISS3___New_orig__() -> "itkUnaryGeneratorImageFilterICF3ISS3_Pointer":
    """itkUnaryGeneratorImageFilterICF3ISS3___New_orig__() -> itkUnaryGeneratorImageFilterICF3ISS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ISS3___New_orig__()

def itkUnaryGeneratorImageFilterICF3ISS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3ISS3 *":
    """itkUnaryGeneratorImageFilterICF3ISS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3ISS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3ISS3_cast(obj)

class itkUnaryGeneratorImageFilterICF3IUC3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IUC3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF3IUC3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF3IUC3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF3IUC3 self) -> itkUnaryGeneratorImageFilterICF3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUC3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF3IUC3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3IUC3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3IUC3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF3IUC3

        Create a new object of the class itkUnaryGeneratorImageFilterICF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF3IUC3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUC3_Clone, None, itkUnaryGeneratorImageFilterICF3IUC3)
itkUnaryGeneratorImageFilterICF3IUC3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUC3_swigregister
itkUnaryGeneratorImageFilterICF3IUC3_swigregister(itkUnaryGeneratorImageFilterICF3IUC3)

def itkUnaryGeneratorImageFilterICF3IUC3___New_orig__() -> "itkUnaryGeneratorImageFilterICF3IUC3_Pointer":
    """itkUnaryGeneratorImageFilterICF3IUC3___New_orig__() -> itkUnaryGeneratorImageFilterICF3IUC3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUC3___New_orig__()

def itkUnaryGeneratorImageFilterICF3IUC3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3IUC3 *":
    """itkUnaryGeneratorImageFilterICF3IUC3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3IUC3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUC3_cast(obj)

class itkUnaryGeneratorImageFilterICF3IUS3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IUS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterICF3IUS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterICF3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterICF3IUS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterICF3IUS3 self) -> itkUnaryGeneratorImageFilterICF3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterICF3IUS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3IUS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3IUS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterICF3IUS3

        Create a new object of the class itkUnaryGeneratorImageFilterICF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterICF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterICF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterICF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterICF3IUS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUS3_Clone, None, itkUnaryGeneratorImageFilterICF3IUS3)
itkUnaryGeneratorImageFilterICF3IUS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUS3_swigregister
itkUnaryGeneratorImageFilterICF3IUS3_swigregister(itkUnaryGeneratorImageFilterICF3IUS3)

def itkUnaryGeneratorImageFilterICF3IUS3___New_orig__() -> "itkUnaryGeneratorImageFilterICF3IUS3_Pointer":
    """itkUnaryGeneratorImageFilterICF3IUS3___New_orig__() -> itkUnaryGeneratorImageFilterICF3IUS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUS3___New_orig__()

def itkUnaryGeneratorImageFilterICF3IUS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterICF3IUS3 *":
    """itkUnaryGeneratorImageFilterICF3IUS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterICF3IUS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IUS3_cast(obj)

class itkUnaryGeneratorImageFilterID2ICF2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID2ICF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID2ICF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID2ICF2 self) -> itkUnaryGeneratorImageFilterID2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ICF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID2ICF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2ICF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2ICF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ICF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID2ICF2

        Create a new object of the class itkUnaryGeneratorImageFilterID2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID2ICF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ICF2_Clone, None, itkUnaryGeneratorImageFilterID2ICF2)
itkUnaryGeneratorImageFilterID2ICF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ICF2_swigregister
itkUnaryGeneratorImageFilterID2ICF2_swigregister(itkUnaryGeneratorImageFilterID2ICF2)

def itkUnaryGeneratorImageFilterID2ICF2___New_orig__() -> "itkUnaryGeneratorImageFilterID2ICF2_Pointer":
    """itkUnaryGeneratorImageFilterID2ICF2___New_orig__() -> itkUnaryGeneratorImageFilterID2ICF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ICF2___New_orig__()

def itkUnaryGeneratorImageFilterID2ICF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2ICF2 *":
    """itkUnaryGeneratorImageFilterID2ICF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2ICF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ICF2_cast(obj)

class itkUnaryGeneratorImageFilterID2ID2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID2ID2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID2ID2 self) -> itkUnaryGeneratorImageFilterID2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ID2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2ID2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID2ID2

        Create a new object of the class itkUnaryGeneratorImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID2ID2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ID2_Clone, None, itkUnaryGeneratorImageFilterID2ID2)
itkUnaryGeneratorImageFilterID2ID2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ID2_swigregister
itkUnaryGeneratorImageFilterID2ID2_swigregister(itkUnaryGeneratorImageFilterID2ID2)

def itkUnaryGeneratorImageFilterID2ID2___New_orig__() -> "itkUnaryGeneratorImageFilterID2ID2_Pointer":
    """itkUnaryGeneratorImageFilterID2ID2___New_orig__() -> itkUnaryGeneratorImageFilterID2ID2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ID2___New_orig__()

def itkUnaryGeneratorImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2ID2 *":
    """itkUnaryGeneratorImageFilterID2ID2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2ID2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ID2_cast(obj)

class itkUnaryGeneratorImageFilterID2IF2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID2IF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID2IF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID2IF2 self) -> itkUnaryGeneratorImageFilterID2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID2IF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2IF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2IF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID2IF2

        Create a new object of the class itkUnaryGeneratorImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID2IF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IF2_Clone, None, itkUnaryGeneratorImageFilterID2IF2)
itkUnaryGeneratorImageFilterID2IF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IF2_swigregister
itkUnaryGeneratorImageFilterID2IF2_swigregister(itkUnaryGeneratorImageFilterID2IF2)

def itkUnaryGeneratorImageFilterID2IF2___New_orig__() -> "itkUnaryGeneratorImageFilterID2IF2_Pointer":
    """itkUnaryGeneratorImageFilterID2IF2___New_orig__() -> itkUnaryGeneratorImageFilterID2IF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IF2___New_orig__()

def itkUnaryGeneratorImageFilterID2IF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2IF2 *":
    """itkUnaryGeneratorImageFilterID2IF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2IF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IF2_cast(obj)

class itkUnaryGeneratorImageFilterID2ISS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID2ISS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID2ISS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID2ISS2 self) -> itkUnaryGeneratorImageFilterID2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ISS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID2ISS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2ISS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2ISS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID2ISS2

        Create a new object of the class itkUnaryGeneratorImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID2ISS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ISS2_Clone, None, itkUnaryGeneratorImageFilterID2ISS2)
itkUnaryGeneratorImageFilterID2ISS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ISS2_swigregister
itkUnaryGeneratorImageFilterID2ISS2_swigregister(itkUnaryGeneratorImageFilterID2ISS2)

def itkUnaryGeneratorImageFilterID2ISS2___New_orig__() -> "itkUnaryGeneratorImageFilterID2ISS2_Pointer":
    """itkUnaryGeneratorImageFilterID2ISS2___New_orig__() -> itkUnaryGeneratorImageFilterID2ISS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ISS2___New_orig__()

def itkUnaryGeneratorImageFilterID2ISS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2ISS2 *":
    """itkUnaryGeneratorImageFilterID2ISS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2ISS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2ISS2_cast(obj)

class itkUnaryGeneratorImageFilterID2IUC2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID2IUC2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID2IUC2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID2IUC2 self) -> itkUnaryGeneratorImageFilterID2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUC2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID2IUC2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2IUC2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2IUC2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID2IUC2

        Create a new object of the class itkUnaryGeneratorImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID2IUC2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUC2_Clone, None, itkUnaryGeneratorImageFilterID2IUC2)
itkUnaryGeneratorImageFilterID2IUC2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUC2_swigregister
itkUnaryGeneratorImageFilterID2IUC2_swigregister(itkUnaryGeneratorImageFilterID2IUC2)

def itkUnaryGeneratorImageFilterID2IUC2___New_orig__() -> "itkUnaryGeneratorImageFilterID2IUC2_Pointer":
    """itkUnaryGeneratorImageFilterID2IUC2___New_orig__() -> itkUnaryGeneratorImageFilterID2IUC2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUC2___New_orig__()

def itkUnaryGeneratorImageFilterID2IUC2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2IUC2 *":
    """itkUnaryGeneratorImageFilterID2IUC2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2IUC2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUC2_cast(obj)

class itkUnaryGeneratorImageFilterID2IUS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID2IUS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID2IUS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID2IUS2 self) -> itkUnaryGeneratorImageFilterID2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID2IUS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2IUS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2IUS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID2IUS2

        Create a new object of the class itkUnaryGeneratorImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID2IUS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUS2_Clone, None, itkUnaryGeneratorImageFilterID2IUS2)
itkUnaryGeneratorImageFilterID2IUS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUS2_swigregister
itkUnaryGeneratorImageFilterID2IUS2_swigregister(itkUnaryGeneratorImageFilterID2IUS2)

def itkUnaryGeneratorImageFilterID2IUS2___New_orig__() -> "itkUnaryGeneratorImageFilterID2IUS2_Pointer":
    """itkUnaryGeneratorImageFilterID2IUS2___New_orig__() -> itkUnaryGeneratorImageFilterID2IUS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUS2___New_orig__()

def itkUnaryGeneratorImageFilterID2IUS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID2IUS2 *":
    """itkUnaryGeneratorImageFilterID2IUS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID2IUS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID2IUS2_cast(obj)

class itkUnaryGeneratorImageFilterID3ICF3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID3ICF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID3ICF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID3ICF3 self) -> itkUnaryGeneratorImageFilterID3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ICF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID3ICF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3ICF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3ICF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ICF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID3ICF3

        Create a new object of the class itkUnaryGeneratorImageFilterID3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID3ICF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ICF3_Clone, None, itkUnaryGeneratorImageFilterID3ICF3)
itkUnaryGeneratorImageFilterID3ICF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ICF3_swigregister
itkUnaryGeneratorImageFilterID3ICF3_swigregister(itkUnaryGeneratorImageFilterID3ICF3)

def itkUnaryGeneratorImageFilterID3ICF3___New_orig__() -> "itkUnaryGeneratorImageFilterID3ICF3_Pointer":
    """itkUnaryGeneratorImageFilterID3ICF3___New_orig__() -> itkUnaryGeneratorImageFilterID3ICF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ICF3___New_orig__()

def itkUnaryGeneratorImageFilterID3ICF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3ICF3 *":
    """itkUnaryGeneratorImageFilterID3ICF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3ICF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ICF3_cast(obj)

class itkUnaryGeneratorImageFilterID3ID3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID3ID3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID3ID3 self) -> itkUnaryGeneratorImageFilterID3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ID3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3ID3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID3ID3

        Create a new object of the class itkUnaryGeneratorImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID3ID3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ID3_Clone, None, itkUnaryGeneratorImageFilterID3ID3)
itkUnaryGeneratorImageFilterID3ID3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ID3_swigregister
itkUnaryGeneratorImageFilterID3ID3_swigregister(itkUnaryGeneratorImageFilterID3ID3)

def itkUnaryGeneratorImageFilterID3ID3___New_orig__() -> "itkUnaryGeneratorImageFilterID3ID3_Pointer":
    """itkUnaryGeneratorImageFilterID3ID3___New_orig__() -> itkUnaryGeneratorImageFilterID3ID3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ID3___New_orig__()

def itkUnaryGeneratorImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3ID3 *":
    """itkUnaryGeneratorImageFilterID3ID3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3ID3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ID3_cast(obj)

class itkUnaryGeneratorImageFilterID3IF3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID3IF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID3IF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID3IF3 self) -> itkUnaryGeneratorImageFilterID3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID3IF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3IF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3IF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID3IF3

        Create a new object of the class itkUnaryGeneratorImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID3IF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IF3_Clone, None, itkUnaryGeneratorImageFilterID3IF3)
itkUnaryGeneratorImageFilterID3IF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IF3_swigregister
itkUnaryGeneratorImageFilterID3IF3_swigregister(itkUnaryGeneratorImageFilterID3IF3)

def itkUnaryGeneratorImageFilterID3IF3___New_orig__() -> "itkUnaryGeneratorImageFilterID3IF3_Pointer":
    """itkUnaryGeneratorImageFilterID3IF3___New_orig__() -> itkUnaryGeneratorImageFilterID3IF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IF3___New_orig__()

def itkUnaryGeneratorImageFilterID3IF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3IF3 *":
    """itkUnaryGeneratorImageFilterID3IF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3IF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IF3_cast(obj)

class itkUnaryGeneratorImageFilterID3ISS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID3ISS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID3ISS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID3ISS3 self) -> itkUnaryGeneratorImageFilterID3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ISS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID3ISS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3ISS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3ISS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID3ISS3

        Create a new object of the class itkUnaryGeneratorImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID3ISS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ISS3_Clone, None, itkUnaryGeneratorImageFilterID3ISS3)
itkUnaryGeneratorImageFilterID3ISS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ISS3_swigregister
itkUnaryGeneratorImageFilterID3ISS3_swigregister(itkUnaryGeneratorImageFilterID3ISS3)

def itkUnaryGeneratorImageFilterID3ISS3___New_orig__() -> "itkUnaryGeneratorImageFilterID3ISS3_Pointer":
    """itkUnaryGeneratorImageFilterID3ISS3___New_orig__() -> itkUnaryGeneratorImageFilterID3ISS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ISS3___New_orig__()

def itkUnaryGeneratorImageFilterID3ISS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3ISS3 *":
    """itkUnaryGeneratorImageFilterID3ISS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3ISS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3ISS3_cast(obj)

class itkUnaryGeneratorImageFilterID3IUC3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID3IUC3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID3IUC3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID3IUC3 self) -> itkUnaryGeneratorImageFilterID3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUC3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID3IUC3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3IUC3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3IUC3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID3IUC3

        Create a new object of the class itkUnaryGeneratorImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID3IUC3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUC3_Clone, None, itkUnaryGeneratorImageFilterID3IUC3)
itkUnaryGeneratorImageFilterID3IUC3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUC3_swigregister
itkUnaryGeneratorImageFilterID3IUC3_swigregister(itkUnaryGeneratorImageFilterID3IUC3)

def itkUnaryGeneratorImageFilterID3IUC3___New_orig__() -> "itkUnaryGeneratorImageFilterID3IUC3_Pointer":
    """itkUnaryGeneratorImageFilterID3IUC3___New_orig__() -> itkUnaryGeneratorImageFilterID3IUC3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUC3___New_orig__()

def itkUnaryGeneratorImageFilterID3IUC3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3IUC3 *":
    """itkUnaryGeneratorImageFilterID3IUC3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3IUC3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUC3_cast(obj)

class itkUnaryGeneratorImageFilterID3IUS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterID3IUS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterID3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterID3IUS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterID3IUS3 self) -> itkUnaryGeneratorImageFilterID3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterID3IUS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3IUS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3IUS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterID3IUS3

        Create a new object of the class itkUnaryGeneratorImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterID3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterID3IUS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUS3_Clone, None, itkUnaryGeneratorImageFilterID3IUS3)
itkUnaryGeneratorImageFilterID3IUS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUS3_swigregister
itkUnaryGeneratorImageFilterID3IUS3_swigregister(itkUnaryGeneratorImageFilterID3IUS3)

def itkUnaryGeneratorImageFilterID3IUS3___New_orig__() -> "itkUnaryGeneratorImageFilterID3IUS3_Pointer":
    """itkUnaryGeneratorImageFilterID3IUS3___New_orig__() -> itkUnaryGeneratorImageFilterID3IUS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUS3___New_orig__()

def itkUnaryGeneratorImageFilterID3IUS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterID3IUS3 *":
    """itkUnaryGeneratorImageFilterID3IUS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterID3IUS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterID3IUS3_cast(obj)

class itkUnaryGeneratorImageFilterIF2ICF2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF2ICF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF2ICF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF2ICF2 self) -> itkUnaryGeneratorImageFilterIF2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ICF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF2ICF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2ICF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2ICF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ICF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF2ICF2

        Create a new object of the class itkUnaryGeneratorImageFilterIF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF2ICF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ICF2_Clone, None, itkUnaryGeneratorImageFilterIF2ICF2)
itkUnaryGeneratorImageFilterIF2ICF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ICF2_swigregister
itkUnaryGeneratorImageFilterIF2ICF2_swigregister(itkUnaryGeneratorImageFilterIF2ICF2)

def itkUnaryGeneratorImageFilterIF2ICF2___New_orig__() -> "itkUnaryGeneratorImageFilterIF2ICF2_Pointer":
    """itkUnaryGeneratorImageFilterIF2ICF2___New_orig__() -> itkUnaryGeneratorImageFilterIF2ICF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ICF2___New_orig__()

def itkUnaryGeneratorImageFilterIF2ICF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2ICF2 *":
    """itkUnaryGeneratorImageFilterIF2ICF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2ICF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ICF2_cast(obj)

class itkUnaryGeneratorImageFilterIF2ID2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF2ID2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF2ID2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF2ID2 self) -> itkUnaryGeneratorImageFilterIF2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ID2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF2ID2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2ID2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2ID2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF2ID2

        Create a new object of the class itkUnaryGeneratorImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF2ID2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ID2_Clone, None, itkUnaryGeneratorImageFilterIF2ID2)
itkUnaryGeneratorImageFilterIF2ID2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ID2_swigregister
itkUnaryGeneratorImageFilterIF2ID2_swigregister(itkUnaryGeneratorImageFilterIF2ID2)

def itkUnaryGeneratorImageFilterIF2ID2___New_orig__() -> "itkUnaryGeneratorImageFilterIF2ID2_Pointer":
    """itkUnaryGeneratorImageFilterIF2ID2___New_orig__() -> itkUnaryGeneratorImageFilterIF2ID2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ID2___New_orig__()

def itkUnaryGeneratorImageFilterIF2ID2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2ID2 *":
    """itkUnaryGeneratorImageFilterIF2ID2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2ID2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ID2_cast(obj)

class itkUnaryGeneratorImageFilterIF2IF2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF2IF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF2IF2 self) -> itkUnaryGeneratorImageFilterIF2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2IF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF2IF2

        Create a new object of the class itkUnaryGeneratorImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF2IF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IF2_Clone, None, itkUnaryGeneratorImageFilterIF2IF2)
itkUnaryGeneratorImageFilterIF2IF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IF2_swigregister
itkUnaryGeneratorImageFilterIF2IF2_swigregister(itkUnaryGeneratorImageFilterIF2IF2)

def itkUnaryGeneratorImageFilterIF2IF2___New_orig__() -> "itkUnaryGeneratorImageFilterIF2IF2_Pointer":
    """itkUnaryGeneratorImageFilterIF2IF2___New_orig__() -> itkUnaryGeneratorImageFilterIF2IF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IF2___New_orig__()

def itkUnaryGeneratorImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2IF2 *":
    """itkUnaryGeneratorImageFilterIF2IF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2IF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IF2_cast(obj)

class itkUnaryGeneratorImageFilterIF2ISS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF2ISS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF2ISS2 self) -> itkUnaryGeneratorImageFilterIF2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ISS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2ISS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF2ISS2

        Create a new object of the class itkUnaryGeneratorImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF2ISS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ISS2_Clone, None, itkUnaryGeneratorImageFilterIF2ISS2)
itkUnaryGeneratorImageFilterIF2ISS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ISS2_swigregister
itkUnaryGeneratorImageFilterIF2ISS2_swigregister(itkUnaryGeneratorImageFilterIF2ISS2)

def itkUnaryGeneratorImageFilterIF2ISS2___New_orig__() -> "itkUnaryGeneratorImageFilterIF2ISS2_Pointer":
    """itkUnaryGeneratorImageFilterIF2ISS2___New_orig__() -> itkUnaryGeneratorImageFilterIF2ISS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ISS2___New_orig__()

def itkUnaryGeneratorImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2ISS2 *":
    """itkUnaryGeneratorImageFilterIF2ISS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2ISS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2ISS2_cast(obj)

class itkUnaryGeneratorImageFilterIF2IUC2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF2IUC2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF2IUC2 self) -> itkUnaryGeneratorImageFilterIF2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUC2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2IUC2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF2IUC2

        Create a new object of the class itkUnaryGeneratorImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF2IUC2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUC2_Clone, None, itkUnaryGeneratorImageFilterIF2IUC2)
itkUnaryGeneratorImageFilterIF2IUC2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUC2_swigregister
itkUnaryGeneratorImageFilterIF2IUC2_swigregister(itkUnaryGeneratorImageFilterIF2IUC2)

def itkUnaryGeneratorImageFilterIF2IUC2___New_orig__() -> "itkUnaryGeneratorImageFilterIF2IUC2_Pointer":
    """itkUnaryGeneratorImageFilterIF2IUC2___New_orig__() -> itkUnaryGeneratorImageFilterIF2IUC2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUC2___New_orig__()

def itkUnaryGeneratorImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2IUC2 *":
    """itkUnaryGeneratorImageFilterIF2IUC2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2IUC2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUC2_cast(obj)

class itkUnaryGeneratorImageFilterIF2IUS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF2IUS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF2IUS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF2IUS2 self) -> itkUnaryGeneratorImageFilterIF2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF2IUS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2IUS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2IUS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF2IUS2

        Create a new object of the class itkUnaryGeneratorImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF2IUS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUS2_Clone, None, itkUnaryGeneratorImageFilterIF2IUS2)
itkUnaryGeneratorImageFilterIF2IUS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUS2_swigregister
itkUnaryGeneratorImageFilterIF2IUS2_swigregister(itkUnaryGeneratorImageFilterIF2IUS2)

def itkUnaryGeneratorImageFilterIF2IUS2___New_orig__() -> "itkUnaryGeneratorImageFilterIF2IUS2_Pointer":
    """itkUnaryGeneratorImageFilterIF2IUS2___New_orig__() -> itkUnaryGeneratorImageFilterIF2IUS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUS2___New_orig__()

def itkUnaryGeneratorImageFilterIF2IUS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF2IUS2 *":
    """itkUnaryGeneratorImageFilterIF2IUS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF2IUS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF2IUS2_cast(obj)

class itkUnaryGeneratorImageFilterIF3ICF3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF3ICF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF3ICF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF3ICF3 self) -> itkUnaryGeneratorImageFilterIF3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ICF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF3ICF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3ICF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3ICF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ICF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF3ICF3

        Create a new object of the class itkUnaryGeneratorImageFilterIF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF3ICF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ICF3_Clone, None, itkUnaryGeneratorImageFilterIF3ICF3)
itkUnaryGeneratorImageFilterIF3ICF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ICF3_swigregister
itkUnaryGeneratorImageFilterIF3ICF3_swigregister(itkUnaryGeneratorImageFilterIF3ICF3)

def itkUnaryGeneratorImageFilterIF3ICF3___New_orig__() -> "itkUnaryGeneratorImageFilterIF3ICF3_Pointer":
    """itkUnaryGeneratorImageFilterIF3ICF3___New_orig__() -> itkUnaryGeneratorImageFilterIF3ICF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ICF3___New_orig__()

def itkUnaryGeneratorImageFilterIF3ICF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3ICF3 *":
    """itkUnaryGeneratorImageFilterIF3ICF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3ICF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ICF3_cast(obj)

class itkUnaryGeneratorImageFilterIF3ID3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF3ID3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF3ID3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF3ID3 self) -> itkUnaryGeneratorImageFilterIF3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ID3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF3ID3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3ID3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3ID3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF3ID3

        Create a new object of the class itkUnaryGeneratorImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF3ID3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ID3_Clone, None, itkUnaryGeneratorImageFilterIF3ID3)
itkUnaryGeneratorImageFilterIF3ID3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ID3_swigregister
itkUnaryGeneratorImageFilterIF3ID3_swigregister(itkUnaryGeneratorImageFilterIF3ID3)

def itkUnaryGeneratorImageFilterIF3ID3___New_orig__() -> "itkUnaryGeneratorImageFilterIF3ID3_Pointer":
    """itkUnaryGeneratorImageFilterIF3ID3___New_orig__() -> itkUnaryGeneratorImageFilterIF3ID3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ID3___New_orig__()

def itkUnaryGeneratorImageFilterIF3ID3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3ID3 *":
    """itkUnaryGeneratorImageFilterIF3ID3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3ID3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ID3_cast(obj)

class itkUnaryGeneratorImageFilterIF3IF3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF3IF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF3IF3 self) -> itkUnaryGeneratorImageFilterIF3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3IF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF3IF3

        Create a new object of the class itkUnaryGeneratorImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF3IF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IF3_Clone, None, itkUnaryGeneratorImageFilterIF3IF3)
itkUnaryGeneratorImageFilterIF3IF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IF3_swigregister
itkUnaryGeneratorImageFilterIF3IF3_swigregister(itkUnaryGeneratorImageFilterIF3IF3)

def itkUnaryGeneratorImageFilterIF3IF3___New_orig__() -> "itkUnaryGeneratorImageFilterIF3IF3_Pointer":
    """itkUnaryGeneratorImageFilterIF3IF3___New_orig__() -> itkUnaryGeneratorImageFilterIF3IF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IF3___New_orig__()

def itkUnaryGeneratorImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3IF3 *":
    """itkUnaryGeneratorImageFilterIF3IF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3IF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IF3_cast(obj)

class itkUnaryGeneratorImageFilterIF3ISS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF3ISS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF3ISS3 self) -> itkUnaryGeneratorImageFilterIF3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ISS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3ISS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF3ISS3

        Create a new object of the class itkUnaryGeneratorImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF3ISS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ISS3_Clone, None, itkUnaryGeneratorImageFilterIF3ISS3)
itkUnaryGeneratorImageFilterIF3ISS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ISS3_swigregister
itkUnaryGeneratorImageFilterIF3ISS3_swigregister(itkUnaryGeneratorImageFilterIF3ISS3)

def itkUnaryGeneratorImageFilterIF3ISS3___New_orig__() -> "itkUnaryGeneratorImageFilterIF3ISS3_Pointer":
    """itkUnaryGeneratorImageFilterIF3ISS3___New_orig__() -> itkUnaryGeneratorImageFilterIF3ISS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ISS3___New_orig__()

def itkUnaryGeneratorImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3ISS3 *":
    """itkUnaryGeneratorImageFilterIF3ISS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3ISS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3ISS3_cast(obj)

class itkUnaryGeneratorImageFilterIF3IUC3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF3IUC3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF3IUC3 self) -> itkUnaryGeneratorImageFilterIF3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUC3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3IUC3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF3IUC3

        Create a new object of the class itkUnaryGeneratorImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF3IUC3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUC3_Clone, None, itkUnaryGeneratorImageFilterIF3IUC3)
itkUnaryGeneratorImageFilterIF3IUC3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUC3_swigregister
itkUnaryGeneratorImageFilterIF3IUC3_swigregister(itkUnaryGeneratorImageFilterIF3IUC3)

def itkUnaryGeneratorImageFilterIF3IUC3___New_orig__() -> "itkUnaryGeneratorImageFilterIF3IUC3_Pointer":
    """itkUnaryGeneratorImageFilterIF3IUC3___New_orig__() -> itkUnaryGeneratorImageFilterIF3IUC3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUC3___New_orig__()

def itkUnaryGeneratorImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3IUC3 *":
    """itkUnaryGeneratorImageFilterIF3IUC3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3IUC3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUC3_cast(obj)

class itkUnaryGeneratorImageFilterIF3IUS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIF3IUS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIF3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIF3IUS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIF3IUS3 self) -> itkUnaryGeneratorImageFilterIF3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIF3IUS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3IUS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3IUS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIF3IUS3

        Create a new object of the class itkUnaryGeneratorImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIF3IUS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUS3_Clone, None, itkUnaryGeneratorImageFilterIF3IUS3)
itkUnaryGeneratorImageFilterIF3IUS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUS3_swigregister
itkUnaryGeneratorImageFilterIF3IUS3_swigregister(itkUnaryGeneratorImageFilterIF3IUS3)

def itkUnaryGeneratorImageFilterIF3IUS3___New_orig__() -> "itkUnaryGeneratorImageFilterIF3IUS3_Pointer":
    """itkUnaryGeneratorImageFilterIF3IUS3___New_orig__() -> itkUnaryGeneratorImageFilterIF3IUS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUS3___New_orig__()

def itkUnaryGeneratorImageFilterIF3IUS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIF3IUS3 *":
    """itkUnaryGeneratorImageFilterIF3IUS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIF3IUS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIF3IUS3_cast(obj)

class itkUnaryGeneratorImageFilterIRGBAUC2IUC2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IUC2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIRGBAUC2IUC2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIRGBAUC2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIRGBAUC2IUC2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIRGBAUC2IUC2 self) -> itkUnaryGeneratorImageFilterIRGBAUC2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC2IUC2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIRGBAUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIRGBAUC2IUC2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIRGBAUC2IUC2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIRGBAUC2IUC2

        Create a new object of the class itkUnaryGeneratorImageFilterIRGBAUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIRGBAUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIRGBAUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIRGBAUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIRGBAUC2IUC2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC2IUC2_Clone, None, itkUnaryGeneratorImageFilterIRGBAUC2IUC2)
itkUnaryGeneratorImageFilterIRGBAUC2IUC2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC2IUC2_swigregister
itkUnaryGeneratorImageFilterIRGBAUC2IUC2_swigregister(itkUnaryGeneratorImageFilterIRGBAUC2IUC2)

def itkUnaryGeneratorImageFilterIRGBAUC2IUC2___New_orig__() -> "itkUnaryGeneratorImageFilterIRGBAUC2IUC2_Pointer":
    """itkUnaryGeneratorImageFilterIRGBAUC2IUC2___New_orig__() -> itkUnaryGeneratorImageFilterIRGBAUC2IUC2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC2IUC2___New_orig__()

def itkUnaryGeneratorImageFilterIRGBAUC2IUC2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIRGBAUC2IUC2 *":
    """itkUnaryGeneratorImageFilterIRGBAUC2IUC2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIRGBAUC2IUC2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC2IUC2_cast(obj)

class itkUnaryGeneratorImageFilterIRGBAUC3IUC3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IUC3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIRGBAUC3IUC3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIRGBAUC3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIRGBAUC3IUC3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIRGBAUC3IUC3 self) -> itkUnaryGeneratorImageFilterIRGBAUC3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC3IUC3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIRGBAUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIRGBAUC3IUC3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIRGBAUC3IUC3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIRGBAUC3IUC3

        Create a new object of the class itkUnaryGeneratorImageFilterIRGBAUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIRGBAUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIRGBAUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIRGBAUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIRGBAUC3IUC3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC3IUC3_Clone, None, itkUnaryGeneratorImageFilterIRGBAUC3IUC3)
itkUnaryGeneratorImageFilterIRGBAUC3IUC3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC3IUC3_swigregister
itkUnaryGeneratorImageFilterIRGBAUC3IUC3_swigregister(itkUnaryGeneratorImageFilterIRGBAUC3IUC3)

def itkUnaryGeneratorImageFilterIRGBAUC3IUC3___New_orig__() -> "itkUnaryGeneratorImageFilterIRGBAUC3IUC3_Pointer":
    """itkUnaryGeneratorImageFilterIRGBAUC3IUC3___New_orig__() -> itkUnaryGeneratorImageFilterIRGBAUC3IUC3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC3IUC3___New_orig__()

def itkUnaryGeneratorImageFilterIRGBAUC3IUC3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIRGBAUC3IUC3 *":
    """itkUnaryGeneratorImageFilterIRGBAUC3IUC3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIRGBAUC3IUC3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBAUC3IUC3_cast(obj)

class itkUnaryGeneratorImageFilterIRGBUC2IUC2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterIRGBUC2IUC2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIRGBUC2IUC2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIRGBUC2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIRGBUC2IUC2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIRGBUC2IUC2 self) -> itkUnaryGeneratorImageFilterIRGBUC2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC2IUC2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIRGBUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIRGBUC2IUC2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIRGBUC2IUC2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIRGBUC2IUC2

        Create a new object of the class itkUnaryGeneratorImageFilterIRGBUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIRGBUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIRGBUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIRGBUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIRGBUC2IUC2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC2IUC2_Clone, None, itkUnaryGeneratorImageFilterIRGBUC2IUC2)
itkUnaryGeneratorImageFilterIRGBUC2IUC2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC2IUC2_swigregister
itkUnaryGeneratorImageFilterIRGBUC2IUC2_swigregister(itkUnaryGeneratorImageFilterIRGBUC2IUC2)

def itkUnaryGeneratorImageFilterIRGBUC2IUC2___New_orig__() -> "itkUnaryGeneratorImageFilterIRGBUC2IUC2_Pointer":
    """itkUnaryGeneratorImageFilterIRGBUC2IUC2___New_orig__() -> itkUnaryGeneratorImageFilterIRGBUC2IUC2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC2IUC2___New_orig__()

def itkUnaryGeneratorImageFilterIRGBUC2IUC2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIRGBUC2IUC2 *":
    """itkUnaryGeneratorImageFilterIRGBUC2IUC2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIRGBUC2IUC2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC2IUC2_cast(obj)

class itkUnaryGeneratorImageFilterIRGBUC3IUC3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterIRGBUC3IUC3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIRGBUC3IUC3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIRGBUC3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIRGBUC3IUC3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIRGBUC3IUC3 self) -> itkUnaryGeneratorImageFilterIRGBUC3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC3IUC3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIRGBUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIRGBUC3IUC3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIRGBUC3IUC3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIRGBUC3IUC3

        Create a new object of the class itkUnaryGeneratorImageFilterIRGBUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIRGBUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIRGBUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIRGBUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIRGBUC3IUC3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC3IUC3_Clone, None, itkUnaryGeneratorImageFilterIRGBUC3IUC3)
itkUnaryGeneratorImageFilterIRGBUC3IUC3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC3IUC3_swigregister
itkUnaryGeneratorImageFilterIRGBUC3IUC3_swigregister(itkUnaryGeneratorImageFilterIRGBUC3IUC3)

def itkUnaryGeneratorImageFilterIRGBUC3IUC3___New_orig__() -> "itkUnaryGeneratorImageFilterIRGBUC3IUC3_Pointer":
    """itkUnaryGeneratorImageFilterIRGBUC3IUC3___New_orig__() -> itkUnaryGeneratorImageFilterIRGBUC3IUC3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC3IUC3___New_orig__()

def itkUnaryGeneratorImageFilterIRGBUC3IUC3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIRGBUC3IUC3 *":
    """itkUnaryGeneratorImageFilterIRGBUC3IUC3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIRGBUC3IUC3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIRGBUC3IUC3_cast(obj)

class itkUnaryGeneratorImageFilterISS2ICF2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterISS2ICF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS2ICF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS2ICF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS2ICF2 self) -> itkUnaryGeneratorImageFilterISS2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ICF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS2ICF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2ICF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2ICF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ICF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS2ICF2

        Create a new object of the class itkUnaryGeneratorImageFilterISS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS2ICF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ICF2_Clone, None, itkUnaryGeneratorImageFilterISS2ICF2)
itkUnaryGeneratorImageFilterISS2ICF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ICF2_swigregister
itkUnaryGeneratorImageFilterISS2ICF2_swigregister(itkUnaryGeneratorImageFilterISS2ICF2)

def itkUnaryGeneratorImageFilterISS2ICF2___New_orig__() -> "itkUnaryGeneratorImageFilterISS2ICF2_Pointer":
    """itkUnaryGeneratorImageFilterISS2ICF2___New_orig__() -> itkUnaryGeneratorImageFilterISS2ICF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ICF2___New_orig__()

def itkUnaryGeneratorImageFilterISS2ICF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2ICF2 *":
    """itkUnaryGeneratorImageFilterISS2ICF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2ICF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ICF2_cast(obj)

class itkUnaryGeneratorImageFilterISS2ID2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS2ID2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS2ID2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS2ID2 self) -> itkUnaryGeneratorImageFilterISS2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ID2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS2ID2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2ID2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2ID2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS2ID2

        Create a new object of the class itkUnaryGeneratorImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS2ID2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ID2_Clone, None, itkUnaryGeneratorImageFilterISS2ID2)
itkUnaryGeneratorImageFilterISS2ID2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ID2_swigregister
itkUnaryGeneratorImageFilterISS2ID2_swigregister(itkUnaryGeneratorImageFilterISS2ID2)

def itkUnaryGeneratorImageFilterISS2ID2___New_orig__() -> "itkUnaryGeneratorImageFilterISS2ID2_Pointer":
    """itkUnaryGeneratorImageFilterISS2ID2___New_orig__() -> itkUnaryGeneratorImageFilterISS2ID2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ID2___New_orig__()

def itkUnaryGeneratorImageFilterISS2ID2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2ID2 *":
    """itkUnaryGeneratorImageFilterISS2ID2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2ID2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ID2_cast(obj)

class itkUnaryGeneratorImageFilterISS2IF2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS2IF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS2IF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS2IF2 self) -> itkUnaryGeneratorImageFilterISS2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS2IF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2IF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2IF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS2IF2

        Create a new object of the class itkUnaryGeneratorImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS2IF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IF2_Clone, None, itkUnaryGeneratorImageFilterISS2IF2)
itkUnaryGeneratorImageFilterISS2IF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IF2_swigregister
itkUnaryGeneratorImageFilterISS2IF2_swigregister(itkUnaryGeneratorImageFilterISS2IF2)

def itkUnaryGeneratorImageFilterISS2IF2___New_orig__() -> "itkUnaryGeneratorImageFilterISS2IF2_Pointer":
    """itkUnaryGeneratorImageFilterISS2IF2___New_orig__() -> itkUnaryGeneratorImageFilterISS2IF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IF2___New_orig__()

def itkUnaryGeneratorImageFilterISS2IF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2IF2 *":
    """itkUnaryGeneratorImageFilterISS2IF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2IF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IF2_cast(obj)

class itkUnaryGeneratorImageFilterISS2ISS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS2ISS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS2ISS2 self) -> itkUnaryGeneratorImageFilterISS2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ISS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2ISS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS2ISS2

        Create a new object of the class itkUnaryGeneratorImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS2ISS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ISS2_Clone, None, itkUnaryGeneratorImageFilterISS2ISS2)
itkUnaryGeneratorImageFilterISS2ISS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ISS2_swigregister
itkUnaryGeneratorImageFilterISS2ISS2_swigregister(itkUnaryGeneratorImageFilterISS2ISS2)

def itkUnaryGeneratorImageFilterISS2ISS2___New_orig__() -> "itkUnaryGeneratorImageFilterISS2ISS2_Pointer":
    """itkUnaryGeneratorImageFilterISS2ISS2___New_orig__() -> itkUnaryGeneratorImageFilterISS2ISS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ISS2___New_orig__()

def itkUnaryGeneratorImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2ISS2 *":
    """itkUnaryGeneratorImageFilterISS2ISS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2ISS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2ISS2_cast(obj)

class itkUnaryGeneratorImageFilterISS2IUC2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS2IUC2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS2IUC2 self) -> itkUnaryGeneratorImageFilterISS2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUC2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2IUC2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS2IUC2

        Create a new object of the class itkUnaryGeneratorImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS2IUC2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUC2_Clone, None, itkUnaryGeneratorImageFilterISS2IUC2)
itkUnaryGeneratorImageFilterISS2IUC2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUC2_swigregister
itkUnaryGeneratorImageFilterISS2IUC2_swigregister(itkUnaryGeneratorImageFilterISS2IUC2)

def itkUnaryGeneratorImageFilterISS2IUC2___New_orig__() -> "itkUnaryGeneratorImageFilterISS2IUC2_Pointer":
    """itkUnaryGeneratorImageFilterISS2IUC2___New_orig__() -> itkUnaryGeneratorImageFilterISS2IUC2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUC2___New_orig__()

def itkUnaryGeneratorImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2IUC2 *":
    """itkUnaryGeneratorImageFilterISS2IUC2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2IUC2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUC2_cast(obj)

class itkUnaryGeneratorImageFilterISS2IUS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS2IUS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS2IUS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS2IUS2 self) -> itkUnaryGeneratorImageFilterISS2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS2IUS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2IUS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2IUS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS2IUS2

        Create a new object of the class itkUnaryGeneratorImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS2IUS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUS2_Clone, None, itkUnaryGeneratorImageFilterISS2IUS2)
itkUnaryGeneratorImageFilterISS2IUS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUS2_swigregister
itkUnaryGeneratorImageFilterISS2IUS2_swigregister(itkUnaryGeneratorImageFilterISS2IUS2)

def itkUnaryGeneratorImageFilterISS2IUS2___New_orig__() -> "itkUnaryGeneratorImageFilterISS2IUS2_Pointer":
    """itkUnaryGeneratorImageFilterISS2IUS2___New_orig__() -> itkUnaryGeneratorImageFilterISS2IUS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUS2___New_orig__()

def itkUnaryGeneratorImageFilterISS2IUS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS2IUS2 *":
    """itkUnaryGeneratorImageFilterISS2IUS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS2IUS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS2IUS2_cast(obj)

class itkUnaryGeneratorImageFilterISS3ICF3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterISS3ICF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS3ICF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS3ICF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS3ICF3 self) -> itkUnaryGeneratorImageFilterISS3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ICF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS3ICF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3ICF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3ICF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ICF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS3ICF3

        Create a new object of the class itkUnaryGeneratorImageFilterISS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS3ICF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ICF3_Clone, None, itkUnaryGeneratorImageFilterISS3ICF3)
itkUnaryGeneratorImageFilterISS3ICF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ICF3_swigregister
itkUnaryGeneratorImageFilterISS3ICF3_swigregister(itkUnaryGeneratorImageFilterISS3ICF3)

def itkUnaryGeneratorImageFilterISS3ICF3___New_orig__() -> "itkUnaryGeneratorImageFilterISS3ICF3_Pointer":
    """itkUnaryGeneratorImageFilterISS3ICF3___New_orig__() -> itkUnaryGeneratorImageFilterISS3ICF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ICF3___New_orig__()

def itkUnaryGeneratorImageFilterISS3ICF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3ICF3 *":
    """itkUnaryGeneratorImageFilterISS3ICF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3ICF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ICF3_cast(obj)

class itkUnaryGeneratorImageFilterISS3ID3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS3ID3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS3ID3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS3ID3 self) -> itkUnaryGeneratorImageFilterISS3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ID3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS3ID3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3ID3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3ID3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS3ID3

        Create a new object of the class itkUnaryGeneratorImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS3ID3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ID3_Clone, None, itkUnaryGeneratorImageFilterISS3ID3)
itkUnaryGeneratorImageFilterISS3ID3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ID3_swigregister
itkUnaryGeneratorImageFilterISS3ID3_swigregister(itkUnaryGeneratorImageFilterISS3ID3)

def itkUnaryGeneratorImageFilterISS3ID3___New_orig__() -> "itkUnaryGeneratorImageFilterISS3ID3_Pointer":
    """itkUnaryGeneratorImageFilterISS3ID3___New_orig__() -> itkUnaryGeneratorImageFilterISS3ID3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ID3___New_orig__()

def itkUnaryGeneratorImageFilterISS3ID3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3ID3 *":
    """itkUnaryGeneratorImageFilterISS3ID3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3ID3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ID3_cast(obj)

class itkUnaryGeneratorImageFilterISS3IF3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS3IF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS3IF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS3IF3 self) -> itkUnaryGeneratorImageFilterISS3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS3IF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3IF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3IF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS3IF3

        Create a new object of the class itkUnaryGeneratorImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS3IF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IF3_Clone, None, itkUnaryGeneratorImageFilterISS3IF3)
itkUnaryGeneratorImageFilterISS3IF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IF3_swigregister
itkUnaryGeneratorImageFilterISS3IF3_swigregister(itkUnaryGeneratorImageFilterISS3IF3)

def itkUnaryGeneratorImageFilterISS3IF3___New_orig__() -> "itkUnaryGeneratorImageFilterISS3IF3_Pointer":
    """itkUnaryGeneratorImageFilterISS3IF3___New_orig__() -> itkUnaryGeneratorImageFilterISS3IF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IF3___New_orig__()

def itkUnaryGeneratorImageFilterISS3IF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3IF3 *":
    """itkUnaryGeneratorImageFilterISS3IF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3IF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IF3_cast(obj)

class itkUnaryGeneratorImageFilterISS3ISS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS3ISS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS3ISS3 self) -> itkUnaryGeneratorImageFilterISS3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ISS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3ISS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS3ISS3

        Create a new object of the class itkUnaryGeneratorImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS3ISS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ISS3_Clone, None, itkUnaryGeneratorImageFilterISS3ISS3)
itkUnaryGeneratorImageFilterISS3ISS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ISS3_swigregister
itkUnaryGeneratorImageFilterISS3ISS3_swigregister(itkUnaryGeneratorImageFilterISS3ISS3)

def itkUnaryGeneratorImageFilterISS3ISS3___New_orig__() -> "itkUnaryGeneratorImageFilterISS3ISS3_Pointer":
    """itkUnaryGeneratorImageFilterISS3ISS3___New_orig__() -> itkUnaryGeneratorImageFilterISS3ISS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ISS3___New_orig__()

def itkUnaryGeneratorImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3ISS3 *":
    """itkUnaryGeneratorImageFilterISS3ISS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3ISS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3ISS3_cast(obj)

class itkUnaryGeneratorImageFilterISS3IUC3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS3IUC3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS3IUC3 self) -> itkUnaryGeneratorImageFilterISS3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUC3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3IUC3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS3IUC3

        Create a new object of the class itkUnaryGeneratorImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS3IUC3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUC3_Clone, None, itkUnaryGeneratorImageFilterISS3IUC3)
itkUnaryGeneratorImageFilterISS3IUC3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUC3_swigregister
itkUnaryGeneratorImageFilterISS3IUC3_swigregister(itkUnaryGeneratorImageFilterISS3IUC3)

def itkUnaryGeneratorImageFilterISS3IUC3___New_orig__() -> "itkUnaryGeneratorImageFilterISS3IUC3_Pointer":
    """itkUnaryGeneratorImageFilterISS3IUC3___New_orig__() -> itkUnaryGeneratorImageFilterISS3IUC3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUC3___New_orig__()

def itkUnaryGeneratorImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3IUC3 *":
    """itkUnaryGeneratorImageFilterISS3IUC3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3IUC3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUC3_cast(obj)

class itkUnaryGeneratorImageFilterISS3IUS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterISS3IUS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterISS3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterISS3IUS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterISS3IUS3 self) -> itkUnaryGeneratorImageFilterISS3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterISS3IUS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3IUS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3IUS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterISS3IUS3

        Create a new object of the class itkUnaryGeneratorImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterISS3IUS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUS3_Clone, None, itkUnaryGeneratorImageFilterISS3IUS3)
itkUnaryGeneratorImageFilterISS3IUS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUS3_swigregister
itkUnaryGeneratorImageFilterISS3IUS3_swigregister(itkUnaryGeneratorImageFilterISS3IUS3)

def itkUnaryGeneratorImageFilterISS3IUS3___New_orig__() -> "itkUnaryGeneratorImageFilterISS3IUS3_Pointer":
    """itkUnaryGeneratorImageFilterISS3IUS3___New_orig__() -> itkUnaryGeneratorImageFilterISS3IUS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUS3___New_orig__()

def itkUnaryGeneratorImageFilterISS3IUS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterISS3IUS3 *":
    """itkUnaryGeneratorImageFilterISS3IUS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterISS3IUS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterISS3IUS3_cast(obj)

class itkUnaryGeneratorImageFilterIUC2ICF2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC2ICF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC2ICF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC2ICF2 self) -> itkUnaryGeneratorImageFilterIUC2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ICF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC2ICF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2ICF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2ICF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ICF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC2ICF2

        Create a new object of the class itkUnaryGeneratorImageFilterIUC2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC2ICF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ICF2_Clone, None, itkUnaryGeneratorImageFilterIUC2ICF2)
itkUnaryGeneratorImageFilterIUC2ICF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ICF2_swigregister
itkUnaryGeneratorImageFilterIUC2ICF2_swigregister(itkUnaryGeneratorImageFilterIUC2ICF2)

def itkUnaryGeneratorImageFilterIUC2ICF2___New_orig__() -> "itkUnaryGeneratorImageFilterIUC2ICF2_Pointer":
    """itkUnaryGeneratorImageFilterIUC2ICF2___New_orig__() -> itkUnaryGeneratorImageFilterIUC2ICF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ICF2___New_orig__()

def itkUnaryGeneratorImageFilterIUC2ICF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2ICF2 *":
    """itkUnaryGeneratorImageFilterIUC2ICF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2ICF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ICF2_cast(obj)

class itkUnaryGeneratorImageFilterIUC2ID2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC2ID2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC2ID2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC2ID2 self) -> itkUnaryGeneratorImageFilterIUC2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ID2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC2ID2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2ID2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2ID2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC2ID2

        Create a new object of the class itkUnaryGeneratorImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC2ID2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ID2_Clone, None, itkUnaryGeneratorImageFilterIUC2ID2)
itkUnaryGeneratorImageFilterIUC2ID2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ID2_swigregister
itkUnaryGeneratorImageFilterIUC2ID2_swigregister(itkUnaryGeneratorImageFilterIUC2ID2)

def itkUnaryGeneratorImageFilterIUC2ID2___New_orig__() -> "itkUnaryGeneratorImageFilterIUC2ID2_Pointer":
    """itkUnaryGeneratorImageFilterIUC2ID2___New_orig__() -> itkUnaryGeneratorImageFilterIUC2ID2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ID2___New_orig__()

def itkUnaryGeneratorImageFilterIUC2ID2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2ID2 *":
    """itkUnaryGeneratorImageFilterIUC2ID2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2ID2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ID2_cast(obj)

class itkUnaryGeneratorImageFilterIUC2IF2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC2IF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC2IF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC2IF2 self) -> itkUnaryGeneratorImageFilterIUC2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC2IF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2IF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2IF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC2IF2

        Create a new object of the class itkUnaryGeneratorImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC2IF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IF2_Clone, None, itkUnaryGeneratorImageFilterIUC2IF2)
itkUnaryGeneratorImageFilterIUC2IF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IF2_swigregister
itkUnaryGeneratorImageFilterIUC2IF2_swigregister(itkUnaryGeneratorImageFilterIUC2IF2)

def itkUnaryGeneratorImageFilterIUC2IF2___New_orig__() -> "itkUnaryGeneratorImageFilterIUC2IF2_Pointer":
    """itkUnaryGeneratorImageFilterIUC2IF2___New_orig__() -> itkUnaryGeneratorImageFilterIUC2IF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IF2___New_orig__()

def itkUnaryGeneratorImageFilterIUC2IF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2IF2 *":
    """itkUnaryGeneratorImageFilterIUC2IF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2IF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IF2_cast(obj)

class itkUnaryGeneratorImageFilterIUC2ISS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC2ISS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC2ISS2 self) -> itkUnaryGeneratorImageFilterIUC2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ISS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2ISS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC2ISS2

        Create a new object of the class itkUnaryGeneratorImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC2ISS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ISS2_Clone, None, itkUnaryGeneratorImageFilterIUC2ISS2)
itkUnaryGeneratorImageFilterIUC2ISS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ISS2_swigregister
itkUnaryGeneratorImageFilterIUC2ISS2_swigregister(itkUnaryGeneratorImageFilterIUC2ISS2)

def itkUnaryGeneratorImageFilterIUC2ISS2___New_orig__() -> "itkUnaryGeneratorImageFilterIUC2ISS2_Pointer":
    """itkUnaryGeneratorImageFilterIUC2ISS2___New_orig__() -> itkUnaryGeneratorImageFilterIUC2ISS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ISS2___New_orig__()

def itkUnaryGeneratorImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2ISS2 *":
    """itkUnaryGeneratorImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2ISS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2ISS2_cast(obj)

class itkUnaryGeneratorImageFilterIUC2IUC2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC2IUC2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC2IUC2 self) -> itkUnaryGeneratorImageFilterIUC2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2IUC2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC2IUC2

        Create a new object of the class itkUnaryGeneratorImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC2IUC2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUC2_Clone, None, itkUnaryGeneratorImageFilterIUC2IUC2)
itkUnaryGeneratorImageFilterIUC2IUC2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUC2_swigregister
itkUnaryGeneratorImageFilterIUC2IUC2_swigregister(itkUnaryGeneratorImageFilterIUC2IUC2)

def itkUnaryGeneratorImageFilterIUC2IUC2___New_orig__() -> "itkUnaryGeneratorImageFilterIUC2IUC2_Pointer":
    """itkUnaryGeneratorImageFilterIUC2IUC2___New_orig__() -> itkUnaryGeneratorImageFilterIUC2IUC2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUC2___New_orig__()

def itkUnaryGeneratorImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2IUC2 *":
    """itkUnaryGeneratorImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2IUC2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUC2_cast(obj)

class itkUnaryGeneratorImageFilterIUC2IUS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC2IUS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC2IUS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC2IUS2 self) -> itkUnaryGeneratorImageFilterIUC2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC2IUS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2IUS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2IUS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC2IUS2

        Create a new object of the class itkUnaryGeneratorImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC2IUS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUS2_Clone, None, itkUnaryGeneratorImageFilterIUC2IUS2)
itkUnaryGeneratorImageFilterIUC2IUS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUS2_swigregister
itkUnaryGeneratorImageFilterIUC2IUS2_swigregister(itkUnaryGeneratorImageFilterIUC2IUS2)

def itkUnaryGeneratorImageFilterIUC2IUS2___New_orig__() -> "itkUnaryGeneratorImageFilterIUC2IUS2_Pointer":
    """itkUnaryGeneratorImageFilterIUC2IUS2___New_orig__() -> itkUnaryGeneratorImageFilterIUC2IUS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUS2___New_orig__()

def itkUnaryGeneratorImageFilterIUC2IUS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC2IUS2 *":
    """itkUnaryGeneratorImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC2IUS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC2IUS2_cast(obj)

class itkUnaryGeneratorImageFilterIUC3ICF3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC3ICF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC3ICF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC3ICF3 self) -> itkUnaryGeneratorImageFilterIUC3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ICF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC3ICF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3ICF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3ICF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ICF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC3ICF3

        Create a new object of the class itkUnaryGeneratorImageFilterIUC3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC3ICF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ICF3_Clone, None, itkUnaryGeneratorImageFilterIUC3ICF3)
itkUnaryGeneratorImageFilterIUC3ICF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ICF3_swigregister
itkUnaryGeneratorImageFilterIUC3ICF3_swigregister(itkUnaryGeneratorImageFilterIUC3ICF3)

def itkUnaryGeneratorImageFilterIUC3ICF3___New_orig__() -> "itkUnaryGeneratorImageFilterIUC3ICF3_Pointer":
    """itkUnaryGeneratorImageFilterIUC3ICF3___New_orig__() -> itkUnaryGeneratorImageFilterIUC3ICF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ICF3___New_orig__()

def itkUnaryGeneratorImageFilterIUC3ICF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3ICF3 *":
    """itkUnaryGeneratorImageFilterIUC3ICF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3ICF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ICF3_cast(obj)

class itkUnaryGeneratorImageFilterIUC3ID3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC3ID3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC3ID3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC3ID3 self) -> itkUnaryGeneratorImageFilterIUC3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ID3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC3ID3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3ID3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3ID3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC3ID3

        Create a new object of the class itkUnaryGeneratorImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC3ID3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ID3_Clone, None, itkUnaryGeneratorImageFilterIUC3ID3)
itkUnaryGeneratorImageFilterIUC3ID3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ID3_swigregister
itkUnaryGeneratorImageFilterIUC3ID3_swigregister(itkUnaryGeneratorImageFilterIUC3ID3)

def itkUnaryGeneratorImageFilterIUC3ID3___New_orig__() -> "itkUnaryGeneratorImageFilterIUC3ID3_Pointer":
    """itkUnaryGeneratorImageFilterIUC3ID3___New_orig__() -> itkUnaryGeneratorImageFilterIUC3ID3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ID3___New_orig__()

def itkUnaryGeneratorImageFilterIUC3ID3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3ID3 *":
    """itkUnaryGeneratorImageFilterIUC3ID3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3ID3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ID3_cast(obj)

class itkUnaryGeneratorImageFilterIUC3IF3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC3IF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC3IF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC3IF3 self) -> itkUnaryGeneratorImageFilterIUC3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC3IF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3IF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3IF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC3IF3

        Create a new object of the class itkUnaryGeneratorImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC3IF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IF3_Clone, None, itkUnaryGeneratorImageFilterIUC3IF3)
itkUnaryGeneratorImageFilterIUC3IF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IF3_swigregister
itkUnaryGeneratorImageFilterIUC3IF3_swigregister(itkUnaryGeneratorImageFilterIUC3IF3)

def itkUnaryGeneratorImageFilterIUC3IF3___New_orig__() -> "itkUnaryGeneratorImageFilterIUC3IF3_Pointer":
    """itkUnaryGeneratorImageFilterIUC3IF3___New_orig__() -> itkUnaryGeneratorImageFilterIUC3IF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IF3___New_orig__()

def itkUnaryGeneratorImageFilterIUC3IF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3IF3 *":
    """itkUnaryGeneratorImageFilterIUC3IF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3IF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IF3_cast(obj)

class itkUnaryGeneratorImageFilterIUC3ISS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC3ISS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC3ISS3 self) -> itkUnaryGeneratorImageFilterIUC3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ISS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3ISS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC3ISS3

        Create a new object of the class itkUnaryGeneratorImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC3ISS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ISS3_Clone, None, itkUnaryGeneratorImageFilterIUC3ISS3)
itkUnaryGeneratorImageFilterIUC3ISS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ISS3_swigregister
itkUnaryGeneratorImageFilterIUC3ISS3_swigregister(itkUnaryGeneratorImageFilterIUC3ISS3)

def itkUnaryGeneratorImageFilterIUC3ISS3___New_orig__() -> "itkUnaryGeneratorImageFilterIUC3ISS3_Pointer":
    """itkUnaryGeneratorImageFilterIUC3ISS3___New_orig__() -> itkUnaryGeneratorImageFilterIUC3ISS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ISS3___New_orig__()

def itkUnaryGeneratorImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3ISS3 *":
    """itkUnaryGeneratorImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3ISS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3ISS3_cast(obj)

class itkUnaryGeneratorImageFilterIUC3IUC3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC3IUC3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC3IUC3 self) -> itkUnaryGeneratorImageFilterIUC3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3IUC3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC3IUC3

        Create a new object of the class itkUnaryGeneratorImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC3IUC3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUC3_Clone, None, itkUnaryGeneratorImageFilterIUC3IUC3)
itkUnaryGeneratorImageFilterIUC3IUC3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUC3_swigregister
itkUnaryGeneratorImageFilterIUC3IUC3_swigregister(itkUnaryGeneratorImageFilterIUC3IUC3)

def itkUnaryGeneratorImageFilterIUC3IUC3___New_orig__() -> "itkUnaryGeneratorImageFilterIUC3IUC3_Pointer":
    """itkUnaryGeneratorImageFilterIUC3IUC3___New_orig__() -> itkUnaryGeneratorImageFilterIUC3IUC3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUC3___New_orig__()

def itkUnaryGeneratorImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3IUC3 *":
    """itkUnaryGeneratorImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3IUC3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUC3_cast(obj)

class itkUnaryGeneratorImageFilterIUC3IUS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUC3IUS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUC3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUC3IUS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUC3IUS3 self) -> itkUnaryGeneratorImageFilterIUC3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUC3IUS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3IUS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3IUS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUC3IUS3

        Create a new object of the class itkUnaryGeneratorImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUC3IUS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUS3_Clone, None, itkUnaryGeneratorImageFilterIUC3IUS3)
itkUnaryGeneratorImageFilterIUC3IUS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUS3_swigregister
itkUnaryGeneratorImageFilterIUC3IUS3_swigregister(itkUnaryGeneratorImageFilterIUC3IUS3)

def itkUnaryGeneratorImageFilterIUC3IUS3___New_orig__() -> "itkUnaryGeneratorImageFilterIUC3IUS3_Pointer":
    """itkUnaryGeneratorImageFilterIUC3IUS3___New_orig__() -> itkUnaryGeneratorImageFilterIUC3IUS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUS3___New_orig__()

def itkUnaryGeneratorImageFilterIUC3IUS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUC3IUS3 *":
    """itkUnaryGeneratorImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUC3IUS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUC3IUS3_cast(obj)

class itkUnaryGeneratorImageFilterIUS2ICF2(itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS2ICF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS2ICF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS2ICF2 self) -> itkUnaryGeneratorImageFilterIUS2ICF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ICF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS2ICF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2ICF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2ICF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ICF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS2ICF2

        Create a new object of the class itkUnaryGeneratorImageFilterIUS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS2ICF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ICF2_Clone, None, itkUnaryGeneratorImageFilterIUS2ICF2)
itkUnaryGeneratorImageFilterIUS2ICF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ICF2_swigregister
itkUnaryGeneratorImageFilterIUS2ICF2_swigregister(itkUnaryGeneratorImageFilterIUS2ICF2)

def itkUnaryGeneratorImageFilterIUS2ICF2___New_orig__() -> "itkUnaryGeneratorImageFilterIUS2ICF2_Pointer":
    """itkUnaryGeneratorImageFilterIUS2ICF2___New_orig__() -> itkUnaryGeneratorImageFilterIUS2ICF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ICF2___New_orig__()

def itkUnaryGeneratorImageFilterIUS2ICF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2ICF2 *":
    """itkUnaryGeneratorImageFilterIUS2ICF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2ICF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ICF2_cast(obj)

class itkUnaryGeneratorImageFilterIUS2ID2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS2ID2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS2ID2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS2ID2 self) -> itkUnaryGeneratorImageFilterIUS2ID2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ID2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS2ID2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2ID2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2ID2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS2ID2

        Create a new object of the class itkUnaryGeneratorImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS2ID2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ID2_Clone, None, itkUnaryGeneratorImageFilterIUS2ID2)
itkUnaryGeneratorImageFilterIUS2ID2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ID2_swigregister
itkUnaryGeneratorImageFilterIUS2ID2_swigregister(itkUnaryGeneratorImageFilterIUS2ID2)

def itkUnaryGeneratorImageFilterIUS2ID2___New_orig__() -> "itkUnaryGeneratorImageFilterIUS2ID2_Pointer":
    """itkUnaryGeneratorImageFilterIUS2ID2___New_orig__() -> itkUnaryGeneratorImageFilterIUS2ID2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ID2___New_orig__()

def itkUnaryGeneratorImageFilterIUS2ID2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2ID2 *":
    """itkUnaryGeneratorImageFilterIUS2ID2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2ID2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ID2_cast(obj)

class itkUnaryGeneratorImageFilterIUS2IF2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS2IF2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS2IF2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS2IF2 self) -> itkUnaryGeneratorImageFilterIUS2IF2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IF2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS2IF2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2IF2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2IF2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS2IF2

        Create a new object of the class itkUnaryGeneratorImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS2IF2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IF2_Clone, None, itkUnaryGeneratorImageFilterIUS2IF2)
itkUnaryGeneratorImageFilterIUS2IF2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IF2_swigregister
itkUnaryGeneratorImageFilterIUS2IF2_swigregister(itkUnaryGeneratorImageFilterIUS2IF2)

def itkUnaryGeneratorImageFilterIUS2IF2___New_orig__() -> "itkUnaryGeneratorImageFilterIUS2IF2_Pointer":
    """itkUnaryGeneratorImageFilterIUS2IF2___New_orig__() -> itkUnaryGeneratorImageFilterIUS2IF2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IF2___New_orig__()

def itkUnaryGeneratorImageFilterIUS2IF2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2IF2 *":
    """itkUnaryGeneratorImageFilterIUS2IF2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2IF2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IF2_cast(obj)

class itkUnaryGeneratorImageFilterIUS2ISS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS2ISS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS2ISS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS2ISS2 self) -> itkUnaryGeneratorImageFilterIUS2ISS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ISS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS2ISS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2ISS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2ISS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS2ISS2

        Create a new object of the class itkUnaryGeneratorImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS2ISS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ISS2_Clone, None, itkUnaryGeneratorImageFilterIUS2ISS2)
itkUnaryGeneratorImageFilterIUS2ISS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ISS2_swigregister
itkUnaryGeneratorImageFilterIUS2ISS2_swigregister(itkUnaryGeneratorImageFilterIUS2ISS2)

def itkUnaryGeneratorImageFilterIUS2ISS2___New_orig__() -> "itkUnaryGeneratorImageFilterIUS2ISS2_Pointer":
    """itkUnaryGeneratorImageFilterIUS2ISS2___New_orig__() -> itkUnaryGeneratorImageFilterIUS2ISS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ISS2___New_orig__()

def itkUnaryGeneratorImageFilterIUS2ISS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2ISS2 *":
    """itkUnaryGeneratorImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2ISS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2ISS2_cast(obj)

class itkUnaryGeneratorImageFilterIUS2IUC2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS2IUC2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS2IUC2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS2IUC2 self) -> itkUnaryGeneratorImageFilterIUS2IUC2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUC2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS2IUC2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2IUC2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2IUC2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS2IUC2

        Create a new object of the class itkUnaryGeneratorImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS2IUC2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUC2_Clone, None, itkUnaryGeneratorImageFilterIUS2IUC2)
itkUnaryGeneratorImageFilterIUS2IUC2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUC2_swigregister
itkUnaryGeneratorImageFilterIUS2IUC2_swigregister(itkUnaryGeneratorImageFilterIUS2IUC2)

def itkUnaryGeneratorImageFilterIUS2IUC2___New_orig__() -> "itkUnaryGeneratorImageFilterIUS2IUC2_Pointer":
    """itkUnaryGeneratorImageFilterIUS2IUC2___New_orig__() -> itkUnaryGeneratorImageFilterIUS2IUC2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUC2___New_orig__()

def itkUnaryGeneratorImageFilterIUS2IUC2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2IUC2 *":
    """itkUnaryGeneratorImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2IUC2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUC2_cast(obj)

class itkUnaryGeneratorImageFilterIUS2IUS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS2IUS2_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS2IUS2 self) -> itkUnaryGeneratorImageFilterIUS2IUS2_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUS2_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2IUS2"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS2IUS2

        Create a new object of the class itkUnaryGeneratorImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS2IUS2.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUS2_Clone, None, itkUnaryGeneratorImageFilterIUS2IUS2)
itkUnaryGeneratorImageFilterIUS2IUS2_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUS2_swigregister
itkUnaryGeneratorImageFilterIUS2IUS2_swigregister(itkUnaryGeneratorImageFilterIUS2IUS2)

def itkUnaryGeneratorImageFilterIUS2IUS2___New_orig__() -> "itkUnaryGeneratorImageFilterIUS2IUS2_Pointer":
    """itkUnaryGeneratorImageFilterIUS2IUS2___New_orig__() -> itkUnaryGeneratorImageFilterIUS2IUS2_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUS2___New_orig__()

def itkUnaryGeneratorImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS2IUS2 *":
    """itkUnaryGeneratorImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS2IUS2"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS2IUS2_cast(obj)

class itkUnaryGeneratorImageFilterIUS3ICF3(itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS3ICF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS3ICF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS3ICF3 self) -> itkUnaryGeneratorImageFilterIUS3ICF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ICF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS3ICF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3ICF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3ICF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ICF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS3ICF3

        Create a new object of the class itkUnaryGeneratorImageFilterIUS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS3ICF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ICF3_Clone, None, itkUnaryGeneratorImageFilterIUS3ICF3)
itkUnaryGeneratorImageFilterIUS3ICF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ICF3_swigregister
itkUnaryGeneratorImageFilterIUS3ICF3_swigregister(itkUnaryGeneratorImageFilterIUS3ICF3)

def itkUnaryGeneratorImageFilterIUS3ICF3___New_orig__() -> "itkUnaryGeneratorImageFilterIUS3ICF3_Pointer":
    """itkUnaryGeneratorImageFilterIUS3ICF3___New_orig__() -> itkUnaryGeneratorImageFilterIUS3ICF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ICF3___New_orig__()

def itkUnaryGeneratorImageFilterIUS3ICF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3ICF3 *":
    """itkUnaryGeneratorImageFilterIUS3ICF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3ICF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ICF3_cast(obj)

class itkUnaryGeneratorImageFilterIUS3ID3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS3ID3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS3ID3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS3ID3 self) -> itkUnaryGeneratorImageFilterIUS3ID3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ID3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS3ID3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3ID3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3ID3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS3ID3

        Create a new object of the class itkUnaryGeneratorImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS3ID3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ID3_Clone, None, itkUnaryGeneratorImageFilterIUS3ID3)
itkUnaryGeneratorImageFilterIUS3ID3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ID3_swigregister
itkUnaryGeneratorImageFilterIUS3ID3_swigregister(itkUnaryGeneratorImageFilterIUS3ID3)

def itkUnaryGeneratorImageFilterIUS3ID3___New_orig__() -> "itkUnaryGeneratorImageFilterIUS3ID3_Pointer":
    """itkUnaryGeneratorImageFilterIUS3ID3___New_orig__() -> itkUnaryGeneratorImageFilterIUS3ID3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ID3___New_orig__()

def itkUnaryGeneratorImageFilterIUS3ID3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3ID3 *":
    """itkUnaryGeneratorImageFilterIUS3ID3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3ID3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ID3_cast(obj)

class itkUnaryGeneratorImageFilterIUS3IF3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS3IF3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS3IF3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS3IF3 self) -> itkUnaryGeneratorImageFilterIUS3IF3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IF3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS3IF3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3IF3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3IF3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS3IF3

        Create a new object of the class itkUnaryGeneratorImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS3IF3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IF3_Clone, None, itkUnaryGeneratorImageFilterIUS3IF3)
itkUnaryGeneratorImageFilterIUS3IF3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IF3_swigregister
itkUnaryGeneratorImageFilterIUS3IF3_swigregister(itkUnaryGeneratorImageFilterIUS3IF3)

def itkUnaryGeneratorImageFilterIUS3IF3___New_orig__() -> "itkUnaryGeneratorImageFilterIUS3IF3_Pointer":
    """itkUnaryGeneratorImageFilterIUS3IF3___New_orig__() -> itkUnaryGeneratorImageFilterIUS3IF3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IF3___New_orig__()

def itkUnaryGeneratorImageFilterIUS3IF3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3IF3 *":
    """itkUnaryGeneratorImageFilterIUS3IF3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3IF3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IF3_cast(obj)

class itkUnaryGeneratorImageFilterIUS3ISS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS3ISS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS3ISS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS3ISS3 self) -> itkUnaryGeneratorImageFilterIUS3ISS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ISS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS3ISS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3ISS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3ISS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS3ISS3

        Create a new object of the class itkUnaryGeneratorImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS3ISS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ISS3_Clone, None, itkUnaryGeneratorImageFilterIUS3ISS3)
itkUnaryGeneratorImageFilterIUS3ISS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ISS3_swigregister
itkUnaryGeneratorImageFilterIUS3ISS3_swigregister(itkUnaryGeneratorImageFilterIUS3ISS3)

def itkUnaryGeneratorImageFilterIUS3ISS3___New_orig__() -> "itkUnaryGeneratorImageFilterIUS3ISS3_Pointer":
    """itkUnaryGeneratorImageFilterIUS3ISS3___New_orig__() -> itkUnaryGeneratorImageFilterIUS3ISS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ISS3___New_orig__()

def itkUnaryGeneratorImageFilterIUS3ISS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3ISS3 *":
    """itkUnaryGeneratorImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3ISS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3ISS3_cast(obj)

class itkUnaryGeneratorImageFilterIUS3IUC3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS3IUC3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS3IUC3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS3IUC3 self) -> itkUnaryGeneratorImageFilterIUS3IUC3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUC3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS3IUC3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3IUC3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3IUC3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS3IUC3

        Create a new object of the class itkUnaryGeneratorImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS3IUC3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUC3_Clone, None, itkUnaryGeneratorImageFilterIUS3IUC3)
itkUnaryGeneratorImageFilterIUS3IUC3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUC3_swigregister
itkUnaryGeneratorImageFilterIUS3IUC3_swigregister(itkUnaryGeneratorImageFilterIUS3IUC3)

def itkUnaryGeneratorImageFilterIUS3IUC3___New_orig__() -> "itkUnaryGeneratorImageFilterIUS3IUC3_Pointer":
    """itkUnaryGeneratorImageFilterIUS3IUC3___New_orig__() -> itkUnaryGeneratorImageFilterIUS3IUC3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUC3___New_orig__()

def itkUnaryGeneratorImageFilterIUS3IUC3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3IUC3 *":
    """itkUnaryGeneratorImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3IUC3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUC3_cast(obj)

class itkUnaryGeneratorImageFilterIUS3IUS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """


    Implements pixel-wise generic "operation" on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor" class with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    UnaryGeneratorImageFilter allows the output dimension of the filter to
    be larger than the input dimension. Thus subclasses of the
    UnaryGeneratorImageFilter can be used to promote a 2D image to a 3D
    image, etc.

    See:  UnaryFunctorImageFilter

    See:   BinaryGeneratorImageFilter TernaryGeneratormageFilter

    C++ includes: itkUnaryGeneratorImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkUnaryGeneratorImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkUnaryGeneratorImageFilterIUS3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkUnaryGeneratorImageFilterIUS3IUS3_Pointer":
        """Clone(itkUnaryGeneratorImageFilterIUS3IUS3 self) -> itkUnaryGeneratorImageFilterIUS3IUS3_Pointer"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUS3_Clone(self)

    __swig_destroy__ = _itkUnaryGeneratorImageFilterPython.delete_itkUnaryGeneratorImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3IUS3"""
        return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkUnaryGeneratorImageFilterIUS3IUS3

        Create a new object of the class itkUnaryGeneratorImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnaryGeneratorImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkUnaryGeneratorImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkUnaryGeneratorImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkUnaryGeneratorImageFilterIUS3IUS3.Clone = new_instancemethod(_itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUS3_Clone, None, itkUnaryGeneratorImageFilterIUS3IUS3)
itkUnaryGeneratorImageFilterIUS3IUS3_swigregister = _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUS3_swigregister
itkUnaryGeneratorImageFilterIUS3IUS3_swigregister(itkUnaryGeneratorImageFilterIUS3IUS3)

def itkUnaryGeneratorImageFilterIUS3IUS3___New_orig__() -> "itkUnaryGeneratorImageFilterIUS3IUS3_Pointer":
    """itkUnaryGeneratorImageFilterIUS3IUS3___New_orig__() -> itkUnaryGeneratorImageFilterIUS3IUS3_Pointer"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUS3___New_orig__()

def itkUnaryGeneratorImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkUnaryGeneratorImageFilterIUS3IUS3 *":
    """itkUnaryGeneratorImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkUnaryGeneratorImageFilterIUS3IUS3"""
    return _itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unary_generator_image_filter(*args, **kwargs):
    """Procedural interface for UnaryGeneratorImageFilter"""
    import itk
    instance = itk.UnaryGeneratorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_generator_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnaryGeneratorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnaryGeneratorImageFilter.values()[0]
    else:
        filter_object = itk.UnaryGeneratorImageFilter

    unary_generator_image_filter.__doc__ = filter_object.__doc__
    unary_generator_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unary_generator_image_filter.__doc__ += "Available Keyword Arguments:\n"
    unary_generator_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



