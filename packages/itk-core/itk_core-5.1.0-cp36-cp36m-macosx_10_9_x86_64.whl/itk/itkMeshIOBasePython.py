# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMeshIOBasePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMeshIOBasePython', [dirname(__file__)])
        except ImportError:
            import _itkMeshIOBasePython
            return _itkMeshIOBasePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMeshIOBasePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMeshIOBasePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMeshIOBasePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython

def itkMeshIOBase_New():
  return itkMeshIOBase.New()

class itkMeshIOBase(ITKCommonBasePython.itkLightProcessObject):
    """


    Abstract superclass defines mesh IO interface.

    MeshIOBase is a class that reads and/or writes Mesh / QuadEdgeMesh
    data of a particular format (such as PNG or raw binary). The
    MeshIOBase encapsulates both the reading and writing of data. The
    MeshIOBase is used by the MeshFileReader class (to read data) and the
    MeshFileWriter (to write data) into a single file. Normally the user
    does not directly manipulate this class other than to instantiate it,
    set the FileName, and assign it to a MeshFileReader or MeshFileWriter.

    A Pluggable factory pattern is used this allows different kinds of
    readers to be registered (even at run time) without having to modify
    the code in this class.

    Wanlin Zhu. Uviversity of New South Wales, Australia.

    See:   MeshFileWriter

    See:   MeshFileReader

    C++ includes: itkMeshIOBase.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFileName(self, *args) -> "void":
        """
        SetFileName(itkMeshIOBase self, char const * _arg)
        SetFileName(itkMeshIOBase self, std::string const & _arg)

        Set/Get the name of the
        file to be read. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_SetFileName(self, *args)


    def GetFileName(self) -> "char const *":
        """GetFileName(itkMeshIOBase self) -> char const *"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetFileName(self)


    def SetPointPixelType(self, _arg: 'itkCommonEnums::IOPixel const') -> "void":
        """SetPointPixelType(itkMeshIOBase self, itkCommonEnums::IOPixel const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetPointPixelType(self, _arg)


    def GetPointPixelType(self) -> "itkCommonEnums::IOPixel":
        """GetPointPixelType(itkMeshIOBase self) -> itkCommonEnums::IOPixel"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetPointPixelType(self)


    def SetCellPixelType(self, _arg: 'itkCommonEnums::IOPixel const') -> "void":
        """SetCellPixelType(itkMeshIOBase self, itkCommonEnums::IOPixel const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetCellPixelType(self, _arg)


    def GetCellPixelType(self) -> "itkCommonEnums::IOPixel":
        """GetCellPixelType(itkMeshIOBase self) -> itkCommonEnums::IOPixel"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetCellPixelType(self)


    def SetPointComponentType(self, _arg: 'itkCommonEnums::IOComponent const') -> "void":
        """SetPointComponentType(itkMeshIOBase self, itkCommonEnums::IOComponent const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetPointComponentType(self, _arg)


    def GetPointComponentType(self) -> "itkCommonEnums::IOComponent":
        """GetPointComponentType(itkMeshIOBase self) -> itkCommonEnums::IOComponent"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetPointComponentType(self)


    def SetCellComponentType(self, _arg: 'itkCommonEnums::IOComponent const') -> "void":
        """SetCellComponentType(itkMeshIOBase self, itkCommonEnums::IOComponent const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetCellComponentType(self, _arg)


    def GetCellComponentType(self) -> "itkCommonEnums::IOComponent":
        """GetCellComponentType(itkMeshIOBase self) -> itkCommonEnums::IOComponent"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetCellComponentType(self)


    def SetPointPixelComponentType(self, _arg: 'itkCommonEnums::IOComponent const') -> "void":
        """SetPointPixelComponentType(itkMeshIOBase self, itkCommonEnums::IOComponent const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetPointPixelComponentType(self, _arg)


    def GetPointPixelComponentType(self) -> "itkCommonEnums::IOComponent":
        """GetPointPixelComponentType(itkMeshIOBase self) -> itkCommonEnums::IOComponent"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetPointPixelComponentType(self)


    def SetCellPixelComponentType(self, _arg: 'itkCommonEnums::IOComponent const') -> "void":
        """SetCellPixelComponentType(itkMeshIOBase self, itkCommonEnums::IOComponent const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetCellPixelComponentType(self, _arg)


    def GetCellPixelComponentType(self) -> "itkCommonEnums::IOComponent":
        """GetCellPixelComponentType(itkMeshIOBase self) -> itkCommonEnums::IOComponent"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetCellPixelComponentType(self)


    def SetNumberOfPointPixelComponents(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfPointPixelComponents(itkMeshIOBase self, unsigned int const _arg)

        Set/Get the number of components per pixel in the mesh. This may be
        set by the reading process. For SCALAR pixel types, NumberOfComponents
        will be 1. For other pixel types, NumberOfComponents will be greater
        than or equal to one. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_SetNumberOfPointPixelComponents(self, _arg)


    def GetNumberOfPointPixelComponents(self) -> "unsigned int":
        """GetNumberOfPointPixelComponents(itkMeshIOBase self) -> unsigned int"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetNumberOfPointPixelComponents(self)


    def SetNumberOfCellPixelComponents(self, _arg: 'unsigned int const') -> "void":
        """SetNumberOfCellPixelComponents(itkMeshIOBase self, unsigned int const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetNumberOfCellPixelComponents(self, _arg)


    def GetNumberOfCellPixelComponents(self) -> "unsigned int":
        """GetNumberOfCellPixelComponents(itkMeshIOBase self) -> unsigned int"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetNumberOfCellPixelComponents(self)


    def SetPointDimension(self, _arg: 'unsigned int const') -> "void":
        """SetPointDimension(itkMeshIOBase self, unsigned int const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetPointDimension(self, _arg)


    def GetPointDimension(self) -> "unsigned int":
        """GetPointDimension(itkMeshIOBase self) -> unsigned int"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetPointDimension(self)


    def SetNumberOfPoints(self, _arg: 'unsigned long const') -> "void":
        """SetNumberOfPoints(itkMeshIOBase self, unsigned long const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetNumberOfPoints(self, _arg)


    def GetNumberOfPoints(self) -> "unsigned long":
        """GetNumberOfPoints(itkMeshIOBase self) -> unsigned long"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetNumberOfPoints(self)


    def SetNumberOfCells(self, _arg: 'unsigned long const') -> "void":
        """SetNumberOfCells(itkMeshIOBase self, unsigned long const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetNumberOfCells(self, _arg)


    def GetNumberOfCells(self) -> "unsigned long":
        """GetNumberOfCells(itkMeshIOBase self) -> unsigned long"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetNumberOfCells(self)


    def SetNumberOfPointPixels(self, _arg: 'unsigned long const') -> "void":
        """SetNumberOfPointPixels(itkMeshIOBase self, unsigned long const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetNumberOfPointPixels(self, _arg)


    def GetNumberOfPointPixels(self) -> "unsigned long":
        """GetNumberOfPointPixels(itkMeshIOBase self) -> unsigned long"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetNumberOfPointPixels(self)


    def SetNumberOfCellPixels(self, _arg: 'unsigned long const') -> "void":
        """SetNumberOfCellPixels(itkMeshIOBase self, unsigned long const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetNumberOfCellPixels(self, _arg)


    def GetNumberOfCellPixels(self) -> "unsigned long":
        """GetNumberOfCellPixels(itkMeshIOBase self) -> unsigned long"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetNumberOfCellPixels(self)


    def SetCellBufferSize(self, _arg: 'unsigned long const') -> "void":
        """SetCellBufferSize(itkMeshIOBase self, unsigned long const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetCellBufferSize(self, _arg)


    def GetCellBufferSize(self) -> "unsigned long":
        """GetCellBufferSize(itkMeshIOBase self) -> unsigned long"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetCellBufferSize(self)


    def SetUpdatePoints(self, _arg: 'bool const') -> "void":
        """SetUpdatePoints(itkMeshIOBase self, bool const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetUpdatePoints(self, _arg)


    def GetUpdatePoints(self) -> "bool":
        """GetUpdatePoints(itkMeshIOBase self) -> bool"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetUpdatePoints(self)


    def SetUpdateCells(self, _arg: 'bool const') -> "void":
        """SetUpdateCells(itkMeshIOBase self, bool const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetUpdateCells(self, _arg)


    def GetUpdateCells(self) -> "bool":
        """GetUpdateCells(itkMeshIOBase self) -> bool"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetUpdateCells(self)


    def SetUpdatePointData(self, _arg: 'bool const') -> "void":
        """SetUpdatePointData(itkMeshIOBase self, bool const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetUpdatePointData(self, _arg)


    def GetUpdatePointData(self) -> "bool":
        """GetUpdatePointData(itkMeshIOBase self) -> bool"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetUpdatePointData(self)


    def SetUpdateCellData(self, _arg: 'bool const') -> "void":
        """SetUpdateCellData(itkMeshIOBase self, bool const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetUpdateCellData(self, _arg)


    def GetUpdateCellData(self) -> "bool":
        """GetUpdateCellData(itkMeshIOBase self) -> bool"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetUpdateCellData(self)


    def GetComponentSize(self, componentType: 'itkCommonEnums::IOComponent') -> "unsigned int":
        """GetComponentSize(itkMeshIOBase self, itkCommonEnums::IOComponent componentType) -> unsigned int"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetComponentSize(self, componentType)


    def GetComponentTypeAsString(self, arg0: 'itkCommonEnums::IOComponent') -> "std::string":
        """
        GetComponentTypeAsString(itkMeshIOBase self, itkCommonEnums::IOComponent arg0) -> std::string

        Convenience method returns the IOComponentEnum as a string. This can
        be used for writing output files. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_GetComponentTypeAsString(self, arg0)


    def GetPixelTypeAsString(self, arg0: 'itkCommonEnums::IOPixel') -> "std::string":
        """
        GetPixelTypeAsString(itkMeshIOBase self, itkCommonEnums::IOPixel arg0) -> std::string

        Convenience
        method returns the IOPixelEnum as a string. This can be used for
        writing output files. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_GetPixelTypeAsString(self, arg0)


    def SetFileType(self, _arg: 'itkCommonEnums::IOFile const') -> "void":
        """SetFileType(itkMeshIOBase self, itkCommonEnums::IOFile const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetFileType(self, _arg)


    def GetFileType(self) -> "itkCommonEnums::IOFile":
        """GetFileType(itkMeshIOBase self) -> itkCommonEnums::IOFile"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetFileType(self)


    def SetFileTypeToASCII(self) -> "void":
        """SetFileTypeToASCII(itkMeshIOBase self)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetFileTypeToASCII(self)


    def SetFileTypeToBinary(self) -> "void":
        """SetFileTypeToBinary(itkMeshIOBase self)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetFileTypeToBinary(self)


    def SetByteOrder(self, _arg: 'itkCommonEnums::IOByteOrder const') -> "void":
        """SetByteOrder(itkMeshIOBase self, itkCommonEnums::IOByteOrder const _arg)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetByteOrder(self, _arg)


    def GetByteOrder(self) -> "itkCommonEnums::IOByteOrder":
        """GetByteOrder(itkMeshIOBase self) -> itkCommonEnums::IOByteOrder"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetByteOrder(self)


    def SetByteOrderToBigEndian(self) -> "void":
        """SetByteOrderToBigEndian(itkMeshIOBase self)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetByteOrderToBigEndian(self)


    def SetByteOrderToLittleEndian(self) -> "void":
        """SetByteOrderToLittleEndian(itkMeshIOBase self)"""
        return _itkMeshIOBasePython.itkMeshIOBase_SetByteOrderToLittleEndian(self)


    def SetUseCompression(self, _arg: 'bool const') -> "void":
        """
        SetUseCompression(itkMeshIOBase self, bool const _arg)

        Set/Get a boolean
        to use the compression or not. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_SetUseCompression(self, _arg)


    def GetUseCompression(self) -> "bool":
        """GetUseCompression(itkMeshIOBase self) -> bool"""
        return _itkMeshIOBasePython.itkMeshIOBase_GetUseCompression(self)


    def UseCompressionOn(self) -> "void":
        """UseCompressionOn(itkMeshIOBase self)"""
        return _itkMeshIOBasePython.itkMeshIOBase_UseCompressionOn(self)


    def UseCompressionOff(self) -> "void":
        """UseCompressionOff(itkMeshIOBase self)"""
        return _itkMeshIOBasePython.itkMeshIOBase_UseCompressionOff(self)


    def GetFileTypeAsString(self, arg0: 'itkCommonEnums::IOFile') -> "std::string":
        """
        GetFileTypeAsString(itkMeshIOBase self, itkCommonEnums::IOFile arg0) -> std::string

        Convenience
        method returns the IOFileEnum as a string. This can be used for
        writing output files. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_GetFileTypeAsString(self, arg0)


    def GetByteOrderAsString(self, arg0: 'itkCommonEnums::IOByteOrder') -> "std::string":
        """
        GetByteOrderAsString(itkMeshIOBase self, itkCommonEnums::IOByteOrder arg0) -> std::string

        Convenience
        method returns the IOByteOrderEnum as a string. This can be used for
        writing output files. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_GetByteOrderAsString(self, arg0)


    def CanReadFile(self, arg0: 'char const *') -> "bool":
        """
        CanReadFile(itkMeshIOBase self, char const * arg0) -> bool

        Determine the file
        type. Returns true if this MeshIO can read the file specified. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_CanReadFile(self, arg0)


    def ReadMeshInformation(self) -> "void":
        """
        ReadMeshInformation(itkMeshIOBase self)

        Determin the
        required information and whether need to ReadPoints, ReadCells,
        ReadPointData and ReadCellData 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_ReadMeshInformation(self)


    def ReadPoints(self, buffer: 'void *') -> "void":
        """
        ReadPoints(itkMeshIOBase self, void * buffer)

        Reads the data from disk
        into the memory buffer provided. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_ReadPoints(self, buffer)


    def ReadCells(self, buffer: 'void *') -> "void":
        """ReadCells(itkMeshIOBase self, void * buffer)"""
        return _itkMeshIOBasePython.itkMeshIOBase_ReadCells(self, buffer)


    def ReadPointData(self, buffer: 'void *') -> "void":
        """ReadPointData(itkMeshIOBase self, void * buffer)"""
        return _itkMeshIOBasePython.itkMeshIOBase_ReadPointData(self, buffer)


    def ReadCellData(self, buffer: 'void *') -> "void":
        """ReadCellData(itkMeshIOBase self, void * buffer)"""
        return _itkMeshIOBasePython.itkMeshIOBase_ReadCellData(self, buffer)


    def CanWriteFile(self, arg0: 'char const *') -> "bool":
        """
        CanWriteFile(itkMeshIOBase self, char const * arg0) -> bool

        Writes the data to
        disk from the memory buffer provided. Make sure that the IORegions has
        been set properly. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_CanWriteFile(self, arg0)


    def WriteMeshInformation(self) -> "void":
        """WriteMeshInformation(itkMeshIOBase self)"""
        return _itkMeshIOBasePython.itkMeshIOBase_WriteMeshInformation(self)


    def WritePoints(self, buffer: 'void *') -> "void":
        """WritePoints(itkMeshIOBase self, void * buffer)"""
        return _itkMeshIOBasePython.itkMeshIOBase_WritePoints(self, buffer)


    def WriteCells(self, buffer: 'void *') -> "void":
        """WriteCells(itkMeshIOBase self, void * buffer)"""
        return _itkMeshIOBasePython.itkMeshIOBase_WriteCells(self, buffer)


    def WritePointData(self, buffer: 'void *') -> "void":
        """WritePointData(itkMeshIOBase self, void * buffer)"""
        return _itkMeshIOBasePython.itkMeshIOBase_WritePointData(self, buffer)


    def WriteCellData(self, buffer: 'void *') -> "void":
        """WriteCellData(itkMeshIOBase self, void * buffer)"""
        return _itkMeshIOBasePython.itkMeshIOBase_WriteCellData(self, buffer)


    def Write(self) -> "void":
        """Write(itkMeshIOBase self)"""
        return _itkMeshIOBasePython.itkMeshIOBase_Write(self)


    def GetSupportedReadExtensions(self) -> "std::vector< std::string,std::allocator< std::string > > const &":
        """
        GetSupportedReadExtensions(itkMeshIOBase self) -> vectorstring

        This
        method returns an array with the list of filename extensions supported
        for reading by this MeshIO class. This is intended to facilitate GUI
        and application level integration. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_GetSupportedReadExtensions(self)


    def GetSupportedWriteExtensions(self) -> "std::vector< std::string,std::allocator< std::string > > const &":
        """
        GetSupportedWriteExtensions(itkMeshIOBase self) -> vectorstring

        This
        method returns an array with the list of filename extensions supported
        for writing by this MeshIO class. This is intended to facilitate GUI
        and application level integration. 
        """
        return _itkMeshIOBasePython.itkMeshIOBase_GetSupportedWriteExtensions(self)

    __swig_destroy__ = _itkMeshIOBasePython.delete_itkMeshIOBase

    def cast(obj: 'itkLightObject') -> "itkMeshIOBase *":
        """cast(itkLightObject obj) -> itkMeshIOBase"""
        return _itkMeshIOBasePython.itkMeshIOBase_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshIOBase

        Create a new object of the class itkMeshIOBase and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshIOBase.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshIOBase.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshIOBase.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshIOBase.SetFileName = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetFileName, None, itkMeshIOBase)
itkMeshIOBase.GetFileName = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetFileName, None, itkMeshIOBase)
itkMeshIOBase.SetPointPixelType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetPointPixelType, None, itkMeshIOBase)
itkMeshIOBase.GetPointPixelType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetPointPixelType, None, itkMeshIOBase)
itkMeshIOBase.SetCellPixelType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetCellPixelType, None, itkMeshIOBase)
itkMeshIOBase.GetCellPixelType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetCellPixelType, None, itkMeshIOBase)
itkMeshIOBase.SetPointComponentType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetPointComponentType, None, itkMeshIOBase)
itkMeshIOBase.GetPointComponentType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetPointComponentType, None, itkMeshIOBase)
itkMeshIOBase.SetCellComponentType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetCellComponentType, None, itkMeshIOBase)
itkMeshIOBase.GetCellComponentType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetCellComponentType, None, itkMeshIOBase)
itkMeshIOBase.SetPointPixelComponentType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetPointPixelComponentType, None, itkMeshIOBase)
itkMeshIOBase.GetPointPixelComponentType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetPointPixelComponentType, None, itkMeshIOBase)
itkMeshIOBase.SetCellPixelComponentType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetCellPixelComponentType, None, itkMeshIOBase)
itkMeshIOBase.GetCellPixelComponentType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetCellPixelComponentType, None, itkMeshIOBase)
itkMeshIOBase.SetNumberOfPointPixelComponents = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetNumberOfPointPixelComponents, None, itkMeshIOBase)
itkMeshIOBase.GetNumberOfPointPixelComponents = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetNumberOfPointPixelComponents, None, itkMeshIOBase)
itkMeshIOBase.SetNumberOfCellPixelComponents = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetNumberOfCellPixelComponents, None, itkMeshIOBase)
itkMeshIOBase.GetNumberOfCellPixelComponents = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetNumberOfCellPixelComponents, None, itkMeshIOBase)
itkMeshIOBase.SetPointDimension = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetPointDimension, None, itkMeshIOBase)
itkMeshIOBase.GetPointDimension = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetPointDimension, None, itkMeshIOBase)
itkMeshIOBase.SetNumberOfPoints = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetNumberOfPoints, None, itkMeshIOBase)
itkMeshIOBase.GetNumberOfPoints = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetNumberOfPoints, None, itkMeshIOBase)
itkMeshIOBase.SetNumberOfCells = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetNumberOfCells, None, itkMeshIOBase)
itkMeshIOBase.GetNumberOfCells = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetNumberOfCells, None, itkMeshIOBase)
itkMeshIOBase.SetNumberOfPointPixels = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetNumberOfPointPixels, None, itkMeshIOBase)
itkMeshIOBase.GetNumberOfPointPixels = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetNumberOfPointPixels, None, itkMeshIOBase)
itkMeshIOBase.SetNumberOfCellPixels = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetNumberOfCellPixels, None, itkMeshIOBase)
itkMeshIOBase.GetNumberOfCellPixels = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetNumberOfCellPixels, None, itkMeshIOBase)
itkMeshIOBase.SetCellBufferSize = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetCellBufferSize, None, itkMeshIOBase)
itkMeshIOBase.GetCellBufferSize = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetCellBufferSize, None, itkMeshIOBase)
itkMeshIOBase.SetUpdatePoints = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetUpdatePoints, None, itkMeshIOBase)
itkMeshIOBase.GetUpdatePoints = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetUpdatePoints, None, itkMeshIOBase)
itkMeshIOBase.SetUpdateCells = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetUpdateCells, None, itkMeshIOBase)
itkMeshIOBase.GetUpdateCells = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetUpdateCells, None, itkMeshIOBase)
itkMeshIOBase.SetUpdatePointData = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetUpdatePointData, None, itkMeshIOBase)
itkMeshIOBase.GetUpdatePointData = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetUpdatePointData, None, itkMeshIOBase)
itkMeshIOBase.SetUpdateCellData = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetUpdateCellData, None, itkMeshIOBase)
itkMeshIOBase.GetUpdateCellData = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetUpdateCellData, None, itkMeshIOBase)
itkMeshIOBase.GetComponentSize = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetComponentSize, None, itkMeshIOBase)
itkMeshIOBase.GetComponentTypeAsString = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetComponentTypeAsString, None, itkMeshIOBase)
itkMeshIOBase.GetPixelTypeAsString = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetPixelTypeAsString, None, itkMeshIOBase)
itkMeshIOBase.SetFileType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetFileType, None, itkMeshIOBase)
itkMeshIOBase.GetFileType = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetFileType, None, itkMeshIOBase)
itkMeshIOBase.SetFileTypeToASCII = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetFileTypeToASCII, None, itkMeshIOBase)
itkMeshIOBase.SetFileTypeToBinary = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetFileTypeToBinary, None, itkMeshIOBase)
itkMeshIOBase.SetByteOrder = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetByteOrder, None, itkMeshIOBase)
itkMeshIOBase.GetByteOrder = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetByteOrder, None, itkMeshIOBase)
itkMeshIOBase.SetByteOrderToBigEndian = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetByteOrderToBigEndian, None, itkMeshIOBase)
itkMeshIOBase.SetByteOrderToLittleEndian = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetByteOrderToLittleEndian, None, itkMeshIOBase)
itkMeshIOBase.SetUseCompression = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_SetUseCompression, None, itkMeshIOBase)
itkMeshIOBase.GetUseCompression = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetUseCompression, None, itkMeshIOBase)
itkMeshIOBase.UseCompressionOn = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_UseCompressionOn, None, itkMeshIOBase)
itkMeshIOBase.UseCompressionOff = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_UseCompressionOff, None, itkMeshIOBase)
itkMeshIOBase.GetFileTypeAsString = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetFileTypeAsString, None, itkMeshIOBase)
itkMeshIOBase.GetByteOrderAsString = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetByteOrderAsString, None, itkMeshIOBase)
itkMeshIOBase.CanReadFile = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_CanReadFile, None, itkMeshIOBase)
itkMeshIOBase.ReadMeshInformation = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_ReadMeshInformation, None, itkMeshIOBase)
itkMeshIOBase.ReadPoints = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_ReadPoints, None, itkMeshIOBase)
itkMeshIOBase.ReadCells = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_ReadCells, None, itkMeshIOBase)
itkMeshIOBase.ReadPointData = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_ReadPointData, None, itkMeshIOBase)
itkMeshIOBase.ReadCellData = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_ReadCellData, None, itkMeshIOBase)
itkMeshIOBase.CanWriteFile = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_CanWriteFile, None, itkMeshIOBase)
itkMeshIOBase.WriteMeshInformation = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_WriteMeshInformation, None, itkMeshIOBase)
itkMeshIOBase.WritePoints = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_WritePoints, None, itkMeshIOBase)
itkMeshIOBase.WriteCells = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_WriteCells, None, itkMeshIOBase)
itkMeshIOBase.WritePointData = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_WritePointData, None, itkMeshIOBase)
itkMeshIOBase.WriteCellData = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_WriteCellData, None, itkMeshIOBase)
itkMeshIOBase.Write = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_Write, None, itkMeshIOBase)
itkMeshIOBase.GetSupportedReadExtensions = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetSupportedReadExtensions, None, itkMeshIOBase)
itkMeshIOBase.GetSupportedWriteExtensions = new_instancemethod(_itkMeshIOBasePython.itkMeshIOBase_GetSupportedWriteExtensions, None, itkMeshIOBase)
itkMeshIOBase_swigregister = _itkMeshIOBasePython.itkMeshIOBase_swigregister
itkMeshIOBase_swigregister(itkMeshIOBase)

def itkMeshIOBase_cast(obj: 'itkLightObject') -> "itkMeshIOBase *":
    """itkMeshIOBase_cast(itkLightObject obj) -> itkMeshIOBase"""
    return _itkMeshIOBasePython.itkMeshIOBase_cast(obj)



