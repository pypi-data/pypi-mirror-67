# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageSinkPython
else:
    import _itkImageSinkPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageSinkPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageSinkPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itkImagePython
import itkPointPython
import itkFixedArrayPython
import pyBasePython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkRGBPixelPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImageRegionPython
import itkSymmetricSecondRankTensorPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkImageSinkVID3_New():
  return itkImageSinkVID3.New()


def itkImageSinkVIF3_New():
  return itkImageSinkVIF3.New()


def itkImageSinkVIUS3_New():
  return itkImageSinkVIUS3.New()


def itkImageSinkVIUC3_New():
  return itkImageSinkVIUC3.New()


def itkImageSinkVISS3_New():
  return itkImageSinkVISS3.New()


def itkImageSinkVID2_New():
  return itkImageSinkVID2.New()


def itkImageSinkVIF2_New():
  return itkImageSinkVIF2.New()


def itkImageSinkVIUS2_New():
  return itkImageSinkVIUS2.New()


def itkImageSinkVIUC2_New():
  return itkImageSinkVIUC2.New()


def itkImageSinkVISS2_New():
  return itkImageSinkVISS2.New()


def itkImageSinkICF3_New():
  return itkImageSinkICF3.New()


def itkImageSinkICF2_New():
  return itkImageSinkICF2.New()


def itkImageSinkID3_New():
  return itkImageSinkID3.New()


def itkImageSinkID2_New():
  return itkImageSinkID2.New()


def itkImageSinkIF3_New():
  return itkImageSinkIF3.New()


def itkImageSinkIF2_New():
  return itkImageSinkIF2.New()


def itkImageSinkIUS3_New():
  return itkImageSinkIUS3.New()


def itkImageSinkIUS2_New():
  return itkImageSinkIUS2.New()


def itkImageSinkIUC3_New():
  return itkImageSinkIUC3.New()


def itkImageSinkIUC2_New():
  return itkImageSinkIUC2.New()


def itkImageSinkISS3_New():
  return itkImageSinkISS3.New()


def itkImageSinkISS2_New():
  return itkImageSinkISS2.New()


def itkImageSinkICVF43_New():
  return itkImageSinkICVF43.New()


def itkImageSinkICVF42_New():
  return itkImageSinkICVF42.New()


def itkImageSinkICVF33_New():
  return itkImageSinkICVF33.New()


def itkImageSinkICVF32_New():
  return itkImageSinkICVF32.New()


def itkImageSinkICVF23_New():
  return itkImageSinkICVF23.New()


def itkImageSinkICVF22_New():
  return itkImageSinkICVF22.New()


def itkImageSinkIVF43_New():
  return itkImageSinkIVF43.New()


def itkImageSinkIVF42_New():
  return itkImageSinkIVF42.New()


def itkImageSinkIVF33_New():
  return itkImageSinkIVF33.New()


def itkImageSinkIVF32_New():
  return itkImageSinkIVF32.New()


def itkImageSinkIVF23_New():
  return itkImageSinkIVF23.New()


def itkImageSinkIVF22_New():
  return itkImageSinkIVF22.New()


def itkImageSinkIRGBAUC3_New():
  return itkImageSinkIRGBAUC3.New()


def itkImageSinkIRGBAUC2_New():
  return itkImageSinkIRGBAUC2.New()


def itkImageSinkIRGBUC3_New():
  return itkImageSinkIRGBUC3.New()


def itkImageSinkIRGBUC2_New():
  return itkImageSinkIRGBUC2.New()

class itkImageSinkICF2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICF2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkICF2

        Create a new object of the class itkImageSinkICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkICF2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICF2_swigregister(itkImageSinkICF2)
itkImageSinkICF2_cast = _itkImageSinkPython.itkImageSinkICF2_cast

class itkImageSinkICF3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICF3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkICF3

        Create a new object of the class itkImageSinkICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkICF3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICF3_swigregister(itkImageSinkICF3)
itkImageSinkICF3_cast = _itkImageSinkPython.itkImageSinkICF3_cast

class itkImageSinkICVF22(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF22
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkICVF22

        Create a new object of the class itkImageSinkICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkICVF22 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF22_swigregister(itkImageSinkICVF22)
itkImageSinkICVF22_cast = _itkImageSinkPython.itkImageSinkICVF22_cast

class itkImageSinkICVF23(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF23
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkICVF23

        Create a new object of the class itkImageSinkICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkICVF23 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF23_swigregister(itkImageSinkICVF23)
itkImageSinkICVF23_cast = _itkImageSinkPython.itkImageSinkICVF23_cast

class itkImageSinkICVF32(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF32
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkICVF32

        Create a new object of the class itkImageSinkICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkICVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkICVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkICVF32 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF32_swigregister(itkImageSinkICVF32)
itkImageSinkICVF32_cast = _itkImageSinkPython.itkImageSinkICVF32_cast

class itkImageSinkICVF33(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF33
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkICVF33

        Create a new object of the class itkImageSinkICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkICVF33 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF33_swigregister(itkImageSinkICVF33)
itkImageSinkICVF33_cast = _itkImageSinkPython.itkImageSinkICVF33_cast

class itkImageSinkICVF42(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF42
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkICVF42

        Create a new object of the class itkImageSinkICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkICVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkICVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkICVF42 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF42_swigregister(itkImageSinkICVF42)
itkImageSinkICVF42_cast = _itkImageSinkPython.itkImageSinkICVF42_cast

class itkImageSinkICVF43(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF43
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkICVF43

        Create a new object of the class itkImageSinkICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkICVF43 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF43_swigregister(itkImageSinkICVF43)
itkImageSinkICVF43_cast = _itkImageSinkPython.itkImageSinkICVF43_cast

class itkImageSinkID2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkID2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkID2

        Create a new object of the class itkImageSinkID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkID2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkID2_swigregister(itkImageSinkID2)
itkImageSinkID2_cast = _itkImageSinkPython.itkImageSinkID2_cast

class itkImageSinkID3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkID3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkID3

        Create a new object of the class itkImageSinkID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkID3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkID3_swigregister(itkImageSinkID3)
itkImageSinkID3_cast = _itkImageSinkPython.itkImageSinkID3_cast

class itkImageSinkIF2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIF2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIF2

        Create a new object of the class itkImageSinkIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIF2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIF2_swigregister(itkImageSinkIF2)
itkImageSinkIF2_cast = _itkImageSinkPython.itkImageSinkIF2_cast

class itkImageSinkIF3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIF3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIF3

        Create a new object of the class itkImageSinkIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIF3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIF3_swigregister(itkImageSinkIF3)
itkImageSinkIF3_cast = _itkImageSinkPython.itkImageSinkIF3_cast

class itkImageSinkIRGBAUC2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIRGBAUC2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIRGBAUC2

        Create a new object of the class itkImageSinkIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIRGBAUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIRGBAUC2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIRGBAUC2_swigregister(itkImageSinkIRGBAUC2)
itkImageSinkIRGBAUC2_cast = _itkImageSinkPython.itkImageSinkIRGBAUC2_cast

class itkImageSinkIRGBAUC3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIRGBAUC3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIRGBAUC3

        Create a new object of the class itkImageSinkIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIRGBAUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIRGBAUC3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIRGBAUC3_swigregister(itkImageSinkIRGBAUC3)
itkImageSinkIRGBAUC3_cast = _itkImageSinkPython.itkImageSinkIRGBAUC3_cast

class itkImageSinkIRGBUC2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIRGBUC2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIRGBUC2

        Create a new object of the class itkImageSinkIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIRGBUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIRGBUC2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIRGBUC2_swigregister(itkImageSinkIRGBUC2)
itkImageSinkIRGBUC2_cast = _itkImageSinkPython.itkImageSinkIRGBUC2_cast

class itkImageSinkIRGBUC3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIRGBUC3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIRGBUC3

        Create a new object of the class itkImageSinkIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIRGBUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIRGBUC3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIRGBUC3_swigregister(itkImageSinkIRGBUC3)
itkImageSinkIRGBUC3_cast = _itkImageSinkPython.itkImageSinkIRGBUC3_cast

class itkImageSinkISS2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkISS2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkISS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkISS2

        Create a new object of the class itkImageSinkISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkISS2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkISS2_swigregister(itkImageSinkISS2)
itkImageSinkISS2_cast = _itkImageSinkPython.itkImageSinkISS2_cast

class itkImageSinkISS3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkISS3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkISS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkISS3

        Create a new object of the class itkImageSinkISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkISS3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkISS3_swigregister(itkImageSinkISS3)
itkImageSinkISS3_cast = _itkImageSinkPython.itkImageSinkISS3_cast

class itkImageSinkIUC2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIUC2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIUC2

        Create a new object of the class itkImageSinkIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIUC2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIUC2_swigregister(itkImageSinkIUC2)
itkImageSinkIUC2_cast = _itkImageSinkPython.itkImageSinkIUC2_cast

class itkImageSinkIUC3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIUC3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIUC3

        Create a new object of the class itkImageSinkIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIUC3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIUC3_swigregister(itkImageSinkIUC3)
itkImageSinkIUC3_cast = _itkImageSinkPython.itkImageSinkIUC3_cast

class itkImageSinkIUS2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIUS2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIUS2

        Create a new object of the class itkImageSinkIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIUS2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIUS2_swigregister(itkImageSinkIUS2)
itkImageSinkIUS2_cast = _itkImageSinkPython.itkImageSinkIUS2_cast

class itkImageSinkIUS3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIUS3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIUS3

        Create a new object of the class itkImageSinkIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIUS3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIUS3_swigregister(itkImageSinkIUS3)
itkImageSinkIUS3_cast = _itkImageSinkPython.itkImageSinkIUS3_cast

class itkImageSinkIVF22(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF22
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF22_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIVF22

        Create a new object of the class itkImageSinkIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIVF22 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF22_swigregister(itkImageSinkIVF22)
itkImageSinkIVF22_cast = _itkImageSinkPython.itkImageSinkIVF22_cast

class itkImageSinkIVF23(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF23
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF23_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIVF23

        Create a new object of the class itkImageSinkIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIVF23 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF23_swigregister(itkImageSinkIVF23)
itkImageSinkIVF23_cast = _itkImageSinkPython.itkImageSinkIVF23_cast

class itkImageSinkIVF32(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF32
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF32_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIVF32

        Create a new object of the class itkImageSinkIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIVF32 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF32_swigregister(itkImageSinkIVF32)
itkImageSinkIVF32_cast = _itkImageSinkPython.itkImageSinkIVF32_cast

class itkImageSinkIVF33(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF33
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF33_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIVF33

        Create a new object of the class itkImageSinkIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIVF33 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF33_swigregister(itkImageSinkIVF33)
itkImageSinkIVF33_cast = _itkImageSinkPython.itkImageSinkIVF33_cast

class itkImageSinkIVF42(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF42
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF42_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIVF42

        Create a new object of the class itkImageSinkIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIVF42 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF42_swigregister(itkImageSinkIVF42)
itkImageSinkIVF42_cast = _itkImageSinkPython.itkImageSinkIVF42_cast

class itkImageSinkIVF43(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF43
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF43_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkIVF43

        Create a new object of the class itkImageSinkIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkIVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkIVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkIVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkIVF43 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF43_swigregister(itkImageSinkIVF43)
itkImageSinkIVF43_cast = _itkImageSinkPython.itkImageSinkIVF43_cast

class itkImageSinkVID2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkVID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVID2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkVID2

        Create a new object of the class itkImageSinkVID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkVID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkVID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkVID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkVID2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVID2_swigregister(itkImageSinkVID2)
itkImageSinkVID2_cast = _itkImageSinkPython.itkImageSinkVID2_cast

class itkImageSinkVID3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkVID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVID3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkVID3

        Create a new object of the class itkImageSinkVID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkVID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkVID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkVID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkVID3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVID3_swigregister(itkImageSinkVID3)
itkImageSinkVID3_cast = _itkImageSinkPython.itkImageSinkVID3_cast

class itkImageSinkVIF2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkVIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIF2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkVIF2

        Create a new object of the class itkImageSinkVIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkVIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkVIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkVIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkVIF2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIF2_swigregister(itkImageSinkVIF2)
itkImageSinkVIF2_cast = _itkImageSinkPython.itkImageSinkVIF2_cast

class itkImageSinkVIF3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkVIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIF3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkVIF3

        Create a new object of the class itkImageSinkVIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkVIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkVIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkVIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkVIF3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIF3_swigregister(itkImageSinkVIF3)
itkImageSinkVIF3_cast = _itkImageSinkPython.itkImageSinkVIF3_cast

class itkImageSinkVISS2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkVISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVISS2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVISS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkVISS2

        Create a new object of the class itkImageSinkVISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkVISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkVISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkVISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkVISS2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVISS2_swigregister(itkImageSinkVISS2)
itkImageSinkVISS2_cast = _itkImageSinkPython.itkImageSinkVISS2_cast

class itkImageSinkVISS3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkVISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVISS3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVISS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkVISS3

        Create a new object of the class itkImageSinkVISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkVISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkVISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkVISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkVISS3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVISS3_swigregister(itkImageSinkVISS3)
itkImageSinkVISS3_cast = _itkImageSinkPython.itkImageSinkVISS3_cast

class itkImageSinkVIUC2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkVIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIUC2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkVIUC2

        Create a new object of the class itkImageSinkVIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkVIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkVIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkVIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkVIUC2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIUC2_swigregister(itkImageSinkVIUC2)
itkImageSinkVIUC2_cast = _itkImageSinkPython.itkImageSinkVIUC2_cast

class itkImageSinkVIUC3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkVIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIUC3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkVIUC3

        Create a new object of the class itkImageSinkVIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkVIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkVIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkVIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkVIUC3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIUC3_swigregister(itkImageSinkVIUC3)
itkImageSinkVIUC3_cast = _itkImageSinkPython.itkImageSinkVIUC3_cast

class itkImageSinkVIUS2(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkVIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIUS2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkVIUS2

        Create a new object of the class itkImageSinkVIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkVIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkVIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkVIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkVIUS2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIUS2_swigregister(itkImageSinkVIUS2)
itkImageSinkVIUS2_cast = _itkImageSinkPython.itkImageSinkVIUS2_cast

class itkImageSinkVIUS3(ITKCommonBasePython.itkStreamingProcessObject):
    r"""Proxy of C++ itkImageSinkVIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIUS3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSinkVIUS3

        Create a new object of the class itkImageSinkVIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSinkVIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageSinkVIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSinkVIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSinkVIUS3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIUS3_swigregister(itkImageSinkVIUS3)
itkImageSinkVIUS3_cast = _itkImageSinkPython.itkImageSinkVIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_sink(*args, **kwargs):
    """Procedural interface for ImageSink"""
    import itk
    instance = itk.ImageSink.New(*args, **kwargs)
    return instance.__internal_call__()

def image_sink_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageSink, itkTemplate.itkTemplate):
        filter_object = itk.ImageSink.values()[0]
    else:
        filter_object = itk.ImageSink

    image_sink.__doc__ = filter_object.__doc__
    image_sink.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_sink.__doc__ += "Available Keyword Arguments:\n"
    image_sink.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



