# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkExtrapolateImageFunctionPython
else:
    import _itkExtrapolateImageFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkExtrapolateImageFunctionPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkExtrapolateImageFunctionPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itkIndexPython
import itkOffsetPython
import itkSizePython
import pyBasePython
import itkPointPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkImageFunctionBasePython
import itkImagePython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkRGBPixelPython
import itkImageRegionPython
import itkSymmetricSecondRankTensorPython
import itkContinuousIndexPython
import itkFunctionBasePython
import itkArrayPython

def itkExtrapolateImageFunctionID3D_New():
  return itkExtrapolateImageFunctionID3D.New()


def itkExtrapolateImageFunctionIF3D_New():
  return itkExtrapolateImageFunctionIF3D.New()


def itkExtrapolateImageFunctionIUS3D_New():
  return itkExtrapolateImageFunctionIUS3D.New()


def itkExtrapolateImageFunctionIUC3D_New():
  return itkExtrapolateImageFunctionIUC3D.New()


def itkExtrapolateImageFunctionISS3D_New():
  return itkExtrapolateImageFunctionISS3D.New()


def itkExtrapolateImageFunctionID2D_New():
  return itkExtrapolateImageFunctionID2D.New()


def itkExtrapolateImageFunctionIF2D_New():
  return itkExtrapolateImageFunctionIF2D.New()


def itkExtrapolateImageFunctionIUS2D_New():
  return itkExtrapolateImageFunctionIUS2D.New()


def itkExtrapolateImageFunctionIUC2D_New():
  return itkExtrapolateImageFunctionIUC2D.New()


def itkExtrapolateImageFunctionISS2D_New():
  return itkExtrapolateImageFunctionISS2D.New()

class itkExtrapolateImageFunctionID2D(itkImageFunctionBasePython.itkImageFunctionID2DD):
    r"""Proxy of C++ itkExtrapolateImageFunctionID2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkExtrapolateImageFunctionPython.delete_itkExtrapolateImageFunctionID2D
    cast = _swig_new_static_method(_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionID2D_cast)

    def New(*args, **kargs):
        """New() -> itkExtrapolateImageFunctionID2D

        Create a new object of the class itkExtrapolateImageFunctionID2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtrapolateImageFunctionID2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExtrapolateImageFunctionID2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExtrapolateImageFunctionID2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtrapolateImageFunctionID2D in _itkExtrapolateImageFunctionPython:
_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionID2D_swigregister(itkExtrapolateImageFunctionID2D)
itkExtrapolateImageFunctionID2D_cast = _itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionID2D_cast

class itkExtrapolateImageFunctionID3D(itkImageFunctionBasePython.itkImageFunctionID3DD):
    r"""Proxy of C++ itkExtrapolateImageFunctionID3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkExtrapolateImageFunctionPython.delete_itkExtrapolateImageFunctionID3D
    cast = _swig_new_static_method(_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionID3D_cast)

    def New(*args, **kargs):
        """New() -> itkExtrapolateImageFunctionID3D

        Create a new object of the class itkExtrapolateImageFunctionID3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtrapolateImageFunctionID3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExtrapolateImageFunctionID3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExtrapolateImageFunctionID3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtrapolateImageFunctionID3D in _itkExtrapolateImageFunctionPython:
_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionID3D_swigregister(itkExtrapolateImageFunctionID3D)
itkExtrapolateImageFunctionID3D_cast = _itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionID3D_cast

class itkExtrapolateImageFunctionIF2D(itkImageFunctionBasePython.itkImageFunctionIF2DD):
    r"""Proxy of C++ itkExtrapolateImageFunctionIF2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkExtrapolateImageFunctionPython.delete_itkExtrapolateImageFunctionIF2D
    cast = _swig_new_static_method(_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIF2D_cast)

    def New(*args, **kargs):
        """New() -> itkExtrapolateImageFunctionIF2D

        Create a new object of the class itkExtrapolateImageFunctionIF2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtrapolateImageFunctionIF2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExtrapolateImageFunctionIF2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExtrapolateImageFunctionIF2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtrapolateImageFunctionIF2D in _itkExtrapolateImageFunctionPython:
_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIF2D_swigregister(itkExtrapolateImageFunctionIF2D)
itkExtrapolateImageFunctionIF2D_cast = _itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIF2D_cast

class itkExtrapolateImageFunctionIF3D(itkImageFunctionBasePython.itkImageFunctionIF3DD):
    r"""Proxy of C++ itkExtrapolateImageFunctionIF3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkExtrapolateImageFunctionPython.delete_itkExtrapolateImageFunctionIF3D
    cast = _swig_new_static_method(_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIF3D_cast)

    def New(*args, **kargs):
        """New() -> itkExtrapolateImageFunctionIF3D

        Create a new object of the class itkExtrapolateImageFunctionIF3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtrapolateImageFunctionIF3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExtrapolateImageFunctionIF3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExtrapolateImageFunctionIF3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtrapolateImageFunctionIF3D in _itkExtrapolateImageFunctionPython:
_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIF3D_swigregister(itkExtrapolateImageFunctionIF3D)
itkExtrapolateImageFunctionIF3D_cast = _itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIF3D_cast

class itkExtrapolateImageFunctionISS2D(itkImageFunctionBasePython.itkImageFunctionISS2DD):
    r"""Proxy of C++ itkExtrapolateImageFunctionISS2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkExtrapolateImageFunctionPython.delete_itkExtrapolateImageFunctionISS2D
    cast = _swig_new_static_method(_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionISS2D_cast)

    def New(*args, **kargs):
        """New() -> itkExtrapolateImageFunctionISS2D

        Create a new object of the class itkExtrapolateImageFunctionISS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtrapolateImageFunctionISS2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExtrapolateImageFunctionISS2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExtrapolateImageFunctionISS2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtrapolateImageFunctionISS2D in _itkExtrapolateImageFunctionPython:
_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionISS2D_swigregister(itkExtrapolateImageFunctionISS2D)
itkExtrapolateImageFunctionISS2D_cast = _itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionISS2D_cast

class itkExtrapolateImageFunctionISS3D(itkImageFunctionBasePython.itkImageFunctionISS3DD):
    r"""Proxy of C++ itkExtrapolateImageFunctionISS3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkExtrapolateImageFunctionPython.delete_itkExtrapolateImageFunctionISS3D
    cast = _swig_new_static_method(_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionISS3D_cast)

    def New(*args, **kargs):
        """New() -> itkExtrapolateImageFunctionISS3D

        Create a new object of the class itkExtrapolateImageFunctionISS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtrapolateImageFunctionISS3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExtrapolateImageFunctionISS3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExtrapolateImageFunctionISS3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtrapolateImageFunctionISS3D in _itkExtrapolateImageFunctionPython:
_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionISS3D_swigregister(itkExtrapolateImageFunctionISS3D)
itkExtrapolateImageFunctionISS3D_cast = _itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionISS3D_cast

class itkExtrapolateImageFunctionIUC2D(itkImageFunctionBasePython.itkImageFunctionIUC2DD):
    r"""Proxy of C++ itkExtrapolateImageFunctionIUC2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkExtrapolateImageFunctionPython.delete_itkExtrapolateImageFunctionIUC2D
    cast = _swig_new_static_method(_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUC2D_cast)

    def New(*args, **kargs):
        """New() -> itkExtrapolateImageFunctionIUC2D

        Create a new object of the class itkExtrapolateImageFunctionIUC2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtrapolateImageFunctionIUC2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExtrapolateImageFunctionIUC2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExtrapolateImageFunctionIUC2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtrapolateImageFunctionIUC2D in _itkExtrapolateImageFunctionPython:
_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUC2D_swigregister(itkExtrapolateImageFunctionIUC2D)
itkExtrapolateImageFunctionIUC2D_cast = _itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUC2D_cast

class itkExtrapolateImageFunctionIUC3D(itkImageFunctionBasePython.itkImageFunctionIUC3DD):
    r"""Proxy of C++ itkExtrapolateImageFunctionIUC3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkExtrapolateImageFunctionPython.delete_itkExtrapolateImageFunctionIUC3D
    cast = _swig_new_static_method(_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUC3D_cast)

    def New(*args, **kargs):
        """New() -> itkExtrapolateImageFunctionIUC3D

        Create a new object of the class itkExtrapolateImageFunctionIUC3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtrapolateImageFunctionIUC3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExtrapolateImageFunctionIUC3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExtrapolateImageFunctionIUC3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtrapolateImageFunctionIUC3D in _itkExtrapolateImageFunctionPython:
_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUC3D_swigregister(itkExtrapolateImageFunctionIUC3D)
itkExtrapolateImageFunctionIUC3D_cast = _itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUC3D_cast

class itkExtrapolateImageFunctionIUS2D(itkImageFunctionBasePython.itkImageFunctionIUS2DD):
    r"""Proxy of C++ itkExtrapolateImageFunctionIUS2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkExtrapolateImageFunctionPython.delete_itkExtrapolateImageFunctionIUS2D
    cast = _swig_new_static_method(_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUS2D_cast)

    def New(*args, **kargs):
        """New() -> itkExtrapolateImageFunctionIUS2D

        Create a new object of the class itkExtrapolateImageFunctionIUS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtrapolateImageFunctionIUS2D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExtrapolateImageFunctionIUS2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExtrapolateImageFunctionIUS2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtrapolateImageFunctionIUS2D in _itkExtrapolateImageFunctionPython:
_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUS2D_swigregister(itkExtrapolateImageFunctionIUS2D)
itkExtrapolateImageFunctionIUS2D_cast = _itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUS2D_cast

class itkExtrapolateImageFunctionIUS3D(itkImageFunctionBasePython.itkImageFunctionIUS3DD):
    r"""Proxy of C++ itkExtrapolateImageFunctionIUS3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkExtrapolateImageFunctionPython.delete_itkExtrapolateImageFunctionIUS3D
    cast = _swig_new_static_method(_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUS3D_cast)

    def New(*args, **kargs):
        """New() -> itkExtrapolateImageFunctionIUS3D

        Create a new object of the class itkExtrapolateImageFunctionIUS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtrapolateImageFunctionIUS3D.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkExtrapolateImageFunctionIUS3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExtrapolateImageFunctionIUS3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtrapolateImageFunctionIUS3D in _itkExtrapolateImageFunctionPython:
_itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUS3D_swigregister(itkExtrapolateImageFunctionIUS3D)
itkExtrapolateImageFunctionIUS3D_cast = _itkExtrapolateImageFunctionPython.itkExtrapolateImageFunctionIUS3D_cast



