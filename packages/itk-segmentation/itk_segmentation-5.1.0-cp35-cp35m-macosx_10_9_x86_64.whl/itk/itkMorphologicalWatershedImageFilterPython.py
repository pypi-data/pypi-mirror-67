# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMorphologicalWatershedImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMorphologicalWatershedImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMorphologicalWatershedImageFilterPython
            return _itkMorphologicalWatershedImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMorphologicalWatershedImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMorphologicalWatershedImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMorphologicalWatershedImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterAPython
import itkImagePython
import itkImageRegionPython
import itkSizePython
import pyBasePython
import ITKCommonBasePython
import itkIndexPython
import itkOffsetPython
import itkRGBAPixelPython
import itkFixedArrayPython
import stdcomplexPython
import itkRGBPixelPython
import itkMatrixPython
import vnl_matrix_fixedPython
import vnl_matrixPython
import vnl_vectorPython
import itkVectorPython
import vnl_vector_refPython
import itkCovariantVectorPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkMorphologicalWatershedImageFilterID3IUS3_New():
  return itkMorphologicalWatershedImageFilterID3IUS3.New()


def itkMorphologicalWatershedImageFilterID2IUS2_New():
  return itkMorphologicalWatershedImageFilterID2IUS2.New()


def itkMorphologicalWatershedImageFilterID3IUC3_New():
  return itkMorphologicalWatershedImageFilterID3IUC3.New()


def itkMorphologicalWatershedImageFilterID2IUC2_New():
  return itkMorphologicalWatershedImageFilterID2IUC2.New()


def itkMorphologicalWatershedImageFilterID3ISS3_New():
  return itkMorphologicalWatershedImageFilterID3ISS3.New()


def itkMorphologicalWatershedImageFilterID2ISS2_New():
  return itkMorphologicalWatershedImageFilterID2ISS2.New()


def itkMorphologicalWatershedImageFilterIF3IUS3_New():
  return itkMorphologicalWatershedImageFilterIF3IUS3.New()


def itkMorphologicalWatershedImageFilterIF2IUS2_New():
  return itkMorphologicalWatershedImageFilterIF2IUS2.New()


def itkMorphologicalWatershedImageFilterIF3IUC3_New():
  return itkMorphologicalWatershedImageFilterIF3IUC3.New()


def itkMorphologicalWatershedImageFilterIF2IUC2_New():
  return itkMorphologicalWatershedImageFilterIF2IUC2.New()


def itkMorphologicalWatershedImageFilterIF3ISS3_New():
  return itkMorphologicalWatershedImageFilterIF3ISS3.New()


def itkMorphologicalWatershedImageFilterIF2ISS2_New():
  return itkMorphologicalWatershedImageFilterIF2ISS2.New()


def itkMorphologicalWatershedImageFilterIUS3IUS3_New():
  return itkMorphologicalWatershedImageFilterIUS3IUS3.New()


def itkMorphologicalWatershedImageFilterIUS2IUS2_New():
  return itkMorphologicalWatershedImageFilterIUS2IUS2.New()


def itkMorphologicalWatershedImageFilterIUS3IUC3_New():
  return itkMorphologicalWatershedImageFilterIUS3IUC3.New()


def itkMorphologicalWatershedImageFilterIUS2IUC2_New():
  return itkMorphologicalWatershedImageFilterIUS2IUC2.New()


def itkMorphologicalWatershedImageFilterIUS3ISS3_New():
  return itkMorphologicalWatershedImageFilterIUS3ISS3.New()


def itkMorphologicalWatershedImageFilterIUS2ISS2_New():
  return itkMorphologicalWatershedImageFilterIUS2ISS2.New()


def itkMorphologicalWatershedImageFilterIUC3IUS3_New():
  return itkMorphologicalWatershedImageFilterIUC3IUS3.New()


def itkMorphologicalWatershedImageFilterIUC2IUS2_New():
  return itkMorphologicalWatershedImageFilterIUC2IUS2.New()


def itkMorphologicalWatershedImageFilterIUC3IUC3_New():
  return itkMorphologicalWatershedImageFilterIUC3IUC3.New()


def itkMorphologicalWatershedImageFilterIUC2IUC2_New():
  return itkMorphologicalWatershedImageFilterIUC2IUC2.New()


def itkMorphologicalWatershedImageFilterIUC3ISS3_New():
  return itkMorphologicalWatershedImageFilterIUC3ISS3.New()


def itkMorphologicalWatershedImageFilterIUC2ISS2_New():
  return itkMorphologicalWatershedImageFilterIUC2ISS2.New()


def itkMorphologicalWatershedImageFilterISS3IUS3_New():
  return itkMorphologicalWatershedImageFilterISS3IUS3.New()


def itkMorphologicalWatershedImageFilterISS2IUS2_New():
  return itkMorphologicalWatershedImageFilterISS2IUS2.New()


def itkMorphologicalWatershedImageFilterISS3IUC3_New():
  return itkMorphologicalWatershedImageFilterISS3IUC3.New()


def itkMorphologicalWatershedImageFilterISS2IUC2_New():
  return itkMorphologicalWatershedImageFilterISS2IUC2.New()


def itkMorphologicalWatershedImageFilterISS3ISS3_New():
  return itkMorphologicalWatershedImageFilterISS3ISS3.New()


def itkMorphologicalWatershedImageFilterISS2ISS2_New():
  return itkMorphologicalWatershedImageFilterISS2ISS2.New()

class itkMorphologicalWatershedImageFilterID2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterID2ISS2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterID2ISS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterID2ISS2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterID2ISS2 self) -> itkMorphologicalWatershedImageFilterID2ISS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterID2ISS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterID2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterID2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterID2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterID2ISS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterID2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterID2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterID2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'double const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterID2ISS2 self, double const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_SetLevel(self, _arg)


    def GetLevel(self) -> "double":
        """GetLevel(itkMorphologicalWatershedImageFilterID2ISS2 self) -> double"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID2ISS2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID2ISS2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID2ISS2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID2ISS2

        Create a new object of the class itkMorphologicalWatershedImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterID2ISS2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_Clone, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_SetLevel, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_GetLevel, None, itkMorphologicalWatershedImageFilterID2ISS2)
itkMorphologicalWatershedImageFilterID2ISS2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_swigregister
itkMorphologicalWatershedImageFilterID2ISS2_swigregister(itkMorphologicalWatershedImageFilterID2ISS2)

def itkMorphologicalWatershedImageFilterID2ISS2___New_orig__() -> "itkMorphologicalWatershedImageFilterID2ISS2_Pointer":
    """itkMorphologicalWatershedImageFilterID2ISS2___New_orig__() -> itkMorphologicalWatershedImageFilterID2ISS2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2___New_orig__()

def itkMorphologicalWatershedImageFilterID2ISS2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID2ISS2 *":
    """itkMorphologicalWatershedImageFilterID2ISS2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID2ISS2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2ISS2_cast(obj)

class itkMorphologicalWatershedImageFilterID2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterID2IUC2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterID2IUC2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterID2IUC2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterID2IUC2 self) -> itkMorphologicalWatershedImageFilterID2IUC2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterID2IUC2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterID2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterID2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterID2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterID2IUC2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterID2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterID2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterID2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'double const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterID2IUC2 self, double const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_SetLevel(self, _arg)


    def GetLevel(self) -> "double":
        """GetLevel(itkMorphologicalWatershedImageFilterID2IUC2 self) -> double"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID2IUC2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID2IUC2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID2IUC2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID2IUC2

        Create a new object of the class itkMorphologicalWatershedImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterID2IUC2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_Clone, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_SetLevel, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_GetLevel, None, itkMorphologicalWatershedImageFilterID2IUC2)
itkMorphologicalWatershedImageFilterID2IUC2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_swigregister
itkMorphologicalWatershedImageFilterID2IUC2_swigregister(itkMorphologicalWatershedImageFilterID2IUC2)

def itkMorphologicalWatershedImageFilterID2IUC2___New_orig__() -> "itkMorphologicalWatershedImageFilterID2IUC2_Pointer":
    """itkMorphologicalWatershedImageFilterID2IUC2___New_orig__() -> itkMorphologicalWatershedImageFilterID2IUC2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2___New_orig__()

def itkMorphologicalWatershedImageFilterID2IUC2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID2IUC2 *":
    """itkMorphologicalWatershedImageFilterID2IUC2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID2IUC2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUC2_cast(obj)

class itkMorphologicalWatershedImageFilterID2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterID2IUS2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterID2IUS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterID2IUS2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterID2IUS2 self) -> itkMorphologicalWatershedImageFilterID2IUS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterID2IUS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterID2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterID2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterID2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterID2IUS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterID2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterID2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterID2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'double const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterID2IUS2 self, double const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_SetLevel(self, _arg)


    def GetLevel(self) -> "double":
        """GetLevel(itkMorphologicalWatershedImageFilterID2IUS2 self) -> double"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID2IUS2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID2IUS2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID2IUS2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID2IUS2

        Create a new object of the class itkMorphologicalWatershedImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterID2IUS2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_Clone, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_SetLevel, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_GetLevel, None, itkMorphologicalWatershedImageFilterID2IUS2)
itkMorphologicalWatershedImageFilterID2IUS2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_swigregister
itkMorphologicalWatershedImageFilterID2IUS2_swigregister(itkMorphologicalWatershedImageFilterID2IUS2)

def itkMorphologicalWatershedImageFilterID2IUS2___New_orig__() -> "itkMorphologicalWatershedImageFilterID2IUS2_Pointer":
    """itkMorphologicalWatershedImageFilterID2IUS2___New_orig__() -> itkMorphologicalWatershedImageFilterID2IUS2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2___New_orig__()

def itkMorphologicalWatershedImageFilterID2IUS2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID2IUS2 *":
    """itkMorphologicalWatershedImageFilterID2IUS2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID2IUS2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID2IUS2_cast(obj)

class itkMorphologicalWatershedImageFilterID3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterID3ISS3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterID3ISS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterID3ISS3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterID3ISS3 self) -> itkMorphologicalWatershedImageFilterID3ISS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterID3ISS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterID3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterID3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterID3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterID3ISS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterID3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterID3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterID3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'double const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterID3ISS3 self, double const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_SetLevel(self, _arg)


    def GetLevel(self) -> "double":
        """GetLevel(itkMorphologicalWatershedImageFilterID3ISS3 self) -> double"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID3ISS3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID3ISS3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID3ISS3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID3ISS3

        Create a new object of the class itkMorphologicalWatershedImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterID3ISS3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_Clone, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_SetLevel, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_GetLevel, None, itkMorphologicalWatershedImageFilterID3ISS3)
itkMorphologicalWatershedImageFilterID3ISS3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_swigregister
itkMorphologicalWatershedImageFilterID3ISS3_swigregister(itkMorphologicalWatershedImageFilterID3ISS3)

def itkMorphologicalWatershedImageFilterID3ISS3___New_orig__() -> "itkMorphologicalWatershedImageFilterID3ISS3_Pointer":
    """itkMorphologicalWatershedImageFilterID3ISS3___New_orig__() -> itkMorphologicalWatershedImageFilterID3ISS3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3___New_orig__()

def itkMorphologicalWatershedImageFilterID3ISS3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID3ISS3 *":
    """itkMorphologicalWatershedImageFilterID3ISS3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID3ISS3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3ISS3_cast(obj)

class itkMorphologicalWatershedImageFilterID3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterID3IUC3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterID3IUC3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterID3IUC3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterID3IUC3 self) -> itkMorphologicalWatershedImageFilterID3IUC3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterID3IUC3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterID3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterID3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterID3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterID3IUC3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterID3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterID3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterID3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'double const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterID3IUC3 self, double const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_SetLevel(self, _arg)


    def GetLevel(self) -> "double":
        """GetLevel(itkMorphologicalWatershedImageFilterID3IUC3 self) -> double"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID3IUC3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID3IUC3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID3IUC3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID3IUC3

        Create a new object of the class itkMorphologicalWatershedImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterID3IUC3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_Clone, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_SetLevel, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_GetLevel, None, itkMorphologicalWatershedImageFilterID3IUC3)
itkMorphologicalWatershedImageFilterID3IUC3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_swigregister
itkMorphologicalWatershedImageFilterID3IUC3_swigregister(itkMorphologicalWatershedImageFilterID3IUC3)

def itkMorphologicalWatershedImageFilterID3IUC3___New_orig__() -> "itkMorphologicalWatershedImageFilterID3IUC3_Pointer":
    """itkMorphologicalWatershedImageFilterID3IUC3___New_orig__() -> itkMorphologicalWatershedImageFilterID3IUC3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3___New_orig__()

def itkMorphologicalWatershedImageFilterID3IUC3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID3IUC3 *":
    """itkMorphologicalWatershedImageFilterID3IUC3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID3IUC3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUC3_cast(obj)

class itkMorphologicalWatershedImageFilterID3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterID3IUS3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterID3IUS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterID3IUS3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterID3IUS3 self) -> itkMorphologicalWatershedImageFilterID3IUS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterID3IUS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterID3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterID3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterID3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterID3IUS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterID3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterID3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterID3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'double const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterID3IUS3 self, double const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_SetLevel(self, _arg)


    def GetLevel(self) -> "double":
        """GetLevel(itkMorphologicalWatershedImageFilterID3IUS3 self) -> double"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterID3IUS3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID3IUS3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID3IUS3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterID3IUS3

        Create a new object of the class itkMorphologicalWatershedImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterID3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterID3IUS3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_Clone, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_SetLevel, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_GetLevel, None, itkMorphologicalWatershedImageFilterID3IUS3)
itkMorphologicalWatershedImageFilterID3IUS3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_swigregister
itkMorphologicalWatershedImageFilterID3IUS3_swigregister(itkMorphologicalWatershedImageFilterID3IUS3)

def itkMorphologicalWatershedImageFilterID3IUS3___New_orig__() -> "itkMorphologicalWatershedImageFilterID3IUS3_Pointer":
    """itkMorphologicalWatershedImageFilterID3IUS3___New_orig__() -> itkMorphologicalWatershedImageFilterID3IUS3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3___New_orig__()

def itkMorphologicalWatershedImageFilterID3IUS3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterID3IUS3 *":
    """itkMorphologicalWatershedImageFilterID3IUS3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterID3IUS3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterID3IUS3_cast(obj)

class itkMorphologicalWatershedImageFilterIF2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIF2ISS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIF2ISS2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIF2ISS2 self) -> itkMorphologicalWatershedImageFilterIF2ISS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIF2ISS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIF2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIF2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIF2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF2ISS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIF2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIF2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'float const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIF2ISS2 self, float const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_SetLevel(self, _arg)


    def GetLevel(self) -> "float":
        """GetLevel(itkMorphologicalWatershedImageFilterIF2ISS2 self) -> float"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF2ISS2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF2ISS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIF2ISS2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_Clone, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_SetLevel, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_GetLevel, None, itkMorphologicalWatershedImageFilterIF2ISS2)
itkMorphologicalWatershedImageFilterIF2ISS2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_swigregister
itkMorphologicalWatershedImageFilterIF2ISS2_swigregister(itkMorphologicalWatershedImageFilterIF2ISS2)

def itkMorphologicalWatershedImageFilterIF2ISS2___New_orig__() -> "itkMorphologicalWatershedImageFilterIF2ISS2_Pointer":
    """itkMorphologicalWatershedImageFilterIF2ISS2___New_orig__() -> itkMorphologicalWatershedImageFilterIF2ISS2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2___New_orig__()

def itkMorphologicalWatershedImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF2ISS2 *":
    """itkMorphologicalWatershedImageFilterIF2ISS2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF2ISS2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2ISS2_cast(obj)

class itkMorphologicalWatershedImageFilterIF2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIF2IUC2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIF2IUC2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIF2IUC2 self) -> itkMorphologicalWatershedImageFilterIF2IUC2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIF2IUC2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIF2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIF2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIF2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF2IUC2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIF2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIF2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'float const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIF2IUC2 self, float const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_SetLevel(self, _arg)


    def GetLevel(self) -> "float":
        """GetLevel(itkMorphologicalWatershedImageFilterIF2IUC2 self) -> float"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF2IUC2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF2IUC2

        Create a new object of the class itkMorphologicalWatershedImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIF2IUC2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_Clone, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_SetLevel, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_GetLevel, None, itkMorphologicalWatershedImageFilterIF2IUC2)
itkMorphologicalWatershedImageFilterIF2IUC2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_swigregister
itkMorphologicalWatershedImageFilterIF2IUC2_swigregister(itkMorphologicalWatershedImageFilterIF2IUC2)

def itkMorphologicalWatershedImageFilterIF2IUC2___New_orig__() -> "itkMorphologicalWatershedImageFilterIF2IUC2_Pointer":
    """itkMorphologicalWatershedImageFilterIF2IUC2___New_orig__() -> itkMorphologicalWatershedImageFilterIF2IUC2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2___New_orig__()

def itkMorphologicalWatershedImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF2IUC2 *":
    """itkMorphologicalWatershedImageFilterIF2IUC2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF2IUC2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUC2_cast(obj)

class itkMorphologicalWatershedImageFilterIF2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIF2IUS2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIF2IUS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIF2IUS2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIF2IUS2 self) -> itkMorphologicalWatershedImageFilterIF2IUS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIF2IUS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIF2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIF2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIF2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF2IUS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIF2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIF2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'float const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIF2IUS2 self, float const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_SetLevel(self, _arg)


    def GetLevel(self) -> "float":
        """GetLevel(itkMorphologicalWatershedImageFilterIF2IUS2 self) -> float"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF2IUS2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF2IUS2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF2IUS2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF2IUS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIF2IUS2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_Clone, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_SetLevel, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_GetLevel, None, itkMorphologicalWatershedImageFilterIF2IUS2)
itkMorphologicalWatershedImageFilterIF2IUS2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_swigregister
itkMorphologicalWatershedImageFilterIF2IUS2_swigregister(itkMorphologicalWatershedImageFilterIF2IUS2)

def itkMorphologicalWatershedImageFilterIF2IUS2___New_orig__() -> "itkMorphologicalWatershedImageFilterIF2IUS2_Pointer":
    """itkMorphologicalWatershedImageFilterIF2IUS2___New_orig__() -> itkMorphologicalWatershedImageFilterIF2IUS2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2___New_orig__()

def itkMorphologicalWatershedImageFilterIF2IUS2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF2IUS2 *":
    """itkMorphologicalWatershedImageFilterIF2IUS2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF2IUS2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF2IUS2_cast(obj)

class itkMorphologicalWatershedImageFilterIF3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIF3ISS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIF3ISS3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIF3ISS3 self) -> itkMorphologicalWatershedImageFilterIF3ISS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIF3ISS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIF3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIF3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIF3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF3ISS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIF3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIF3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'float const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIF3ISS3 self, float const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_SetLevel(self, _arg)


    def GetLevel(self) -> "float":
        """GetLevel(itkMorphologicalWatershedImageFilterIF3ISS3 self) -> float"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF3ISS3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF3ISS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIF3ISS3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_Clone, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_SetLevel, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_GetLevel, None, itkMorphologicalWatershedImageFilterIF3ISS3)
itkMorphologicalWatershedImageFilterIF3ISS3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_swigregister
itkMorphologicalWatershedImageFilterIF3ISS3_swigregister(itkMorphologicalWatershedImageFilterIF3ISS3)

def itkMorphologicalWatershedImageFilterIF3ISS3___New_orig__() -> "itkMorphologicalWatershedImageFilterIF3ISS3_Pointer":
    """itkMorphologicalWatershedImageFilterIF3ISS3___New_orig__() -> itkMorphologicalWatershedImageFilterIF3ISS3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3___New_orig__()

def itkMorphologicalWatershedImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF3ISS3 *":
    """itkMorphologicalWatershedImageFilterIF3ISS3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF3ISS3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3ISS3_cast(obj)

class itkMorphologicalWatershedImageFilterIF3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIF3IUC3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIF3IUC3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIF3IUC3 self) -> itkMorphologicalWatershedImageFilterIF3IUC3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIF3IUC3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIF3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIF3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIF3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF3IUC3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIF3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIF3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'float const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIF3IUC3 self, float const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_SetLevel(self, _arg)


    def GetLevel(self) -> "float":
        """GetLevel(itkMorphologicalWatershedImageFilterIF3IUC3 self) -> float"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF3IUC3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF3IUC3

        Create a new object of the class itkMorphologicalWatershedImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIF3IUC3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_Clone, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_SetLevel, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_GetLevel, None, itkMorphologicalWatershedImageFilterIF3IUC3)
itkMorphologicalWatershedImageFilterIF3IUC3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_swigregister
itkMorphologicalWatershedImageFilterIF3IUC3_swigregister(itkMorphologicalWatershedImageFilterIF3IUC3)

def itkMorphologicalWatershedImageFilterIF3IUC3___New_orig__() -> "itkMorphologicalWatershedImageFilterIF3IUC3_Pointer":
    """itkMorphologicalWatershedImageFilterIF3IUC3___New_orig__() -> itkMorphologicalWatershedImageFilterIF3IUC3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3___New_orig__()

def itkMorphologicalWatershedImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF3IUC3 *":
    """itkMorphologicalWatershedImageFilterIF3IUC3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF3IUC3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUC3_cast(obj)

class itkMorphologicalWatershedImageFilterIF3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIF3IUS3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIF3IUS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIF3IUS3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIF3IUS3 self) -> itkMorphologicalWatershedImageFilterIF3IUS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIF3IUS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIF3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIF3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIF3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF3IUS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIF3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIF3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIF3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'float const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIF3IUS3 self, float const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_SetLevel(self, _arg)


    def GetLevel(self) -> "float":
        """GetLevel(itkMorphologicalWatershedImageFilterIF3IUS3 self) -> float"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIF3IUS3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF3IUS3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF3IUS3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIF3IUS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIF3IUS3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_Clone, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_SetLevel, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_GetLevel, None, itkMorphologicalWatershedImageFilterIF3IUS3)
itkMorphologicalWatershedImageFilterIF3IUS3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_swigregister
itkMorphologicalWatershedImageFilterIF3IUS3_swigregister(itkMorphologicalWatershedImageFilterIF3IUS3)

def itkMorphologicalWatershedImageFilterIF3IUS3___New_orig__() -> "itkMorphologicalWatershedImageFilterIF3IUS3_Pointer":
    """itkMorphologicalWatershedImageFilterIF3IUS3___New_orig__() -> itkMorphologicalWatershedImageFilterIF3IUS3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3___New_orig__()

def itkMorphologicalWatershedImageFilterIF3IUS3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIF3IUS3 *":
    """itkMorphologicalWatershedImageFilterIF3IUS3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIF3IUS3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIF3IUS3_cast(obj)

class itkMorphologicalWatershedImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterISS2ISS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterISS2ISS2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterISS2ISS2 self) -> itkMorphologicalWatershedImageFilterISS2ISS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterISS2ISS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterISS2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterISS2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterISS2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS2ISS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterISS2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterISS2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterISS2ISS2 self, short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_SetLevel(self, _arg)


    def GetLevel(self) -> "short":
        """GetLevel(itkMorphologicalWatershedImageFilterISS2ISS2 self) -> short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS2ISS2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS2ISS2

        Create a new object of the class itkMorphologicalWatershedImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterISS2ISS2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_Clone, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_SetLevel, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_GetLevel, None, itkMorphologicalWatershedImageFilterISS2ISS2)
itkMorphologicalWatershedImageFilterISS2ISS2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_swigregister
itkMorphologicalWatershedImageFilterISS2ISS2_swigregister(itkMorphologicalWatershedImageFilterISS2ISS2)

def itkMorphologicalWatershedImageFilterISS2ISS2___New_orig__() -> "itkMorphologicalWatershedImageFilterISS2ISS2_Pointer":
    """itkMorphologicalWatershedImageFilterISS2ISS2___New_orig__() -> itkMorphologicalWatershedImageFilterISS2ISS2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2___New_orig__()

def itkMorphologicalWatershedImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS2ISS2 *":
    """itkMorphologicalWatershedImageFilterISS2ISS2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS2ISS2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2ISS2_cast(obj)

class itkMorphologicalWatershedImageFilterISS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterISS2IUC2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterISS2IUC2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterISS2IUC2 self) -> itkMorphologicalWatershedImageFilterISS2IUC2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterISS2IUC2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterISS2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterISS2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterISS2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS2IUC2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterISS2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterISS2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterISS2IUC2 self, short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_SetLevel(self, _arg)


    def GetLevel(self) -> "short":
        """GetLevel(itkMorphologicalWatershedImageFilterISS2IUC2 self) -> short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS2IUC2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS2IUC2

        Create a new object of the class itkMorphologicalWatershedImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterISS2IUC2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_Clone, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_SetLevel, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_GetLevel, None, itkMorphologicalWatershedImageFilterISS2IUC2)
itkMorphologicalWatershedImageFilterISS2IUC2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_swigregister
itkMorphologicalWatershedImageFilterISS2IUC2_swigregister(itkMorphologicalWatershedImageFilterISS2IUC2)

def itkMorphologicalWatershedImageFilterISS2IUC2___New_orig__() -> "itkMorphologicalWatershedImageFilterISS2IUC2_Pointer":
    """itkMorphologicalWatershedImageFilterISS2IUC2___New_orig__() -> itkMorphologicalWatershedImageFilterISS2IUC2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2___New_orig__()

def itkMorphologicalWatershedImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS2IUC2 *":
    """itkMorphologicalWatershedImageFilterISS2IUC2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS2IUC2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUC2_cast(obj)

class itkMorphologicalWatershedImageFilterISS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterISS2IUS2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterISS2IUS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterISS2IUS2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterISS2IUS2 self) -> itkMorphologicalWatershedImageFilterISS2IUS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterISS2IUS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterISS2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterISS2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterISS2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS2IUS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterISS2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterISS2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterISS2IUS2 self, short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_SetLevel(self, _arg)


    def GetLevel(self) -> "short":
        """GetLevel(itkMorphologicalWatershedImageFilterISS2IUS2 self) -> short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS2IUS2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS2IUS2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS2IUS2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS2IUS2

        Create a new object of the class itkMorphologicalWatershedImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterISS2IUS2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_Clone, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_SetLevel, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_GetLevel, None, itkMorphologicalWatershedImageFilterISS2IUS2)
itkMorphologicalWatershedImageFilterISS2IUS2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_swigregister
itkMorphologicalWatershedImageFilterISS2IUS2_swigregister(itkMorphologicalWatershedImageFilterISS2IUS2)

def itkMorphologicalWatershedImageFilterISS2IUS2___New_orig__() -> "itkMorphologicalWatershedImageFilterISS2IUS2_Pointer":
    """itkMorphologicalWatershedImageFilterISS2IUS2___New_orig__() -> itkMorphologicalWatershedImageFilterISS2IUS2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2___New_orig__()

def itkMorphologicalWatershedImageFilterISS2IUS2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS2IUS2 *":
    """itkMorphologicalWatershedImageFilterISS2IUS2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS2IUS2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS2IUS2_cast(obj)

class itkMorphologicalWatershedImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterISS3ISS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterISS3ISS3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterISS3ISS3 self) -> itkMorphologicalWatershedImageFilterISS3ISS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterISS3ISS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterISS3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterISS3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterISS3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS3ISS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterISS3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterISS3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterISS3ISS3 self, short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_SetLevel(self, _arg)


    def GetLevel(self) -> "short":
        """GetLevel(itkMorphologicalWatershedImageFilterISS3ISS3 self) -> short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS3ISS3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS3ISS3

        Create a new object of the class itkMorphologicalWatershedImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterISS3ISS3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_Clone, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_SetLevel, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_GetLevel, None, itkMorphologicalWatershedImageFilterISS3ISS3)
itkMorphologicalWatershedImageFilterISS3ISS3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_swigregister
itkMorphologicalWatershedImageFilterISS3ISS3_swigregister(itkMorphologicalWatershedImageFilterISS3ISS3)

def itkMorphologicalWatershedImageFilterISS3ISS3___New_orig__() -> "itkMorphologicalWatershedImageFilterISS3ISS3_Pointer":
    """itkMorphologicalWatershedImageFilterISS3ISS3___New_orig__() -> itkMorphologicalWatershedImageFilterISS3ISS3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3___New_orig__()

def itkMorphologicalWatershedImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS3ISS3 *":
    """itkMorphologicalWatershedImageFilterISS3ISS3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS3ISS3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3ISS3_cast(obj)

class itkMorphologicalWatershedImageFilterISS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterISS3IUC3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterISS3IUC3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterISS3IUC3 self) -> itkMorphologicalWatershedImageFilterISS3IUC3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterISS3IUC3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterISS3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterISS3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterISS3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS3IUC3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterISS3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterISS3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterISS3IUC3 self, short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_SetLevel(self, _arg)


    def GetLevel(self) -> "short":
        """GetLevel(itkMorphologicalWatershedImageFilterISS3IUC3 self) -> short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS3IUC3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS3IUC3

        Create a new object of the class itkMorphologicalWatershedImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterISS3IUC3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_Clone, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_SetLevel, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_GetLevel, None, itkMorphologicalWatershedImageFilterISS3IUC3)
itkMorphologicalWatershedImageFilterISS3IUC3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_swigregister
itkMorphologicalWatershedImageFilterISS3IUC3_swigregister(itkMorphologicalWatershedImageFilterISS3IUC3)

def itkMorphologicalWatershedImageFilterISS3IUC3___New_orig__() -> "itkMorphologicalWatershedImageFilterISS3IUC3_Pointer":
    """itkMorphologicalWatershedImageFilterISS3IUC3___New_orig__() -> itkMorphologicalWatershedImageFilterISS3IUC3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3___New_orig__()

def itkMorphologicalWatershedImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS3IUC3 *":
    """itkMorphologicalWatershedImageFilterISS3IUC3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS3IUC3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUC3_cast(obj)

class itkMorphologicalWatershedImageFilterISS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterISS3IUS3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterISS3IUS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterISS3IUS3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterISS3IUS3 self) -> itkMorphologicalWatershedImageFilterISS3IUS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterISS3IUS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterISS3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterISS3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterISS3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS3IUS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterISS3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterISS3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterISS3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterISS3IUS3 self, short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_SetLevel(self, _arg)


    def GetLevel(self) -> "short":
        """GetLevel(itkMorphologicalWatershedImageFilterISS3IUS3 self) -> short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterISS3IUS3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS3IUS3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS3IUS3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterISS3IUS3

        Create a new object of the class itkMorphologicalWatershedImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterISS3IUS3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_Clone, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_SetLevel, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_GetLevel, None, itkMorphologicalWatershedImageFilterISS3IUS3)
itkMorphologicalWatershedImageFilterISS3IUS3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_swigregister
itkMorphologicalWatershedImageFilterISS3IUS3_swigregister(itkMorphologicalWatershedImageFilterISS3IUS3)

def itkMorphologicalWatershedImageFilterISS3IUS3___New_orig__() -> "itkMorphologicalWatershedImageFilterISS3IUS3_Pointer":
    """itkMorphologicalWatershedImageFilterISS3IUS3___New_orig__() -> itkMorphologicalWatershedImageFilterISS3IUS3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3___New_orig__()

def itkMorphologicalWatershedImageFilterISS3IUS3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterISS3IUS3 *":
    """itkMorphologicalWatershedImageFilterISS3IUS3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterISS3IUS3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterISS3IUS3_cast(obj)

class itkMorphologicalWatershedImageFilterIUC2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUC2ISS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUC2ISS2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUC2ISS2 self) -> itkMorphologicalWatershedImageFilterIUC2ISS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUC2ISS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUC2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUC2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUC2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC2ISS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUC2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUC2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned char const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUC2ISS2 self, unsigned char const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkMorphologicalWatershedImageFilterIUC2ISS2 self) -> unsigned char"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC2ISS2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC2ISS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUC2ISS2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_Clone, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_SetLevel, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_GetLevel, None, itkMorphologicalWatershedImageFilterIUC2ISS2)
itkMorphologicalWatershedImageFilterIUC2ISS2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_swigregister
itkMorphologicalWatershedImageFilterIUC2ISS2_swigregister(itkMorphologicalWatershedImageFilterIUC2ISS2)

def itkMorphologicalWatershedImageFilterIUC2ISS2___New_orig__() -> "itkMorphologicalWatershedImageFilterIUC2ISS2_Pointer":
    """itkMorphologicalWatershedImageFilterIUC2ISS2___New_orig__() -> itkMorphologicalWatershedImageFilterIUC2ISS2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2___New_orig__()

def itkMorphologicalWatershedImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC2ISS2 *":
    """itkMorphologicalWatershedImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC2ISS2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2ISS2_cast(obj)

class itkMorphologicalWatershedImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUC2IUC2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUC2IUC2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUC2IUC2 self) -> itkMorphologicalWatershedImageFilterIUC2IUC2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUC2IUC2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUC2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUC2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUC2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC2IUC2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUC2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUC2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned char const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUC2IUC2 self, unsigned char const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkMorphologicalWatershedImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC2IUC2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC2IUC2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUC2IUC2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_Clone, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_SetLevel, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_GetLevel, None, itkMorphologicalWatershedImageFilterIUC2IUC2)
itkMorphologicalWatershedImageFilterIUC2IUC2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_swigregister
itkMorphologicalWatershedImageFilterIUC2IUC2_swigregister(itkMorphologicalWatershedImageFilterIUC2IUC2)

def itkMorphologicalWatershedImageFilterIUC2IUC2___New_orig__() -> "itkMorphologicalWatershedImageFilterIUC2IUC2_Pointer":
    """itkMorphologicalWatershedImageFilterIUC2IUC2___New_orig__() -> itkMorphologicalWatershedImageFilterIUC2IUC2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2___New_orig__()

def itkMorphologicalWatershedImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC2IUC2 *":
    """itkMorphologicalWatershedImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC2IUC2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUC2_cast(obj)

class itkMorphologicalWatershedImageFilterIUC2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUC2IUS2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUC2IUS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUC2IUS2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUC2IUS2 self) -> itkMorphologicalWatershedImageFilterIUC2IUS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUC2IUS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUC2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUC2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUC2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC2IUS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUC2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUC2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned char const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUC2IUS2 self, unsigned char const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkMorphologicalWatershedImageFilterIUC2IUS2 self) -> unsigned char"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC2IUS2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC2IUS2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC2IUS2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC2IUS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUC2IUS2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_Clone, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_SetLevel, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_GetLevel, None, itkMorphologicalWatershedImageFilterIUC2IUS2)
itkMorphologicalWatershedImageFilterIUC2IUS2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_swigregister
itkMorphologicalWatershedImageFilterIUC2IUS2_swigregister(itkMorphologicalWatershedImageFilterIUC2IUS2)

def itkMorphologicalWatershedImageFilterIUC2IUS2___New_orig__() -> "itkMorphologicalWatershedImageFilterIUC2IUS2_Pointer":
    """itkMorphologicalWatershedImageFilterIUC2IUS2___New_orig__() -> itkMorphologicalWatershedImageFilterIUC2IUS2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2___New_orig__()

def itkMorphologicalWatershedImageFilterIUC2IUS2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC2IUS2 *":
    """itkMorphologicalWatershedImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC2IUS2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC2IUS2_cast(obj)

class itkMorphologicalWatershedImageFilterIUC3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUC3ISS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUC3ISS3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUC3ISS3 self) -> itkMorphologicalWatershedImageFilterIUC3ISS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUC3ISS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUC3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUC3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUC3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC3ISS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUC3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUC3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned char const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUC3ISS3 self, unsigned char const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkMorphologicalWatershedImageFilterIUC3ISS3 self) -> unsigned char"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC3ISS3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC3ISS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUC3ISS3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_Clone, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_SetLevel, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_GetLevel, None, itkMorphologicalWatershedImageFilterIUC3ISS3)
itkMorphologicalWatershedImageFilterIUC3ISS3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_swigregister
itkMorphologicalWatershedImageFilterIUC3ISS3_swigregister(itkMorphologicalWatershedImageFilterIUC3ISS3)

def itkMorphologicalWatershedImageFilterIUC3ISS3___New_orig__() -> "itkMorphologicalWatershedImageFilterIUC3ISS3_Pointer":
    """itkMorphologicalWatershedImageFilterIUC3ISS3___New_orig__() -> itkMorphologicalWatershedImageFilterIUC3ISS3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3___New_orig__()

def itkMorphologicalWatershedImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC3ISS3 *":
    """itkMorphologicalWatershedImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC3ISS3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3ISS3_cast(obj)

class itkMorphologicalWatershedImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUC3IUC3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUC3IUC3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUC3IUC3 self) -> itkMorphologicalWatershedImageFilterIUC3IUC3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUC3IUC3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUC3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUC3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUC3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC3IUC3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUC3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUC3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned char const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUC3IUC3 self, unsigned char const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkMorphologicalWatershedImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC3IUC3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC3IUC3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUC3IUC3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_Clone, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_SetLevel, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_GetLevel, None, itkMorphologicalWatershedImageFilterIUC3IUC3)
itkMorphologicalWatershedImageFilterIUC3IUC3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_swigregister
itkMorphologicalWatershedImageFilterIUC3IUC3_swigregister(itkMorphologicalWatershedImageFilterIUC3IUC3)

def itkMorphologicalWatershedImageFilterIUC3IUC3___New_orig__() -> "itkMorphologicalWatershedImageFilterIUC3IUC3_Pointer":
    """itkMorphologicalWatershedImageFilterIUC3IUC3___New_orig__() -> itkMorphologicalWatershedImageFilterIUC3IUC3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3___New_orig__()

def itkMorphologicalWatershedImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC3IUC3 *":
    """itkMorphologicalWatershedImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC3IUC3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUC3_cast(obj)

class itkMorphologicalWatershedImageFilterIUC3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUC3IUS3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUC3IUS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUC3IUS3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUC3IUS3 self) -> itkMorphologicalWatershedImageFilterIUC3IUS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUC3IUS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUC3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUC3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUC3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC3IUS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUC3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUC3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUC3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned char const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUC3IUS3 self, unsigned char const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkMorphologicalWatershedImageFilterIUC3IUS3 self) -> unsigned char"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUC3IUS3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC3IUS3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC3IUS3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUC3IUS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUC3IUS3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_Clone, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_SetLevel, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_GetLevel, None, itkMorphologicalWatershedImageFilterIUC3IUS3)
itkMorphologicalWatershedImageFilterIUC3IUS3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_swigregister
itkMorphologicalWatershedImageFilterIUC3IUS3_swigregister(itkMorphologicalWatershedImageFilterIUC3IUS3)

def itkMorphologicalWatershedImageFilterIUC3IUS3___New_orig__() -> "itkMorphologicalWatershedImageFilterIUC3IUS3_Pointer":
    """itkMorphologicalWatershedImageFilterIUC3IUS3___New_orig__() -> itkMorphologicalWatershedImageFilterIUC3IUS3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3___New_orig__()

def itkMorphologicalWatershedImageFilterIUC3IUS3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUC3IUS3 *":
    """itkMorphologicalWatershedImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUC3IUS3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUC3IUS3_cast(obj)

class itkMorphologicalWatershedImageFilterIUS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUS2ISS2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUS2ISS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUS2ISS2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUS2ISS2 self) -> itkMorphologicalWatershedImageFilterIUS2ISS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUS2ISS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUS2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUS2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUS2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS2ISS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS2ISS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUS2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUS2ISS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUS2ISS2 self, unsigned short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkMorphologicalWatershedImageFilterIUS2ISS2 self) -> unsigned short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS2ISS2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS2ISS2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS2ISS2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS2ISS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUS2ISS2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_Clone, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_SetLevel, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_GetLevel, None, itkMorphologicalWatershedImageFilterIUS2ISS2)
itkMorphologicalWatershedImageFilterIUS2ISS2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_swigregister
itkMorphologicalWatershedImageFilterIUS2ISS2_swigregister(itkMorphologicalWatershedImageFilterIUS2ISS2)

def itkMorphologicalWatershedImageFilterIUS2ISS2___New_orig__() -> "itkMorphologicalWatershedImageFilterIUS2ISS2_Pointer":
    """itkMorphologicalWatershedImageFilterIUS2ISS2___New_orig__() -> itkMorphologicalWatershedImageFilterIUS2ISS2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2___New_orig__()

def itkMorphologicalWatershedImageFilterIUS2ISS2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS2ISS2 *":
    """itkMorphologicalWatershedImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS2ISS2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2ISS2_cast(obj)

class itkMorphologicalWatershedImageFilterIUS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUS2IUC2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUS2IUC2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUS2IUC2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUS2IUC2 self) -> itkMorphologicalWatershedImageFilterIUS2IUC2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUS2IUC2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUS2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUS2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUS2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS2IUC2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS2IUC2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUS2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUS2IUC2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUS2IUC2 self, unsigned short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkMorphologicalWatershedImageFilterIUS2IUC2 self) -> unsigned short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS2IUC2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS2IUC2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS2IUC2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS2IUC2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUS2IUC2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_Clone, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_SetLevel, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_GetLevel, None, itkMorphologicalWatershedImageFilterIUS2IUC2)
itkMorphologicalWatershedImageFilterIUS2IUC2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_swigregister
itkMorphologicalWatershedImageFilterIUS2IUC2_swigregister(itkMorphologicalWatershedImageFilterIUS2IUC2)

def itkMorphologicalWatershedImageFilterIUS2IUC2___New_orig__() -> "itkMorphologicalWatershedImageFilterIUS2IUC2_Pointer":
    """itkMorphologicalWatershedImageFilterIUS2IUC2___New_orig__() -> itkMorphologicalWatershedImageFilterIUS2IUC2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2___New_orig__()

def itkMorphologicalWatershedImageFilterIUS2IUC2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS2IUC2 *":
    """itkMorphologicalWatershedImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS2IUC2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUC2_cast(obj)

class itkMorphologicalWatershedImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUS2IUS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUS2IUS2_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUS2IUS2 self) -> itkMorphologicalWatershedImageFilterIUS2IUS2_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUS2IUS2 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUS2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUS2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUS2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS2IUS2 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS2IUS2 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUS2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUS2IUS2 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUS2IUS2 self, unsigned short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkMorphologicalWatershedImageFilterIUS2IUS2 self) -> unsigned short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS2IUS2"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS2IUS2

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUS2IUS2.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_Clone, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_SetLevel, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_GetLevel, None, itkMorphologicalWatershedImageFilterIUS2IUS2)
itkMorphologicalWatershedImageFilterIUS2IUS2_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_swigregister
itkMorphologicalWatershedImageFilterIUS2IUS2_swigregister(itkMorphologicalWatershedImageFilterIUS2IUS2)

def itkMorphologicalWatershedImageFilterIUS2IUS2___New_orig__() -> "itkMorphologicalWatershedImageFilterIUS2IUS2_Pointer":
    """itkMorphologicalWatershedImageFilterIUS2IUS2___New_orig__() -> itkMorphologicalWatershedImageFilterIUS2IUS2_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2___New_orig__()

def itkMorphologicalWatershedImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS2IUS2 *":
    """itkMorphologicalWatershedImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS2IUS2"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS2IUS2_cast(obj)

class itkMorphologicalWatershedImageFilterIUS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUS3ISS3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUS3ISS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUS3ISS3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUS3ISS3 self) -> itkMorphologicalWatershedImageFilterIUS3ISS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUS3ISS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUS3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUS3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUS3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS3ISS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS3ISS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUS3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUS3ISS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUS3ISS3 self, unsigned short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkMorphologicalWatershedImageFilterIUS3ISS3 self) -> unsigned short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS3ISS3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS3ISS3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS3ISS3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS3ISS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUS3ISS3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_Clone, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_SetLevel, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_GetLevel, None, itkMorphologicalWatershedImageFilterIUS3ISS3)
itkMorphologicalWatershedImageFilterIUS3ISS3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_swigregister
itkMorphologicalWatershedImageFilterIUS3ISS3_swigregister(itkMorphologicalWatershedImageFilterIUS3ISS3)

def itkMorphologicalWatershedImageFilterIUS3ISS3___New_orig__() -> "itkMorphologicalWatershedImageFilterIUS3ISS3_Pointer":
    """itkMorphologicalWatershedImageFilterIUS3ISS3___New_orig__() -> itkMorphologicalWatershedImageFilterIUS3ISS3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3___New_orig__()

def itkMorphologicalWatershedImageFilterIUS3ISS3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS3ISS3 *":
    """itkMorphologicalWatershedImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS3ISS3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3ISS3_cast(obj)

class itkMorphologicalWatershedImageFilterIUS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUS3IUC3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUS3IUC3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUS3IUC3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUS3IUC3 self) -> itkMorphologicalWatershedImageFilterIUS3IUC3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUS3IUC3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUS3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUS3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUS3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS3IUC3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS3IUC3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUS3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUS3IUC3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUS3IUC3 self, unsigned short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkMorphologicalWatershedImageFilterIUS3IUC3 self) -> unsigned short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS3IUC3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS3IUC3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS3IUC3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS3IUC3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUS3IUC3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_Clone, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_SetLevel, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_GetLevel, None, itkMorphologicalWatershedImageFilterIUS3IUC3)
itkMorphologicalWatershedImageFilterIUS3IUC3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_swigregister
itkMorphologicalWatershedImageFilterIUS3IUC3_swigregister(itkMorphologicalWatershedImageFilterIUS3IUC3)

def itkMorphologicalWatershedImageFilterIUS3IUC3___New_orig__() -> "itkMorphologicalWatershedImageFilterIUS3IUC3_Pointer":
    """itkMorphologicalWatershedImageFilterIUS3IUC3___New_orig__() -> itkMorphologicalWatershedImageFilterIUS3IUC3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3___New_orig__()

def itkMorphologicalWatershedImageFilterIUS3IUC3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS3IUC3 *":
    """itkMorphologicalWatershedImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS3IUC3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUC3_cast(obj)

class itkMorphologicalWatershedImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Watershed segmentation implementation with morphological operators.

    Watershed pixel are labeled 0. TOutputImage should be an integer type.
    Labels of output image are in no particular order. You can reorder the
    labels such that object labels are consecutive and sorted based on
    object size by passing the output of this filter to a
    RelabelComponentImageFilter.

    The morphological watershed transform algorithm is described in
    Chapter 9.2 of Pierre Soille's book "Morphological Image Analysis:
    Principles and Applications", Second Edition, Springer, 2003.

    This code was contributed in the Insight Journal paper: "The
    watershed transform in ITK - discussion and new developments" by
    Beare R., Lehmann G.https://hdl.handle.net/1926/202http://www.insight-
    journal.org/browse/publication/92

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   WatershedImageFilter,
    MorphologicalWatershedFromMarkersImageFilter  \\sphinx
    \\sphinxexample{Segmentation/Watersheds/MorphologicalWat
    ershedSegmentation,Morphological Watershed Segmentation} \\endsphinx

    C++ includes: itkMorphologicalWatershedImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMorphologicalWatershedImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkMorphologicalWatershedImageFilterIUS3IUS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMorphologicalWatershedImageFilterIUS3IUS3_Pointer":
        """Clone(itkMorphologicalWatershedImageFilterIUS3IUS3 self) -> itkMorphologicalWatershedImageFilterIUS3IUS3_Pointer"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_Clone(self)


    def SetFullyConnected(self, _arg: 'bool const') -> "void":
        """
        SetFullyConnected(itkMorphologicalWatershedImageFilterIUS3IUS3 self, bool const _arg)

        Set/Get whether
        the connected components are defined strictly by face connectivity or
        by face+edge+vertex connectivity. Default is FullyConnectedOff. For
        objects that are 1 pixel wide, use FullyConnectedOn. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_SetFullyConnected(self, _arg)


    def GetFullyConnected(self) -> "bool const &":
        """GetFullyConnected(itkMorphologicalWatershedImageFilterIUS3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_GetFullyConnected(self)


    def FullyConnectedOn(self) -> "void":
        """FullyConnectedOn(itkMorphologicalWatershedImageFilterIUS3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_FullyConnectedOn(self)


    def FullyConnectedOff(self) -> "void":
        """FullyConnectedOff(itkMorphologicalWatershedImageFilterIUS3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_FullyConnectedOff(self)


    def SetMarkWatershedLine(self, _arg: 'bool const') -> "void":
        """
        SetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS3IUS3 self, bool const _arg)

        Set/Get
        whether the watershed pixel must be marked or not. Default is true.
        Set it to false do not only avoid writing watershed pixels, it also
        decrease algorithm complexity. 
        """
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_SetMarkWatershedLine(self, _arg)


    def GetMarkWatershedLine(self) -> "bool const &":
        """GetMarkWatershedLine(itkMorphologicalWatershedImageFilterIUS3IUS3 self) -> bool const &"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_GetMarkWatershedLine(self)


    def MarkWatershedLineOn(self) -> "void":
        """MarkWatershedLineOn(itkMorphologicalWatershedImageFilterIUS3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_MarkWatershedLineOn(self)


    def MarkWatershedLineOff(self) -> "void":
        """MarkWatershedLineOff(itkMorphologicalWatershedImageFilterIUS3IUS3 self)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_MarkWatershedLineOff(self)


    def SetLevel(self, _arg: 'unsigned short const') -> "void":
        """SetLevel(itkMorphologicalWatershedImageFilterIUS3IUS3 self, unsigned short const _arg)"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_SetLevel(self, _arg)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkMorphologicalWatershedImageFilterIUS3IUS3 self) -> unsigned short"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_GetLevel(self)

    __swig_destroy__ = _itkMorphologicalWatershedImageFilterPython.delete_itkMorphologicalWatershedImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS3IUS3"""
        return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalWatershedImageFilterIUS3IUS3

        Create a new object of the class itkMorphologicalWatershedImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalWatershedImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMorphologicalWatershedImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMorphologicalWatershedImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMorphologicalWatershedImageFilterIUS3IUS3.Clone = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_Clone, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3.SetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_SetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3.GetFullyConnected = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_GetFullyConnected, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3.FullyConnectedOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_FullyConnectedOn, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3.FullyConnectedOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_FullyConnectedOff, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3.SetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_SetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3.GetMarkWatershedLine = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_GetMarkWatershedLine, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3.MarkWatershedLineOn = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_MarkWatershedLineOn, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3.MarkWatershedLineOff = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_MarkWatershedLineOff, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3.SetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_SetLevel, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3.GetLevel = new_instancemethod(_itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_GetLevel, None, itkMorphologicalWatershedImageFilterIUS3IUS3)
itkMorphologicalWatershedImageFilterIUS3IUS3_swigregister = _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_swigregister
itkMorphologicalWatershedImageFilterIUS3IUS3_swigregister(itkMorphologicalWatershedImageFilterIUS3IUS3)

def itkMorphologicalWatershedImageFilterIUS3IUS3___New_orig__() -> "itkMorphologicalWatershedImageFilterIUS3IUS3_Pointer":
    """itkMorphologicalWatershedImageFilterIUS3IUS3___New_orig__() -> itkMorphologicalWatershedImageFilterIUS3IUS3_Pointer"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3___New_orig__()

def itkMorphologicalWatershedImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkMorphologicalWatershedImageFilterIUS3IUS3 *":
    """itkMorphologicalWatershedImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkMorphologicalWatershedImageFilterIUS3IUS3"""
    return _itkMorphologicalWatershedImageFilterPython.itkMorphologicalWatershedImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def morphological_watershed_image_filter(*args, **kwargs):
    """Procedural interface for MorphologicalWatershedImageFilter"""
    import itk
    instance = itk.MorphologicalWatershedImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def morphological_watershed_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MorphologicalWatershedImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MorphologicalWatershedImageFilter.values()[0]
    else:
        filter_object = itk.MorphologicalWatershedImageFilter

    morphological_watershed_image_filter.__doc__ = filter_object.__doc__
    morphological_watershed_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    morphological_watershed_image_filter.__doc__ += "Available Keyword Arguments:\n"
    morphological_watershed_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



