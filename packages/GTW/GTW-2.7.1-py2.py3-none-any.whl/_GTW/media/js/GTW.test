/*

Expected output when run like $ /usr/bin/js -s -f GTW.test::

    ----/--------------------------------------
    true
    true
    true
    a: b
    gqu: foo but more powerful!
    ----/--------------------------------------

Expected output for
    $ for f in ~/Y/_GTW/media/js/GTW \
               $(find ~/Y/_GTW/media/js/GTW/ -name "*.js"); \
        do /usr/bin/js -s -C $f && \
          echo "${f#~/Y/_GTW/media/js/} successfully compiles" ; done | sort

    ----/--------------------------------------
    GTW.js successfully compiles
    GTW/AFS/Elements.js successfully compiles
    GTW/Button.js successfully compiles
    GTW/File_Upload.js successfully compiles
    GTW/Form.js successfully compiles
    GTW/Form_C.js successfully compiles
    GTW/inspect.js successfully compiles
    GTW/jQ/gallery.js successfully compiles
    GTW/jQ/input.js successfully compiles
    GTW/jQ/label.js successfully compiles
    GTW/jQ/pixpander.js successfully compiles
    GTW/jQ/week_roller.js successfully compiles
    GTW/jsonify.js successfully compiles
    GTW/util.js successfully compiles
    ----/--------------------------------------

*/
load ("GTW.js")
var Field = $GTW.Class.extend ( { init : function (name, title) { this.name = name; this.title = title; }, show : function () { return (this.name + ": " + this.title); } }, { name : "Field"});
var P_Field = Field.extend ({ show : function () { return this._super () + " but more powerful!"; } });
var f = new Field ("a", "b")
var pf = new P_Field ("gqu", "foo")
print (P_Field.prototype instanceof Field)
print (!(f instanceof P_Field) && ( f instanceof Field) && ( f instanceof Object))
print ((pf instanceof P_Field) && (pf instanceof Field) && (pf instanceof Object))
print (f.show ())
print (pf.show ())
