name: Release
on:
  push:
    branches:
      # Only build releases for master and release branches
      - master
      - release*
  create:
    tags:
      - 'v*'

jobs:
  debug:
    runs-on: ubuntu-latest
    if: github.repository == 'rpanderson/workflow-sandbox'
    steps:
      - run: |
          echo github.ref: ${{ github.ref }}
          echo github.event_name: ${{ github.event_name }}
          echo github.event: ${{ github.event }}
          echo github.event.name: ${{ github.event.name }}
          echo github.event.ref: ${{ github.event.ref }}
          echo github.event.ref_type: ${{ github.event.ref_type }}
          echo github.event.master_branch: ${{ github.event.master_branch }}
          echo github.actor: ${{ github.actor }}
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.repository == 'rpanderson/workflow-sandbox'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Unshallow
        run: |
          git fetch --prune --unshallow
          git describe --tags
          git log -1
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Build Distribution
        env:
          SCM_LOCAL_SCHEME: no-local-version
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python setup.py sdist bdist_wheel
      - name: Publish on TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.testpypi }}
          repository_url: https://test.pypi.org/legacy/
      # Only publish tagged merges elsewhere
      - name: Get Version Number
        if: github.event.ref_type == 'tag'
        run: |
          TAG="${GITHUB_REF/refs\/tags\/v/}"  # clean tag
          echo "::set-env name=VERSION::$TAG"
      - name: Create GitHub Release
        if: github.event.ref_type == 'tag'
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.ref }}
          release_name: workflow-sandbox ${{ env.VERSION }}
          draft: true
          prerelease: ${{ contains(github.ref, 'rc') }}
      - name: Upload Release Asset
        if: github.event.ref_type == 'tag'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/workflow-sandbox-${{ env.VERSION }}.tar.gz
          asset_name: workflow-sandbox-${{ env.VERSION }}.tar.gz
          asset_content_type: application/gzip
      - name: Publish on PyPI
        if: github.event.ref_type == 'tag'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi }}
