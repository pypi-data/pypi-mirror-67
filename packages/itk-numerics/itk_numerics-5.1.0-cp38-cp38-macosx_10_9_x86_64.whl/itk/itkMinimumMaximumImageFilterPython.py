# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMinimumMaximumImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMinimumMaximumImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMinimumMaximumImageFilterPython
            return _itkMinimumMaximumImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMinimumMaximumImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMinimumMaximumImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMinimumMaximumImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageSinkPython
import itkImagePython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkPointPython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkIndexPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython

def itkMinimumMaximumImageFilterID3_New():
  return itkMinimumMaximumImageFilterID3.New()


def itkMinimumMaximumImageFilterID2_New():
  return itkMinimumMaximumImageFilterID2.New()


def itkMinimumMaximumImageFilterIF3_New():
  return itkMinimumMaximumImageFilterIF3.New()


def itkMinimumMaximumImageFilterIF2_New():
  return itkMinimumMaximumImageFilterIF2.New()


def itkMinimumMaximumImageFilterIUS3_New():
  return itkMinimumMaximumImageFilterIUS3.New()


def itkMinimumMaximumImageFilterIUS2_New():
  return itkMinimumMaximumImageFilterIUS2.New()


def itkMinimumMaximumImageFilterIUC3_New():
  return itkMinimumMaximumImageFilterIUC3.New()


def itkMinimumMaximumImageFilterIUC2_New():
  return itkMinimumMaximumImageFilterIUC2.New()


def itkMinimumMaximumImageFilterISS3_New():
  return itkMinimumMaximumImageFilterISS3.New()


def itkMinimumMaximumImageFilterISS2_New():
  return itkMinimumMaximumImageFilterISS2.New()

class itkMinimumMaximumImageFilterID2(itkImageSinkPython.itkImageSinkID2):
    """


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter

    C++ includes: itkMinimumMaximumImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageFilterID2_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageFilterID2_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageFilterID2_Pointer":
        """Clone(itkMinimumMaximumImageFilterID2 self) -> itkMinimumMaximumImageFilterID2_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_Clone(self)


    def GetMinimumOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetMinimumOutput(itkMinimumMaximumImageFilterID2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMinimumOutput(self)


    def GetMinimum(self) -> "double const &":
        """GetMinimum(itkMinimumMaximumImageFilterID2 self) -> double const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMinimum(self)


    def GetMaximumOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetMaximumOutput(itkMinimumMaximumImageFilterID2 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMaximumOutput(self)


    def GetMaximum(self) -> "double const &":
        """GetMaximum(itkMinimumMaximumImageFilterID2 self) -> double const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMaximum(self)


    def SetNumberOfStreamDivisions(self, n: 'unsigned int') -> "void":
        """SetNumberOfStreamDivisions(itkMinimumMaximumImageFilterID2 self, unsigned int n)"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_SetNumberOfStreamDivisions(self, n)


    def GetNumberOfStreamDivisions(self) -> "unsigned int":
        """GetNumberOfStreamDivisions(itkMinimumMaximumImageFilterID2 self) -> unsigned int"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetNumberOfStreamDivisions(self)

    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_LessThanComparableCheck
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GreaterThanComparableCheck
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_OStreamWritableCheck
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterID2

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterID2 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageFilterID2"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterID2

        Create a new object of the class itkMinimumMaximumImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageFilterID2.Clone = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_Clone, None, itkMinimumMaximumImageFilterID2)
itkMinimumMaximumImageFilterID2.GetMinimumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMinimumOutput, None, itkMinimumMaximumImageFilterID2)
itkMinimumMaximumImageFilterID2.GetMinimum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMinimum, None, itkMinimumMaximumImageFilterID2)
itkMinimumMaximumImageFilterID2.GetMaximumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMaximumOutput, None, itkMinimumMaximumImageFilterID2)
itkMinimumMaximumImageFilterID2.GetMaximum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMaximum, None, itkMinimumMaximumImageFilterID2)
itkMinimumMaximumImageFilterID2.SetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_SetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterID2)
itkMinimumMaximumImageFilterID2.GetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterID2)
itkMinimumMaximumImageFilterID2_swigregister = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_swigregister
itkMinimumMaximumImageFilterID2_swigregister(itkMinimumMaximumImageFilterID2)

def itkMinimumMaximumImageFilterID2___New_orig__() -> "itkMinimumMaximumImageFilterID2_Pointer":
    """itkMinimumMaximumImageFilterID2___New_orig__() -> itkMinimumMaximumImageFilterID2_Pointer"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2___New_orig__()

def itkMinimumMaximumImageFilterID2_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterID2 *":
    """itkMinimumMaximumImageFilterID2_cast(itkLightObject obj) -> itkMinimumMaximumImageFilterID2"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_cast(obj)

class itkMinimumMaximumImageFilterID3(itkImageSinkPython.itkImageSinkID3):
    """


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter

    C++ includes: itkMinimumMaximumImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageFilterID3_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageFilterID3_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageFilterID3_Pointer":
        """Clone(itkMinimumMaximumImageFilterID3 self) -> itkMinimumMaximumImageFilterID3_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_Clone(self)


    def GetMinimumOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetMinimumOutput(itkMinimumMaximumImageFilterID3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMinimumOutput(self)


    def GetMinimum(self) -> "double const &":
        """GetMinimum(itkMinimumMaximumImageFilterID3 self) -> double const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMinimum(self)


    def GetMaximumOutput(self) -> "itkSimpleDataObjectDecoratorD const *":
        """GetMaximumOutput(itkMinimumMaximumImageFilterID3 self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMaximumOutput(self)


    def GetMaximum(self) -> "double const &":
        """GetMaximum(itkMinimumMaximumImageFilterID3 self) -> double const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMaximum(self)


    def SetNumberOfStreamDivisions(self, n: 'unsigned int') -> "void":
        """SetNumberOfStreamDivisions(itkMinimumMaximumImageFilterID3 self, unsigned int n)"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_SetNumberOfStreamDivisions(self, n)


    def GetNumberOfStreamDivisions(self) -> "unsigned int":
        """GetNumberOfStreamDivisions(itkMinimumMaximumImageFilterID3 self) -> unsigned int"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetNumberOfStreamDivisions(self)

    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_LessThanComparableCheck
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GreaterThanComparableCheck
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_OStreamWritableCheck
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterID3

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterID3 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageFilterID3"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterID3

        Create a new object of the class itkMinimumMaximumImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageFilterID3.Clone = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_Clone, None, itkMinimumMaximumImageFilterID3)
itkMinimumMaximumImageFilterID3.GetMinimumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMinimumOutput, None, itkMinimumMaximumImageFilterID3)
itkMinimumMaximumImageFilterID3.GetMinimum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMinimum, None, itkMinimumMaximumImageFilterID3)
itkMinimumMaximumImageFilterID3.GetMaximumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMaximumOutput, None, itkMinimumMaximumImageFilterID3)
itkMinimumMaximumImageFilterID3.GetMaximum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMaximum, None, itkMinimumMaximumImageFilterID3)
itkMinimumMaximumImageFilterID3.SetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_SetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterID3)
itkMinimumMaximumImageFilterID3.GetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterID3)
itkMinimumMaximumImageFilterID3_swigregister = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_swigregister
itkMinimumMaximumImageFilterID3_swigregister(itkMinimumMaximumImageFilterID3)

def itkMinimumMaximumImageFilterID3___New_orig__() -> "itkMinimumMaximumImageFilterID3_Pointer":
    """itkMinimumMaximumImageFilterID3___New_orig__() -> itkMinimumMaximumImageFilterID3_Pointer"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3___New_orig__()

def itkMinimumMaximumImageFilterID3_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterID3 *":
    """itkMinimumMaximumImageFilterID3_cast(itkLightObject obj) -> itkMinimumMaximumImageFilterID3"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_cast(obj)

class itkMinimumMaximumImageFilterIF2(itkImageSinkPython.itkImageSinkIF2):
    """


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter

    C++ includes: itkMinimumMaximumImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageFilterIF2_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageFilterIF2_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageFilterIF2_Pointer":
        """Clone(itkMinimumMaximumImageFilterIF2 self) -> itkMinimumMaximumImageFilterIF2_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_Clone(self)


    def GetMinimumOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetMinimumOutput(itkMinimumMaximumImageFilterIF2 self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMinimumOutput(self)


    def GetMinimum(self) -> "float const &":
        """GetMinimum(itkMinimumMaximumImageFilterIF2 self) -> float const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMinimum(self)


    def GetMaximumOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetMaximumOutput(itkMinimumMaximumImageFilterIF2 self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMaximumOutput(self)


    def GetMaximum(self) -> "float const &":
        """GetMaximum(itkMinimumMaximumImageFilterIF2 self) -> float const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMaximum(self)


    def SetNumberOfStreamDivisions(self, n: 'unsigned int') -> "void":
        """SetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIF2 self, unsigned int n)"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_SetNumberOfStreamDivisions(self, n)


    def GetNumberOfStreamDivisions(self) -> "unsigned int":
        """GetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIF2 self) -> unsigned int"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetNumberOfStreamDivisions(self)

    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_LessThanComparableCheck
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GreaterThanComparableCheck
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_OStreamWritableCheck
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIF2

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIF2 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIF2"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIF2

        Create a new object of the class itkMinimumMaximumImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageFilterIF2.Clone = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_Clone, None, itkMinimumMaximumImageFilterIF2)
itkMinimumMaximumImageFilterIF2.GetMinimumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMinimumOutput, None, itkMinimumMaximumImageFilterIF2)
itkMinimumMaximumImageFilterIF2.GetMinimum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMinimum, None, itkMinimumMaximumImageFilterIF2)
itkMinimumMaximumImageFilterIF2.GetMaximumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMaximumOutput, None, itkMinimumMaximumImageFilterIF2)
itkMinimumMaximumImageFilterIF2.GetMaximum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMaximum, None, itkMinimumMaximumImageFilterIF2)
itkMinimumMaximumImageFilterIF2.SetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_SetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIF2)
itkMinimumMaximumImageFilterIF2.GetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIF2)
itkMinimumMaximumImageFilterIF2_swigregister = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_swigregister
itkMinimumMaximumImageFilterIF2_swigregister(itkMinimumMaximumImageFilterIF2)

def itkMinimumMaximumImageFilterIF2___New_orig__() -> "itkMinimumMaximumImageFilterIF2_Pointer":
    """itkMinimumMaximumImageFilterIF2___New_orig__() -> itkMinimumMaximumImageFilterIF2_Pointer"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2___New_orig__()

def itkMinimumMaximumImageFilterIF2_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIF2 *":
    """itkMinimumMaximumImageFilterIF2_cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIF2"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_cast(obj)

class itkMinimumMaximumImageFilterIF3(itkImageSinkPython.itkImageSinkIF3):
    """


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter

    C++ includes: itkMinimumMaximumImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageFilterIF3_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageFilterIF3_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageFilterIF3_Pointer":
        """Clone(itkMinimumMaximumImageFilterIF3 self) -> itkMinimumMaximumImageFilterIF3_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_Clone(self)


    def GetMinimumOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetMinimumOutput(itkMinimumMaximumImageFilterIF3 self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMinimumOutput(self)


    def GetMinimum(self) -> "float const &":
        """GetMinimum(itkMinimumMaximumImageFilterIF3 self) -> float const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMinimum(self)


    def GetMaximumOutput(self) -> "itkSimpleDataObjectDecoratorF const *":
        """GetMaximumOutput(itkMinimumMaximumImageFilterIF3 self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMaximumOutput(self)


    def GetMaximum(self) -> "float const &":
        """GetMaximum(itkMinimumMaximumImageFilterIF3 self) -> float const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMaximum(self)


    def SetNumberOfStreamDivisions(self, n: 'unsigned int') -> "void":
        """SetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIF3 self, unsigned int n)"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_SetNumberOfStreamDivisions(self, n)


    def GetNumberOfStreamDivisions(self) -> "unsigned int":
        """GetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIF3 self) -> unsigned int"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetNumberOfStreamDivisions(self)

    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_LessThanComparableCheck
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GreaterThanComparableCheck
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_OStreamWritableCheck
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIF3

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIF3 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIF3"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIF3

        Create a new object of the class itkMinimumMaximumImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageFilterIF3.Clone = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_Clone, None, itkMinimumMaximumImageFilterIF3)
itkMinimumMaximumImageFilterIF3.GetMinimumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMinimumOutput, None, itkMinimumMaximumImageFilterIF3)
itkMinimumMaximumImageFilterIF3.GetMinimum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMinimum, None, itkMinimumMaximumImageFilterIF3)
itkMinimumMaximumImageFilterIF3.GetMaximumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMaximumOutput, None, itkMinimumMaximumImageFilterIF3)
itkMinimumMaximumImageFilterIF3.GetMaximum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMaximum, None, itkMinimumMaximumImageFilterIF3)
itkMinimumMaximumImageFilterIF3.SetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_SetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIF3)
itkMinimumMaximumImageFilterIF3.GetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIF3)
itkMinimumMaximumImageFilterIF3_swigregister = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_swigregister
itkMinimumMaximumImageFilterIF3_swigregister(itkMinimumMaximumImageFilterIF3)

def itkMinimumMaximumImageFilterIF3___New_orig__() -> "itkMinimumMaximumImageFilterIF3_Pointer":
    """itkMinimumMaximumImageFilterIF3___New_orig__() -> itkMinimumMaximumImageFilterIF3_Pointer"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3___New_orig__()

def itkMinimumMaximumImageFilterIF3_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIF3 *":
    """itkMinimumMaximumImageFilterIF3_cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIF3"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_cast(obj)

class itkMinimumMaximumImageFilterISS2(itkImageSinkPython.itkImageSinkISS2):
    """


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter

    C++ includes: itkMinimumMaximumImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageFilterISS2_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageFilterISS2_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageFilterISS2_Pointer":
        """Clone(itkMinimumMaximumImageFilterISS2 self) -> itkMinimumMaximumImageFilterISS2_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_Clone(self)


    def GetMinimumOutput(self) -> "itkSimpleDataObjectDecoratorSS const *":
        """GetMinimumOutput(itkMinimumMaximumImageFilterISS2 self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMinimumOutput(self)


    def GetMinimum(self) -> "short const &":
        """GetMinimum(itkMinimumMaximumImageFilterISS2 self) -> short const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMinimum(self)


    def GetMaximumOutput(self) -> "itkSimpleDataObjectDecoratorSS const *":
        """GetMaximumOutput(itkMinimumMaximumImageFilterISS2 self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMaximumOutput(self)


    def GetMaximum(self) -> "short const &":
        """GetMaximum(itkMinimumMaximumImageFilterISS2 self) -> short const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMaximum(self)


    def SetNumberOfStreamDivisions(self, n: 'unsigned int') -> "void":
        """SetNumberOfStreamDivisions(itkMinimumMaximumImageFilterISS2 self, unsigned int n)"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_SetNumberOfStreamDivisions(self, n)


    def GetNumberOfStreamDivisions(self) -> "unsigned int":
        """GetNumberOfStreamDivisions(itkMinimumMaximumImageFilterISS2 self) -> unsigned int"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetNumberOfStreamDivisions(self)

    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_LessThanComparableCheck
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GreaterThanComparableCheck
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_OStreamWritableCheck
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterISS2

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterISS2 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageFilterISS2"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterISS2

        Create a new object of the class itkMinimumMaximumImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageFilterISS2.Clone = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_Clone, None, itkMinimumMaximumImageFilterISS2)
itkMinimumMaximumImageFilterISS2.GetMinimumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMinimumOutput, None, itkMinimumMaximumImageFilterISS2)
itkMinimumMaximumImageFilterISS2.GetMinimum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMinimum, None, itkMinimumMaximumImageFilterISS2)
itkMinimumMaximumImageFilterISS2.GetMaximumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMaximumOutput, None, itkMinimumMaximumImageFilterISS2)
itkMinimumMaximumImageFilterISS2.GetMaximum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMaximum, None, itkMinimumMaximumImageFilterISS2)
itkMinimumMaximumImageFilterISS2.SetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_SetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterISS2)
itkMinimumMaximumImageFilterISS2.GetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterISS2)
itkMinimumMaximumImageFilterISS2_swigregister = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_swigregister
itkMinimumMaximumImageFilterISS2_swigregister(itkMinimumMaximumImageFilterISS2)

def itkMinimumMaximumImageFilterISS2___New_orig__() -> "itkMinimumMaximumImageFilterISS2_Pointer":
    """itkMinimumMaximumImageFilterISS2___New_orig__() -> itkMinimumMaximumImageFilterISS2_Pointer"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2___New_orig__()

def itkMinimumMaximumImageFilterISS2_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterISS2 *":
    """itkMinimumMaximumImageFilterISS2_cast(itkLightObject obj) -> itkMinimumMaximumImageFilterISS2"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_cast(obj)

class itkMinimumMaximumImageFilterISS3(itkImageSinkPython.itkImageSinkISS3):
    """


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter

    C++ includes: itkMinimumMaximumImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageFilterISS3_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageFilterISS3_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageFilterISS3_Pointer":
        """Clone(itkMinimumMaximumImageFilterISS3 self) -> itkMinimumMaximumImageFilterISS3_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_Clone(self)


    def GetMinimumOutput(self) -> "itkSimpleDataObjectDecoratorSS const *":
        """GetMinimumOutput(itkMinimumMaximumImageFilterISS3 self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMinimumOutput(self)


    def GetMinimum(self) -> "short const &":
        """GetMinimum(itkMinimumMaximumImageFilterISS3 self) -> short const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMinimum(self)


    def GetMaximumOutput(self) -> "itkSimpleDataObjectDecoratorSS const *":
        """GetMaximumOutput(itkMinimumMaximumImageFilterISS3 self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMaximumOutput(self)


    def GetMaximum(self) -> "short const &":
        """GetMaximum(itkMinimumMaximumImageFilterISS3 self) -> short const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMaximum(self)


    def SetNumberOfStreamDivisions(self, n: 'unsigned int') -> "void":
        """SetNumberOfStreamDivisions(itkMinimumMaximumImageFilterISS3 self, unsigned int n)"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_SetNumberOfStreamDivisions(self, n)


    def GetNumberOfStreamDivisions(self) -> "unsigned int":
        """GetNumberOfStreamDivisions(itkMinimumMaximumImageFilterISS3 self) -> unsigned int"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetNumberOfStreamDivisions(self)

    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_LessThanComparableCheck
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GreaterThanComparableCheck
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_OStreamWritableCheck
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterISS3

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterISS3 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageFilterISS3"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterISS3

        Create a new object of the class itkMinimumMaximumImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageFilterISS3.Clone = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_Clone, None, itkMinimumMaximumImageFilterISS3)
itkMinimumMaximumImageFilterISS3.GetMinimumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMinimumOutput, None, itkMinimumMaximumImageFilterISS3)
itkMinimumMaximumImageFilterISS3.GetMinimum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMinimum, None, itkMinimumMaximumImageFilterISS3)
itkMinimumMaximumImageFilterISS3.GetMaximumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMaximumOutput, None, itkMinimumMaximumImageFilterISS3)
itkMinimumMaximumImageFilterISS3.GetMaximum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMaximum, None, itkMinimumMaximumImageFilterISS3)
itkMinimumMaximumImageFilterISS3.SetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_SetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterISS3)
itkMinimumMaximumImageFilterISS3.GetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterISS3)
itkMinimumMaximumImageFilterISS3_swigregister = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_swigregister
itkMinimumMaximumImageFilterISS3_swigregister(itkMinimumMaximumImageFilterISS3)

def itkMinimumMaximumImageFilterISS3___New_orig__() -> "itkMinimumMaximumImageFilterISS3_Pointer":
    """itkMinimumMaximumImageFilterISS3___New_orig__() -> itkMinimumMaximumImageFilterISS3_Pointer"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3___New_orig__()

def itkMinimumMaximumImageFilterISS3_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterISS3 *":
    """itkMinimumMaximumImageFilterISS3_cast(itkLightObject obj) -> itkMinimumMaximumImageFilterISS3"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_cast(obj)

class itkMinimumMaximumImageFilterIUC2(itkImageSinkPython.itkImageSinkIUC2):
    """


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter

    C++ includes: itkMinimumMaximumImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageFilterIUC2_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageFilterIUC2_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageFilterIUC2_Pointer":
        """Clone(itkMinimumMaximumImageFilterIUC2 self) -> itkMinimumMaximumImageFilterIUC2_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_Clone(self)


    def GetMinimumOutput(self) -> "itkSimpleDataObjectDecoratorUC const *":
        """GetMinimumOutput(itkMinimumMaximumImageFilterIUC2 self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMinimumOutput(self)


    def GetMinimum(self) -> "unsigned char const &":
        """GetMinimum(itkMinimumMaximumImageFilterIUC2 self) -> unsigned char const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMinimum(self)


    def GetMaximumOutput(self) -> "itkSimpleDataObjectDecoratorUC const *":
        """GetMaximumOutput(itkMinimumMaximumImageFilterIUC2 self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMaximumOutput(self)


    def GetMaximum(self) -> "unsigned char const &":
        """GetMaximum(itkMinimumMaximumImageFilterIUC2 self) -> unsigned char const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMaximum(self)


    def SetNumberOfStreamDivisions(self, n: 'unsigned int') -> "void":
        """SetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIUC2 self, unsigned int n)"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_SetNumberOfStreamDivisions(self, n)


    def GetNumberOfStreamDivisions(self) -> "unsigned int":
        """GetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIUC2 self) -> unsigned int"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetNumberOfStreamDivisions(self)

    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_LessThanComparableCheck
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GreaterThanComparableCheck
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_OStreamWritableCheck
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIUC2

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIUC2 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIUC2"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIUC2

        Create a new object of the class itkMinimumMaximumImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageFilterIUC2.Clone = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_Clone, None, itkMinimumMaximumImageFilterIUC2)
itkMinimumMaximumImageFilterIUC2.GetMinimumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMinimumOutput, None, itkMinimumMaximumImageFilterIUC2)
itkMinimumMaximumImageFilterIUC2.GetMinimum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMinimum, None, itkMinimumMaximumImageFilterIUC2)
itkMinimumMaximumImageFilterIUC2.GetMaximumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMaximumOutput, None, itkMinimumMaximumImageFilterIUC2)
itkMinimumMaximumImageFilterIUC2.GetMaximum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMaximum, None, itkMinimumMaximumImageFilterIUC2)
itkMinimumMaximumImageFilterIUC2.SetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_SetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIUC2)
itkMinimumMaximumImageFilterIUC2.GetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIUC2)
itkMinimumMaximumImageFilterIUC2_swigregister = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_swigregister
itkMinimumMaximumImageFilterIUC2_swigregister(itkMinimumMaximumImageFilterIUC2)

def itkMinimumMaximumImageFilterIUC2___New_orig__() -> "itkMinimumMaximumImageFilterIUC2_Pointer":
    """itkMinimumMaximumImageFilterIUC2___New_orig__() -> itkMinimumMaximumImageFilterIUC2_Pointer"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2___New_orig__()

def itkMinimumMaximumImageFilterIUC2_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIUC2 *":
    """itkMinimumMaximumImageFilterIUC2_cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIUC2"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_cast(obj)

class itkMinimumMaximumImageFilterIUC3(itkImageSinkPython.itkImageSinkIUC3):
    """


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter

    C++ includes: itkMinimumMaximumImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageFilterIUC3_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageFilterIUC3_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageFilterIUC3_Pointer":
        """Clone(itkMinimumMaximumImageFilterIUC3 self) -> itkMinimumMaximumImageFilterIUC3_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_Clone(self)


    def GetMinimumOutput(self) -> "itkSimpleDataObjectDecoratorUC const *":
        """GetMinimumOutput(itkMinimumMaximumImageFilterIUC3 self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMinimumOutput(self)


    def GetMinimum(self) -> "unsigned char const &":
        """GetMinimum(itkMinimumMaximumImageFilterIUC3 self) -> unsigned char const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMinimum(self)


    def GetMaximumOutput(self) -> "itkSimpleDataObjectDecoratorUC const *":
        """GetMaximumOutput(itkMinimumMaximumImageFilterIUC3 self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMaximumOutput(self)


    def GetMaximum(self) -> "unsigned char const &":
        """GetMaximum(itkMinimumMaximumImageFilterIUC3 self) -> unsigned char const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMaximum(self)


    def SetNumberOfStreamDivisions(self, n: 'unsigned int') -> "void":
        """SetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIUC3 self, unsigned int n)"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_SetNumberOfStreamDivisions(self, n)


    def GetNumberOfStreamDivisions(self) -> "unsigned int":
        """GetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIUC3 self) -> unsigned int"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetNumberOfStreamDivisions(self)

    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_LessThanComparableCheck
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GreaterThanComparableCheck
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_OStreamWritableCheck
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIUC3

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIUC3 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIUC3"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIUC3

        Create a new object of the class itkMinimumMaximumImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageFilterIUC3.Clone = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_Clone, None, itkMinimumMaximumImageFilterIUC3)
itkMinimumMaximumImageFilterIUC3.GetMinimumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMinimumOutput, None, itkMinimumMaximumImageFilterIUC3)
itkMinimumMaximumImageFilterIUC3.GetMinimum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMinimum, None, itkMinimumMaximumImageFilterIUC3)
itkMinimumMaximumImageFilterIUC3.GetMaximumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMaximumOutput, None, itkMinimumMaximumImageFilterIUC3)
itkMinimumMaximumImageFilterIUC3.GetMaximum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMaximum, None, itkMinimumMaximumImageFilterIUC3)
itkMinimumMaximumImageFilterIUC3.SetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_SetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIUC3)
itkMinimumMaximumImageFilterIUC3.GetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIUC3)
itkMinimumMaximumImageFilterIUC3_swigregister = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_swigregister
itkMinimumMaximumImageFilterIUC3_swigregister(itkMinimumMaximumImageFilterIUC3)

def itkMinimumMaximumImageFilterIUC3___New_orig__() -> "itkMinimumMaximumImageFilterIUC3_Pointer":
    """itkMinimumMaximumImageFilterIUC3___New_orig__() -> itkMinimumMaximumImageFilterIUC3_Pointer"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3___New_orig__()

def itkMinimumMaximumImageFilterIUC3_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIUC3 *":
    """itkMinimumMaximumImageFilterIUC3_cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIUC3"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_cast(obj)

class itkMinimumMaximumImageFilterIUS2(itkImageSinkPython.itkImageSinkIUS2):
    """


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter

    C++ includes: itkMinimumMaximumImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageFilterIUS2_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageFilterIUS2_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageFilterIUS2_Pointer":
        """Clone(itkMinimumMaximumImageFilterIUS2 self) -> itkMinimumMaximumImageFilterIUS2_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_Clone(self)


    def GetMinimumOutput(self) -> "itkSimpleDataObjectDecoratorUS const *":
        """GetMinimumOutput(itkMinimumMaximumImageFilterIUS2 self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMinimumOutput(self)


    def GetMinimum(self) -> "unsigned short const &":
        """GetMinimum(itkMinimumMaximumImageFilterIUS2 self) -> unsigned short const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMinimum(self)


    def GetMaximumOutput(self) -> "itkSimpleDataObjectDecoratorUS const *":
        """GetMaximumOutput(itkMinimumMaximumImageFilterIUS2 self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMaximumOutput(self)


    def GetMaximum(self) -> "unsigned short const &":
        """GetMaximum(itkMinimumMaximumImageFilterIUS2 self) -> unsigned short const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMaximum(self)


    def SetNumberOfStreamDivisions(self, n: 'unsigned int') -> "void":
        """SetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIUS2 self, unsigned int n)"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_SetNumberOfStreamDivisions(self, n)


    def GetNumberOfStreamDivisions(self) -> "unsigned int":
        """GetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIUS2 self) -> unsigned int"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetNumberOfStreamDivisions(self)

    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_LessThanComparableCheck
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GreaterThanComparableCheck
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_OStreamWritableCheck
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIUS2

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIUS2 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIUS2"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIUS2

        Create a new object of the class itkMinimumMaximumImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageFilterIUS2.Clone = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_Clone, None, itkMinimumMaximumImageFilterIUS2)
itkMinimumMaximumImageFilterIUS2.GetMinimumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMinimumOutput, None, itkMinimumMaximumImageFilterIUS2)
itkMinimumMaximumImageFilterIUS2.GetMinimum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMinimum, None, itkMinimumMaximumImageFilterIUS2)
itkMinimumMaximumImageFilterIUS2.GetMaximumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMaximumOutput, None, itkMinimumMaximumImageFilterIUS2)
itkMinimumMaximumImageFilterIUS2.GetMaximum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMaximum, None, itkMinimumMaximumImageFilterIUS2)
itkMinimumMaximumImageFilterIUS2.SetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_SetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIUS2)
itkMinimumMaximumImageFilterIUS2.GetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIUS2)
itkMinimumMaximumImageFilterIUS2_swigregister = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_swigregister
itkMinimumMaximumImageFilterIUS2_swigregister(itkMinimumMaximumImageFilterIUS2)

def itkMinimumMaximumImageFilterIUS2___New_orig__() -> "itkMinimumMaximumImageFilterIUS2_Pointer":
    """itkMinimumMaximumImageFilterIUS2___New_orig__() -> itkMinimumMaximumImageFilterIUS2_Pointer"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2___New_orig__()

def itkMinimumMaximumImageFilterIUS2_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIUS2 *":
    """itkMinimumMaximumImageFilterIUS2_cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIUS2"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_cast(obj)

class itkMinimumMaximumImageFilterIUS3(itkImageSinkPython.itkImageSinkIUS3):
    """


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter

    C++ includes: itkMinimumMaximumImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMinimumMaximumImageFilterIUS3_Pointer":
        """__New_orig__() -> itkMinimumMaximumImageFilterIUS3_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMinimumMaximumImageFilterIUS3_Pointer":
        """Clone(itkMinimumMaximumImageFilterIUS3 self) -> itkMinimumMaximumImageFilterIUS3_Pointer"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_Clone(self)


    def GetMinimumOutput(self) -> "itkSimpleDataObjectDecoratorUS const *":
        """GetMinimumOutput(itkMinimumMaximumImageFilterIUS3 self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMinimumOutput(self)


    def GetMinimum(self) -> "unsigned short const &":
        """GetMinimum(itkMinimumMaximumImageFilterIUS3 self) -> unsigned short const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMinimum(self)


    def GetMaximumOutput(self) -> "itkSimpleDataObjectDecoratorUS const *":
        """GetMaximumOutput(itkMinimumMaximumImageFilterIUS3 self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMaximumOutput(self)


    def GetMaximum(self) -> "unsigned short const &":
        """GetMaximum(itkMinimumMaximumImageFilterIUS3 self) -> unsigned short const &"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMaximum(self)


    def SetNumberOfStreamDivisions(self, n: 'unsigned int') -> "void":
        """SetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIUS3 self, unsigned int n)"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_SetNumberOfStreamDivisions(self, n)


    def GetNumberOfStreamDivisions(self) -> "unsigned int":
        """GetNumberOfStreamDivisions(itkMinimumMaximumImageFilterIUS3 self) -> unsigned int"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetNumberOfStreamDivisions(self)

    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_LessThanComparableCheck
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GreaterThanComparableCheck
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_OStreamWritableCheck
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIUS3

    def cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIUS3 *":
        """cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIUS3"""
        return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIUS3

        Create a new object of the class itkMinimumMaximumImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumMaximumImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumMaximumImageFilterIUS3.Clone = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_Clone, None, itkMinimumMaximumImageFilterIUS3)
itkMinimumMaximumImageFilterIUS3.GetMinimumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMinimumOutput, None, itkMinimumMaximumImageFilterIUS3)
itkMinimumMaximumImageFilterIUS3.GetMinimum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMinimum, None, itkMinimumMaximumImageFilterIUS3)
itkMinimumMaximumImageFilterIUS3.GetMaximumOutput = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMaximumOutput, None, itkMinimumMaximumImageFilterIUS3)
itkMinimumMaximumImageFilterIUS3.GetMaximum = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMaximum, None, itkMinimumMaximumImageFilterIUS3)
itkMinimumMaximumImageFilterIUS3.SetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_SetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIUS3)
itkMinimumMaximumImageFilterIUS3.GetNumberOfStreamDivisions = new_instancemethod(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetNumberOfStreamDivisions, None, itkMinimumMaximumImageFilterIUS3)
itkMinimumMaximumImageFilterIUS3_swigregister = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_swigregister
itkMinimumMaximumImageFilterIUS3_swigregister(itkMinimumMaximumImageFilterIUS3)

def itkMinimumMaximumImageFilterIUS3___New_orig__() -> "itkMinimumMaximumImageFilterIUS3_Pointer":
    """itkMinimumMaximumImageFilterIUS3___New_orig__() -> itkMinimumMaximumImageFilterIUS3_Pointer"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3___New_orig__()

def itkMinimumMaximumImageFilterIUS3_cast(obj: 'itkLightObject') -> "itkMinimumMaximumImageFilterIUS3 *":
    """itkMinimumMaximumImageFilterIUS3_cast(itkLightObject obj) -> itkMinimumMaximumImageFilterIUS3"""
    return _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def minimum_maximum_image_filter(*args, **kwargs):
    """Procedural interface for MinimumMaximumImageFilter"""
    import itk
    instance = itk.MinimumMaximumImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def minimum_maximum_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MinimumMaximumImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MinimumMaximumImageFilter.values()[0]
    else:
        filter_object = itk.MinimumMaximumImageFilter

    minimum_maximum_image_filter.__doc__ = filter_object.__doc__
    minimum_maximum_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    minimum_maximum_image_filter.__doc__ += "Available Keyword Arguments:\n"
    minimum_maximum_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



