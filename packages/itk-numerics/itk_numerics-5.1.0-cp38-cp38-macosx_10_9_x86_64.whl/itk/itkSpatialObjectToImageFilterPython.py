# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSpatialObjectToImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSpatialObjectToImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSpatialObjectToImageFilterPython
            return _itkSpatialObjectToImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSpatialObjectToImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSpatialObjectToImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSpatialObjectToImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSizePython
import pyBasePython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkMatrixPython
import itkCovariantVectorPython
import itkPointPython
import vnl_matrix_fixedPython
import itkImageSourcePython
import ITKCommonBasePython
import itkImagePython
import itkRGBPixelPython
import itkOffsetPython
import itkIndexPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkSpatialObjectBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkSpatialObjectPropertyPython
import itkAffineTransformPython
import itkTransformBasePython
import itkArray2DPython
import itkDiffusionTensor3DPython
import itkArrayPython
import itkOptimizerParametersPython
import itkMatrixOffsetTransformBasePython

def itkSpatialObjectToImageFilterSO3ID3_New():
  return itkSpatialObjectToImageFilterSO3ID3.New()


def itkSpatialObjectToImageFilterSO3IF3_New():
  return itkSpatialObjectToImageFilterSO3IF3.New()


def itkSpatialObjectToImageFilterSO3IUS3_New():
  return itkSpatialObjectToImageFilterSO3IUS3.New()


def itkSpatialObjectToImageFilterSO3IUC3_New():
  return itkSpatialObjectToImageFilterSO3IUC3.New()


def itkSpatialObjectToImageFilterSO3ISS3_New():
  return itkSpatialObjectToImageFilterSO3ISS3.New()


def itkSpatialObjectToImageFilterSO2ID2_New():
  return itkSpatialObjectToImageFilterSO2ID2.New()


def itkSpatialObjectToImageFilterSO2IF2_New():
  return itkSpatialObjectToImageFilterSO2IF2.New()


def itkSpatialObjectToImageFilterSO2IUS2_New():
  return itkSpatialObjectToImageFilterSO2IUS2.New()


def itkSpatialObjectToImageFilterSO2IUC2_New():
  return itkSpatialObjectToImageFilterSO2IUC2.New()


def itkSpatialObjectToImageFilterSO2ISS2_New():
  return itkSpatialObjectToImageFilterSO2ISS2.New()

class itkSpatialObjectToImageFilterSO2ID2(itkImageSourcePython.itkImageSourceID2):
    """


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    \\sphinx \\sphinxexample{Core/SpatialObjects/ConvertSpacialObjectT
    oImage,Convert Spacial Object To Image} \\endsphinx

    C++ includes: itkSpatialObjectToImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToImageFilterSO2ID2_Pointer":
        """__New_orig__() -> itkSpatialObjectToImageFilterSO2ID2_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToImageFilterSO2ID2_Pointer":
        """Clone(itkSpatialObjectToImageFilterSO2ID2 self) -> itkSpatialObjectToImageFilterSO2ID2_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_Clone(self)


    def SetInput(self, *args) -> "void":
        """
        SetInput(itkSpatialObjectToImageFilterSO2ID2 self, itkSpatialObject2 object)
        SetInput(itkSpatialObjectToImageFilterSO2ID2 self, unsigned int arg0, itkSpatialObject2 object)
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetInput(self, *args)


    def GetInput(self, *args) -> "itkSpatialObject2 const *":
        """
        GetInput(itkSpatialObjectToImageFilterSO2ID2 self) -> itkSpatialObject2
        GetInput(itkSpatialObjectToImageFilterSO2ID2 self, unsigned int idx) -> itkSpatialObject2
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetInput(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSpatialObjectToImageFilterSO2ID2 self, itkVectorD2 spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO2ID2 self, double const * spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO2ID2 self, float const * spacing)

        Spacing (size of a
        pixel) of the output image. The spacing is the geometric distance
        between image samples. It is stored internally as double, but may be
        set from float. See:  GetSpacing() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkSpatialObjectToImageFilterSO2ID2 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetSpacing(self)


    def SetDirection(self, direction: 'itkMatrixD22') -> "void":
        """
        SetDirection(itkSpatialObjectToImageFilterSO2ID2 self, itkMatrixD22 direction)

        Directions of the
        output image. The direction is for oriented images. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD22 const &":
        """GetDirection(itkSpatialObjectToImageFilterSO2ID2 self) -> itkMatrixD22"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetDirection(self)


    def SetInsideValue(self, _arg: 'double const') -> "void":
        """
        SetInsideValue(itkSpatialObjectToImageFilterSO2ID2 self, double const _arg)

        Set/Get the value
        for pixels inside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "inside" value is changed to a non-null value, the
        output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "double":
        """GetInsideValue(itkSpatialObjectToImageFilterSO2ID2 self) -> double"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'double const') -> "void":
        """
        SetOutsideValue(itkSpatialObjectToImageFilterSO2ID2 self, double const _arg)

        Set/Get the value
        for pixels outside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "outside" value is changed to a non-null value,
        the output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "double":
        """GetOutsideValue(itkSpatialObjectToImageFilterSO2ID2 self) -> double"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetOutsideValue(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSpatialObjectToImageFilterSO2ID2 self, itkPointD2 origin)
        SetOrigin(itkSpatialObjectToImageFilterSO2ID2 self, double const * origin)
        SetOrigin(itkSpatialObjectToImageFilterSO2ID2 self, float const * origin)

        The origin of the output
        image. The origin is the geometric coordinates of the index
        (0,0,...,0). It is stored internally as double but may be set from
        float. See:  GetOrigin() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkSpatialObjectToImageFilterSO2ID2 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetOrigin(self)


    def SetChildrenDepth(self, _arg: 'unsigned int const') -> "void":
        """
        SetChildrenDepth(itkSpatialObjectToImageFilterSO2ID2 self, unsigned int const _arg)

        The spatial object
        being transformed can be part of a hierarchy. How deep in the
        hierarchy should we descend in generating the image? A ChildrenDepth
        of 0 means to only include the object itself. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetChildrenDepth(self, _arg)


    def GetChildrenDepth(self) -> "unsigned int":
        """GetChildrenDepth(itkSpatialObjectToImageFilterSO2ID2 self) -> unsigned int"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetChildrenDepth(self)


    def SetSize(self, _arg: 'itkSize2') -> "void":
        """
        SetSize(itkSpatialObjectToImageFilterSO2ID2 self, itkSize2 _arg)

        Set/Get Size 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetSize(self, _arg)


    def GetSize(self) -> "itkSize2":
        """GetSize(itkSpatialObjectToImageFilterSO2ID2 self) -> itkSize2"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetSize(self)


    def SetUseObjectValue(self, _arg: 'bool const') -> "void":
        """
        SetUseObjectValue(itkSpatialObjectToImageFilterSO2ID2 self, bool const _arg)

        If UseObjectValue
        is set to true, then the filter uses the ValueAtInWorldSpace()
        function instead of IsInsideInWorldSpace() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetUseObjectValue(self, _arg)


    def GetUseObjectValue(self) -> "bool":
        """GetUseObjectValue(itkSpatialObjectToImageFilterSO2ID2 self) -> bool"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetUseObjectValue(self)

    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO2ID2

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO2ID2 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO2ID2"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO2ID2

        Create a new object of the class itkSpatialObjectToImageFilterSO2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToImageFilterSO2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToImageFilterSO2ID2.Clone = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_Clone, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.SetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetInput, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.GetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetInput, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.SetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetSpacing, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.GetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetSpacing, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.SetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetDirection, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.GetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetDirection, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.SetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetInsideValue, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.GetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetInsideValue, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.SetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetOutsideValue, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.GetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetOutsideValue, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.SetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetOrigin, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.GetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetOrigin, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.SetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetChildrenDepth, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.GetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetChildrenDepth, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.SetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetSize, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.GetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetSize, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.SetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetUseObjectValue, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2.GetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetUseObjectValue, None, itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2_swigregister = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_swigregister
itkSpatialObjectToImageFilterSO2ID2_swigregister(itkSpatialObjectToImageFilterSO2ID2)

def itkSpatialObjectToImageFilterSO2ID2___New_orig__() -> "itkSpatialObjectToImageFilterSO2ID2_Pointer":
    """itkSpatialObjectToImageFilterSO2ID2___New_orig__() -> itkSpatialObjectToImageFilterSO2ID2_Pointer"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2___New_orig__()

def itkSpatialObjectToImageFilterSO2ID2_cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO2ID2 *":
    """itkSpatialObjectToImageFilterSO2ID2_cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO2ID2"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_cast(obj)

class itkSpatialObjectToImageFilterSO2IF2(itkImageSourcePython.itkImageSourceIF2):
    """


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    \\sphinx \\sphinxexample{Core/SpatialObjects/ConvertSpacialObjectT
    oImage,Convert Spacial Object To Image} \\endsphinx

    C++ includes: itkSpatialObjectToImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToImageFilterSO2IF2_Pointer":
        """__New_orig__() -> itkSpatialObjectToImageFilterSO2IF2_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToImageFilterSO2IF2_Pointer":
        """Clone(itkSpatialObjectToImageFilterSO2IF2 self) -> itkSpatialObjectToImageFilterSO2IF2_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_Clone(self)


    def SetInput(self, *args) -> "void":
        """
        SetInput(itkSpatialObjectToImageFilterSO2IF2 self, itkSpatialObject2 object)
        SetInput(itkSpatialObjectToImageFilterSO2IF2 self, unsigned int arg0, itkSpatialObject2 object)
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetInput(self, *args)


    def GetInput(self, *args) -> "itkSpatialObject2 const *":
        """
        GetInput(itkSpatialObjectToImageFilterSO2IF2 self) -> itkSpatialObject2
        GetInput(itkSpatialObjectToImageFilterSO2IF2 self, unsigned int idx) -> itkSpatialObject2
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetInput(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSpatialObjectToImageFilterSO2IF2 self, itkVectorD2 spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO2IF2 self, double const * spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO2IF2 self, float const * spacing)

        Spacing (size of a
        pixel) of the output image. The spacing is the geometric distance
        between image samples. It is stored internally as double, but may be
        set from float. See:  GetSpacing() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkSpatialObjectToImageFilterSO2IF2 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetSpacing(self)


    def SetDirection(self, direction: 'itkMatrixD22') -> "void":
        """
        SetDirection(itkSpatialObjectToImageFilterSO2IF2 self, itkMatrixD22 direction)

        Directions of the
        output image. The direction is for oriented images. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD22 const &":
        """GetDirection(itkSpatialObjectToImageFilterSO2IF2 self) -> itkMatrixD22"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetDirection(self)


    def SetInsideValue(self, _arg: 'float const') -> "void":
        """
        SetInsideValue(itkSpatialObjectToImageFilterSO2IF2 self, float const _arg)

        Set/Get the value
        for pixels inside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "inside" value is changed to a non-null value, the
        output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "float":
        """GetInsideValue(itkSpatialObjectToImageFilterSO2IF2 self) -> float"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'float const') -> "void":
        """
        SetOutsideValue(itkSpatialObjectToImageFilterSO2IF2 self, float const _arg)

        Set/Get the value
        for pixels outside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "outside" value is changed to a non-null value,
        the output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "float":
        """GetOutsideValue(itkSpatialObjectToImageFilterSO2IF2 self) -> float"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetOutsideValue(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSpatialObjectToImageFilterSO2IF2 self, itkPointD2 origin)
        SetOrigin(itkSpatialObjectToImageFilterSO2IF2 self, double const * origin)
        SetOrigin(itkSpatialObjectToImageFilterSO2IF2 self, float const * origin)

        The origin of the output
        image. The origin is the geometric coordinates of the index
        (0,0,...,0). It is stored internally as double but may be set from
        float. See:  GetOrigin() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkSpatialObjectToImageFilterSO2IF2 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetOrigin(self)


    def SetChildrenDepth(self, _arg: 'unsigned int const') -> "void":
        """
        SetChildrenDepth(itkSpatialObjectToImageFilterSO2IF2 self, unsigned int const _arg)

        The spatial object
        being transformed can be part of a hierarchy. How deep in the
        hierarchy should we descend in generating the image? A ChildrenDepth
        of 0 means to only include the object itself. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetChildrenDepth(self, _arg)


    def GetChildrenDepth(self) -> "unsigned int":
        """GetChildrenDepth(itkSpatialObjectToImageFilterSO2IF2 self) -> unsigned int"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetChildrenDepth(self)


    def SetSize(self, _arg: 'itkSize2') -> "void":
        """
        SetSize(itkSpatialObjectToImageFilterSO2IF2 self, itkSize2 _arg)

        Set/Get Size 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetSize(self, _arg)


    def GetSize(self) -> "itkSize2":
        """GetSize(itkSpatialObjectToImageFilterSO2IF2 self) -> itkSize2"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetSize(self)


    def SetUseObjectValue(self, _arg: 'bool const') -> "void":
        """
        SetUseObjectValue(itkSpatialObjectToImageFilterSO2IF2 self, bool const _arg)

        If UseObjectValue
        is set to true, then the filter uses the ValueAtInWorldSpace()
        function instead of IsInsideInWorldSpace() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetUseObjectValue(self, _arg)


    def GetUseObjectValue(self) -> "bool":
        """GetUseObjectValue(itkSpatialObjectToImageFilterSO2IF2 self) -> bool"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetUseObjectValue(self)

    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO2IF2

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO2IF2 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO2IF2"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO2IF2

        Create a new object of the class itkSpatialObjectToImageFilterSO2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToImageFilterSO2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToImageFilterSO2IF2.Clone = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_Clone, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.SetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetInput, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.GetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetInput, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.SetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetSpacing, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.GetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetSpacing, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.SetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetDirection, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.GetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetDirection, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.SetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetInsideValue, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.GetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetInsideValue, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.SetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetOutsideValue, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.GetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetOutsideValue, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.SetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetOrigin, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.GetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetOrigin, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.SetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetChildrenDepth, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.GetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetChildrenDepth, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.SetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetSize, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.GetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetSize, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.SetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetUseObjectValue, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2.GetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetUseObjectValue, None, itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2_swigregister = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_swigregister
itkSpatialObjectToImageFilterSO2IF2_swigregister(itkSpatialObjectToImageFilterSO2IF2)

def itkSpatialObjectToImageFilterSO2IF2___New_orig__() -> "itkSpatialObjectToImageFilterSO2IF2_Pointer":
    """itkSpatialObjectToImageFilterSO2IF2___New_orig__() -> itkSpatialObjectToImageFilterSO2IF2_Pointer"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2___New_orig__()

def itkSpatialObjectToImageFilterSO2IF2_cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO2IF2 *":
    """itkSpatialObjectToImageFilterSO2IF2_cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO2IF2"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_cast(obj)

class itkSpatialObjectToImageFilterSO2ISS2(itkImageSourcePython.itkImageSourceISS2):
    """


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    \\sphinx \\sphinxexample{Core/SpatialObjects/ConvertSpacialObjectT
    oImage,Convert Spacial Object To Image} \\endsphinx

    C++ includes: itkSpatialObjectToImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToImageFilterSO2ISS2_Pointer":
        """__New_orig__() -> itkSpatialObjectToImageFilterSO2ISS2_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToImageFilterSO2ISS2_Pointer":
        """Clone(itkSpatialObjectToImageFilterSO2ISS2 self) -> itkSpatialObjectToImageFilterSO2ISS2_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_Clone(self)


    def SetInput(self, *args) -> "void":
        """
        SetInput(itkSpatialObjectToImageFilterSO2ISS2 self, itkSpatialObject2 object)
        SetInput(itkSpatialObjectToImageFilterSO2ISS2 self, unsigned int arg0, itkSpatialObject2 object)
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetInput(self, *args)


    def GetInput(self, *args) -> "itkSpatialObject2 const *":
        """
        GetInput(itkSpatialObjectToImageFilterSO2ISS2 self) -> itkSpatialObject2
        GetInput(itkSpatialObjectToImageFilterSO2ISS2 self, unsigned int idx) -> itkSpatialObject2
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetInput(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSpatialObjectToImageFilterSO2ISS2 self, itkVectorD2 spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO2ISS2 self, double const * spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO2ISS2 self, float const * spacing)

        Spacing (size of a
        pixel) of the output image. The spacing is the geometric distance
        between image samples. It is stored internally as double, but may be
        set from float. See:  GetSpacing() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkSpatialObjectToImageFilterSO2ISS2 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetSpacing(self)


    def SetDirection(self, direction: 'itkMatrixD22') -> "void":
        """
        SetDirection(itkSpatialObjectToImageFilterSO2ISS2 self, itkMatrixD22 direction)

        Directions of the
        output image. The direction is for oriented images. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD22 const &":
        """GetDirection(itkSpatialObjectToImageFilterSO2ISS2 self) -> itkMatrixD22"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetDirection(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkSpatialObjectToImageFilterSO2ISS2 self, short const _arg)

        Set/Get the value
        for pixels inside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "inside" value is changed to a non-null value, the
        output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """GetInsideValue(itkSpatialObjectToImageFilterSO2ISS2 self) -> short"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkSpatialObjectToImageFilterSO2ISS2 self, short const _arg)

        Set/Get the value
        for pixels outside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "outside" value is changed to a non-null value,
        the output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """GetOutsideValue(itkSpatialObjectToImageFilterSO2ISS2 self) -> short"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetOutsideValue(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSpatialObjectToImageFilterSO2ISS2 self, itkPointD2 origin)
        SetOrigin(itkSpatialObjectToImageFilterSO2ISS2 self, double const * origin)
        SetOrigin(itkSpatialObjectToImageFilterSO2ISS2 self, float const * origin)

        The origin of the output
        image. The origin is the geometric coordinates of the index
        (0,0,...,0). It is stored internally as double but may be set from
        float. See:  GetOrigin() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkSpatialObjectToImageFilterSO2ISS2 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetOrigin(self)


    def SetChildrenDepth(self, _arg: 'unsigned int const') -> "void":
        """
        SetChildrenDepth(itkSpatialObjectToImageFilterSO2ISS2 self, unsigned int const _arg)

        The spatial object
        being transformed can be part of a hierarchy. How deep in the
        hierarchy should we descend in generating the image? A ChildrenDepth
        of 0 means to only include the object itself. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetChildrenDepth(self, _arg)


    def GetChildrenDepth(self) -> "unsigned int":
        """GetChildrenDepth(itkSpatialObjectToImageFilterSO2ISS2 self) -> unsigned int"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetChildrenDepth(self)


    def SetSize(self, _arg: 'itkSize2') -> "void":
        """
        SetSize(itkSpatialObjectToImageFilterSO2ISS2 self, itkSize2 _arg)

        Set/Get Size 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetSize(self, _arg)


    def GetSize(self) -> "itkSize2":
        """GetSize(itkSpatialObjectToImageFilterSO2ISS2 self) -> itkSize2"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetSize(self)


    def SetUseObjectValue(self, _arg: 'bool const') -> "void":
        """
        SetUseObjectValue(itkSpatialObjectToImageFilterSO2ISS2 self, bool const _arg)

        If UseObjectValue
        is set to true, then the filter uses the ValueAtInWorldSpace()
        function instead of IsInsideInWorldSpace() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetUseObjectValue(self, _arg)


    def GetUseObjectValue(self) -> "bool":
        """GetUseObjectValue(itkSpatialObjectToImageFilterSO2ISS2 self) -> bool"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetUseObjectValue(self)

    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO2ISS2

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO2ISS2 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO2ISS2"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO2ISS2

        Create a new object of the class itkSpatialObjectToImageFilterSO2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToImageFilterSO2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToImageFilterSO2ISS2.Clone = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_Clone, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.SetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetInput, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.GetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetInput, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.SetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetSpacing, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.GetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetSpacing, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.SetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetDirection, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.GetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetDirection, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.SetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetInsideValue, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.GetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetInsideValue, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.SetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetOutsideValue, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.GetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetOutsideValue, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.SetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetOrigin, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.GetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetOrigin, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.SetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetChildrenDepth, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.GetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetChildrenDepth, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.SetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetSize, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.GetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetSize, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.SetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetUseObjectValue, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2.GetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetUseObjectValue, None, itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2_swigregister = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_swigregister
itkSpatialObjectToImageFilterSO2ISS2_swigregister(itkSpatialObjectToImageFilterSO2ISS2)

def itkSpatialObjectToImageFilterSO2ISS2___New_orig__() -> "itkSpatialObjectToImageFilterSO2ISS2_Pointer":
    """itkSpatialObjectToImageFilterSO2ISS2___New_orig__() -> itkSpatialObjectToImageFilterSO2ISS2_Pointer"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2___New_orig__()

def itkSpatialObjectToImageFilterSO2ISS2_cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO2ISS2 *":
    """itkSpatialObjectToImageFilterSO2ISS2_cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO2ISS2"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_cast(obj)

class itkSpatialObjectToImageFilterSO2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    \\sphinx \\sphinxexample{Core/SpatialObjects/ConvertSpacialObjectT
    oImage,Convert Spacial Object To Image} \\endsphinx

    C++ includes: itkSpatialObjectToImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToImageFilterSO2IUC2_Pointer":
        """__New_orig__() -> itkSpatialObjectToImageFilterSO2IUC2_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToImageFilterSO2IUC2_Pointer":
        """Clone(itkSpatialObjectToImageFilterSO2IUC2 self) -> itkSpatialObjectToImageFilterSO2IUC2_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_Clone(self)


    def SetInput(self, *args) -> "void":
        """
        SetInput(itkSpatialObjectToImageFilterSO2IUC2 self, itkSpatialObject2 object)
        SetInput(itkSpatialObjectToImageFilterSO2IUC2 self, unsigned int arg0, itkSpatialObject2 object)
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetInput(self, *args)


    def GetInput(self, *args) -> "itkSpatialObject2 const *":
        """
        GetInput(itkSpatialObjectToImageFilterSO2IUC2 self) -> itkSpatialObject2
        GetInput(itkSpatialObjectToImageFilterSO2IUC2 self, unsigned int idx) -> itkSpatialObject2
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetInput(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSpatialObjectToImageFilterSO2IUC2 self, itkVectorD2 spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO2IUC2 self, double const * spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO2IUC2 self, float const * spacing)

        Spacing (size of a
        pixel) of the output image. The spacing is the geometric distance
        between image samples. It is stored internally as double, but may be
        set from float. See:  GetSpacing() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkSpatialObjectToImageFilterSO2IUC2 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetSpacing(self)


    def SetDirection(self, direction: 'itkMatrixD22') -> "void":
        """
        SetDirection(itkSpatialObjectToImageFilterSO2IUC2 self, itkMatrixD22 direction)

        Directions of the
        output image. The direction is for oriented images. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD22 const &":
        """GetDirection(itkSpatialObjectToImageFilterSO2IUC2 self) -> itkMatrixD22"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetDirection(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkSpatialObjectToImageFilterSO2IUC2 self, unsigned char const _arg)

        Set/Get the value
        for pixels inside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "inside" value is changed to a non-null value, the
        output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """GetInsideValue(itkSpatialObjectToImageFilterSO2IUC2 self) -> unsigned char"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkSpatialObjectToImageFilterSO2IUC2 self, unsigned char const _arg)

        Set/Get the value
        for pixels outside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "outside" value is changed to a non-null value,
        the output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """GetOutsideValue(itkSpatialObjectToImageFilterSO2IUC2 self) -> unsigned char"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetOutsideValue(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSpatialObjectToImageFilterSO2IUC2 self, itkPointD2 origin)
        SetOrigin(itkSpatialObjectToImageFilterSO2IUC2 self, double const * origin)
        SetOrigin(itkSpatialObjectToImageFilterSO2IUC2 self, float const * origin)

        The origin of the output
        image. The origin is the geometric coordinates of the index
        (0,0,...,0). It is stored internally as double but may be set from
        float. See:  GetOrigin() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkSpatialObjectToImageFilterSO2IUC2 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetOrigin(self)


    def SetChildrenDepth(self, _arg: 'unsigned int const') -> "void":
        """
        SetChildrenDepth(itkSpatialObjectToImageFilterSO2IUC2 self, unsigned int const _arg)

        The spatial object
        being transformed can be part of a hierarchy. How deep in the
        hierarchy should we descend in generating the image? A ChildrenDepth
        of 0 means to only include the object itself. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetChildrenDepth(self, _arg)


    def GetChildrenDepth(self) -> "unsigned int":
        """GetChildrenDepth(itkSpatialObjectToImageFilterSO2IUC2 self) -> unsigned int"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetChildrenDepth(self)


    def SetSize(self, _arg: 'itkSize2') -> "void":
        """
        SetSize(itkSpatialObjectToImageFilterSO2IUC2 self, itkSize2 _arg)

        Set/Get Size 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetSize(self, _arg)


    def GetSize(self) -> "itkSize2":
        """GetSize(itkSpatialObjectToImageFilterSO2IUC2 self) -> itkSize2"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetSize(self)


    def SetUseObjectValue(self, _arg: 'bool const') -> "void":
        """
        SetUseObjectValue(itkSpatialObjectToImageFilterSO2IUC2 self, bool const _arg)

        If UseObjectValue
        is set to true, then the filter uses the ValueAtInWorldSpace()
        function instead of IsInsideInWorldSpace() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetUseObjectValue(self, _arg)


    def GetUseObjectValue(self) -> "bool":
        """GetUseObjectValue(itkSpatialObjectToImageFilterSO2IUC2 self) -> bool"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetUseObjectValue(self)

    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO2IUC2

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO2IUC2 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO2IUC2"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO2IUC2

        Create a new object of the class itkSpatialObjectToImageFilterSO2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToImageFilterSO2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToImageFilterSO2IUC2.Clone = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_Clone, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.SetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetInput, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.GetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetInput, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.SetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetSpacing, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.GetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetSpacing, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.SetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetDirection, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.GetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetDirection, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.SetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetInsideValue, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.GetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetInsideValue, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.SetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetOutsideValue, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.GetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetOutsideValue, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.SetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetOrigin, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.GetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetOrigin, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.SetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetChildrenDepth, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.GetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetChildrenDepth, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.SetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetSize, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.GetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetSize, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.SetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetUseObjectValue, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2.GetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetUseObjectValue, None, itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2_swigregister = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_swigregister
itkSpatialObjectToImageFilterSO2IUC2_swigregister(itkSpatialObjectToImageFilterSO2IUC2)

def itkSpatialObjectToImageFilterSO2IUC2___New_orig__() -> "itkSpatialObjectToImageFilterSO2IUC2_Pointer":
    """itkSpatialObjectToImageFilterSO2IUC2___New_orig__() -> itkSpatialObjectToImageFilterSO2IUC2_Pointer"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2___New_orig__()

def itkSpatialObjectToImageFilterSO2IUC2_cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO2IUC2 *":
    """itkSpatialObjectToImageFilterSO2IUC2_cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO2IUC2"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_cast(obj)

class itkSpatialObjectToImageFilterSO2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    \\sphinx \\sphinxexample{Core/SpatialObjects/ConvertSpacialObjectT
    oImage,Convert Spacial Object To Image} \\endsphinx

    C++ includes: itkSpatialObjectToImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToImageFilterSO2IUS2_Pointer":
        """__New_orig__() -> itkSpatialObjectToImageFilterSO2IUS2_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToImageFilterSO2IUS2_Pointer":
        """Clone(itkSpatialObjectToImageFilterSO2IUS2 self) -> itkSpatialObjectToImageFilterSO2IUS2_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_Clone(self)


    def SetInput(self, *args) -> "void":
        """
        SetInput(itkSpatialObjectToImageFilterSO2IUS2 self, itkSpatialObject2 object)
        SetInput(itkSpatialObjectToImageFilterSO2IUS2 self, unsigned int arg0, itkSpatialObject2 object)
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetInput(self, *args)


    def GetInput(self, *args) -> "itkSpatialObject2 const *":
        """
        GetInput(itkSpatialObjectToImageFilterSO2IUS2 self) -> itkSpatialObject2
        GetInput(itkSpatialObjectToImageFilterSO2IUS2 self, unsigned int idx) -> itkSpatialObject2
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetInput(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSpatialObjectToImageFilterSO2IUS2 self, itkVectorD2 spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO2IUS2 self, double const * spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO2IUS2 self, float const * spacing)

        Spacing (size of a
        pixel) of the output image. The spacing is the geometric distance
        between image samples. It is stored internally as double, but may be
        set from float. See:  GetSpacing() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkSpatialObjectToImageFilterSO2IUS2 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetSpacing(self)


    def SetDirection(self, direction: 'itkMatrixD22') -> "void":
        """
        SetDirection(itkSpatialObjectToImageFilterSO2IUS2 self, itkMatrixD22 direction)

        Directions of the
        output image. The direction is for oriented images. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD22 const &":
        """GetDirection(itkSpatialObjectToImageFilterSO2IUS2 self) -> itkMatrixD22"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetDirection(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkSpatialObjectToImageFilterSO2IUS2 self, unsigned short const _arg)

        Set/Get the value
        for pixels inside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "inside" value is changed to a non-null value, the
        output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """GetInsideValue(itkSpatialObjectToImageFilterSO2IUS2 self) -> unsigned short"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkSpatialObjectToImageFilterSO2IUS2 self, unsigned short const _arg)

        Set/Get the value
        for pixels outside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "outside" value is changed to a non-null value,
        the output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """GetOutsideValue(itkSpatialObjectToImageFilterSO2IUS2 self) -> unsigned short"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetOutsideValue(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSpatialObjectToImageFilterSO2IUS2 self, itkPointD2 origin)
        SetOrigin(itkSpatialObjectToImageFilterSO2IUS2 self, double const * origin)
        SetOrigin(itkSpatialObjectToImageFilterSO2IUS2 self, float const * origin)

        The origin of the output
        image. The origin is the geometric coordinates of the index
        (0,0,...,0). It is stored internally as double but may be set from
        float. See:  GetOrigin() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkSpatialObjectToImageFilterSO2IUS2 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetOrigin(self)


    def SetChildrenDepth(self, _arg: 'unsigned int const') -> "void":
        """
        SetChildrenDepth(itkSpatialObjectToImageFilterSO2IUS2 self, unsigned int const _arg)

        The spatial object
        being transformed can be part of a hierarchy. How deep in the
        hierarchy should we descend in generating the image? A ChildrenDepth
        of 0 means to only include the object itself. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetChildrenDepth(self, _arg)


    def GetChildrenDepth(self) -> "unsigned int":
        """GetChildrenDepth(itkSpatialObjectToImageFilterSO2IUS2 self) -> unsigned int"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetChildrenDepth(self)


    def SetSize(self, _arg: 'itkSize2') -> "void":
        """
        SetSize(itkSpatialObjectToImageFilterSO2IUS2 self, itkSize2 _arg)

        Set/Get Size 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetSize(self, _arg)


    def GetSize(self) -> "itkSize2":
        """GetSize(itkSpatialObjectToImageFilterSO2IUS2 self) -> itkSize2"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetSize(self)


    def SetUseObjectValue(self, _arg: 'bool const') -> "void":
        """
        SetUseObjectValue(itkSpatialObjectToImageFilterSO2IUS2 self, bool const _arg)

        If UseObjectValue
        is set to true, then the filter uses the ValueAtInWorldSpace()
        function instead of IsInsideInWorldSpace() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetUseObjectValue(self, _arg)


    def GetUseObjectValue(self) -> "bool":
        """GetUseObjectValue(itkSpatialObjectToImageFilterSO2IUS2 self) -> bool"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetUseObjectValue(self)

    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO2IUS2

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO2IUS2 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO2IUS2"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO2IUS2

        Create a new object of the class itkSpatialObjectToImageFilterSO2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToImageFilterSO2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToImageFilterSO2IUS2.Clone = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_Clone, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.SetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetInput, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.GetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetInput, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.SetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetSpacing, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.GetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetSpacing, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.SetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetDirection, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.GetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetDirection, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.SetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetInsideValue, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.GetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetInsideValue, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.SetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetOutsideValue, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.GetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetOutsideValue, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.SetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetOrigin, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.GetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetOrigin, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.SetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetChildrenDepth, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.GetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetChildrenDepth, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.SetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetSize, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.GetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetSize, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.SetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetUseObjectValue, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2.GetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetUseObjectValue, None, itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2_swigregister = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_swigregister
itkSpatialObjectToImageFilterSO2IUS2_swigregister(itkSpatialObjectToImageFilterSO2IUS2)

def itkSpatialObjectToImageFilterSO2IUS2___New_orig__() -> "itkSpatialObjectToImageFilterSO2IUS2_Pointer":
    """itkSpatialObjectToImageFilterSO2IUS2___New_orig__() -> itkSpatialObjectToImageFilterSO2IUS2_Pointer"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2___New_orig__()

def itkSpatialObjectToImageFilterSO2IUS2_cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO2IUS2 *":
    """itkSpatialObjectToImageFilterSO2IUS2_cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO2IUS2"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_cast(obj)

class itkSpatialObjectToImageFilterSO3ID3(itkImageSourcePython.itkImageSourceID3):
    """


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    \\sphinx \\sphinxexample{Core/SpatialObjects/ConvertSpacialObjectT
    oImage,Convert Spacial Object To Image} \\endsphinx

    C++ includes: itkSpatialObjectToImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToImageFilterSO3ID3_Pointer":
        """__New_orig__() -> itkSpatialObjectToImageFilterSO3ID3_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToImageFilterSO3ID3_Pointer":
        """Clone(itkSpatialObjectToImageFilterSO3ID3 self) -> itkSpatialObjectToImageFilterSO3ID3_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_Clone(self)


    def SetInput(self, *args) -> "void":
        """
        SetInput(itkSpatialObjectToImageFilterSO3ID3 self, itkSpatialObject3 object)
        SetInput(itkSpatialObjectToImageFilterSO3ID3 self, unsigned int arg0, itkSpatialObject3 object)
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetInput(self, *args)


    def GetInput(self, *args) -> "itkSpatialObject3 const *":
        """
        GetInput(itkSpatialObjectToImageFilterSO3ID3 self) -> itkSpatialObject3
        GetInput(itkSpatialObjectToImageFilterSO3ID3 self, unsigned int idx) -> itkSpatialObject3
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetInput(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSpatialObjectToImageFilterSO3ID3 self, itkVectorD3 spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO3ID3 self, double const * spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO3ID3 self, float const * spacing)

        Spacing (size of a
        pixel) of the output image. The spacing is the geometric distance
        between image samples. It is stored internally as double, but may be
        set from float. See:  GetSpacing() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkSpatialObjectToImageFilterSO3ID3 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetSpacing(self)


    def SetDirection(self, direction: 'itkMatrixD33') -> "void":
        """
        SetDirection(itkSpatialObjectToImageFilterSO3ID3 self, itkMatrixD33 direction)

        Directions of the
        output image. The direction is for oriented images. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD33 const &":
        """GetDirection(itkSpatialObjectToImageFilterSO3ID3 self) -> itkMatrixD33"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetDirection(self)


    def SetInsideValue(self, _arg: 'double const') -> "void":
        """
        SetInsideValue(itkSpatialObjectToImageFilterSO3ID3 self, double const _arg)

        Set/Get the value
        for pixels inside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "inside" value is changed to a non-null value, the
        output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "double":
        """GetInsideValue(itkSpatialObjectToImageFilterSO3ID3 self) -> double"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'double const') -> "void":
        """
        SetOutsideValue(itkSpatialObjectToImageFilterSO3ID3 self, double const _arg)

        Set/Get the value
        for pixels outside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "outside" value is changed to a non-null value,
        the output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "double":
        """GetOutsideValue(itkSpatialObjectToImageFilterSO3ID3 self) -> double"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetOutsideValue(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSpatialObjectToImageFilterSO3ID3 self, itkPointD3 origin)
        SetOrigin(itkSpatialObjectToImageFilterSO3ID3 self, double const * origin)
        SetOrigin(itkSpatialObjectToImageFilterSO3ID3 self, float const * origin)

        The origin of the output
        image. The origin is the geometric coordinates of the index
        (0,0,...,0). It is stored internally as double but may be set from
        float. See:  GetOrigin() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkSpatialObjectToImageFilterSO3ID3 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetOrigin(self)


    def SetChildrenDepth(self, _arg: 'unsigned int const') -> "void":
        """
        SetChildrenDepth(itkSpatialObjectToImageFilterSO3ID3 self, unsigned int const _arg)

        The spatial object
        being transformed can be part of a hierarchy. How deep in the
        hierarchy should we descend in generating the image? A ChildrenDepth
        of 0 means to only include the object itself. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetChildrenDepth(self, _arg)


    def GetChildrenDepth(self) -> "unsigned int":
        """GetChildrenDepth(itkSpatialObjectToImageFilterSO3ID3 self) -> unsigned int"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetChildrenDepth(self)


    def SetSize(self, _arg: 'itkSize3') -> "void":
        """
        SetSize(itkSpatialObjectToImageFilterSO3ID3 self, itkSize3 _arg)

        Set/Get Size 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetSize(self, _arg)


    def GetSize(self) -> "itkSize3":
        """GetSize(itkSpatialObjectToImageFilterSO3ID3 self) -> itkSize3"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetSize(self)


    def SetUseObjectValue(self, _arg: 'bool const') -> "void":
        """
        SetUseObjectValue(itkSpatialObjectToImageFilterSO3ID3 self, bool const _arg)

        If UseObjectValue
        is set to true, then the filter uses the ValueAtInWorldSpace()
        function instead of IsInsideInWorldSpace() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetUseObjectValue(self, _arg)


    def GetUseObjectValue(self) -> "bool":
        """GetUseObjectValue(itkSpatialObjectToImageFilterSO3ID3 self) -> bool"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetUseObjectValue(self)

    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO3ID3

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO3ID3 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO3ID3"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO3ID3

        Create a new object of the class itkSpatialObjectToImageFilterSO3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToImageFilterSO3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToImageFilterSO3ID3.Clone = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_Clone, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.SetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetInput, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.GetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetInput, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.SetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetSpacing, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.GetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetSpacing, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.SetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetDirection, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.GetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetDirection, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.SetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetInsideValue, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.GetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetInsideValue, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.SetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetOutsideValue, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.GetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetOutsideValue, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.SetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetOrigin, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.GetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetOrigin, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.SetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetChildrenDepth, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.GetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetChildrenDepth, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.SetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetSize, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.GetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetSize, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.SetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetUseObjectValue, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3.GetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetUseObjectValue, None, itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3_swigregister = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_swigregister
itkSpatialObjectToImageFilterSO3ID3_swigregister(itkSpatialObjectToImageFilterSO3ID3)

def itkSpatialObjectToImageFilterSO3ID3___New_orig__() -> "itkSpatialObjectToImageFilterSO3ID3_Pointer":
    """itkSpatialObjectToImageFilterSO3ID3___New_orig__() -> itkSpatialObjectToImageFilterSO3ID3_Pointer"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3___New_orig__()

def itkSpatialObjectToImageFilterSO3ID3_cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO3ID3 *":
    """itkSpatialObjectToImageFilterSO3ID3_cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO3ID3"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_cast(obj)

class itkSpatialObjectToImageFilterSO3IF3(itkImageSourcePython.itkImageSourceIF3):
    """


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    \\sphinx \\sphinxexample{Core/SpatialObjects/ConvertSpacialObjectT
    oImage,Convert Spacial Object To Image} \\endsphinx

    C++ includes: itkSpatialObjectToImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToImageFilterSO3IF3_Pointer":
        """__New_orig__() -> itkSpatialObjectToImageFilterSO3IF3_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToImageFilterSO3IF3_Pointer":
        """Clone(itkSpatialObjectToImageFilterSO3IF3 self) -> itkSpatialObjectToImageFilterSO3IF3_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_Clone(self)


    def SetInput(self, *args) -> "void":
        """
        SetInput(itkSpatialObjectToImageFilterSO3IF3 self, itkSpatialObject3 object)
        SetInput(itkSpatialObjectToImageFilterSO3IF3 self, unsigned int arg0, itkSpatialObject3 object)
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetInput(self, *args)


    def GetInput(self, *args) -> "itkSpatialObject3 const *":
        """
        GetInput(itkSpatialObjectToImageFilterSO3IF3 self) -> itkSpatialObject3
        GetInput(itkSpatialObjectToImageFilterSO3IF3 self, unsigned int idx) -> itkSpatialObject3
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetInput(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSpatialObjectToImageFilterSO3IF3 self, itkVectorD3 spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO3IF3 self, double const * spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO3IF3 self, float const * spacing)

        Spacing (size of a
        pixel) of the output image. The spacing is the geometric distance
        between image samples. It is stored internally as double, but may be
        set from float. See:  GetSpacing() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkSpatialObjectToImageFilterSO3IF3 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetSpacing(self)


    def SetDirection(self, direction: 'itkMatrixD33') -> "void":
        """
        SetDirection(itkSpatialObjectToImageFilterSO3IF3 self, itkMatrixD33 direction)

        Directions of the
        output image. The direction is for oriented images. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD33 const &":
        """GetDirection(itkSpatialObjectToImageFilterSO3IF3 self) -> itkMatrixD33"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetDirection(self)


    def SetInsideValue(self, _arg: 'float const') -> "void":
        """
        SetInsideValue(itkSpatialObjectToImageFilterSO3IF3 self, float const _arg)

        Set/Get the value
        for pixels inside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "inside" value is changed to a non-null value, the
        output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "float":
        """GetInsideValue(itkSpatialObjectToImageFilterSO3IF3 self) -> float"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'float const') -> "void":
        """
        SetOutsideValue(itkSpatialObjectToImageFilterSO3IF3 self, float const _arg)

        Set/Get the value
        for pixels outside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "outside" value is changed to a non-null value,
        the output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "float":
        """GetOutsideValue(itkSpatialObjectToImageFilterSO3IF3 self) -> float"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetOutsideValue(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSpatialObjectToImageFilterSO3IF3 self, itkPointD3 origin)
        SetOrigin(itkSpatialObjectToImageFilterSO3IF3 self, double const * origin)
        SetOrigin(itkSpatialObjectToImageFilterSO3IF3 self, float const * origin)

        The origin of the output
        image. The origin is the geometric coordinates of the index
        (0,0,...,0). It is stored internally as double but may be set from
        float. See:  GetOrigin() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkSpatialObjectToImageFilterSO3IF3 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetOrigin(self)


    def SetChildrenDepth(self, _arg: 'unsigned int const') -> "void":
        """
        SetChildrenDepth(itkSpatialObjectToImageFilterSO3IF3 self, unsigned int const _arg)

        The spatial object
        being transformed can be part of a hierarchy. How deep in the
        hierarchy should we descend in generating the image? A ChildrenDepth
        of 0 means to only include the object itself. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetChildrenDepth(self, _arg)


    def GetChildrenDepth(self) -> "unsigned int":
        """GetChildrenDepth(itkSpatialObjectToImageFilterSO3IF3 self) -> unsigned int"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetChildrenDepth(self)


    def SetSize(self, _arg: 'itkSize3') -> "void":
        """
        SetSize(itkSpatialObjectToImageFilterSO3IF3 self, itkSize3 _arg)

        Set/Get Size 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetSize(self, _arg)


    def GetSize(self) -> "itkSize3":
        """GetSize(itkSpatialObjectToImageFilterSO3IF3 self) -> itkSize3"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetSize(self)


    def SetUseObjectValue(self, _arg: 'bool const') -> "void":
        """
        SetUseObjectValue(itkSpatialObjectToImageFilterSO3IF3 self, bool const _arg)

        If UseObjectValue
        is set to true, then the filter uses the ValueAtInWorldSpace()
        function instead of IsInsideInWorldSpace() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetUseObjectValue(self, _arg)


    def GetUseObjectValue(self) -> "bool":
        """GetUseObjectValue(itkSpatialObjectToImageFilterSO3IF3 self) -> bool"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetUseObjectValue(self)

    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO3IF3

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO3IF3 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO3IF3"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO3IF3

        Create a new object of the class itkSpatialObjectToImageFilterSO3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToImageFilterSO3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToImageFilterSO3IF3.Clone = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_Clone, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.SetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetInput, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.GetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetInput, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.SetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetSpacing, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.GetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetSpacing, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.SetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetDirection, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.GetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetDirection, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.SetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetInsideValue, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.GetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetInsideValue, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.SetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetOutsideValue, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.GetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetOutsideValue, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.SetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetOrigin, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.GetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetOrigin, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.SetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetChildrenDepth, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.GetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetChildrenDepth, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.SetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetSize, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.GetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetSize, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.SetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetUseObjectValue, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3.GetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetUseObjectValue, None, itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3_swigregister = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_swigregister
itkSpatialObjectToImageFilterSO3IF3_swigregister(itkSpatialObjectToImageFilterSO3IF3)

def itkSpatialObjectToImageFilterSO3IF3___New_orig__() -> "itkSpatialObjectToImageFilterSO3IF3_Pointer":
    """itkSpatialObjectToImageFilterSO3IF3___New_orig__() -> itkSpatialObjectToImageFilterSO3IF3_Pointer"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3___New_orig__()

def itkSpatialObjectToImageFilterSO3IF3_cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO3IF3 *":
    """itkSpatialObjectToImageFilterSO3IF3_cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO3IF3"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_cast(obj)

class itkSpatialObjectToImageFilterSO3ISS3(itkImageSourcePython.itkImageSourceISS3):
    """


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    \\sphinx \\sphinxexample{Core/SpatialObjects/ConvertSpacialObjectT
    oImage,Convert Spacial Object To Image} \\endsphinx

    C++ includes: itkSpatialObjectToImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToImageFilterSO3ISS3_Pointer":
        """__New_orig__() -> itkSpatialObjectToImageFilterSO3ISS3_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToImageFilterSO3ISS3_Pointer":
        """Clone(itkSpatialObjectToImageFilterSO3ISS3 self) -> itkSpatialObjectToImageFilterSO3ISS3_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_Clone(self)


    def SetInput(self, *args) -> "void":
        """
        SetInput(itkSpatialObjectToImageFilterSO3ISS3 self, itkSpatialObject3 object)
        SetInput(itkSpatialObjectToImageFilterSO3ISS3 self, unsigned int arg0, itkSpatialObject3 object)
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetInput(self, *args)


    def GetInput(self, *args) -> "itkSpatialObject3 const *":
        """
        GetInput(itkSpatialObjectToImageFilterSO3ISS3 self) -> itkSpatialObject3
        GetInput(itkSpatialObjectToImageFilterSO3ISS3 self, unsigned int idx) -> itkSpatialObject3
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetInput(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSpatialObjectToImageFilterSO3ISS3 self, itkVectorD3 spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO3ISS3 self, double const * spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO3ISS3 self, float const * spacing)

        Spacing (size of a
        pixel) of the output image. The spacing is the geometric distance
        between image samples. It is stored internally as double, but may be
        set from float. See:  GetSpacing() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkSpatialObjectToImageFilterSO3ISS3 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetSpacing(self)


    def SetDirection(self, direction: 'itkMatrixD33') -> "void":
        """
        SetDirection(itkSpatialObjectToImageFilterSO3ISS3 self, itkMatrixD33 direction)

        Directions of the
        output image. The direction is for oriented images. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD33 const &":
        """GetDirection(itkSpatialObjectToImageFilterSO3ISS3 self) -> itkMatrixD33"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetDirection(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkSpatialObjectToImageFilterSO3ISS3 self, short const _arg)

        Set/Get the value
        for pixels inside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "inside" value is changed to a non-null value, the
        output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short":
        """GetInsideValue(itkSpatialObjectToImageFilterSO3ISS3 self) -> short"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkSpatialObjectToImageFilterSO3ISS3 self, short const _arg)

        Set/Get the value
        for pixels outside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "outside" value is changed to a non-null value,
        the output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short":
        """GetOutsideValue(itkSpatialObjectToImageFilterSO3ISS3 self) -> short"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetOutsideValue(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSpatialObjectToImageFilterSO3ISS3 self, itkPointD3 origin)
        SetOrigin(itkSpatialObjectToImageFilterSO3ISS3 self, double const * origin)
        SetOrigin(itkSpatialObjectToImageFilterSO3ISS3 self, float const * origin)

        The origin of the output
        image. The origin is the geometric coordinates of the index
        (0,0,...,0). It is stored internally as double but may be set from
        float. See:  GetOrigin() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkSpatialObjectToImageFilterSO3ISS3 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetOrigin(self)


    def SetChildrenDepth(self, _arg: 'unsigned int const') -> "void":
        """
        SetChildrenDepth(itkSpatialObjectToImageFilterSO3ISS3 self, unsigned int const _arg)

        The spatial object
        being transformed can be part of a hierarchy. How deep in the
        hierarchy should we descend in generating the image? A ChildrenDepth
        of 0 means to only include the object itself. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetChildrenDepth(self, _arg)


    def GetChildrenDepth(self) -> "unsigned int":
        """GetChildrenDepth(itkSpatialObjectToImageFilterSO3ISS3 self) -> unsigned int"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetChildrenDepth(self)


    def SetSize(self, _arg: 'itkSize3') -> "void":
        """
        SetSize(itkSpatialObjectToImageFilterSO3ISS3 self, itkSize3 _arg)

        Set/Get Size 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetSize(self, _arg)


    def GetSize(self) -> "itkSize3":
        """GetSize(itkSpatialObjectToImageFilterSO3ISS3 self) -> itkSize3"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetSize(self)


    def SetUseObjectValue(self, _arg: 'bool const') -> "void":
        """
        SetUseObjectValue(itkSpatialObjectToImageFilterSO3ISS3 self, bool const _arg)

        If UseObjectValue
        is set to true, then the filter uses the ValueAtInWorldSpace()
        function instead of IsInsideInWorldSpace() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetUseObjectValue(self, _arg)


    def GetUseObjectValue(self) -> "bool":
        """GetUseObjectValue(itkSpatialObjectToImageFilterSO3ISS3 self) -> bool"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetUseObjectValue(self)

    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO3ISS3

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO3ISS3 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO3ISS3"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO3ISS3

        Create a new object of the class itkSpatialObjectToImageFilterSO3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToImageFilterSO3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToImageFilterSO3ISS3.Clone = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_Clone, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.SetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetInput, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.GetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetInput, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.SetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetSpacing, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.GetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetSpacing, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.SetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetDirection, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.GetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetDirection, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.SetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetInsideValue, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.GetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetInsideValue, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.SetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetOutsideValue, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.GetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetOutsideValue, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.SetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetOrigin, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.GetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetOrigin, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.SetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetChildrenDepth, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.GetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetChildrenDepth, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.SetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetSize, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.GetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetSize, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.SetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetUseObjectValue, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3.GetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetUseObjectValue, None, itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3_swigregister = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_swigregister
itkSpatialObjectToImageFilterSO3ISS3_swigregister(itkSpatialObjectToImageFilterSO3ISS3)

def itkSpatialObjectToImageFilterSO3ISS3___New_orig__() -> "itkSpatialObjectToImageFilterSO3ISS3_Pointer":
    """itkSpatialObjectToImageFilterSO3ISS3___New_orig__() -> itkSpatialObjectToImageFilterSO3ISS3_Pointer"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3___New_orig__()

def itkSpatialObjectToImageFilterSO3ISS3_cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO3ISS3 *":
    """itkSpatialObjectToImageFilterSO3ISS3_cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO3ISS3"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_cast(obj)

class itkSpatialObjectToImageFilterSO3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    \\sphinx \\sphinxexample{Core/SpatialObjects/ConvertSpacialObjectT
    oImage,Convert Spacial Object To Image} \\endsphinx

    C++ includes: itkSpatialObjectToImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToImageFilterSO3IUC3_Pointer":
        """__New_orig__() -> itkSpatialObjectToImageFilterSO3IUC3_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToImageFilterSO3IUC3_Pointer":
        """Clone(itkSpatialObjectToImageFilterSO3IUC3 self) -> itkSpatialObjectToImageFilterSO3IUC3_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_Clone(self)


    def SetInput(self, *args) -> "void":
        """
        SetInput(itkSpatialObjectToImageFilterSO3IUC3 self, itkSpatialObject3 object)
        SetInput(itkSpatialObjectToImageFilterSO3IUC3 self, unsigned int arg0, itkSpatialObject3 object)
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetInput(self, *args)


    def GetInput(self, *args) -> "itkSpatialObject3 const *":
        """
        GetInput(itkSpatialObjectToImageFilterSO3IUC3 self) -> itkSpatialObject3
        GetInput(itkSpatialObjectToImageFilterSO3IUC3 self, unsigned int idx) -> itkSpatialObject3
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetInput(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSpatialObjectToImageFilterSO3IUC3 self, itkVectorD3 spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO3IUC3 self, double const * spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO3IUC3 self, float const * spacing)

        Spacing (size of a
        pixel) of the output image. The spacing is the geometric distance
        between image samples. It is stored internally as double, but may be
        set from float. See:  GetSpacing() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkSpatialObjectToImageFilterSO3IUC3 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetSpacing(self)


    def SetDirection(self, direction: 'itkMatrixD33') -> "void":
        """
        SetDirection(itkSpatialObjectToImageFilterSO3IUC3 self, itkMatrixD33 direction)

        Directions of the
        output image. The direction is for oriented images. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD33 const &":
        """GetDirection(itkSpatialObjectToImageFilterSO3IUC3 self) -> itkMatrixD33"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetDirection(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkSpatialObjectToImageFilterSO3IUC3 self, unsigned char const _arg)

        Set/Get the value
        for pixels inside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "inside" value is changed to a non-null value, the
        output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char":
        """GetInsideValue(itkSpatialObjectToImageFilterSO3IUC3 self) -> unsigned char"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkSpatialObjectToImageFilterSO3IUC3 self, unsigned char const _arg)

        Set/Get the value
        for pixels outside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "outside" value is changed to a non-null value,
        the output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char":
        """GetOutsideValue(itkSpatialObjectToImageFilterSO3IUC3 self) -> unsigned char"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetOutsideValue(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSpatialObjectToImageFilterSO3IUC3 self, itkPointD3 origin)
        SetOrigin(itkSpatialObjectToImageFilterSO3IUC3 self, double const * origin)
        SetOrigin(itkSpatialObjectToImageFilterSO3IUC3 self, float const * origin)

        The origin of the output
        image. The origin is the geometric coordinates of the index
        (0,0,...,0). It is stored internally as double but may be set from
        float. See:  GetOrigin() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkSpatialObjectToImageFilterSO3IUC3 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetOrigin(self)


    def SetChildrenDepth(self, _arg: 'unsigned int const') -> "void":
        """
        SetChildrenDepth(itkSpatialObjectToImageFilterSO3IUC3 self, unsigned int const _arg)

        The spatial object
        being transformed can be part of a hierarchy. How deep in the
        hierarchy should we descend in generating the image? A ChildrenDepth
        of 0 means to only include the object itself. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetChildrenDepth(self, _arg)


    def GetChildrenDepth(self) -> "unsigned int":
        """GetChildrenDepth(itkSpatialObjectToImageFilterSO3IUC3 self) -> unsigned int"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetChildrenDepth(self)


    def SetSize(self, _arg: 'itkSize3') -> "void":
        """
        SetSize(itkSpatialObjectToImageFilterSO3IUC3 self, itkSize3 _arg)

        Set/Get Size 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetSize(self, _arg)


    def GetSize(self) -> "itkSize3":
        """GetSize(itkSpatialObjectToImageFilterSO3IUC3 self) -> itkSize3"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetSize(self)


    def SetUseObjectValue(self, _arg: 'bool const') -> "void":
        """
        SetUseObjectValue(itkSpatialObjectToImageFilterSO3IUC3 self, bool const _arg)

        If UseObjectValue
        is set to true, then the filter uses the ValueAtInWorldSpace()
        function instead of IsInsideInWorldSpace() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetUseObjectValue(self, _arg)


    def GetUseObjectValue(self) -> "bool":
        """GetUseObjectValue(itkSpatialObjectToImageFilterSO3IUC3 self) -> bool"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetUseObjectValue(self)

    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO3IUC3

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO3IUC3 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO3IUC3"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO3IUC3

        Create a new object of the class itkSpatialObjectToImageFilterSO3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToImageFilterSO3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToImageFilterSO3IUC3.Clone = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_Clone, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.SetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetInput, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.GetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetInput, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.SetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetSpacing, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.GetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetSpacing, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.SetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetDirection, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.GetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetDirection, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.SetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetInsideValue, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.GetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetInsideValue, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.SetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetOutsideValue, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.GetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetOutsideValue, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.SetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetOrigin, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.GetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetOrigin, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.SetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetChildrenDepth, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.GetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetChildrenDepth, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.SetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetSize, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.GetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetSize, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.SetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetUseObjectValue, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3.GetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetUseObjectValue, None, itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3_swigregister = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_swigregister
itkSpatialObjectToImageFilterSO3IUC3_swigregister(itkSpatialObjectToImageFilterSO3IUC3)

def itkSpatialObjectToImageFilterSO3IUC3___New_orig__() -> "itkSpatialObjectToImageFilterSO3IUC3_Pointer":
    """itkSpatialObjectToImageFilterSO3IUC3___New_orig__() -> itkSpatialObjectToImageFilterSO3IUC3_Pointer"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3___New_orig__()

def itkSpatialObjectToImageFilterSO3IUC3_cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO3IUC3 *":
    """itkSpatialObjectToImageFilterSO3IUC3_cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO3IUC3"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_cast(obj)

class itkSpatialObjectToImageFilterSO3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    \\sphinx \\sphinxexample{Core/SpatialObjects/ConvertSpacialObjectT
    oImage,Convert Spacial Object To Image} \\endsphinx

    C++ includes: itkSpatialObjectToImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSpatialObjectToImageFilterSO3IUS3_Pointer":
        """__New_orig__() -> itkSpatialObjectToImageFilterSO3IUS3_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSpatialObjectToImageFilterSO3IUS3_Pointer":
        """Clone(itkSpatialObjectToImageFilterSO3IUS3 self) -> itkSpatialObjectToImageFilterSO3IUS3_Pointer"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_Clone(self)


    def SetInput(self, *args) -> "void":
        """
        SetInput(itkSpatialObjectToImageFilterSO3IUS3 self, itkSpatialObject3 object)
        SetInput(itkSpatialObjectToImageFilterSO3IUS3 self, unsigned int arg0, itkSpatialObject3 object)
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetInput(self, *args)


    def GetInput(self, *args) -> "itkSpatialObject3 const *":
        """
        GetInput(itkSpatialObjectToImageFilterSO3IUS3 self) -> itkSpatialObject3
        GetInput(itkSpatialObjectToImageFilterSO3IUS3 self, unsigned int idx) -> itkSpatialObject3
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetInput(self, *args)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSpatialObjectToImageFilterSO3IUS3 self, itkVectorD3 spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO3IUS3 self, double const * spacing)
        SetSpacing(itkSpatialObjectToImageFilterSO3IUS3 self, float const * spacing)

        Spacing (size of a
        pixel) of the output image. The spacing is the geometric distance
        between image samples. It is stored internally as double, but may be
        set from float. See:  GetSpacing() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkSpatialObjectToImageFilterSO3IUS3 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetSpacing(self)


    def SetDirection(self, direction: 'itkMatrixD33') -> "void":
        """
        SetDirection(itkSpatialObjectToImageFilterSO3IUS3 self, itkMatrixD33 direction)

        Directions of the
        output image. The direction is for oriented images. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetDirection(self, direction)


    def GetDirection(self) -> "itkMatrixD33 const &":
        """GetDirection(itkSpatialObjectToImageFilterSO3IUS3 self) -> itkMatrixD33"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetDirection(self)


    def SetInsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetInsideValue(itkSpatialObjectToImageFilterSO3IUS3 self, unsigned short const _arg)

        Set/Get the value
        for pixels inside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "inside" value is changed to a non-null value, the
        output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned short":
        """GetInsideValue(itkSpatialObjectToImageFilterSO3IUS3 self) -> unsigned short"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetInsideValue(self)


    def SetOutsideValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutsideValue(itkSpatialObjectToImageFilterSO3IUS3 self, unsigned short const _arg)

        Set/Get the value
        for pixels outside the spatial object. By default, this filter will
        return an image that contains values from the spatial object specified
        as input. If this "outside" value is changed to a non-null value,
        the output produced by this filter will be a mask with inside/outside
        values specified by the user. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned short":
        """GetOutsideValue(itkSpatialObjectToImageFilterSO3IUS3 self) -> unsigned short"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetOutsideValue(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSpatialObjectToImageFilterSO3IUS3 self, itkPointD3 origin)
        SetOrigin(itkSpatialObjectToImageFilterSO3IUS3 self, double const * origin)
        SetOrigin(itkSpatialObjectToImageFilterSO3IUS3 self, float const * origin)

        The origin of the output
        image. The origin is the geometric coordinates of the index
        (0,0,...,0). It is stored internally as double but may be set from
        float. See:  GetOrigin() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkSpatialObjectToImageFilterSO3IUS3 self) -> double const *"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetOrigin(self)


    def SetChildrenDepth(self, _arg: 'unsigned int const') -> "void":
        """
        SetChildrenDepth(itkSpatialObjectToImageFilterSO3IUS3 self, unsigned int const _arg)

        The spatial object
        being transformed can be part of a hierarchy. How deep in the
        hierarchy should we descend in generating the image? A ChildrenDepth
        of 0 means to only include the object itself. 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetChildrenDepth(self, _arg)


    def GetChildrenDepth(self) -> "unsigned int":
        """GetChildrenDepth(itkSpatialObjectToImageFilterSO3IUS3 self) -> unsigned int"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetChildrenDepth(self)


    def SetSize(self, _arg: 'itkSize3') -> "void":
        """
        SetSize(itkSpatialObjectToImageFilterSO3IUS3 self, itkSize3 _arg)

        Set/Get Size 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetSize(self, _arg)


    def GetSize(self) -> "itkSize3":
        """GetSize(itkSpatialObjectToImageFilterSO3IUS3 self) -> itkSize3"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetSize(self)


    def SetUseObjectValue(self, _arg: 'bool const') -> "void":
        """
        SetUseObjectValue(itkSpatialObjectToImageFilterSO3IUS3 self, bool const _arg)

        If UseObjectValue
        is set to true, then the filter uses the ValueAtInWorldSpace()
        function instead of IsInsideInWorldSpace() 
        """
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetUseObjectValue(self, _arg)


    def GetUseObjectValue(self) -> "bool":
        """GetUseObjectValue(itkSpatialObjectToImageFilterSO3IUS3 self) -> bool"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetUseObjectValue(self)

    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO3IUS3

    def cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO3IUS3 *":
        """cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO3IUS3"""
        return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO3IUS3

        Create a new object of the class itkSpatialObjectToImageFilterSO3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSpatialObjectToImageFilterSO3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSpatialObjectToImageFilterSO3IUS3.Clone = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_Clone, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.SetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetInput, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.GetInput = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetInput, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.SetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetSpacing, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.GetSpacing = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetSpacing, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.SetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetDirection, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.GetDirection = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetDirection, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.SetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetInsideValue, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.GetInsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetInsideValue, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.SetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetOutsideValue, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.GetOutsideValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetOutsideValue, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.SetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetOrigin, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.GetOrigin = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetOrigin, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.SetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetChildrenDepth, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.GetChildrenDepth = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetChildrenDepth, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.SetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetSize, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.GetSize = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetSize, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.SetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetUseObjectValue, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3.GetUseObjectValue = new_instancemethod(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetUseObjectValue, None, itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3_swigregister = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_swigregister
itkSpatialObjectToImageFilterSO3IUS3_swigregister(itkSpatialObjectToImageFilterSO3IUS3)

def itkSpatialObjectToImageFilterSO3IUS3___New_orig__() -> "itkSpatialObjectToImageFilterSO3IUS3_Pointer":
    """itkSpatialObjectToImageFilterSO3IUS3___New_orig__() -> itkSpatialObjectToImageFilterSO3IUS3_Pointer"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3___New_orig__()

def itkSpatialObjectToImageFilterSO3IUS3_cast(obj: 'itkLightObject') -> "itkSpatialObjectToImageFilterSO3IUS3 *":
    """itkSpatialObjectToImageFilterSO3IUS3_cast(itkLightObject obj) -> itkSpatialObjectToImageFilterSO3IUS3"""
    return _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def spatial_object_to_image_filter(*args, **kwargs):
    """Procedural interface for SpatialObjectToImageFilter"""
    import itk
    instance = itk.SpatialObjectToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def spatial_object_to_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.SpatialObjectToImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.SpatialObjectToImageFilter.values()[0]
    else:
        filter_object = itk.SpatialObjectToImageFilter

    spatial_object_to_image_filter.__doc__ = filter_object.__doc__
    spatial_object_to_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    spatial_object_to_image_filter.__doc__ += "Available Keyword Arguments:\n"
    spatial_object_to_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



