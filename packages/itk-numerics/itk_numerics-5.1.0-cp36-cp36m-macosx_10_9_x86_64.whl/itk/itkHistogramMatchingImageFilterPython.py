# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkHistogramMatchingImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkHistogramMatchingImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkHistogramMatchingImageFilterPython
            return _itkHistogramMatchingImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkHistogramMatchingImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkHistogramMatchingImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkHistogramMatchingImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramPython
import itkSamplePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import itkFixedArrayPython
import ITKCommonBasePython
import itkVectorPython
import vnl_vector_refPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkPointPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkImageToImageFilterCommonPython

def itkHistogramMatchingImageFilterID3ID3_New():
  return itkHistogramMatchingImageFilterID3ID3.New()


def itkHistogramMatchingImageFilterID2ID2_New():
  return itkHistogramMatchingImageFilterID2ID2.New()


def itkHistogramMatchingImageFilterIF3IF3_New():
  return itkHistogramMatchingImageFilterIF3IF3.New()


def itkHistogramMatchingImageFilterIF2IF2_New():
  return itkHistogramMatchingImageFilterIF2IF2.New()

class itkHistogramMatchingImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    Normalize the grayscale values for a source image by matching the
    shape of the source image histogram to a reference histogram.

    HistogramMatchingImageFilter normalizes the grayscale values of a
    source image based on the grayscale values of either a reference image
    or a reference histogram. This filter uses a histogram matching
    technique where the histograms of the are matched only at a specified
    number of quantile values.

    This filter was originally designed to normalize MR images of the same
    MR protocol and same body part. The algorithm works best if background
    pixels are excluded from both the source and reference histograms. A
    simple background exclusion method is to exclude all pixels whose
    grayscale values are smaller than the mean grayscale value.
    ThresholdAtMeanIntensityOn() switches on this simple background
    exclusion method. With ThresholdAtMeanIntensityOn(), The reference
    histogram returned from this filter will expand the first and last bin
    bounds to include the minimum and maximum intensity values of the
    entire reference image, but only intensity values greater than the
    mean will be used to populate the histogram.

    The source image can be set via either SetInput() or SetSourceImage().
    The reference object used is selected with can be set via
    SetReferenceImage() or SetReferenceHistogram().

    SetNumberOfHistogramLevels() sets the number of bins used when
    creating histograms of the source and reference images.
    SetNumberOfMatchPoints() governs the number of quantile values to be
    matched.

    This filter assumes that both the source and reference are of the same
    type and that the input and output image type have the same number of
    dimension and have scalar pixel types.

    REFERENCE Laszlo G. Nyul, Jayaram K. Udupa, and Xuan Zhang, "New
    Variants of a Method of MRI Scale Standardization", IEEE Transactions
    on Medical Imaging, 19(2):143-150, 2000.

    C++ includes: itkHistogramMatchingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramMatchingImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkHistogramMatchingImageFilterID2ID2_Pointer"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramMatchingImageFilterID2ID2_Pointer":
        """Clone(itkHistogramMatchingImageFilterID2ID2 self) -> itkHistogramMatchingImageFilterID2ID2_Pointer"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_Clone(self)


    def SetSourceImage(self, _arg: 'itkImageD2') -> "void":
        """SetSourceImage(itkHistogramMatchingImageFilterID2ID2 self, itkImageD2 _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetSourceImage(self, _arg)


    def GetSourceImage(self) -> "itkImageD2 const *":
        """GetSourceImage(itkHistogramMatchingImageFilterID2ID2 self) -> itkImageD2"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetSourceImage(self)


    def SetReferenceImage(self, _arg: 'itkImageD2') -> "void":
        """SetReferenceImage(itkHistogramMatchingImageFilterID2ID2 self, itkImageD2 _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self) -> "itkImageD2 const *":
        """GetReferenceImage(itkHistogramMatchingImageFilterID2ID2 self) -> itkImageD2"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetReferenceImage(self)


    def SetReferenceHistogram(self, _arg: 'itkHistogramD') -> "void":
        """SetReferenceHistogram(itkHistogramMatchingImageFilterID2ID2 self, itkHistogramD _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetReferenceHistogram(self, _arg)


    def GetReferenceHistogram(self) -> "itkHistogramD const *":
        """GetReferenceHistogram(itkHistogramMatchingImageFilterID2ID2 self) -> itkHistogramD"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetReferenceHistogram(self)


    def SetNumberOfHistogramLevels(self, _arg: 'unsigned long const') -> "void":
        """
        SetNumberOfHistogramLevels(itkHistogramMatchingImageFilterID2ID2 self, unsigned long const _arg)

        Set/Get
        the number of histogram levels used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetNumberOfHistogramLevels(self, _arg)


    def GetNumberOfHistogramLevels(self) -> "unsigned long":
        """GetNumberOfHistogramLevels(itkHistogramMatchingImageFilterID2ID2 self) -> unsigned long"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetNumberOfHistogramLevels(self)


    def SetNumberOfMatchPoints(self, _arg: 'unsigned long const') -> "void":
        """
        SetNumberOfMatchPoints(itkHistogramMatchingImageFilterID2ID2 self, unsigned long const _arg)

        Set/Get the
        number of match points used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetNumberOfMatchPoints(self, _arg)


    def GetNumberOfMatchPoints(self) -> "unsigned long":
        """GetNumberOfMatchPoints(itkHistogramMatchingImageFilterID2ID2 self) -> unsigned long"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetNumberOfMatchPoints(self)


    def SetThresholdAtMeanIntensity(self, _arg: 'bool const') -> "void":
        """
        SetThresholdAtMeanIntensity(itkHistogramMatchingImageFilterID2ID2 self, bool const _arg)

        Set/Get
        the threshold at mean intensity flag. If true, only source (reference)
        pixels which are greater than the mean source (reference) intensity is
        used in the histogram matching. If false, all pixels are used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetThresholdAtMeanIntensity(self, _arg)


    def GetThresholdAtMeanIntensity(self) -> "bool":
        """GetThresholdAtMeanIntensity(itkHistogramMatchingImageFilterID2ID2 self) -> bool"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetThresholdAtMeanIntensity(self)


    def ThresholdAtMeanIntensityOn(self) -> "void":
        """ThresholdAtMeanIntensityOn(itkHistogramMatchingImageFilterID2ID2 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_ThresholdAtMeanIntensityOn(self)


    def ThresholdAtMeanIntensityOff(self) -> "void":
        """ThresholdAtMeanIntensityOff(itkHistogramMatchingImageFilterID2ID2 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_ThresholdAtMeanIntensityOff(self)


    def SetGenerateReferenceHistogramFromImage(self, _arg: 'bool const') -> "void":
        """
        SetGenerateReferenceHistogramFromImage(itkHistogramMatchingImageFilterID2ID2 self, bool const _arg)

        Set/Get if the
        reference histogram is regenerated from the supplied ReferenceImage
        (true) or supplied directly as in input argument (false). If
        SetReferenceHistogram(myhistogram) is used, then
        GenerateReferenceHistogramFromImageOff() should almost certainly be
        used. If both SetReferenceHistogram(myhistogram) and
        SetReferenceImage(myreferenceimage) are set, only the input object
        indicated by GenerateReferenceHistogramFromImage choice will be used
        and the other object will be ignored. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetGenerateReferenceHistogramFromImage(self, _arg)


    def GetGenerateReferenceHistogramFromImage(self) -> "bool":
        """GetGenerateReferenceHistogramFromImage(itkHistogramMatchingImageFilterID2ID2 self) -> bool"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetGenerateReferenceHistogramFromImage(self)


    def GenerateReferenceHistogramFromImageOn(self) -> "void":
        """GenerateReferenceHistogramFromImageOn(itkHistogramMatchingImageFilterID2ID2 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GenerateReferenceHistogramFromImageOn(self)


    def GenerateReferenceHistogramFromImageOff(self) -> "void":
        """GenerateReferenceHistogramFromImageOff(itkHistogramMatchingImageFilterID2ID2 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GenerateReferenceHistogramFromImageOff(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkHistogramMatchingImageFilterID2ID2 self)

        This
        filter requires all of the input to be in the buffer. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GenerateInputRequestedRegion(self)


    def GetModifiableSourceHistogram(self) -> "itkHistogramD *":
        """GetModifiableSourceHistogram(itkHistogramMatchingImageFilterID2ID2 self) -> itkHistogramD"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetModifiableSourceHistogram(self)


    def GetSourceHistogram(self, *args) -> "itkHistogramD *":
        """
        GetSourceHistogram(itkHistogramMatchingImageFilterID2ID2 self) -> itkHistogramD
        GetSourceHistogram(itkHistogramMatchingImageFilterID2ID2 self) -> itkHistogramD
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetSourceHistogram(self, *args)


    def GetModifiableOutputHistogram(self) -> "itkHistogramD *":
        """GetModifiableOutputHistogram(itkHistogramMatchingImageFilterID2ID2 self) -> itkHistogramD"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetModifiableOutputHistogram(self)


    def GetOutputHistogram(self, *args) -> "itkHistogramD *":
        """
        GetOutputHistogram(itkHistogramMatchingImageFilterID2ID2 self) -> itkHistogramD
        GetOutputHistogram(itkHistogramMatchingImageFilterID2ID2 self) -> itkHistogramD
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetOutputHistogram(self, *args)

    IntConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_IntConvertibleToInputCheck
    SameDimensionCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SameDimensionCheck
    DoubleConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_DoubleConvertibleToInputCheck
    DoubleConvertibleToOutputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_DoubleConvertibleToOutputCheck
    InputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_InputConvertibleToDoubleCheck
    OutputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_OutputConvertibleToDoubleCheck
    SameTypeCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SameTypeCheck
    __swig_destroy__ = _itkHistogramMatchingImageFilterPython.delete_itkHistogramMatchingImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkHistogramMatchingImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkHistogramMatchingImageFilterID2ID2"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramMatchingImageFilterID2ID2

        Create a new object of the class itkHistogramMatchingImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramMatchingImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramMatchingImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramMatchingImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramMatchingImageFilterID2ID2.Clone = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_Clone, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.SetSourceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetSourceImage, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetSourceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetSourceImage, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.SetReferenceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetReferenceImage, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetReferenceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetReferenceImage, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.SetReferenceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetReferenceHistogram, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetReferenceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetReferenceHistogram, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.SetNumberOfHistogramLevels = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetNumberOfHistogramLevels, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetNumberOfHistogramLevels = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetNumberOfHistogramLevels, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.SetNumberOfMatchPoints = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetNumberOfMatchPoints, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetNumberOfMatchPoints = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetNumberOfMatchPoints, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.SetThresholdAtMeanIntensity = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetThresholdAtMeanIntensity, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetThresholdAtMeanIntensity = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetThresholdAtMeanIntensity, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.ThresholdAtMeanIntensityOn = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_ThresholdAtMeanIntensityOn, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.ThresholdAtMeanIntensityOff = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_ThresholdAtMeanIntensityOff, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.SetGenerateReferenceHistogramFromImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetGenerateReferenceHistogramFromImage, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetGenerateReferenceHistogramFromImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetGenerateReferenceHistogramFromImage, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GenerateReferenceHistogramFromImageOn = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GenerateReferenceHistogramFromImageOn, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GenerateReferenceHistogramFromImageOff = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GenerateReferenceHistogramFromImageOff, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GenerateInputRequestedRegion = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GenerateInputRequestedRegion, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetModifiableSourceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetModifiableSourceHistogram, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetSourceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetSourceHistogram, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetModifiableOutputHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetModifiableOutputHistogram, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2.GetOutputHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetOutputHistogram, None, itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2_swigregister = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_swigregister
itkHistogramMatchingImageFilterID2ID2_swigregister(itkHistogramMatchingImageFilterID2ID2)

def itkHistogramMatchingImageFilterID2ID2___New_orig__() -> "itkHistogramMatchingImageFilterID2ID2_Pointer":
    """itkHistogramMatchingImageFilterID2ID2___New_orig__() -> itkHistogramMatchingImageFilterID2ID2_Pointer"""
    return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2___New_orig__()

def itkHistogramMatchingImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkHistogramMatchingImageFilterID2ID2 *":
    """itkHistogramMatchingImageFilterID2ID2_cast(itkLightObject obj) -> itkHistogramMatchingImageFilterID2ID2"""
    return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_cast(obj)

class itkHistogramMatchingImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    Normalize the grayscale values for a source image by matching the
    shape of the source image histogram to a reference histogram.

    HistogramMatchingImageFilter normalizes the grayscale values of a
    source image based on the grayscale values of either a reference image
    or a reference histogram. This filter uses a histogram matching
    technique where the histograms of the are matched only at a specified
    number of quantile values.

    This filter was originally designed to normalize MR images of the same
    MR protocol and same body part. The algorithm works best if background
    pixels are excluded from both the source and reference histograms. A
    simple background exclusion method is to exclude all pixels whose
    grayscale values are smaller than the mean grayscale value.
    ThresholdAtMeanIntensityOn() switches on this simple background
    exclusion method. With ThresholdAtMeanIntensityOn(), The reference
    histogram returned from this filter will expand the first and last bin
    bounds to include the minimum and maximum intensity values of the
    entire reference image, but only intensity values greater than the
    mean will be used to populate the histogram.

    The source image can be set via either SetInput() or SetSourceImage().
    The reference object used is selected with can be set via
    SetReferenceImage() or SetReferenceHistogram().

    SetNumberOfHistogramLevels() sets the number of bins used when
    creating histograms of the source and reference images.
    SetNumberOfMatchPoints() governs the number of quantile values to be
    matched.

    This filter assumes that both the source and reference are of the same
    type and that the input and output image type have the same number of
    dimension and have scalar pixel types.

    REFERENCE Laszlo G. Nyul, Jayaram K. Udupa, and Xuan Zhang, "New
    Variants of a Method of MRI Scale Standardization", IEEE Transactions
    on Medical Imaging, 19(2):143-150, 2000.

    C++ includes: itkHistogramMatchingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramMatchingImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkHistogramMatchingImageFilterID3ID3_Pointer"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramMatchingImageFilterID3ID3_Pointer":
        """Clone(itkHistogramMatchingImageFilterID3ID3 self) -> itkHistogramMatchingImageFilterID3ID3_Pointer"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_Clone(self)


    def SetSourceImage(self, _arg: 'itkImageD3') -> "void":
        """SetSourceImage(itkHistogramMatchingImageFilterID3ID3 self, itkImageD3 _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetSourceImage(self, _arg)


    def GetSourceImage(self) -> "itkImageD3 const *":
        """GetSourceImage(itkHistogramMatchingImageFilterID3ID3 self) -> itkImageD3"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetSourceImage(self)


    def SetReferenceImage(self, _arg: 'itkImageD3') -> "void":
        """SetReferenceImage(itkHistogramMatchingImageFilterID3ID3 self, itkImageD3 _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self) -> "itkImageD3 const *":
        """GetReferenceImage(itkHistogramMatchingImageFilterID3ID3 self) -> itkImageD3"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetReferenceImage(self)


    def SetReferenceHistogram(self, _arg: 'itkHistogramD') -> "void":
        """SetReferenceHistogram(itkHistogramMatchingImageFilterID3ID3 self, itkHistogramD _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetReferenceHistogram(self, _arg)


    def GetReferenceHistogram(self) -> "itkHistogramD const *":
        """GetReferenceHistogram(itkHistogramMatchingImageFilterID3ID3 self) -> itkHistogramD"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetReferenceHistogram(self)


    def SetNumberOfHistogramLevels(self, _arg: 'unsigned long const') -> "void":
        """
        SetNumberOfHistogramLevels(itkHistogramMatchingImageFilterID3ID3 self, unsigned long const _arg)

        Set/Get
        the number of histogram levels used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetNumberOfHistogramLevels(self, _arg)


    def GetNumberOfHistogramLevels(self) -> "unsigned long":
        """GetNumberOfHistogramLevels(itkHistogramMatchingImageFilterID3ID3 self) -> unsigned long"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetNumberOfHistogramLevels(self)


    def SetNumberOfMatchPoints(self, _arg: 'unsigned long const') -> "void":
        """
        SetNumberOfMatchPoints(itkHistogramMatchingImageFilterID3ID3 self, unsigned long const _arg)

        Set/Get the
        number of match points used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetNumberOfMatchPoints(self, _arg)


    def GetNumberOfMatchPoints(self) -> "unsigned long":
        """GetNumberOfMatchPoints(itkHistogramMatchingImageFilterID3ID3 self) -> unsigned long"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetNumberOfMatchPoints(self)


    def SetThresholdAtMeanIntensity(self, _arg: 'bool const') -> "void":
        """
        SetThresholdAtMeanIntensity(itkHistogramMatchingImageFilterID3ID3 self, bool const _arg)

        Set/Get
        the threshold at mean intensity flag. If true, only source (reference)
        pixels which are greater than the mean source (reference) intensity is
        used in the histogram matching. If false, all pixels are used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetThresholdAtMeanIntensity(self, _arg)


    def GetThresholdAtMeanIntensity(self) -> "bool":
        """GetThresholdAtMeanIntensity(itkHistogramMatchingImageFilterID3ID3 self) -> bool"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetThresholdAtMeanIntensity(self)


    def ThresholdAtMeanIntensityOn(self) -> "void":
        """ThresholdAtMeanIntensityOn(itkHistogramMatchingImageFilterID3ID3 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_ThresholdAtMeanIntensityOn(self)


    def ThresholdAtMeanIntensityOff(self) -> "void":
        """ThresholdAtMeanIntensityOff(itkHistogramMatchingImageFilterID3ID3 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_ThresholdAtMeanIntensityOff(self)


    def SetGenerateReferenceHistogramFromImage(self, _arg: 'bool const') -> "void":
        """
        SetGenerateReferenceHistogramFromImage(itkHistogramMatchingImageFilterID3ID3 self, bool const _arg)

        Set/Get if the
        reference histogram is regenerated from the supplied ReferenceImage
        (true) or supplied directly as in input argument (false). If
        SetReferenceHistogram(myhistogram) is used, then
        GenerateReferenceHistogramFromImageOff() should almost certainly be
        used. If both SetReferenceHistogram(myhistogram) and
        SetReferenceImage(myreferenceimage) are set, only the input object
        indicated by GenerateReferenceHistogramFromImage choice will be used
        and the other object will be ignored. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetGenerateReferenceHistogramFromImage(self, _arg)


    def GetGenerateReferenceHistogramFromImage(self) -> "bool":
        """GetGenerateReferenceHistogramFromImage(itkHistogramMatchingImageFilterID3ID3 self) -> bool"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetGenerateReferenceHistogramFromImage(self)


    def GenerateReferenceHistogramFromImageOn(self) -> "void":
        """GenerateReferenceHistogramFromImageOn(itkHistogramMatchingImageFilterID3ID3 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GenerateReferenceHistogramFromImageOn(self)


    def GenerateReferenceHistogramFromImageOff(self) -> "void":
        """GenerateReferenceHistogramFromImageOff(itkHistogramMatchingImageFilterID3ID3 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GenerateReferenceHistogramFromImageOff(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkHistogramMatchingImageFilterID3ID3 self)

        This
        filter requires all of the input to be in the buffer. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GenerateInputRequestedRegion(self)


    def GetModifiableSourceHistogram(self) -> "itkHistogramD *":
        """GetModifiableSourceHistogram(itkHistogramMatchingImageFilterID3ID3 self) -> itkHistogramD"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetModifiableSourceHistogram(self)


    def GetSourceHistogram(self, *args) -> "itkHistogramD *":
        """
        GetSourceHistogram(itkHistogramMatchingImageFilterID3ID3 self) -> itkHistogramD
        GetSourceHistogram(itkHistogramMatchingImageFilterID3ID3 self) -> itkHistogramD
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetSourceHistogram(self, *args)


    def GetModifiableOutputHistogram(self) -> "itkHistogramD *":
        """GetModifiableOutputHistogram(itkHistogramMatchingImageFilterID3ID3 self) -> itkHistogramD"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetModifiableOutputHistogram(self)


    def GetOutputHistogram(self, *args) -> "itkHistogramD *":
        """
        GetOutputHistogram(itkHistogramMatchingImageFilterID3ID3 self) -> itkHistogramD
        GetOutputHistogram(itkHistogramMatchingImageFilterID3ID3 self) -> itkHistogramD
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetOutputHistogram(self, *args)

    IntConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_IntConvertibleToInputCheck
    SameDimensionCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SameDimensionCheck
    DoubleConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_DoubleConvertibleToInputCheck
    DoubleConvertibleToOutputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_DoubleConvertibleToOutputCheck
    InputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_InputConvertibleToDoubleCheck
    OutputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_OutputConvertibleToDoubleCheck
    SameTypeCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SameTypeCheck
    __swig_destroy__ = _itkHistogramMatchingImageFilterPython.delete_itkHistogramMatchingImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkHistogramMatchingImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkHistogramMatchingImageFilterID3ID3"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramMatchingImageFilterID3ID3

        Create a new object of the class itkHistogramMatchingImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramMatchingImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramMatchingImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramMatchingImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramMatchingImageFilterID3ID3.Clone = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_Clone, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.SetSourceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetSourceImage, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetSourceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetSourceImage, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.SetReferenceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetReferenceImage, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetReferenceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetReferenceImage, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.SetReferenceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetReferenceHistogram, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetReferenceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetReferenceHistogram, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.SetNumberOfHistogramLevels = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetNumberOfHistogramLevels, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetNumberOfHistogramLevels = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetNumberOfHistogramLevels, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.SetNumberOfMatchPoints = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetNumberOfMatchPoints, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetNumberOfMatchPoints = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetNumberOfMatchPoints, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.SetThresholdAtMeanIntensity = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetThresholdAtMeanIntensity, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetThresholdAtMeanIntensity = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetThresholdAtMeanIntensity, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.ThresholdAtMeanIntensityOn = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_ThresholdAtMeanIntensityOn, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.ThresholdAtMeanIntensityOff = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_ThresholdAtMeanIntensityOff, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.SetGenerateReferenceHistogramFromImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetGenerateReferenceHistogramFromImage, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetGenerateReferenceHistogramFromImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetGenerateReferenceHistogramFromImage, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GenerateReferenceHistogramFromImageOn = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GenerateReferenceHistogramFromImageOn, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GenerateReferenceHistogramFromImageOff = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GenerateReferenceHistogramFromImageOff, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GenerateInputRequestedRegion = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GenerateInputRequestedRegion, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetModifiableSourceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetModifiableSourceHistogram, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetSourceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetSourceHistogram, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetModifiableOutputHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetModifiableOutputHistogram, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3.GetOutputHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetOutputHistogram, None, itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3_swigregister = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_swigregister
itkHistogramMatchingImageFilterID3ID3_swigregister(itkHistogramMatchingImageFilterID3ID3)

def itkHistogramMatchingImageFilterID3ID3___New_orig__() -> "itkHistogramMatchingImageFilterID3ID3_Pointer":
    """itkHistogramMatchingImageFilterID3ID3___New_orig__() -> itkHistogramMatchingImageFilterID3ID3_Pointer"""
    return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3___New_orig__()

def itkHistogramMatchingImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkHistogramMatchingImageFilterID3ID3 *":
    """itkHistogramMatchingImageFilterID3ID3_cast(itkLightObject obj) -> itkHistogramMatchingImageFilterID3ID3"""
    return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_cast(obj)

class itkHistogramMatchingImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Normalize the grayscale values for a source image by matching the
    shape of the source image histogram to a reference histogram.

    HistogramMatchingImageFilter normalizes the grayscale values of a
    source image based on the grayscale values of either a reference image
    or a reference histogram. This filter uses a histogram matching
    technique where the histograms of the are matched only at a specified
    number of quantile values.

    This filter was originally designed to normalize MR images of the same
    MR protocol and same body part. The algorithm works best if background
    pixels are excluded from both the source and reference histograms. A
    simple background exclusion method is to exclude all pixels whose
    grayscale values are smaller than the mean grayscale value.
    ThresholdAtMeanIntensityOn() switches on this simple background
    exclusion method. With ThresholdAtMeanIntensityOn(), The reference
    histogram returned from this filter will expand the first and last bin
    bounds to include the minimum and maximum intensity values of the
    entire reference image, but only intensity values greater than the
    mean will be used to populate the histogram.

    The source image can be set via either SetInput() or SetSourceImage().
    The reference object used is selected with can be set via
    SetReferenceImage() or SetReferenceHistogram().

    SetNumberOfHistogramLevels() sets the number of bins used when
    creating histograms of the source and reference images.
    SetNumberOfMatchPoints() governs the number of quantile values to be
    matched.

    This filter assumes that both the source and reference are of the same
    type and that the input and output image type have the same number of
    dimension and have scalar pixel types.

    REFERENCE Laszlo G. Nyul, Jayaram K. Udupa, and Xuan Zhang, "New
    Variants of a Method of MRI Scale Standardization", IEEE Transactions
    on Medical Imaging, 19(2):143-150, 2000.

    C++ includes: itkHistogramMatchingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramMatchingImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkHistogramMatchingImageFilterIF2IF2_Pointer"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramMatchingImageFilterIF2IF2_Pointer":
        """Clone(itkHistogramMatchingImageFilterIF2IF2 self) -> itkHistogramMatchingImageFilterIF2IF2_Pointer"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_Clone(self)


    def SetSourceImage(self, _arg: 'itkImageF2') -> "void":
        """SetSourceImage(itkHistogramMatchingImageFilterIF2IF2 self, itkImageF2 _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetSourceImage(self, _arg)


    def GetSourceImage(self) -> "itkImageF2 const *":
        """GetSourceImage(itkHistogramMatchingImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetSourceImage(self)


    def SetReferenceImage(self, _arg: 'itkImageF2') -> "void":
        """SetReferenceImage(itkHistogramMatchingImageFilterIF2IF2 self, itkImageF2 _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetReferenceImage(self, _arg)


    def GetReferenceImage(self) -> "itkImageF2 const *":
        """GetReferenceImage(itkHistogramMatchingImageFilterIF2IF2 self) -> itkImageF2"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetReferenceImage(self)


    def SetReferenceHistogram(self, _arg: 'itkHistogramF') -> "void":
        """SetReferenceHistogram(itkHistogramMatchingImageFilterIF2IF2 self, itkHistogramF _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetReferenceHistogram(self, _arg)


    def GetReferenceHistogram(self) -> "itkHistogramF const *":
        """GetReferenceHistogram(itkHistogramMatchingImageFilterIF2IF2 self) -> itkHistogramF"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetReferenceHistogram(self)


    def SetNumberOfHistogramLevels(self, _arg: 'unsigned long const') -> "void":
        """
        SetNumberOfHistogramLevels(itkHistogramMatchingImageFilterIF2IF2 self, unsigned long const _arg)

        Set/Get
        the number of histogram levels used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetNumberOfHistogramLevels(self, _arg)


    def GetNumberOfHistogramLevels(self) -> "unsigned long":
        """GetNumberOfHistogramLevels(itkHistogramMatchingImageFilterIF2IF2 self) -> unsigned long"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetNumberOfHistogramLevels(self)


    def SetNumberOfMatchPoints(self, _arg: 'unsigned long const') -> "void":
        """
        SetNumberOfMatchPoints(itkHistogramMatchingImageFilterIF2IF2 self, unsigned long const _arg)

        Set/Get the
        number of match points used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetNumberOfMatchPoints(self, _arg)


    def GetNumberOfMatchPoints(self) -> "unsigned long":
        """GetNumberOfMatchPoints(itkHistogramMatchingImageFilterIF2IF2 self) -> unsigned long"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetNumberOfMatchPoints(self)


    def SetThresholdAtMeanIntensity(self, _arg: 'bool const') -> "void":
        """
        SetThresholdAtMeanIntensity(itkHistogramMatchingImageFilterIF2IF2 self, bool const _arg)

        Set/Get
        the threshold at mean intensity flag. If true, only source (reference)
        pixels which are greater than the mean source (reference) intensity is
        used in the histogram matching. If false, all pixels are used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetThresholdAtMeanIntensity(self, _arg)


    def GetThresholdAtMeanIntensity(self) -> "bool":
        """GetThresholdAtMeanIntensity(itkHistogramMatchingImageFilterIF2IF2 self) -> bool"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetThresholdAtMeanIntensity(self)


    def ThresholdAtMeanIntensityOn(self) -> "void":
        """ThresholdAtMeanIntensityOn(itkHistogramMatchingImageFilterIF2IF2 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_ThresholdAtMeanIntensityOn(self)


    def ThresholdAtMeanIntensityOff(self) -> "void":
        """ThresholdAtMeanIntensityOff(itkHistogramMatchingImageFilterIF2IF2 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_ThresholdAtMeanIntensityOff(self)


    def SetGenerateReferenceHistogramFromImage(self, _arg: 'bool const') -> "void":
        """
        SetGenerateReferenceHistogramFromImage(itkHistogramMatchingImageFilterIF2IF2 self, bool const _arg)

        Set/Get if the
        reference histogram is regenerated from the supplied ReferenceImage
        (true) or supplied directly as in input argument (false). If
        SetReferenceHistogram(myhistogram) is used, then
        GenerateReferenceHistogramFromImageOff() should almost certainly be
        used. If both SetReferenceHistogram(myhistogram) and
        SetReferenceImage(myreferenceimage) are set, only the input object
        indicated by GenerateReferenceHistogramFromImage choice will be used
        and the other object will be ignored. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetGenerateReferenceHistogramFromImage(self, _arg)


    def GetGenerateReferenceHistogramFromImage(self) -> "bool":
        """GetGenerateReferenceHistogramFromImage(itkHistogramMatchingImageFilterIF2IF2 self) -> bool"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetGenerateReferenceHistogramFromImage(self)


    def GenerateReferenceHistogramFromImageOn(self) -> "void":
        """GenerateReferenceHistogramFromImageOn(itkHistogramMatchingImageFilterIF2IF2 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GenerateReferenceHistogramFromImageOn(self)


    def GenerateReferenceHistogramFromImageOff(self) -> "void":
        """GenerateReferenceHistogramFromImageOff(itkHistogramMatchingImageFilterIF2IF2 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GenerateReferenceHistogramFromImageOff(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkHistogramMatchingImageFilterIF2IF2 self)

        This
        filter requires all of the input to be in the buffer. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GenerateInputRequestedRegion(self)


    def GetModifiableSourceHistogram(self) -> "itkHistogramF *":
        """GetModifiableSourceHistogram(itkHistogramMatchingImageFilterIF2IF2 self) -> itkHistogramF"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetModifiableSourceHistogram(self)


    def GetSourceHistogram(self, *args) -> "itkHistogramF *":
        """
        GetSourceHistogram(itkHistogramMatchingImageFilterIF2IF2 self) -> itkHistogramF
        GetSourceHistogram(itkHistogramMatchingImageFilterIF2IF2 self) -> itkHistogramF
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetSourceHistogram(self, *args)


    def GetModifiableOutputHistogram(self) -> "itkHistogramF *":
        """GetModifiableOutputHistogram(itkHistogramMatchingImageFilterIF2IF2 self) -> itkHistogramF"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetModifiableOutputHistogram(self)


    def GetOutputHistogram(self, *args) -> "itkHistogramF *":
        """
        GetOutputHistogram(itkHistogramMatchingImageFilterIF2IF2 self) -> itkHistogramF
        GetOutputHistogram(itkHistogramMatchingImageFilterIF2IF2 self) -> itkHistogramF
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetOutputHistogram(self, *args)

    IntConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_IntConvertibleToInputCheck
    SameDimensionCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SameDimensionCheck
    DoubleConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_DoubleConvertibleToInputCheck
    DoubleConvertibleToOutputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    InputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_InputConvertibleToDoubleCheck
    OutputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_OutputConvertibleToDoubleCheck
    SameTypeCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SameTypeCheck
    __swig_destroy__ = _itkHistogramMatchingImageFilterPython.delete_itkHistogramMatchingImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkHistogramMatchingImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkHistogramMatchingImageFilterIF2IF2"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramMatchingImageFilterIF2IF2

        Create a new object of the class itkHistogramMatchingImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramMatchingImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramMatchingImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramMatchingImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramMatchingImageFilterIF2IF2.Clone = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_Clone, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.SetSourceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetSourceImage, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetSourceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetSourceImage, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.SetReferenceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetReferenceImage, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetReferenceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetReferenceImage, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.SetReferenceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetReferenceHistogram, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetReferenceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetReferenceHistogram, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.SetNumberOfHistogramLevels = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetNumberOfHistogramLevels, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetNumberOfHistogramLevels = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetNumberOfHistogramLevels, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.SetNumberOfMatchPoints = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetNumberOfMatchPoints, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetNumberOfMatchPoints = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetNumberOfMatchPoints, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.SetThresholdAtMeanIntensity = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetThresholdAtMeanIntensity, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetThresholdAtMeanIntensity = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetThresholdAtMeanIntensity, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.ThresholdAtMeanIntensityOn = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_ThresholdAtMeanIntensityOn, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.ThresholdAtMeanIntensityOff = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_ThresholdAtMeanIntensityOff, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.SetGenerateReferenceHistogramFromImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetGenerateReferenceHistogramFromImage, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetGenerateReferenceHistogramFromImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetGenerateReferenceHistogramFromImage, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GenerateReferenceHistogramFromImageOn = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GenerateReferenceHistogramFromImageOn, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GenerateReferenceHistogramFromImageOff = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GenerateReferenceHistogramFromImageOff, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GenerateInputRequestedRegion = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GenerateInputRequestedRegion, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetModifiableSourceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetModifiableSourceHistogram, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetSourceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetSourceHistogram, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetModifiableOutputHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetModifiableOutputHistogram, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2.GetOutputHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetOutputHistogram, None, itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2_swigregister = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_swigregister
itkHistogramMatchingImageFilterIF2IF2_swigregister(itkHistogramMatchingImageFilterIF2IF2)

def itkHistogramMatchingImageFilterIF2IF2___New_orig__() -> "itkHistogramMatchingImageFilterIF2IF2_Pointer":
    """itkHistogramMatchingImageFilterIF2IF2___New_orig__() -> itkHistogramMatchingImageFilterIF2IF2_Pointer"""
    return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2___New_orig__()

def itkHistogramMatchingImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkHistogramMatchingImageFilterIF2IF2 *":
    """itkHistogramMatchingImageFilterIF2IF2_cast(itkLightObject obj) -> itkHistogramMatchingImageFilterIF2IF2"""
    return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_cast(obj)

class itkHistogramMatchingImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Normalize the grayscale values for a source image by matching the
    shape of the source image histogram to a reference histogram.

    HistogramMatchingImageFilter normalizes the grayscale values of a
    source image based on the grayscale values of either a reference image
    or a reference histogram. This filter uses a histogram matching
    technique where the histograms of the are matched only at a specified
    number of quantile values.

    This filter was originally designed to normalize MR images of the same
    MR protocol and same body part. The algorithm works best if background
    pixels are excluded from both the source and reference histograms. A
    simple background exclusion method is to exclude all pixels whose
    grayscale values are smaller than the mean grayscale value.
    ThresholdAtMeanIntensityOn() switches on this simple background
    exclusion method. With ThresholdAtMeanIntensityOn(), The reference
    histogram returned from this filter will expand the first and last bin
    bounds to include the minimum and maximum intensity values of the
    entire reference image, but only intensity values greater than the
    mean will be used to populate the histogram.

    The source image can be set via either SetInput() or SetSourceImage().
    The reference object used is selected with can be set via
    SetReferenceImage() or SetReferenceHistogram().

    SetNumberOfHistogramLevels() sets the number of bins used when
    creating histograms of the source and reference images.
    SetNumberOfMatchPoints() governs the number of quantile values to be
    matched.

    This filter assumes that both the source and reference are of the same
    type and that the input and output image type have the same number of
    dimension and have scalar pixel types.

    REFERENCE Laszlo G. Nyul, Jayaram K. Udupa, and Xuan Zhang, "New
    Variants of a Method of MRI Scale Standardization", IEEE Transactions
    on Medical Imaging, 19(2):143-150, 2000.

    C++ includes: itkHistogramMatchingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHistogramMatchingImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkHistogramMatchingImageFilterIF3IF3_Pointer"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHistogramMatchingImageFilterIF3IF3_Pointer":
        """Clone(itkHistogramMatchingImageFilterIF3IF3 self) -> itkHistogramMatchingImageFilterIF3IF3_Pointer"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_Clone(self)


    def SetSourceImage(self, _arg: 'itkImageF3') -> "void":
        """SetSourceImage(itkHistogramMatchingImageFilterIF3IF3 self, itkImageF3 _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetSourceImage(self, _arg)


    def GetSourceImage(self) -> "itkImageF3 const *":
        """GetSourceImage(itkHistogramMatchingImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetSourceImage(self)


    def SetReferenceImage(self, _arg: 'itkImageF3') -> "void":
        """SetReferenceImage(itkHistogramMatchingImageFilterIF3IF3 self, itkImageF3 _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetReferenceImage(self, _arg)


    def GetReferenceImage(self) -> "itkImageF3 const *":
        """GetReferenceImage(itkHistogramMatchingImageFilterIF3IF3 self) -> itkImageF3"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetReferenceImage(self)


    def SetReferenceHistogram(self, _arg: 'itkHistogramF') -> "void":
        """SetReferenceHistogram(itkHistogramMatchingImageFilterIF3IF3 self, itkHistogramF _arg)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetReferenceHistogram(self, _arg)


    def GetReferenceHistogram(self) -> "itkHistogramF const *":
        """GetReferenceHistogram(itkHistogramMatchingImageFilterIF3IF3 self) -> itkHistogramF"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetReferenceHistogram(self)


    def SetNumberOfHistogramLevels(self, _arg: 'unsigned long const') -> "void":
        """
        SetNumberOfHistogramLevels(itkHistogramMatchingImageFilterIF3IF3 self, unsigned long const _arg)

        Set/Get
        the number of histogram levels used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetNumberOfHistogramLevels(self, _arg)


    def GetNumberOfHistogramLevels(self) -> "unsigned long":
        """GetNumberOfHistogramLevels(itkHistogramMatchingImageFilterIF3IF3 self) -> unsigned long"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetNumberOfHistogramLevels(self)


    def SetNumberOfMatchPoints(self, _arg: 'unsigned long const') -> "void":
        """
        SetNumberOfMatchPoints(itkHistogramMatchingImageFilterIF3IF3 self, unsigned long const _arg)

        Set/Get the
        number of match points used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetNumberOfMatchPoints(self, _arg)


    def GetNumberOfMatchPoints(self) -> "unsigned long":
        """GetNumberOfMatchPoints(itkHistogramMatchingImageFilterIF3IF3 self) -> unsigned long"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetNumberOfMatchPoints(self)


    def SetThresholdAtMeanIntensity(self, _arg: 'bool const') -> "void":
        """
        SetThresholdAtMeanIntensity(itkHistogramMatchingImageFilterIF3IF3 self, bool const _arg)

        Set/Get
        the threshold at mean intensity flag. If true, only source (reference)
        pixels which are greater than the mean source (reference) intensity is
        used in the histogram matching. If false, all pixels are used. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetThresholdAtMeanIntensity(self, _arg)


    def GetThresholdAtMeanIntensity(self) -> "bool":
        """GetThresholdAtMeanIntensity(itkHistogramMatchingImageFilterIF3IF3 self) -> bool"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetThresholdAtMeanIntensity(self)


    def ThresholdAtMeanIntensityOn(self) -> "void":
        """ThresholdAtMeanIntensityOn(itkHistogramMatchingImageFilterIF3IF3 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_ThresholdAtMeanIntensityOn(self)


    def ThresholdAtMeanIntensityOff(self) -> "void":
        """ThresholdAtMeanIntensityOff(itkHistogramMatchingImageFilterIF3IF3 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_ThresholdAtMeanIntensityOff(self)


    def SetGenerateReferenceHistogramFromImage(self, _arg: 'bool const') -> "void":
        """
        SetGenerateReferenceHistogramFromImage(itkHistogramMatchingImageFilterIF3IF3 self, bool const _arg)

        Set/Get if the
        reference histogram is regenerated from the supplied ReferenceImage
        (true) or supplied directly as in input argument (false). If
        SetReferenceHistogram(myhistogram) is used, then
        GenerateReferenceHistogramFromImageOff() should almost certainly be
        used. If both SetReferenceHistogram(myhistogram) and
        SetReferenceImage(myreferenceimage) are set, only the input object
        indicated by GenerateReferenceHistogramFromImage choice will be used
        and the other object will be ignored. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetGenerateReferenceHistogramFromImage(self, _arg)


    def GetGenerateReferenceHistogramFromImage(self) -> "bool":
        """GetGenerateReferenceHistogramFromImage(itkHistogramMatchingImageFilterIF3IF3 self) -> bool"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetGenerateReferenceHistogramFromImage(self)


    def GenerateReferenceHistogramFromImageOn(self) -> "void":
        """GenerateReferenceHistogramFromImageOn(itkHistogramMatchingImageFilterIF3IF3 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GenerateReferenceHistogramFromImageOn(self)


    def GenerateReferenceHistogramFromImageOff(self) -> "void":
        """GenerateReferenceHistogramFromImageOff(itkHistogramMatchingImageFilterIF3IF3 self)"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GenerateReferenceHistogramFromImageOff(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkHistogramMatchingImageFilterIF3IF3 self)

        This
        filter requires all of the input to be in the buffer. 
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GenerateInputRequestedRegion(self)


    def GetModifiableSourceHistogram(self) -> "itkHistogramF *":
        """GetModifiableSourceHistogram(itkHistogramMatchingImageFilterIF3IF3 self) -> itkHistogramF"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetModifiableSourceHistogram(self)


    def GetSourceHistogram(self, *args) -> "itkHistogramF *":
        """
        GetSourceHistogram(itkHistogramMatchingImageFilterIF3IF3 self) -> itkHistogramF
        GetSourceHistogram(itkHistogramMatchingImageFilterIF3IF3 self) -> itkHistogramF
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetSourceHistogram(self, *args)


    def GetModifiableOutputHistogram(self) -> "itkHistogramF *":
        """GetModifiableOutputHistogram(itkHistogramMatchingImageFilterIF3IF3 self) -> itkHistogramF"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetModifiableOutputHistogram(self)


    def GetOutputHistogram(self, *args) -> "itkHistogramF *":
        """
        GetOutputHistogram(itkHistogramMatchingImageFilterIF3IF3 self) -> itkHistogramF
        GetOutputHistogram(itkHistogramMatchingImageFilterIF3IF3 self) -> itkHistogramF
        """
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetOutputHistogram(self, *args)

    IntConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_IntConvertibleToInputCheck
    SameDimensionCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SameDimensionCheck
    DoubleConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_DoubleConvertibleToInputCheck
    DoubleConvertibleToOutputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    InputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_InputConvertibleToDoubleCheck
    OutputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_OutputConvertibleToDoubleCheck
    SameTypeCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SameTypeCheck
    __swig_destroy__ = _itkHistogramMatchingImageFilterPython.delete_itkHistogramMatchingImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkHistogramMatchingImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkHistogramMatchingImageFilterIF3IF3"""
        return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkHistogramMatchingImageFilterIF3IF3

        Create a new object of the class itkHistogramMatchingImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramMatchingImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHistogramMatchingImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramMatchingImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramMatchingImageFilterIF3IF3.Clone = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_Clone, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.SetSourceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetSourceImage, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetSourceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetSourceImage, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.SetReferenceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetReferenceImage, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetReferenceImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetReferenceImage, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.SetReferenceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetReferenceHistogram, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetReferenceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetReferenceHistogram, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.SetNumberOfHistogramLevels = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetNumberOfHistogramLevels, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetNumberOfHistogramLevels = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetNumberOfHistogramLevels, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.SetNumberOfMatchPoints = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetNumberOfMatchPoints, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetNumberOfMatchPoints = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetNumberOfMatchPoints, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.SetThresholdAtMeanIntensity = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetThresholdAtMeanIntensity, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetThresholdAtMeanIntensity = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetThresholdAtMeanIntensity, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.ThresholdAtMeanIntensityOn = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_ThresholdAtMeanIntensityOn, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.ThresholdAtMeanIntensityOff = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_ThresholdAtMeanIntensityOff, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.SetGenerateReferenceHistogramFromImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetGenerateReferenceHistogramFromImage, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetGenerateReferenceHistogramFromImage = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetGenerateReferenceHistogramFromImage, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GenerateReferenceHistogramFromImageOn = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GenerateReferenceHistogramFromImageOn, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GenerateReferenceHistogramFromImageOff = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GenerateReferenceHistogramFromImageOff, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GenerateInputRequestedRegion = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GenerateInputRequestedRegion, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetModifiableSourceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetModifiableSourceHistogram, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetSourceHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetSourceHistogram, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetModifiableOutputHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetModifiableOutputHistogram, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3.GetOutputHistogram = new_instancemethod(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetOutputHistogram, None, itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3_swigregister = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_swigregister
itkHistogramMatchingImageFilterIF3IF3_swigregister(itkHistogramMatchingImageFilterIF3IF3)

def itkHistogramMatchingImageFilterIF3IF3___New_orig__() -> "itkHistogramMatchingImageFilterIF3IF3_Pointer":
    """itkHistogramMatchingImageFilterIF3IF3___New_orig__() -> itkHistogramMatchingImageFilterIF3IF3_Pointer"""
    return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3___New_orig__()

def itkHistogramMatchingImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkHistogramMatchingImageFilterIF3IF3 *":
    """itkHistogramMatchingImageFilterIF3IF3_cast(itkLightObject obj) -> itkHistogramMatchingImageFilterIF3IF3"""
    return _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def histogram_matching_image_filter(*args, **kwargs):
    """Procedural interface for HistogramMatchingImageFilter"""
    import itk
    instance = itk.HistogramMatchingImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def histogram_matching_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.HistogramMatchingImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.HistogramMatchingImageFilter.values()[0]
    else:
        filter_object = itk.HistogramMatchingImageFilter

    histogram_matching_image_filter.__doc__ = filter_object.__doc__
    histogram_matching_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    histogram_matching_image_filter.__doc__ += "Available Keyword Arguments:\n"
    histogram_matching_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



