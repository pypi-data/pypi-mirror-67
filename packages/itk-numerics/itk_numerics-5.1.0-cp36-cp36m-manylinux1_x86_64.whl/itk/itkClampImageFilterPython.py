# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkClampImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkClampImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkClampImageFilterPython
            return _itkClampImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkClampImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkClampImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkClampImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkInPlaceImageFilterAPython
import ITKCommonBasePython
import pyBasePython
import itkImageToImageFilterBPython
import itkImagePython
import itkVectorPython
import itkFixedArrayPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkSizePython
import itkOffsetPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkCovariantVectorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def itkClampImageFilterID3ID3_New():
  return itkClampImageFilterID3ID3.New()


def itkClampImageFilterID3ID3_Superclass_New():
  return itkClampImageFilterID3ID3_Superclass.New()


def itkClampImageFilterID2ID2_New():
  return itkClampImageFilterID2ID2.New()


def itkClampImageFilterID2ID2_Superclass_New():
  return itkClampImageFilterID2ID2_Superclass.New()


def itkClampImageFilterID3IF3_New():
  return itkClampImageFilterID3IF3.New()


def itkClampImageFilterID3IF3_Superclass_New():
  return itkClampImageFilterID3IF3_Superclass.New()


def itkClampImageFilterID2IF2_New():
  return itkClampImageFilterID2IF2.New()


def itkClampImageFilterID2IF2_Superclass_New():
  return itkClampImageFilterID2IF2_Superclass.New()


def itkClampImageFilterID3IUS3_New():
  return itkClampImageFilterID3IUS3.New()


def itkClampImageFilterID3IUS3_Superclass_New():
  return itkClampImageFilterID3IUS3_Superclass.New()


def itkClampImageFilterID2IUS2_New():
  return itkClampImageFilterID2IUS2.New()


def itkClampImageFilterID2IUS2_Superclass_New():
  return itkClampImageFilterID2IUS2_Superclass.New()


def itkClampImageFilterID3IUC3_New():
  return itkClampImageFilterID3IUC3.New()


def itkClampImageFilterID3IUC3_Superclass_New():
  return itkClampImageFilterID3IUC3_Superclass.New()


def itkClampImageFilterID2IUC2_New():
  return itkClampImageFilterID2IUC2.New()


def itkClampImageFilterID2IUC2_Superclass_New():
  return itkClampImageFilterID2IUC2_Superclass.New()


def itkClampImageFilterID3ISS3_New():
  return itkClampImageFilterID3ISS3.New()


def itkClampImageFilterID3ISS3_Superclass_New():
  return itkClampImageFilterID3ISS3_Superclass.New()


def itkClampImageFilterID2ISS2_New():
  return itkClampImageFilterID2ISS2.New()


def itkClampImageFilterID2ISS2_Superclass_New():
  return itkClampImageFilterID2ISS2_Superclass.New()


def itkClampImageFilterIF3ID3_New():
  return itkClampImageFilterIF3ID3.New()


def itkClampImageFilterIF3ID3_Superclass_New():
  return itkClampImageFilterIF3ID3_Superclass.New()


def itkClampImageFilterIF2ID2_New():
  return itkClampImageFilterIF2ID2.New()


def itkClampImageFilterIF2ID2_Superclass_New():
  return itkClampImageFilterIF2ID2_Superclass.New()


def itkClampImageFilterIF3IF3_New():
  return itkClampImageFilterIF3IF3.New()


def itkClampImageFilterIF3IF3_Superclass_New():
  return itkClampImageFilterIF3IF3_Superclass.New()


def itkClampImageFilterIF2IF2_New():
  return itkClampImageFilterIF2IF2.New()


def itkClampImageFilterIF2IF2_Superclass_New():
  return itkClampImageFilterIF2IF2_Superclass.New()


def itkClampImageFilterIF3IUS3_New():
  return itkClampImageFilterIF3IUS3.New()


def itkClampImageFilterIF3IUS3_Superclass_New():
  return itkClampImageFilterIF3IUS3_Superclass.New()


def itkClampImageFilterIF2IUS2_New():
  return itkClampImageFilterIF2IUS2.New()


def itkClampImageFilterIF2IUS2_Superclass_New():
  return itkClampImageFilterIF2IUS2_Superclass.New()


def itkClampImageFilterIF3IUC3_New():
  return itkClampImageFilterIF3IUC3.New()


def itkClampImageFilterIF3IUC3_Superclass_New():
  return itkClampImageFilterIF3IUC3_Superclass.New()


def itkClampImageFilterIF2IUC2_New():
  return itkClampImageFilterIF2IUC2.New()


def itkClampImageFilterIF2IUC2_Superclass_New():
  return itkClampImageFilterIF2IUC2_Superclass.New()


def itkClampImageFilterIF3ISS3_New():
  return itkClampImageFilterIF3ISS3.New()


def itkClampImageFilterIF3ISS3_Superclass_New():
  return itkClampImageFilterIF3ISS3_Superclass.New()


def itkClampImageFilterIF2ISS2_New():
  return itkClampImageFilterIF2ISS2.New()


def itkClampImageFilterIF2ISS2_Superclass_New():
  return itkClampImageFilterIF2ISS2_Superclass.New()


def itkClampImageFilterIUS3ID3_New():
  return itkClampImageFilterIUS3ID3.New()


def itkClampImageFilterIUS3ID3_Superclass_New():
  return itkClampImageFilterIUS3ID3_Superclass.New()


def itkClampImageFilterIUS2ID2_New():
  return itkClampImageFilterIUS2ID2.New()


def itkClampImageFilterIUS2ID2_Superclass_New():
  return itkClampImageFilterIUS2ID2_Superclass.New()


def itkClampImageFilterIUS3IF3_New():
  return itkClampImageFilterIUS3IF3.New()


def itkClampImageFilterIUS3IF3_Superclass_New():
  return itkClampImageFilterIUS3IF3_Superclass.New()


def itkClampImageFilterIUS2IF2_New():
  return itkClampImageFilterIUS2IF2.New()


def itkClampImageFilterIUS2IF2_Superclass_New():
  return itkClampImageFilterIUS2IF2_Superclass.New()


def itkClampImageFilterIUS3IUS3_New():
  return itkClampImageFilterIUS3IUS3.New()


def itkClampImageFilterIUS3IUS3_Superclass_New():
  return itkClampImageFilterIUS3IUS3_Superclass.New()


def itkClampImageFilterIUS2IUS2_New():
  return itkClampImageFilterIUS2IUS2.New()


def itkClampImageFilterIUS2IUS2_Superclass_New():
  return itkClampImageFilterIUS2IUS2_Superclass.New()


def itkClampImageFilterIUS3IUC3_New():
  return itkClampImageFilterIUS3IUC3.New()


def itkClampImageFilterIUS3IUC3_Superclass_New():
  return itkClampImageFilterIUS3IUC3_Superclass.New()


def itkClampImageFilterIUS2IUC2_New():
  return itkClampImageFilterIUS2IUC2.New()


def itkClampImageFilterIUS2IUC2_Superclass_New():
  return itkClampImageFilterIUS2IUC2_Superclass.New()


def itkClampImageFilterIUS3ISS3_New():
  return itkClampImageFilterIUS3ISS3.New()


def itkClampImageFilterIUS3ISS3_Superclass_New():
  return itkClampImageFilterIUS3ISS3_Superclass.New()


def itkClampImageFilterIUS2ISS2_New():
  return itkClampImageFilterIUS2ISS2.New()


def itkClampImageFilterIUS2ISS2_Superclass_New():
  return itkClampImageFilterIUS2ISS2_Superclass.New()


def itkClampImageFilterIUC3ID3_New():
  return itkClampImageFilterIUC3ID3.New()


def itkClampImageFilterIUC3ID3_Superclass_New():
  return itkClampImageFilterIUC3ID3_Superclass.New()


def itkClampImageFilterIUC2ID2_New():
  return itkClampImageFilterIUC2ID2.New()


def itkClampImageFilterIUC2ID2_Superclass_New():
  return itkClampImageFilterIUC2ID2_Superclass.New()


def itkClampImageFilterIUC3IF3_New():
  return itkClampImageFilterIUC3IF3.New()


def itkClampImageFilterIUC3IF3_Superclass_New():
  return itkClampImageFilterIUC3IF3_Superclass.New()


def itkClampImageFilterIUC2IF2_New():
  return itkClampImageFilterIUC2IF2.New()


def itkClampImageFilterIUC2IF2_Superclass_New():
  return itkClampImageFilterIUC2IF2_Superclass.New()


def itkClampImageFilterIUC3IUS3_New():
  return itkClampImageFilterIUC3IUS3.New()


def itkClampImageFilterIUC3IUS3_Superclass_New():
  return itkClampImageFilterIUC3IUS3_Superclass.New()


def itkClampImageFilterIUC2IUS2_New():
  return itkClampImageFilterIUC2IUS2.New()


def itkClampImageFilterIUC2IUS2_Superclass_New():
  return itkClampImageFilterIUC2IUS2_Superclass.New()


def itkClampImageFilterIUC3IUC3_New():
  return itkClampImageFilterIUC3IUC3.New()


def itkClampImageFilterIUC3IUC3_Superclass_New():
  return itkClampImageFilterIUC3IUC3_Superclass.New()


def itkClampImageFilterIUC2IUC2_New():
  return itkClampImageFilterIUC2IUC2.New()


def itkClampImageFilterIUC2IUC2_Superclass_New():
  return itkClampImageFilterIUC2IUC2_Superclass.New()


def itkClampImageFilterIUC3ISS3_New():
  return itkClampImageFilterIUC3ISS3.New()


def itkClampImageFilterIUC3ISS3_Superclass_New():
  return itkClampImageFilterIUC3ISS3_Superclass.New()


def itkClampImageFilterIUC2ISS2_New():
  return itkClampImageFilterIUC2ISS2.New()


def itkClampImageFilterIUC2ISS2_Superclass_New():
  return itkClampImageFilterIUC2ISS2_Superclass.New()


def itkClampImageFilterISS3ID3_New():
  return itkClampImageFilterISS3ID3.New()


def itkClampImageFilterISS3ID3_Superclass_New():
  return itkClampImageFilterISS3ID3_Superclass.New()


def itkClampImageFilterISS2ID2_New():
  return itkClampImageFilterISS2ID2.New()


def itkClampImageFilterISS2ID2_Superclass_New():
  return itkClampImageFilterISS2ID2_Superclass.New()


def itkClampImageFilterISS3IF3_New():
  return itkClampImageFilterISS3IF3.New()


def itkClampImageFilterISS3IF3_Superclass_New():
  return itkClampImageFilterISS3IF3_Superclass.New()


def itkClampImageFilterISS2IF2_New():
  return itkClampImageFilterISS2IF2.New()


def itkClampImageFilterISS2IF2_Superclass_New():
  return itkClampImageFilterISS2IF2_Superclass.New()


def itkClampImageFilterISS3IUS3_New():
  return itkClampImageFilterISS3IUS3.New()


def itkClampImageFilterISS3IUS3_Superclass_New():
  return itkClampImageFilterISS3IUS3_Superclass.New()


def itkClampImageFilterISS2IUS2_New():
  return itkClampImageFilterISS2IUS2.New()


def itkClampImageFilterISS2IUS2_Superclass_New():
  return itkClampImageFilterISS2IUS2_Superclass.New()


def itkClampImageFilterISS3IUC3_New():
  return itkClampImageFilterISS3IUC3.New()


def itkClampImageFilterISS3IUC3_Superclass_New():
  return itkClampImageFilterISS3IUC3_Superclass.New()


def itkClampImageFilterISS2IUC2_New():
  return itkClampImageFilterISS2IUC2.New()


def itkClampImageFilterISS2IUC2_Superclass_New():
  return itkClampImageFilterISS2IUC2_Superclass.New()


def itkClampImageFilterISS3ISS3_New():
  return itkClampImageFilterISS3ISS3.New()


def itkClampImageFilterISS3ISS3_Superclass_New():
  return itkClampImageFilterISS3ISS3_Superclass.New()


def itkClampImageFilterISS2ISS2_New():
  return itkClampImageFilterISS2ISS2.New()


def itkClampImageFilterISS2ISS2_Superclass_New():
  return itkClampImageFilterISS2ISS2_Superclass.New()

class itkClampImageFilterID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkClampImageFilterID2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID2ID2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterID2ID2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID2ID2_Superclass_Pointer":
        """Clone(itkClampImageFilterID2ID2_Superclass self) -> itkClampImageFilterID2ID2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< double,double > const &":
        """
        GetFunctor(itkClampImageFilterID2ID2_Superclass self) -> itk::Functor::Clamp< double,double >
        GetFunctor(itkClampImageFilterID2ID2_Superclass self) -> itk::Functor::Clamp< double,double > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< double,double > const &') -> "void":
        """SetFunctor(itkClampImageFilterID2ID2_Superclass self, itk::Functor::Clamp< double,double > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterID2ID2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2ID2_Superclass

        Create a new object of the class itkClampImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID2ID2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_Clone, None, itkClampImageFilterID2ID2_Superclass)
itkClampImageFilterID2ID2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_GetFunctor, None, itkClampImageFilterID2ID2_Superclass)
itkClampImageFilterID2ID2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_SetFunctor, None, itkClampImageFilterID2ID2_Superclass)
itkClampImageFilterID2ID2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_swigregister
itkClampImageFilterID2ID2_Superclass_swigregister(itkClampImageFilterID2ID2_Superclass)

def itkClampImageFilterID2ID2_Superclass___New_orig__() -> "itkClampImageFilterID2ID2_Superclass_Pointer":
    """itkClampImageFilterID2ID2_Superclass___New_orig__() -> itkClampImageFilterID2ID2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass___New_orig__()

def itkClampImageFilterID2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterID2ID2_Superclass *":
    """itkClampImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterID2ID2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_cast(obj)

class itkClampImageFilterID2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    """Proxy of C++ itkClampImageFilterID2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID2IF2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterID2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID2IF2_Superclass_Pointer":
        """Clone(itkClampImageFilterID2IF2_Superclass self) -> itkClampImageFilterID2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< double,float > const &":
        """
        GetFunctor(itkClampImageFilterID2IF2_Superclass self) -> itk::Functor::Clamp< double,float >
        GetFunctor(itkClampImageFilterID2IF2_Superclass self) -> itk::Functor::Clamp< double,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< double,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterID2IF2_Superclass self, itk::Functor::Clamp< double,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterID2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IF2_Superclass

        Create a new object of the class itkClampImageFilterID2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID2IF2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_Clone, None, itkClampImageFilterID2IF2_Superclass)
itkClampImageFilterID2IF2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_GetFunctor, None, itkClampImageFilterID2IF2_Superclass)
itkClampImageFilterID2IF2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_SetFunctor, None, itkClampImageFilterID2IF2_Superclass)
itkClampImageFilterID2IF2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_swigregister
itkClampImageFilterID2IF2_Superclass_swigregister(itkClampImageFilterID2IF2_Superclass)

def itkClampImageFilterID2IF2_Superclass___New_orig__() -> "itkClampImageFilterID2IF2_Superclass_Pointer":
    """itkClampImageFilterID2IF2_Superclass___New_orig__() -> itkClampImageFilterID2IF2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass___New_orig__()

def itkClampImageFilterID2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IF2_Superclass *":
    """itkClampImageFilterID2IF2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterID2IF2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_cast(obj)

class itkClampImageFilterID2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    """Proxy of C++ itkClampImageFilterID2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterID2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID2ISS2_Superclass_Pointer":
        """Clone(itkClampImageFilterID2ISS2_Superclass self) -> itkClampImageFilterID2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< double,short > const &":
        """
        GetFunctor(itkClampImageFilterID2ISS2_Superclass self) -> itk::Functor::Clamp< double,short >
        GetFunctor(itkClampImageFilterID2ISS2_Superclass self) -> itk::Functor::Clamp< double,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< double,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterID2ISS2_Superclass self, itk::Functor::Clamp< double,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterID2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2ISS2_Superclass

        Create a new object of the class itkClampImageFilterID2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID2ISS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_Clone, None, itkClampImageFilterID2ISS2_Superclass)
itkClampImageFilterID2ISS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_GetFunctor, None, itkClampImageFilterID2ISS2_Superclass)
itkClampImageFilterID2ISS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_SetFunctor, None, itkClampImageFilterID2ISS2_Superclass)
itkClampImageFilterID2ISS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_swigregister
itkClampImageFilterID2ISS2_Superclass_swigregister(itkClampImageFilterID2ISS2_Superclass)

def itkClampImageFilterID2ISS2_Superclass___New_orig__() -> "itkClampImageFilterID2ISS2_Superclass_Pointer":
    """itkClampImageFilterID2ISS2_Superclass___New_orig__() -> itkClampImageFilterID2ISS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass___New_orig__()

def itkClampImageFilterID2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterID2ISS2_Superclass *":
    """itkClampImageFilterID2ISS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterID2ISS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_cast(obj)

class itkClampImageFilterID2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    """Proxy of C++ itkClampImageFilterID2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterID2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID2IUC2_Superclass_Pointer":
        """Clone(itkClampImageFilterID2IUC2_Superclass self) -> itkClampImageFilterID2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< double,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterID2IUC2_Superclass self) -> itk::Functor::Clamp< double,unsigned char >
        GetFunctor(itkClampImageFilterID2IUC2_Superclass self) -> itk::Functor::Clamp< double,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< double,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterID2IUC2_Superclass self, itk::Functor::Clamp< double,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterID2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IUC2_Superclass

        Create a new object of the class itkClampImageFilterID2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID2IUC2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_Clone, None, itkClampImageFilterID2IUC2_Superclass)
itkClampImageFilterID2IUC2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_GetFunctor, None, itkClampImageFilterID2IUC2_Superclass)
itkClampImageFilterID2IUC2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_SetFunctor, None, itkClampImageFilterID2IUC2_Superclass)
itkClampImageFilterID2IUC2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_swigregister
itkClampImageFilterID2IUC2_Superclass_swigregister(itkClampImageFilterID2IUC2_Superclass)

def itkClampImageFilterID2IUC2_Superclass___New_orig__() -> "itkClampImageFilterID2IUC2_Superclass_Pointer":
    """itkClampImageFilterID2IUC2_Superclass___New_orig__() -> itkClampImageFilterID2IUC2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass___New_orig__()

def itkClampImageFilterID2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IUC2_Superclass *":
    """itkClampImageFilterID2IUC2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterID2IUC2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_cast(obj)

class itkClampImageFilterID2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    """Proxy of C++ itkClampImageFilterID2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterID2IUS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID2IUS2_Superclass_Pointer":
        """Clone(itkClampImageFilterID2IUS2_Superclass self) -> itkClampImageFilterID2IUS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< double,unsigned short > const &":
        """
        GetFunctor(itkClampImageFilterID2IUS2_Superclass self) -> itk::Functor::Clamp< double,unsigned short >
        GetFunctor(itkClampImageFilterID2IUS2_Superclass self) -> itk::Functor::Clamp< double,unsigned short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< double,unsigned short > const &') -> "void":
        """SetFunctor(itkClampImageFilterID2IUS2_Superclass self, itk::Functor::Clamp< double,unsigned short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterID2IUS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IUS2_Superclass

        Create a new object of the class itkClampImageFilterID2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID2IUS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_Clone, None, itkClampImageFilterID2IUS2_Superclass)
itkClampImageFilterID2IUS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_GetFunctor, None, itkClampImageFilterID2IUS2_Superclass)
itkClampImageFilterID2IUS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_SetFunctor, None, itkClampImageFilterID2IUS2_Superclass)
itkClampImageFilterID2IUS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_swigregister
itkClampImageFilterID2IUS2_Superclass_swigregister(itkClampImageFilterID2IUS2_Superclass)

def itkClampImageFilterID2IUS2_Superclass___New_orig__() -> "itkClampImageFilterID2IUS2_Superclass_Pointer":
    """itkClampImageFilterID2IUS2_Superclass___New_orig__() -> itkClampImageFilterID2IUS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass___New_orig__()

def itkClampImageFilterID2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IUS2_Superclass *":
    """itkClampImageFilterID2IUS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterID2IUS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_cast(obj)

class itkClampImageFilterID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkClampImageFilterID3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID3ID3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterID3ID3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID3ID3_Superclass_Pointer":
        """Clone(itkClampImageFilterID3ID3_Superclass self) -> itkClampImageFilterID3ID3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< double,double > const &":
        """
        GetFunctor(itkClampImageFilterID3ID3_Superclass self) -> itk::Functor::Clamp< double,double >
        GetFunctor(itkClampImageFilterID3ID3_Superclass self) -> itk::Functor::Clamp< double,double > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< double,double > const &') -> "void":
        """SetFunctor(itkClampImageFilterID3ID3_Superclass self, itk::Functor::Clamp< double,double > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterID3ID3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3ID3_Superclass

        Create a new object of the class itkClampImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID3ID3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_Clone, None, itkClampImageFilterID3ID3_Superclass)
itkClampImageFilterID3ID3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_GetFunctor, None, itkClampImageFilterID3ID3_Superclass)
itkClampImageFilterID3ID3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_SetFunctor, None, itkClampImageFilterID3ID3_Superclass)
itkClampImageFilterID3ID3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_swigregister
itkClampImageFilterID3ID3_Superclass_swigregister(itkClampImageFilterID3ID3_Superclass)

def itkClampImageFilterID3ID3_Superclass___New_orig__() -> "itkClampImageFilterID3ID3_Superclass_Pointer":
    """itkClampImageFilterID3ID3_Superclass___New_orig__() -> itkClampImageFilterID3ID3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass___New_orig__()

def itkClampImageFilterID3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterID3ID3_Superclass *":
    """itkClampImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterID3ID3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_cast(obj)

class itkClampImageFilterID3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    """Proxy of C++ itkClampImageFilterID3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID3IF3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterID3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID3IF3_Superclass_Pointer":
        """Clone(itkClampImageFilterID3IF3_Superclass self) -> itkClampImageFilterID3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< double,float > const &":
        """
        GetFunctor(itkClampImageFilterID3IF3_Superclass self) -> itk::Functor::Clamp< double,float >
        GetFunctor(itkClampImageFilterID3IF3_Superclass self) -> itk::Functor::Clamp< double,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< double,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterID3IF3_Superclass self, itk::Functor::Clamp< double,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterID3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IF3_Superclass

        Create a new object of the class itkClampImageFilterID3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID3IF3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_Clone, None, itkClampImageFilterID3IF3_Superclass)
itkClampImageFilterID3IF3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_GetFunctor, None, itkClampImageFilterID3IF3_Superclass)
itkClampImageFilterID3IF3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_SetFunctor, None, itkClampImageFilterID3IF3_Superclass)
itkClampImageFilterID3IF3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_swigregister
itkClampImageFilterID3IF3_Superclass_swigregister(itkClampImageFilterID3IF3_Superclass)

def itkClampImageFilterID3IF3_Superclass___New_orig__() -> "itkClampImageFilterID3IF3_Superclass_Pointer":
    """itkClampImageFilterID3IF3_Superclass___New_orig__() -> itkClampImageFilterID3IF3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass___New_orig__()

def itkClampImageFilterID3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IF3_Superclass *":
    """itkClampImageFilterID3IF3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterID3IF3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_cast(obj)

class itkClampImageFilterID3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    """Proxy of C++ itkClampImageFilterID3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterID3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID3ISS3_Superclass_Pointer":
        """Clone(itkClampImageFilterID3ISS3_Superclass self) -> itkClampImageFilterID3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< double,short > const &":
        """
        GetFunctor(itkClampImageFilterID3ISS3_Superclass self) -> itk::Functor::Clamp< double,short >
        GetFunctor(itkClampImageFilterID3ISS3_Superclass self) -> itk::Functor::Clamp< double,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< double,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterID3ISS3_Superclass self, itk::Functor::Clamp< double,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterID3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3ISS3_Superclass

        Create a new object of the class itkClampImageFilterID3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID3ISS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_Clone, None, itkClampImageFilterID3ISS3_Superclass)
itkClampImageFilterID3ISS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_GetFunctor, None, itkClampImageFilterID3ISS3_Superclass)
itkClampImageFilterID3ISS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_SetFunctor, None, itkClampImageFilterID3ISS3_Superclass)
itkClampImageFilterID3ISS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_swigregister
itkClampImageFilterID3ISS3_Superclass_swigregister(itkClampImageFilterID3ISS3_Superclass)

def itkClampImageFilterID3ISS3_Superclass___New_orig__() -> "itkClampImageFilterID3ISS3_Superclass_Pointer":
    """itkClampImageFilterID3ISS3_Superclass___New_orig__() -> itkClampImageFilterID3ISS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass___New_orig__()

def itkClampImageFilterID3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterID3ISS3_Superclass *":
    """itkClampImageFilterID3ISS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterID3ISS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_cast(obj)

class itkClampImageFilterID3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    """Proxy of C++ itkClampImageFilterID3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterID3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID3IUC3_Superclass_Pointer":
        """Clone(itkClampImageFilterID3IUC3_Superclass self) -> itkClampImageFilterID3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< double,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterID3IUC3_Superclass self) -> itk::Functor::Clamp< double,unsigned char >
        GetFunctor(itkClampImageFilterID3IUC3_Superclass self) -> itk::Functor::Clamp< double,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< double,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterID3IUC3_Superclass self, itk::Functor::Clamp< double,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterID3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IUC3_Superclass

        Create a new object of the class itkClampImageFilterID3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID3IUC3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_Clone, None, itkClampImageFilterID3IUC3_Superclass)
itkClampImageFilterID3IUC3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_GetFunctor, None, itkClampImageFilterID3IUC3_Superclass)
itkClampImageFilterID3IUC3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_SetFunctor, None, itkClampImageFilterID3IUC3_Superclass)
itkClampImageFilterID3IUC3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_swigregister
itkClampImageFilterID3IUC3_Superclass_swigregister(itkClampImageFilterID3IUC3_Superclass)

def itkClampImageFilterID3IUC3_Superclass___New_orig__() -> "itkClampImageFilterID3IUC3_Superclass_Pointer":
    """itkClampImageFilterID3IUC3_Superclass___New_orig__() -> itkClampImageFilterID3IUC3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass___New_orig__()

def itkClampImageFilterID3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IUC3_Superclass *":
    """itkClampImageFilterID3IUC3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterID3IUC3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_cast(obj)

class itkClampImageFilterID3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    """Proxy of C++ itkClampImageFilterID3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterID3IUS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID3IUS3_Superclass_Pointer":
        """Clone(itkClampImageFilterID3IUS3_Superclass self) -> itkClampImageFilterID3IUS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< double,unsigned short > const &":
        """
        GetFunctor(itkClampImageFilterID3IUS3_Superclass self) -> itk::Functor::Clamp< double,unsigned short >
        GetFunctor(itkClampImageFilterID3IUS3_Superclass self) -> itk::Functor::Clamp< double,unsigned short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< double,unsigned short > const &') -> "void":
        """SetFunctor(itkClampImageFilterID3IUS3_Superclass self, itk::Functor::Clamp< double,unsigned short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterID3IUS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IUS3_Superclass

        Create a new object of the class itkClampImageFilterID3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID3IUS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_Clone, None, itkClampImageFilterID3IUS3_Superclass)
itkClampImageFilterID3IUS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_GetFunctor, None, itkClampImageFilterID3IUS3_Superclass)
itkClampImageFilterID3IUS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_SetFunctor, None, itkClampImageFilterID3IUS3_Superclass)
itkClampImageFilterID3IUS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_swigregister
itkClampImageFilterID3IUS3_Superclass_swigregister(itkClampImageFilterID3IUS3_Superclass)

def itkClampImageFilterID3IUS3_Superclass___New_orig__() -> "itkClampImageFilterID3IUS3_Superclass_Pointer":
    """itkClampImageFilterID3IUS3_Superclass___New_orig__() -> itkClampImageFilterID3IUS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass___New_orig__()

def itkClampImageFilterID3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IUS3_Superclass *":
    """itkClampImageFilterID3IUS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterID3IUS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_cast(obj)

class itkClampImageFilterIF2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    """Proxy of C++ itkClampImageFilterIF2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2ID2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2ID2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2ID2_Superclass_Pointer":
        """Clone(itkClampImageFilterIF2ID2_Superclass self) -> itkClampImageFilterIF2ID2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,double > const &":
        """
        GetFunctor(itkClampImageFilterIF2ID2_Superclass self) -> itk::Functor::Clamp< float,double >
        GetFunctor(itkClampImageFilterIF2ID2_Superclass self) -> itk::Functor::Clamp< float,double > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,double > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF2ID2_Superclass self, itk::Functor::Clamp< float,double > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2ID2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2ID2_Superclass

        Create a new object of the class itkClampImageFilterIF2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2ID2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_Clone, None, itkClampImageFilterIF2ID2_Superclass)
itkClampImageFilterIF2ID2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_GetFunctor, None, itkClampImageFilterIF2ID2_Superclass)
itkClampImageFilterIF2ID2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_SetFunctor, None, itkClampImageFilterIF2ID2_Superclass)
itkClampImageFilterIF2ID2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_swigregister
itkClampImageFilterIF2ID2_Superclass_swigregister(itkClampImageFilterIF2ID2_Superclass)

def itkClampImageFilterIF2ID2_Superclass___New_orig__() -> "itkClampImageFilterIF2ID2_Superclass_Pointer":
    """itkClampImageFilterIF2ID2_Superclass___New_orig__() -> itkClampImageFilterIF2ID2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass___New_orig__()

def itkClampImageFilterIF2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ID2_Superclass *":
    """itkClampImageFilterIF2ID2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF2ID2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_cast(obj)

class itkClampImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkClampImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkClampImageFilterIF2IF2_Superclass self) -> itkClampImageFilterIF2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,float > const &":
        """
        GetFunctor(itkClampImageFilterIF2IF2_Superclass self) -> itk::Functor::Clamp< float,float >
        GetFunctor(itkClampImageFilterIF2IF2_Superclass self) -> itk::Functor::Clamp< float,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF2IF2_Superclass self, itk::Functor::Clamp< float,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IF2_Superclass

        Create a new object of the class itkClampImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_Clone, None, itkClampImageFilterIF2IF2_Superclass)
itkClampImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_GetFunctor, None, itkClampImageFilterIF2IF2_Superclass)
itkClampImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_SetFunctor, None, itkClampImageFilterIF2IF2_Superclass)
itkClampImageFilterIF2IF2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_swigregister
itkClampImageFilterIF2IF2_Superclass_swigregister(itkClampImageFilterIF2IF2_Superclass)

def itkClampImageFilterIF2IF2_Superclass___New_orig__() -> "itkClampImageFilterIF2IF2_Superclass_Pointer":
    """itkClampImageFilterIF2IF2_Superclass___New_orig__() -> itkClampImageFilterIF2IF2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass___New_orig__()

def itkClampImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IF2_Superclass *":
    """itkClampImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF2IF2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_cast(obj)

class itkClampImageFilterIF2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    """Proxy of C++ itkClampImageFilterIF2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2ISS2_Superclass_Pointer":
        """Clone(itkClampImageFilterIF2ISS2_Superclass self) -> itkClampImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,short > const &":
        """
        GetFunctor(itkClampImageFilterIF2ISS2_Superclass self) -> itk::Functor::Clamp< float,short >
        GetFunctor(itkClampImageFilterIF2ISS2_Superclass self) -> itk::Functor::Clamp< float,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF2ISS2_Superclass self, itk::Functor::Clamp< float,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2ISS2_Superclass

        Create a new object of the class itkClampImageFilterIF2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2ISS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_Clone, None, itkClampImageFilterIF2ISS2_Superclass)
itkClampImageFilterIF2ISS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_GetFunctor, None, itkClampImageFilterIF2ISS2_Superclass)
itkClampImageFilterIF2ISS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_SetFunctor, None, itkClampImageFilterIF2ISS2_Superclass)
itkClampImageFilterIF2ISS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_swigregister
itkClampImageFilterIF2ISS2_Superclass_swigregister(itkClampImageFilterIF2ISS2_Superclass)

def itkClampImageFilterIF2ISS2_Superclass___New_orig__() -> "itkClampImageFilterIF2ISS2_Superclass_Pointer":
    """itkClampImageFilterIF2ISS2_Superclass___New_orig__() -> itkClampImageFilterIF2ISS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass___New_orig__()

def itkClampImageFilterIF2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ISS2_Superclass *":
    """itkClampImageFilterIF2ISS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF2ISS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_cast(obj)

class itkClampImageFilterIF2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    """Proxy of C++ itkClampImageFilterIF2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2IUC2_Superclass_Pointer":
        """Clone(itkClampImageFilterIF2IUC2_Superclass self) -> itkClampImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterIF2IUC2_Superclass self) -> itk::Functor::Clamp< float,unsigned char >
        GetFunctor(itkClampImageFilterIF2IUC2_Superclass self) -> itk::Functor::Clamp< float,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF2IUC2_Superclass self, itk::Functor::Clamp< float,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IUC2_Superclass

        Create a new object of the class itkClampImageFilterIF2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2IUC2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_Clone, None, itkClampImageFilterIF2IUC2_Superclass)
itkClampImageFilterIF2IUC2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_GetFunctor, None, itkClampImageFilterIF2IUC2_Superclass)
itkClampImageFilterIF2IUC2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_SetFunctor, None, itkClampImageFilterIF2IUC2_Superclass)
itkClampImageFilterIF2IUC2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_swigregister
itkClampImageFilterIF2IUC2_Superclass_swigregister(itkClampImageFilterIF2IUC2_Superclass)

def itkClampImageFilterIF2IUC2_Superclass___New_orig__() -> "itkClampImageFilterIF2IUC2_Superclass_Pointer":
    """itkClampImageFilterIF2IUC2_Superclass___New_orig__() -> itkClampImageFilterIF2IUC2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass___New_orig__()

def itkClampImageFilterIF2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUC2_Superclass *":
    """itkClampImageFilterIF2IUC2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF2IUC2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_cast(obj)

class itkClampImageFilterIF2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    """Proxy of C++ itkClampImageFilterIF2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2IUS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2IUS2_Superclass_Pointer":
        """Clone(itkClampImageFilterIF2IUS2_Superclass self) -> itkClampImageFilterIF2IUS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,unsigned short > const &":
        """
        GetFunctor(itkClampImageFilterIF2IUS2_Superclass self) -> itk::Functor::Clamp< float,unsigned short >
        GetFunctor(itkClampImageFilterIF2IUS2_Superclass self) -> itk::Functor::Clamp< float,unsigned short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,unsigned short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF2IUS2_Superclass self, itk::Functor::Clamp< float,unsigned short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2IUS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IUS2_Superclass

        Create a new object of the class itkClampImageFilterIF2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2IUS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_Clone, None, itkClampImageFilterIF2IUS2_Superclass)
itkClampImageFilterIF2IUS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_GetFunctor, None, itkClampImageFilterIF2IUS2_Superclass)
itkClampImageFilterIF2IUS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_SetFunctor, None, itkClampImageFilterIF2IUS2_Superclass)
itkClampImageFilterIF2IUS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_swigregister
itkClampImageFilterIF2IUS2_Superclass_swigregister(itkClampImageFilterIF2IUS2_Superclass)

def itkClampImageFilterIF2IUS2_Superclass___New_orig__() -> "itkClampImageFilterIF2IUS2_Superclass_Pointer":
    """itkClampImageFilterIF2IUS2_Superclass___New_orig__() -> itkClampImageFilterIF2IUS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass___New_orig__()

def itkClampImageFilterIF2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUS2_Superclass *":
    """itkClampImageFilterIF2IUS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF2IUS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_cast(obj)

class itkClampImageFilterIF3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    """Proxy of C++ itkClampImageFilterIF3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3ID3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3ID3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3ID3_Superclass_Pointer":
        """Clone(itkClampImageFilterIF3ID3_Superclass self) -> itkClampImageFilterIF3ID3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,double > const &":
        """
        GetFunctor(itkClampImageFilterIF3ID3_Superclass self) -> itk::Functor::Clamp< float,double >
        GetFunctor(itkClampImageFilterIF3ID3_Superclass self) -> itk::Functor::Clamp< float,double > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,double > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF3ID3_Superclass self, itk::Functor::Clamp< float,double > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3ID3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3ID3_Superclass

        Create a new object of the class itkClampImageFilterIF3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3ID3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_Clone, None, itkClampImageFilterIF3ID3_Superclass)
itkClampImageFilterIF3ID3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_GetFunctor, None, itkClampImageFilterIF3ID3_Superclass)
itkClampImageFilterIF3ID3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_SetFunctor, None, itkClampImageFilterIF3ID3_Superclass)
itkClampImageFilterIF3ID3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_swigregister
itkClampImageFilterIF3ID3_Superclass_swigregister(itkClampImageFilterIF3ID3_Superclass)

def itkClampImageFilterIF3ID3_Superclass___New_orig__() -> "itkClampImageFilterIF3ID3_Superclass_Pointer":
    """itkClampImageFilterIF3ID3_Superclass___New_orig__() -> itkClampImageFilterIF3ID3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass___New_orig__()

def itkClampImageFilterIF3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ID3_Superclass *":
    """itkClampImageFilterIF3ID3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF3ID3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_cast(obj)

class itkClampImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkClampImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkClampImageFilterIF3IF3_Superclass self) -> itkClampImageFilterIF3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,float > const &":
        """
        GetFunctor(itkClampImageFilterIF3IF3_Superclass self) -> itk::Functor::Clamp< float,float >
        GetFunctor(itkClampImageFilterIF3IF3_Superclass self) -> itk::Functor::Clamp< float,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF3IF3_Superclass self, itk::Functor::Clamp< float,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IF3_Superclass

        Create a new object of the class itkClampImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_Clone, None, itkClampImageFilterIF3IF3_Superclass)
itkClampImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_GetFunctor, None, itkClampImageFilterIF3IF3_Superclass)
itkClampImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_SetFunctor, None, itkClampImageFilterIF3IF3_Superclass)
itkClampImageFilterIF3IF3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_swigregister
itkClampImageFilterIF3IF3_Superclass_swigregister(itkClampImageFilterIF3IF3_Superclass)

def itkClampImageFilterIF3IF3_Superclass___New_orig__() -> "itkClampImageFilterIF3IF3_Superclass_Pointer":
    """itkClampImageFilterIF3IF3_Superclass___New_orig__() -> itkClampImageFilterIF3IF3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass___New_orig__()

def itkClampImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IF3_Superclass *":
    """itkClampImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF3IF3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_cast(obj)

class itkClampImageFilterIF3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    """Proxy of C++ itkClampImageFilterIF3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3ISS3_Superclass_Pointer":
        """Clone(itkClampImageFilterIF3ISS3_Superclass self) -> itkClampImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,short > const &":
        """
        GetFunctor(itkClampImageFilterIF3ISS3_Superclass self) -> itk::Functor::Clamp< float,short >
        GetFunctor(itkClampImageFilterIF3ISS3_Superclass self) -> itk::Functor::Clamp< float,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF3ISS3_Superclass self, itk::Functor::Clamp< float,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3ISS3_Superclass

        Create a new object of the class itkClampImageFilterIF3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3ISS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_Clone, None, itkClampImageFilterIF3ISS3_Superclass)
itkClampImageFilterIF3ISS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_GetFunctor, None, itkClampImageFilterIF3ISS3_Superclass)
itkClampImageFilterIF3ISS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_SetFunctor, None, itkClampImageFilterIF3ISS3_Superclass)
itkClampImageFilterIF3ISS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_swigregister
itkClampImageFilterIF3ISS3_Superclass_swigregister(itkClampImageFilterIF3ISS3_Superclass)

def itkClampImageFilterIF3ISS3_Superclass___New_orig__() -> "itkClampImageFilterIF3ISS3_Superclass_Pointer":
    """itkClampImageFilterIF3ISS3_Superclass___New_orig__() -> itkClampImageFilterIF3ISS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass___New_orig__()

def itkClampImageFilterIF3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ISS3_Superclass *":
    """itkClampImageFilterIF3ISS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF3ISS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_cast(obj)

class itkClampImageFilterIF3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    """Proxy of C++ itkClampImageFilterIF3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3IUC3_Superclass_Pointer":
        """Clone(itkClampImageFilterIF3IUC3_Superclass self) -> itkClampImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterIF3IUC3_Superclass self) -> itk::Functor::Clamp< float,unsigned char >
        GetFunctor(itkClampImageFilterIF3IUC3_Superclass self) -> itk::Functor::Clamp< float,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF3IUC3_Superclass self, itk::Functor::Clamp< float,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IUC3_Superclass

        Create a new object of the class itkClampImageFilterIF3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3IUC3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_Clone, None, itkClampImageFilterIF3IUC3_Superclass)
itkClampImageFilterIF3IUC3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_GetFunctor, None, itkClampImageFilterIF3IUC3_Superclass)
itkClampImageFilterIF3IUC3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_SetFunctor, None, itkClampImageFilterIF3IUC3_Superclass)
itkClampImageFilterIF3IUC3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_swigregister
itkClampImageFilterIF3IUC3_Superclass_swigregister(itkClampImageFilterIF3IUC3_Superclass)

def itkClampImageFilterIF3IUC3_Superclass___New_orig__() -> "itkClampImageFilterIF3IUC3_Superclass_Pointer":
    """itkClampImageFilterIF3IUC3_Superclass___New_orig__() -> itkClampImageFilterIF3IUC3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass___New_orig__()

def itkClampImageFilterIF3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUC3_Superclass *":
    """itkClampImageFilterIF3IUC3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF3IUC3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_cast(obj)

class itkClampImageFilterIF3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    """Proxy of C++ itkClampImageFilterIF3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3IUS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3IUS3_Superclass_Pointer":
        """Clone(itkClampImageFilterIF3IUS3_Superclass self) -> itkClampImageFilterIF3IUS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,unsigned short > const &":
        """
        GetFunctor(itkClampImageFilterIF3IUS3_Superclass self) -> itk::Functor::Clamp< float,unsigned short >
        GetFunctor(itkClampImageFilterIF3IUS3_Superclass self) -> itk::Functor::Clamp< float,unsigned short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,unsigned short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF3IUS3_Superclass self, itk::Functor::Clamp< float,unsigned short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3IUS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IUS3_Superclass

        Create a new object of the class itkClampImageFilterIF3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3IUS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_Clone, None, itkClampImageFilterIF3IUS3_Superclass)
itkClampImageFilterIF3IUS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_GetFunctor, None, itkClampImageFilterIF3IUS3_Superclass)
itkClampImageFilterIF3IUS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_SetFunctor, None, itkClampImageFilterIF3IUS3_Superclass)
itkClampImageFilterIF3IUS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_swigregister
itkClampImageFilterIF3IUS3_Superclass_swigregister(itkClampImageFilterIF3IUS3_Superclass)

def itkClampImageFilterIF3IUS3_Superclass___New_orig__() -> "itkClampImageFilterIF3IUS3_Superclass_Pointer":
    """itkClampImageFilterIF3IUS3_Superclass___New_orig__() -> itkClampImageFilterIF3IUS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass___New_orig__()

def itkClampImageFilterIF3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUS3_Superclass *":
    """itkClampImageFilterIF3IUS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF3IUS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_cast(obj)

class itkClampImageFilterISS2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    """Proxy of C++ itkClampImageFilterISS2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2ID2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2ID2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2ID2_Superclass_Pointer":
        """Clone(itkClampImageFilterISS2ID2_Superclass self) -> itkClampImageFilterISS2ID2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,double > const &":
        """
        GetFunctor(itkClampImageFilterISS2ID2_Superclass self) -> itk::Functor::Clamp< short,double >
        GetFunctor(itkClampImageFilterISS2ID2_Superclass self) -> itk::Functor::Clamp< short,double > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,double > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS2ID2_Superclass self, itk::Functor::Clamp< short,double > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2ID2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2ID2_Superclass

        Create a new object of the class itkClampImageFilterISS2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2ID2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_Clone, None, itkClampImageFilterISS2ID2_Superclass)
itkClampImageFilterISS2ID2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_GetFunctor, None, itkClampImageFilterISS2ID2_Superclass)
itkClampImageFilterISS2ID2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_SetFunctor, None, itkClampImageFilterISS2ID2_Superclass)
itkClampImageFilterISS2ID2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_swigregister
itkClampImageFilterISS2ID2_Superclass_swigregister(itkClampImageFilterISS2ID2_Superclass)

def itkClampImageFilterISS2ID2_Superclass___New_orig__() -> "itkClampImageFilterISS2ID2_Superclass_Pointer":
    """itkClampImageFilterISS2ID2_Superclass___New_orig__() -> itkClampImageFilterISS2ID2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass___New_orig__()

def itkClampImageFilterISS2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ID2_Superclass *":
    """itkClampImageFilterISS2ID2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS2ID2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_cast(obj)

class itkClampImageFilterISS2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    """Proxy of C++ itkClampImageFilterISS2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2IF2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2IF2_Superclass_Pointer":
        """Clone(itkClampImageFilterISS2IF2_Superclass self) -> itkClampImageFilterISS2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,float > const &":
        """
        GetFunctor(itkClampImageFilterISS2IF2_Superclass self) -> itk::Functor::Clamp< short,float >
        GetFunctor(itkClampImageFilterISS2IF2_Superclass self) -> itk::Functor::Clamp< short,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS2IF2_Superclass self, itk::Functor::Clamp< short,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IF2_Superclass

        Create a new object of the class itkClampImageFilterISS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2IF2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_Clone, None, itkClampImageFilterISS2IF2_Superclass)
itkClampImageFilterISS2IF2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_GetFunctor, None, itkClampImageFilterISS2IF2_Superclass)
itkClampImageFilterISS2IF2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_SetFunctor, None, itkClampImageFilterISS2IF2_Superclass)
itkClampImageFilterISS2IF2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_swigregister
itkClampImageFilterISS2IF2_Superclass_swigregister(itkClampImageFilterISS2IF2_Superclass)

def itkClampImageFilterISS2IF2_Superclass___New_orig__() -> "itkClampImageFilterISS2IF2_Superclass_Pointer":
    """itkClampImageFilterISS2IF2_Superclass___New_orig__() -> itkClampImageFilterISS2IF2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass___New_orig__()

def itkClampImageFilterISS2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IF2_Superclass *":
    """itkClampImageFilterISS2IF2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS2IF2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_cast(obj)

class itkClampImageFilterISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkClampImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkClampImageFilterISS2ISS2_Superclass self) -> itkClampImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,short > const &":
        """
        GetFunctor(itkClampImageFilterISS2ISS2_Superclass self) -> itk::Functor::Clamp< short,short >
        GetFunctor(itkClampImageFilterISS2ISS2_Superclass self) -> itk::Functor::Clamp< short,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS2ISS2_Superclass self, itk::Functor::Clamp< short,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2ISS2_Superclass

        Create a new object of the class itkClampImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_Clone, None, itkClampImageFilterISS2ISS2_Superclass)
itkClampImageFilterISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_GetFunctor, None, itkClampImageFilterISS2ISS2_Superclass)
itkClampImageFilterISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_SetFunctor, None, itkClampImageFilterISS2ISS2_Superclass)
itkClampImageFilterISS2ISS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_swigregister
itkClampImageFilterISS2ISS2_Superclass_swigregister(itkClampImageFilterISS2ISS2_Superclass)

def itkClampImageFilterISS2ISS2_Superclass___New_orig__() -> "itkClampImageFilterISS2ISS2_Superclass_Pointer":
    """itkClampImageFilterISS2ISS2_Superclass___New_orig__() -> itkClampImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass___New_orig__()

def itkClampImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ISS2_Superclass *":
    """itkClampImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS2ISS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_cast(obj)

class itkClampImageFilterISS2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    """Proxy of C++ itkClampImageFilterISS2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2IUC2_Superclass_Pointer":
        """Clone(itkClampImageFilterISS2IUC2_Superclass self) -> itkClampImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterISS2IUC2_Superclass self) -> itk::Functor::Clamp< short,unsigned char >
        GetFunctor(itkClampImageFilterISS2IUC2_Superclass self) -> itk::Functor::Clamp< short,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS2IUC2_Superclass self, itk::Functor::Clamp< short,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IUC2_Superclass

        Create a new object of the class itkClampImageFilterISS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2IUC2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_Clone, None, itkClampImageFilterISS2IUC2_Superclass)
itkClampImageFilterISS2IUC2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_GetFunctor, None, itkClampImageFilterISS2IUC2_Superclass)
itkClampImageFilterISS2IUC2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_SetFunctor, None, itkClampImageFilterISS2IUC2_Superclass)
itkClampImageFilterISS2IUC2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_swigregister
itkClampImageFilterISS2IUC2_Superclass_swigregister(itkClampImageFilterISS2IUC2_Superclass)

def itkClampImageFilterISS2IUC2_Superclass___New_orig__() -> "itkClampImageFilterISS2IUC2_Superclass_Pointer":
    """itkClampImageFilterISS2IUC2_Superclass___New_orig__() -> itkClampImageFilterISS2IUC2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass___New_orig__()

def itkClampImageFilterISS2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUC2_Superclass *":
    """itkClampImageFilterISS2IUC2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS2IUC2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_cast(obj)

class itkClampImageFilterISS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    """Proxy of C++ itkClampImageFilterISS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2IUS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2IUS2_Superclass_Pointer":
        """Clone(itkClampImageFilterISS2IUS2_Superclass self) -> itkClampImageFilterISS2IUS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,unsigned short > const &":
        """
        GetFunctor(itkClampImageFilterISS2IUS2_Superclass self) -> itk::Functor::Clamp< short,unsigned short >
        GetFunctor(itkClampImageFilterISS2IUS2_Superclass self) -> itk::Functor::Clamp< short,unsigned short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,unsigned short > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS2IUS2_Superclass self, itk::Functor::Clamp< short,unsigned short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2IUS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IUS2_Superclass

        Create a new object of the class itkClampImageFilterISS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2IUS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_Clone, None, itkClampImageFilterISS2IUS2_Superclass)
itkClampImageFilterISS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_GetFunctor, None, itkClampImageFilterISS2IUS2_Superclass)
itkClampImageFilterISS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_SetFunctor, None, itkClampImageFilterISS2IUS2_Superclass)
itkClampImageFilterISS2IUS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_swigregister
itkClampImageFilterISS2IUS2_Superclass_swigregister(itkClampImageFilterISS2IUS2_Superclass)

def itkClampImageFilterISS2IUS2_Superclass___New_orig__() -> "itkClampImageFilterISS2IUS2_Superclass_Pointer":
    """itkClampImageFilterISS2IUS2_Superclass___New_orig__() -> itkClampImageFilterISS2IUS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass___New_orig__()

def itkClampImageFilterISS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUS2_Superclass *":
    """itkClampImageFilterISS2IUS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS2IUS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_cast(obj)

class itkClampImageFilterISS3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    """Proxy of C++ itkClampImageFilterISS3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3ID3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3ID3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3ID3_Superclass_Pointer":
        """Clone(itkClampImageFilterISS3ID3_Superclass self) -> itkClampImageFilterISS3ID3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,double > const &":
        """
        GetFunctor(itkClampImageFilterISS3ID3_Superclass self) -> itk::Functor::Clamp< short,double >
        GetFunctor(itkClampImageFilterISS3ID3_Superclass self) -> itk::Functor::Clamp< short,double > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,double > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS3ID3_Superclass self, itk::Functor::Clamp< short,double > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3ID3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3ID3_Superclass

        Create a new object of the class itkClampImageFilterISS3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3ID3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_Clone, None, itkClampImageFilterISS3ID3_Superclass)
itkClampImageFilterISS3ID3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_GetFunctor, None, itkClampImageFilterISS3ID3_Superclass)
itkClampImageFilterISS3ID3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_SetFunctor, None, itkClampImageFilterISS3ID3_Superclass)
itkClampImageFilterISS3ID3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_swigregister
itkClampImageFilterISS3ID3_Superclass_swigregister(itkClampImageFilterISS3ID3_Superclass)

def itkClampImageFilterISS3ID3_Superclass___New_orig__() -> "itkClampImageFilterISS3ID3_Superclass_Pointer":
    """itkClampImageFilterISS3ID3_Superclass___New_orig__() -> itkClampImageFilterISS3ID3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass___New_orig__()

def itkClampImageFilterISS3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ID3_Superclass *":
    """itkClampImageFilterISS3ID3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS3ID3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_cast(obj)

class itkClampImageFilterISS3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    """Proxy of C++ itkClampImageFilterISS3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3IF3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3IF3_Superclass_Pointer":
        """Clone(itkClampImageFilterISS3IF3_Superclass self) -> itkClampImageFilterISS3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,float > const &":
        """
        GetFunctor(itkClampImageFilterISS3IF3_Superclass self) -> itk::Functor::Clamp< short,float >
        GetFunctor(itkClampImageFilterISS3IF3_Superclass self) -> itk::Functor::Clamp< short,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS3IF3_Superclass self, itk::Functor::Clamp< short,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IF3_Superclass

        Create a new object of the class itkClampImageFilterISS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3IF3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_Clone, None, itkClampImageFilterISS3IF3_Superclass)
itkClampImageFilterISS3IF3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_GetFunctor, None, itkClampImageFilterISS3IF3_Superclass)
itkClampImageFilterISS3IF3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_SetFunctor, None, itkClampImageFilterISS3IF3_Superclass)
itkClampImageFilterISS3IF3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_swigregister
itkClampImageFilterISS3IF3_Superclass_swigregister(itkClampImageFilterISS3IF3_Superclass)

def itkClampImageFilterISS3IF3_Superclass___New_orig__() -> "itkClampImageFilterISS3IF3_Superclass_Pointer":
    """itkClampImageFilterISS3IF3_Superclass___New_orig__() -> itkClampImageFilterISS3IF3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass___New_orig__()

def itkClampImageFilterISS3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IF3_Superclass *":
    """itkClampImageFilterISS3IF3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS3IF3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_cast(obj)

class itkClampImageFilterISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkClampImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkClampImageFilterISS3ISS3_Superclass self) -> itkClampImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,short > const &":
        """
        GetFunctor(itkClampImageFilterISS3ISS3_Superclass self) -> itk::Functor::Clamp< short,short >
        GetFunctor(itkClampImageFilterISS3ISS3_Superclass self) -> itk::Functor::Clamp< short,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS3ISS3_Superclass self, itk::Functor::Clamp< short,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3ISS3_Superclass

        Create a new object of the class itkClampImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_Clone, None, itkClampImageFilterISS3ISS3_Superclass)
itkClampImageFilterISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_GetFunctor, None, itkClampImageFilterISS3ISS3_Superclass)
itkClampImageFilterISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_SetFunctor, None, itkClampImageFilterISS3ISS3_Superclass)
itkClampImageFilterISS3ISS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_swigregister
itkClampImageFilterISS3ISS3_Superclass_swigregister(itkClampImageFilterISS3ISS3_Superclass)

def itkClampImageFilterISS3ISS3_Superclass___New_orig__() -> "itkClampImageFilterISS3ISS3_Superclass_Pointer":
    """itkClampImageFilterISS3ISS3_Superclass___New_orig__() -> itkClampImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass___New_orig__()

def itkClampImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ISS3_Superclass *":
    """itkClampImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS3ISS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_cast(obj)

class itkClampImageFilterISS3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    """Proxy of C++ itkClampImageFilterISS3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3IUC3_Superclass_Pointer":
        """Clone(itkClampImageFilterISS3IUC3_Superclass self) -> itkClampImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterISS3IUC3_Superclass self) -> itk::Functor::Clamp< short,unsigned char >
        GetFunctor(itkClampImageFilterISS3IUC3_Superclass self) -> itk::Functor::Clamp< short,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS3IUC3_Superclass self, itk::Functor::Clamp< short,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IUC3_Superclass

        Create a new object of the class itkClampImageFilterISS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3IUC3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_Clone, None, itkClampImageFilterISS3IUC3_Superclass)
itkClampImageFilterISS3IUC3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_GetFunctor, None, itkClampImageFilterISS3IUC3_Superclass)
itkClampImageFilterISS3IUC3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_SetFunctor, None, itkClampImageFilterISS3IUC3_Superclass)
itkClampImageFilterISS3IUC3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_swigregister
itkClampImageFilterISS3IUC3_Superclass_swigregister(itkClampImageFilterISS3IUC3_Superclass)

def itkClampImageFilterISS3IUC3_Superclass___New_orig__() -> "itkClampImageFilterISS3IUC3_Superclass_Pointer":
    """itkClampImageFilterISS3IUC3_Superclass___New_orig__() -> itkClampImageFilterISS3IUC3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass___New_orig__()

def itkClampImageFilterISS3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUC3_Superclass *":
    """itkClampImageFilterISS3IUC3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS3IUC3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_cast(obj)

class itkClampImageFilterISS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    """Proxy of C++ itkClampImageFilterISS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3IUS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3IUS3_Superclass_Pointer":
        """Clone(itkClampImageFilterISS3IUS3_Superclass self) -> itkClampImageFilterISS3IUS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,unsigned short > const &":
        """
        GetFunctor(itkClampImageFilterISS3IUS3_Superclass self) -> itk::Functor::Clamp< short,unsigned short >
        GetFunctor(itkClampImageFilterISS3IUS3_Superclass self) -> itk::Functor::Clamp< short,unsigned short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,unsigned short > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS3IUS3_Superclass self, itk::Functor::Clamp< short,unsigned short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3IUS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IUS3_Superclass

        Create a new object of the class itkClampImageFilterISS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3IUS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_Clone, None, itkClampImageFilterISS3IUS3_Superclass)
itkClampImageFilterISS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_GetFunctor, None, itkClampImageFilterISS3IUS3_Superclass)
itkClampImageFilterISS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_SetFunctor, None, itkClampImageFilterISS3IUS3_Superclass)
itkClampImageFilterISS3IUS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_swigregister
itkClampImageFilterISS3IUS3_Superclass_swigregister(itkClampImageFilterISS3IUS3_Superclass)

def itkClampImageFilterISS3IUS3_Superclass___New_orig__() -> "itkClampImageFilterISS3IUS3_Superclass_Pointer":
    """itkClampImageFilterISS3IUS3_Superclass___New_orig__() -> itkClampImageFilterISS3IUS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass___New_orig__()

def itkClampImageFilterISS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUS3_Superclass *":
    """itkClampImageFilterISS3IUS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS3IUS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_cast(obj)

class itkClampImageFilterIUC2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    """Proxy of C++ itkClampImageFilterIUC2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2ID2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2ID2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2ID2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC2ID2_Superclass self) -> itkClampImageFilterIUC2ID2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,double > const &":
        """
        GetFunctor(itkClampImageFilterIUC2ID2_Superclass self) -> itk::Functor::Clamp< unsigned char,double >
        GetFunctor(itkClampImageFilterIUC2ID2_Superclass self) -> itk::Functor::Clamp< unsigned char,double > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,double > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC2ID2_Superclass self, itk::Functor::Clamp< unsigned char,double > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2ID2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2ID2_Superclass

        Create a new object of the class itkClampImageFilterIUC2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2ID2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_Clone, None, itkClampImageFilterIUC2ID2_Superclass)
itkClampImageFilterIUC2ID2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_GetFunctor, None, itkClampImageFilterIUC2ID2_Superclass)
itkClampImageFilterIUC2ID2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_SetFunctor, None, itkClampImageFilterIUC2ID2_Superclass)
itkClampImageFilterIUC2ID2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_swigregister
itkClampImageFilterIUC2ID2_Superclass_swigregister(itkClampImageFilterIUC2ID2_Superclass)

def itkClampImageFilterIUC2ID2_Superclass___New_orig__() -> "itkClampImageFilterIUC2ID2_Superclass_Pointer":
    """itkClampImageFilterIUC2ID2_Superclass___New_orig__() -> itkClampImageFilterIUC2ID2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass___New_orig__()

def itkClampImageFilterIUC2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ID2_Superclass *":
    """itkClampImageFilterIUC2ID2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC2ID2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_cast(obj)

class itkClampImageFilterIUC2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    """Proxy of C++ itkClampImageFilterIUC2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2IF2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2IF2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC2IF2_Superclass self) -> itkClampImageFilterIUC2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,float > const &":
        """
        GetFunctor(itkClampImageFilterIUC2IF2_Superclass self) -> itk::Functor::Clamp< unsigned char,float >
        GetFunctor(itkClampImageFilterIUC2IF2_Superclass self) -> itk::Functor::Clamp< unsigned char,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC2IF2_Superclass self, itk::Functor::Clamp< unsigned char,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IF2_Superclass

        Create a new object of the class itkClampImageFilterIUC2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2IF2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_Clone, None, itkClampImageFilterIUC2IF2_Superclass)
itkClampImageFilterIUC2IF2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_GetFunctor, None, itkClampImageFilterIUC2IF2_Superclass)
itkClampImageFilterIUC2IF2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_SetFunctor, None, itkClampImageFilterIUC2IF2_Superclass)
itkClampImageFilterIUC2IF2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_swigregister
itkClampImageFilterIUC2IF2_Superclass_swigregister(itkClampImageFilterIUC2IF2_Superclass)

def itkClampImageFilterIUC2IF2_Superclass___New_orig__() -> "itkClampImageFilterIUC2IF2_Superclass_Pointer":
    """itkClampImageFilterIUC2IF2_Superclass___New_orig__() -> itkClampImageFilterIUC2IF2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass___New_orig__()

def itkClampImageFilterIUC2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IF2_Superclass *":
    """itkClampImageFilterIUC2IF2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC2IF2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_cast(obj)

class itkClampImageFilterIUC2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    """Proxy of C++ itkClampImageFilterIUC2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2ISS2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC2ISS2_Superclass self) -> itkClampImageFilterIUC2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,short > const &":
        """
        GetFunctor(itkClampImageFilterIUC2ISS2_Superclass self) -> itk::Functor::Clamp< unsigned char,short >
        GetFunctor(itkClampImageFilterIUC2ISS2_Superclass self) -> itk::Functor::Clamp< unsigned char,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC2ISS2_Superclass self, itk::Functor::Clamp< unsigned char,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2ISS2_Superclass

        Create a new object of the class itkClampImageFilterIUC2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2ISS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_Clone, None, itkClampImageFilterIUC2ISS2_Superclass)
itkClampImageFilterIUC2ISS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_GetFunctor, None, itkClampImageFilterIUC2ISS2_Superclass)
itkClampImageFilterIUC2ISS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_SetFunctor, None, itkClampImageFilterIUC2ISS2_Superclass)
itkClampImageFilterIUC2ISS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_swigregister
itkClampImageFilterIUC2ISS2_Superclass_swigregister(itkClampImageFilterIUC2ISS2_Superclass)

def itkClampImageFilterIUC2ISS2_Superclass___New_orig__() -> "itkClampImageFilterIUC2ISS2_Superclass_Pointer":
    """itkClampImageFilterIUC2ISS2_Superclass___New_orig__() -> itkClampImageFilterIUC2ISS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass___New_orig__()

def itkClampImageFilterIUC2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ISS2_Superclass *":
    """itkClampImageFilterIUC2ISS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC2ISS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_cast(obj)

class itkClampImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkClampImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC2IUC2_Superclass self) -> itkClampImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterIUC2IUC2_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned char >
        GetFunctor(itkClampImageFilterIUC2IUC2_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC2IUC2_Superclass self, itk::Functor::Clamp< unsigned char,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkClampImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_Clone, None, itkClampImageFilterIUC2IUC2_Superclass)
itkClampImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_GetFunctor, None, itkClampImageFilterIUC2IUC2_Superclass)
itkClampImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_SetFunctor, None, itkClampImageFilterIUC2IUC2_Superclass)
itkClampImageFilterIUC2IUC2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_swigregister
itkClampImageFilterIUC2IUC2_Superclass_swigregister(itkClampImageFilterIUC2IUC2_Superclass)

def itkClampImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkClampImageFilterIUC2IUC2_Superclass_Pointer":
    """itkClampImageFilterIUC2IUC2_Superclass___New_orig__() -> itkClampImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass___New_orig__()

def itkClampImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUC2_Superclass *":
    """itkClampImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC2IUC2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_cast(obj)

class itkClampImageFilterIUC2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    """Proxy of C++ itkClampImageFilterIUC2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2IUS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2IUS2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC2IUS2_Superclass self) -> itkClampImageFilterIUC2IUS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,unsigned short > const &":
        """
        GetFunctor(itkClampImageFilterIUC2IUS2_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned short >
        GetFunctor(itkClampImageFilterIUC2IUS2_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,unsigned short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC2IUS2_Superclass self, itk::Functor::Clamp< unsigned char,unsigned short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2IUS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IUS2_Superclass

        Create a new object of the class itkClampImageFilterIUC2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2IUS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_Clone, None, itkClampImageFilterIUC2IUS2_Superclass)
itkClampImageFilterIUC2IUS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_GetFunctor, None, itkClampImageFilterIUC2IUS2_Superclass)
itkClampImageFilterIUC2IUS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_SetFunctor, None, itkClampImageFilterIUC2IUS2_Superclass)
itkClampImageFilterIUC2IUS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_swigregister
itkClampImageFilterIUC2IUS2_Superclass_swigregister(itkClampImageFilterIUC2IUS2_Superclass)

def itkClampImageFilterIUC2IUS2_Superclass___New_orig__() -> "itkClampImageFilterIUC2IUS2_Superclass_Pointer":
    """itkClampImageFilterIUC2IUS2_Superclass___New_orig__() -> itkClampImageFilterIUC2IUS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass___New_orig__()

def itkClampImageFilterIUC2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUS2_Superclass *":
    """itkClampImageFilterIUC2IUS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC2IUS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_cast(obj)

class itkClampImageFilterIUC3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    """Proxy of C++ itkClampImageFilterIUC3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3ID3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3ID3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3ID3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC3ID3_Superclass self) -> itkClampImageFilterIUC3ID3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,double > const &":
        """
        GetFunctor(itkClampImageFilterIUC3ID3_Superclass self) -> itk::Functor::Clamp< unsigned char,double >
        GetFunctor(itkClampImageFilterIUC3ID3_Superclass self) -> itk::Functor::Clamp< unsigned char,double > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,double > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC3ID3_Superclass self, itk::Functor::Clamp< unsigned char,double > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3ID3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3ID3_Superclass

        Create a new object of the class itkClampImageFilterIUC3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3ID3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_Clone, None, itkClampImageFilterIUC3ID3_Superclass)
itkClampImageFilterIUC3ID3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_GetFunctor, None, itkClampImageFilterIUC3ID3_Superclass)
itkClampImageFilterIUC3ID3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_SetFunctor, None, itkClampImageFilterIUC3ID3_Superclass)
itkClampImageFilterIUC3ID3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_swigregister
itkClampImageFilterIUC3ID3_Superclass_swigregister(itkClampImageFilterIUC3ID3_Superclass)

def itkClampImageFilterIUC3ID3_Superclass___New_orig__() -> "itkClampImageFilterIUC3ID3_Superclass_Pointer":
    """itkClampImageFilterIUC3ID3_Superclass___New_orig__() -> itkClampImageFilterIUC3ID3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass___New_orig__()

def itkClampImageFilterIUC3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ID3_Superclass *":
    """itkClampImageFilterIUC3ID3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC3ID3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_cast(obj)

class itkClampImageFilterIUC3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    """Proxy of C++ itkClampImageFilterIUC3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3IF3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3IF3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC3IF3_Superclass self) -> itkClampImageFilterIUC3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,float > const &":
        """
        GetFunctor(itkClampImageFilterIUC3IF3_Superclass self) -> itk::Functor::Clamp< unsigned char,float >
        GetFunctor(itkClampImageFilterIUC3IF3_Superclass self) -> itk::Functor::Clamp< unsigned char,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC3IF3_Superclass self, itk::Functor::Clamp< unsigned char,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IF3_Superclass

        Create a new object of the class itkClampImageFilterIUC3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3IF3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_Clone, None, itkClampImageFilterIUC3IF3_Superclass)
itkClampImageFilterIUC3IF3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_GetFunctor, None, itkClampImageFilterIUC3IF3_Superclass)
itkClampImageFilterIUC3IF3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_SetFunctor, None, itkClampImageFilterIUC3IF3_Superclass)
itkClampImageFilterIUC3IF3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_swigregister
itkClampImageFilterIUC3IF3_Superclass_swigregister(itkClampImageFilterIUC3IF3_Superclass)

def itkClampImageFilterIUC3IF3_Superclass___New_orig__() -> "itkClampImageFilterIUC3IF3_Superclass_Pointer":
    """itkClampImageFilterIUC3IF3_Superclass___New_orig__() -> itkClampImageFilterIUC3IF3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass___New_orig__()

def itkClampImageFilterIUC3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IF3_Superclass *":
    """itkClampImageFilterIUC3IF3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC3IF3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_cast(obj)

class itkClampImageFilterIUC3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    """Proxy of C++ itkClampImageFilterIUC3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3ISS3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC3ISS3_Superclass self) -> itkClampImageFilterIUC3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,short > const &":
        """
        GetFunctor(itkClampImageFilterIUC3ISS3_Superclass self) -> itk::Functor::Clamp< unsigned char,short >
        GetFunctor(itkClampImageFilterIUC3ISS3_Superclass self) -> itk::Functor::Clamp< unsigned char,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC3ISS3_Superclass self, itk::Functor::Clamp< unsigned char,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3ISS3_Superclass

        Create a new object of the class itkClampImageFilterIUC3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3ISS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_Clone, None, itkClampImageFilterIUC3ISS3_Superclass)
itkClampImageFilterIUC3ISS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_GetFunctor, None, itkClampImageFilterIUC3ISS3_Superclass)
itkClampImageFilterIUC3ISS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_SetFunctor, None, itkClampImageFilterIUC3ISS3_Superclass)
itkClampImageFilterIUC3ISS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_swigregister
itkClampImageFilterIUC3ISS3_Superclass_swigregister(itkClampImageFilterIUC3ISS3_Superclass)

def itkClampImageFilterIUC3ISS3_Superclass___New_orig__() -> "itkClampImageFilterIUC3ISS3_Superclass_Pointer":
    """itkClampImageFilterIUC3ISS3_Superclass___New_orig__() -> itkClampImageFilterIUC3ISS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass___New_orig__()

def itkClampImageFilterIUC3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ISS3_Superclass *":
    """itkClampImageFilterIUC3ISS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC3ISS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_cast(obj)

class itkClampImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkClampImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC3IUC3_Superclass self) -> itkClampImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterIUC3IUC3_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned char >
        GetFunctor(itkClampImageFilterIUC3IUC3_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC3IUC3_Superclass self, itk::Functor::Clamp< unsigned char,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkClampImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_Clone, None, itkClampImageFilterIUC3IUC3_Superclass)
itkClampImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_GetFunctor, None, itkClampImageFilterIUC3IUC3_Superclass)
itkClampImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_SetFunctor, None, itkClampImageFilterIUC3IUC3_Superclass)
itkClampImageFilterIUC3IUC3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_swigregister
itkClampImageFilterIUC3IUC3_Superclass_swigregister(itkClampImageFilterIUC3IUC3_Superclass)

def itkClampImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkClampImageFilterIUC3IUC3_Superclass_Pointer":
    """itkClampImageFilterIUC3IUC3_Superclass___New_orig__() -> itkClampImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass___New_orig__()

def itkClampImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUC3_Superclass *":
    """itkClampImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC3IUC3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_cast(obj)

class itkClampImageFilterIUC3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    """Proxy of C++ itkClampImageFilterIUC3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3IUS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3IUS3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC3IUS3_Superclass self) -> itkClampImageFilterIUC3IUS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,unsigned short > const &":
        """
        GetFunctor(itkClampImageFilterIUC3IUS3_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned short >
        GetFunctor(itkClampImageFilterIUC3IUS3_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,unsigned short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC3IUS3_Superclass self, itk::Functor::Clamp< unsigned char,unsigned short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3IUS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IUS3_Superclass

        Create a new object of the class itkClampImageFilterIUC3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3IUS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_Clone, None, itkClampImageFilterIUC3IUS3_Superclass)
itkClampImageFilterIUC3IUS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_GetFunctor, None, itkClampImageFilterIUC3IUS3_Superclass)
itkClampImageFilterIUC3IUS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_SetFunctor, None, itkClampImageFilterIUC3IUS3_Superclass)
itkClampImageFilterIUC3IUS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_swigregister
itkClampImageFilterIUC3IUS3_Superclass_swigregister(itkClampImageFilterIUC3IUS3_Superclass)

def itkClampImageFilterIUC3IUS3_Superclass___New_orig__() -> "itkClampImageFilterIUC3IUS3_Superclass_Pointer":
    """itkClampImageFilterIUC3IUS3_Superclass___New_orig__() -> itkClampImageFilterIUC3IUS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass___New_orig__()

def itkClampImageFilterIUC3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUS3_Superclass *":
    """itkClampImageFilterIUC3IUS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC3IUS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_cast(obj)

class itkClampImageFilterIUS2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    """Proxy of C++ itkClampImageFilterIUS2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS2ID2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS2ID2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS2ID2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUS2ID2_Superclass self) -> itkClampImageFilterIUS2ID2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned short,double > const &":
        """
        GetFunctor(itkClampImageFilterIUS2ID2_Superclass self) -> itk::Functor::Clamp< unsigned short,double >
        GetFunctor(itkClampImageFilterIUS2ID2_Superclass self) -> itk::Functor::Clamp< unsigned short,double > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned short,double > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUS2ID2_Superclass self, itk::Functor::Clamp< unsigned short,double > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS2ID2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2ID2_Superclass

        Create a new object of the class itkClampImageFilterIUS2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS2ID2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_Clone, None, itkClampImageFilterIUS2ID2_Superclass)
itkClampImageFilterIUS2ID2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_GetFunctor, None, itkClampImageFilterIUS2ID2_Superclass)
itkClampImageFilterIUS2ID2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_SetFunctor, None, itkClampImageFilterIUS2ID2_Superclass)
itkClampImageFilterIUS2ID2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_swigregister
itkClampImageFilterIUS2ID2_Superclass_swigregister(itkClampImageFilterIUS2ID2_Superclass)

def itkClampImageFilterIUS2ID2_Superclass___New_orig__() -> "itkClampImageFilterIUS2ID2_Superclass_Pointer":
    """itkClampImageFilterIUS2ID2_Superclass___New_orig__() -> itkClampImageFilterIUS2ID2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass___New_orig__()

def itkClampImageFilterIUS2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2ID2_Superclass *":
    """itkClampImageFilterIUS2ID2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUS2ID2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_cast(obj)

class itkClampImageFilterIUS2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    """Proxy of C++ itkClampImageFilterIUS2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS2IF2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS2IF2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUS2IF2_Superclass self) -> itkClampImageFilterIUS2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned short,float > const &":
        """
        GetFunctor(itkClampImageFilterIUS2IF2_Superclass self) -> itk::Functor::Clamp< unsigned short,float >
        GetFunctor(itkClampImageFilterIUS2IF2_Superclass self) -> itk::Functor::Clamp< unsigned short,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned short,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUS2IF2_Superclass self, itk::Functor::Clamp< unsigned short,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IF2_Superclass

        Create a new object of the class itkClampImageFilterIUS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS2IF2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_Clone, None, itkClampImageFilterIUS2IF2_Superclass)
itkClampImageFilterIUS2IF2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_GetFunctor, None, itkClampImageFilterIUS2IF2_Superclass)
itkClampImageFilterIUS2IF2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_SetFunctor, None, itkClampImageFilterIUS2IF2_Superclass)
itkClampImageFilterIUS2IF2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_swigregister
itkClampImageFilterIUS2IF2_Superclass_swigregister(itkClampImageFilterIUS2IF2_Superclass)

def itkClampImageFilterIUS2IF2_Superclass___New_orig__() -> "itkClampImageFilterIUS2IF2_Superclass_Pointer":
    """itkClampImageFilterIUS2IF2_Superclass___New_orig__() -> itkClampImageFilterIUS2IF2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass___New_orig__()

def itkClampImageFilterIUS2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IF2_Superclass *":
    """itkClampImageFilterIUS2IF2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUS2IF2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_cast(obj)

class itkClampImageFilterIUS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    """Proxy of C++ itkClampImageFilterIUS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS2ISS2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUS2ISS2_Superclass self) -> itkClampImageFilterIUS2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned short,short > const &":
        """
        GetFunctor(itkClampImageFilterIUS2ISS2_Superclass self) -> itk::Functor::Clamp< unsigned short,short >
        GetFunctor(itkClampImageFilterIUS2ISS2_Superclass self) -> itk::Functor::Clamp< unsigned short,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned short,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUS2ISS2_Superclass self, itk::Functor::Clamp< unsigned short,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2ISS2_Superclass

        Create a new object of the class itkClampImageFilterIUS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS2ISS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_Clone, None, itkClampImageFilterIUS2ISS2_Superclass)
itkClampImageFilterIUS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_GetFunctor, None, itkClampImageFilterIUS2ISS2_Superclass)
itkClampImageFilterIUS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_SetFunctor, None, itkClampImageFilterIUS2ISS2_Superclass)
itkClampImageFilterIUS2ISS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_swigregister
itkClampImageFilterIUS2ISS2_Superclass_swigregister(itkClampImageFilterIUS2ISS2_Superclass)

def itkClampImageFilterIUS2ISS2_Superclass___New_orig__() -> "itkClampImageFilterIUS2ISS2_Superclass_Pointer":
    """itkClampImageFilterIUS2ISS2_Superclass___New_orig__() -> itkClampImageFilterIUS2ISS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass___New_orig__()

def itkClampImageFilterIUS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2ISS2_Superclass *":
    """itkClampImageFilterIUS2ISS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUS2ISS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_cast(obj)

class itkClampImageFilterIUS2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    """Proxy of C++ itkClampImageFilterIUS2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS2IUC2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUS2IUC2_Superclass self) -> itkClampImageFilterIUS2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned short,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterIUS2IUC2_Superclass self) -> itk::Functor::Clamp< unsigned short,unsigned char >
        GetFunctor(itkClampImageFilterIUS2IUC2_Superclass self) -> itk::Functor::Clamp< unsigned short,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned short,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUS2IUC2_Superclass self, itk::Functor::Clamp< unsigned short,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IUC2_Superclass

        Create a new object of the class itkClampImageFilterIUS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS2IUC2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_Clone, None, itkClampImageFilterIUS2IUC2_Superclass)
itkClampImageFilterIUS2IUC2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_GetFunctor, None, itkClampImageFilterIUS2IUC2_Superclass)
itkClampImageFilterIUS2IUC2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_SetFunctor, None, itkClampImageFilterIUS2IUC2_Superclass)
itkClampImageFilterIUS2IUC2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_swigregister
itkClampImageFilterIUS2IUC2_Superclass_swigregister(itkClampImageFilterIUS2IUC2_Superclass)

def itkClampImageFilterIUS2IUC2_Superclass___New_orig__() -> "itkClampImageFilterIUS2IUC2_Superclass_Pointer":
    """itkClampImageFilterIUS2IUC2_Superclass___New_orig__() -> itkClampImageFilterIUS2IUC2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass___New_orig__()

def itkClampImageFilterIUS2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IUC2_Superclass *":
    """itkClampImageFilterIUS2IUC2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUS2IUC2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_cast(obj)

class itkClampImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkClampImageFilterIUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS2IUS2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUS2IUS2_Superclass self) -> itkClampImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned short,unsigned short > const &":
        """
        GetFunctor(itkClampImageFilterIUS2IUS2_Superclass self) -> itk::Functor::Clamp< unsigned short,unsigned short >
        GetFunctor(itkClampImageFilterIUS2IUS2_Superclass self) -> itk::Functor::Clamp< unsigned short,unsigned short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned short,unsigned short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUS2IUS2_Superclass self, itk::Functor::Clamp< unsigned short,unsigned short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS2IUS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkClampImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS2IUS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_Clone, None, itkClampImageFilterIUS2IUS2_Superclass)
itkClampImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_GetFunctor, None, itkClampImageFilterIUS2IUS2_Superclass)
itkClampImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_SetFunctor, None, itkClampImageFilterIUS2IUS2_Superclass)
itkClampImageFilterIUS2IUS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_swigregister
itkClampImageFilterIUS2IUS2_Superclass_swigregister(itkClampImageFilterIUS2IUS2_Superclass)

def itkClampImageFilterIUS2IUS2_Superclass___New_orig__() -> "itkClampImageFilterIUS2IUS2_Superclass_Pointer":
    """itkClampImageFilterIUS2IUS2_Superclass___New_orig__() -> itkClampImageFilterIUS2IUS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass___New_orig__()

def itkClampImageFilterIUS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IUS2_Superclass *":
    """itkClampImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUS2IUS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_cast(obj)

class itkClampImageFilterIUS3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    """Proxy of C++ itkClampImageFilterIUS3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS3ID3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS3ID3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS3ID3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUS3ID3_Superclass self) -> itkClampImageFilterIUS3ID3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned short,double > const &":
        """
        GetFunctor(itkClampImageFilterIUS3ID3_Superclass self) -> itk::Functor::Clamp< unsigned short,double >
        GetFunctor(itkClampImageFilterIUS3ID3_Superclass self) -> itk::Functor::Clamp< unsigned short,double > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned short,double > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUS3ID3_Superclass self, itk::Functor::Clamp< unsigned short,double > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS3ID3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3ID3_Superclass

        Create a new object of the class itkClampImageFilterIUS3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS3ID3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_Clone, None, itkClampImageFilterIUS3ID3_Superclass)
itkClampImageFilterIUS3ID3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_GetFunctor, None, itkClampImageFilterIUS3ID3_Superclass)
itkClampImageFilterIUS3ID3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_SetFunctor, None, itkClampImageFilterIUS3ID3_Superclass)
itkClampImageFilterIUS3ID3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_swigregister
itkClampImageFilterIUS3ID3_Superclass_swigregister(itkClampImageFilterIUS3ID3_Superclass)

def itkClampImageFilterIUS3ID3_Superclass___New_orig__() -> "itkClampImageFilterIUS3ID3_Superclass_Pointer":
    """itkClampImageFilterIUS3ID3_Superclass___New_orig__() -> itkClampImageFilterIUS3ID3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass___New_orig__()

def itkClampImageFilterIUS3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3ID3_Superclass *":
    """itkClampImageFilterIUS3ID3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUS3ID3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_cast(obj)

class itkClampImageFilterIUS3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    """Proxy of C++ itkClampImageFilterIUS3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS3IF3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS3IF3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUS3IF3_Superclass self) -> itkClampImageFilterIUS3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned short,float > const &":
        """
        GetFunctor(itkClampImageFilterIUS3IF3_Superclass self) -> itk::Functor::Clamp< unsigned short,float >
        GetFunctor(itkClampImageFilterIUS3IF3_Superclass self) -> itk::Functor::Clamp< unsigned short,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned short,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUS3IF3_Superclass self, itk::Functor::Clamp< unsigned short,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IF3_Superclass

        Create a new object of the class itkClampImageFilterIUS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS3IF3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_Clone, None, itkClampImageFilterIUS3IF3_Superclass)
itkClampImageFilterIUS3IF3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_GetFunctor, None, itkClampImageFilterIUS3IF3_Superclass)
itkClampImageFilterIUS3IF3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_SetFunctor, None, itkClampImageFilterIUS3IF3_Superclass)
itkClampImageFilterIUS3IF3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_swigregister
itkClampImageFilterIUS3IF3_Superclass_swigregister(itkClampImageFilterIUS3IF3_Superclass)

def itkClampImageFilterIUS3IF3_Superclass___New_orig__() -> "itkClampImageFilterIUS3IF3_Superclass_Pointer":
    """itkClampImageFilterIUS3IF3_Superclass___New_orig__() -> itkClampImageFilterIUS3IF3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass___New_orig__()

def itkClampImageFilterIUS3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IF3_Superclass *":
    """itkClampImageFilterIUS3IF3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUS3IF3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_cast(obj)

class itkClampImageFilterIUS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    """Proxy of C++ itkClampImageFilterIUS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS3ISS3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUS3ISS3_Superclass self) -> itkClampImageFilterIUS3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned short,short > const &":
        """
        GetFunctor(itkClampImageFilterIUS3ISS3_Superclass self) -> itk::Functor::Clamp< unsigned short,short >
        GetFunctor(itkClampImageFilterIUS3ISS3_Superclass self) -> itk::Functor::Clamp< unsigned short,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned short,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUS3ISS3_Superclass self, itk::Functor::Clamp< unsigned short,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3ISS3_Superclass

        Create a new object of the class itkClampImageFilterIUS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS3ISS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_Clone, None, itkClampImageFilterIUS3ISS3_Superclass)
itkClampImageFilterIUS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_GetFunctor, None, itkClampImageFilterIUS3ISS3_Superclass)
itkClampImageFilterIUS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_SetFunctor, None, itkClampImageFilterIUS3ISS3_Superclass)
itkClampImageFilterIUS3ISS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_swigregister
itkClampImageFilterIUS3ISS3_Superclass_swigregister(itkClampImageFilterIUS3ISS3_Superclass)

def itkClampImageFilterIUS3ISS3_Superclass___New_orig__() -> "itkClampImageFilterIUS3ISS3_Superclass_Pointer":
    """itkClampImageFilterIUS3ISS3_Superclass___New_orig__() -> itkClampImageFilterIUS3ISS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass___New_orig__()

def itkClampImageFilterIUS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3ISS3_Superclass *":
    """itkClampImageFilterIUS3ISS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUS3ISS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_cast(obj)

class itkClampImageFilterIUS3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    """Proxy of C++ itkClampImageFilterIUS3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS3IUC3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUS3IUC3_Superclass self) -> itkClampImageFilterIUS3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned short,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterIUS3IUC3_Superclass self) -> itk::Functor::Clamp< unsigned short,unsigned char >
        GetFunctor(itkClampImageFilterIUS3IUC3_Superclass self) -> itk::Functor::Clamp< unsigned short,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned short,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUS3IUC3_Superclass self, itk::Functor::Clamp< unsigned short,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IUC3_Superclass

        Create a new object of the class itkClampImageFilterIUS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS3IUC3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_Clone, None, itkClampImageFilterIUS3IUC3_Superclass)
itkClampImageFilterIUS3IUC3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_GetFunctor, None, itkClampImageFilterIUS3IUC3_Superclass)
itkClampImageFilterIUS3IUC3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_SetFunctor, None, itkClampImageFilterIUS3IUC3_Superclass)
itkClampImageFilterIUS3IUC3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_swigregister
itkClampImageFilterIUS3IUC3_Superclass_swigregister(itkClampImageFilterIUS3IUC3_Superclass)

def itkClampImageFilterIUS3IUC3_Superclass___New_orig__() -> "itkClampImageFilterIUS3IUC3_Superclass_Pointer":
    """itkClampImageFilterIUS3IUC3_Superclass___New_orig__() -> itkClampImageFilterIUS3IUC3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass___New_orig__()

def itkClampImageFilterIUS3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IUC3_Superclass *":
    """itkClampImageFilterIUS3IUC3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUS3IUC3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_cast(obj)

class itkClampImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkClampImageFilterIUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS3IUS3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUS3IUS3_Superclass self) -> itkClampImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned short,unsigned short > const &":
        """
        GetFunctor(itkClampImageFilterIUS3IUS3_Superclass self) -> itk::Functor::Clamp< unsigned short,unsigned short >
        GetFunctor(itkClampImageFilterIUS3IUS3_Superclass self) -> itk::Functor::Clamp< unsigned short,unsigned short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned short,unsigned short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUS3IUS3_Superclass self, itk::Functor::Clamp< unsigned short,unsigned short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS3IUS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkClampImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS3IUS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_Clone, None, itkClampImageFilterIUS3IUS3_Superclass)
itkClampImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_GetFunctor, None, itkClampImageFilterIUS3IUS3_Superclass)
itkClampImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_SetFunctor, None, itkClampImageFilterIUS3IUS3_Superclass)
itkClampImageFilterIUS3IUS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_swigregister
itkClampImageFilterIUS3IUS3_Superclass_swigregister(itkClampImageFilterIUS3IUS3_Superclass)

def itkClampImageFilterIUS3IUS3_Superclass___New_orig__() -> "itkClampImageFilterIUS3IUS3_Superclass_Pointer":
    """itkClampImageFilterIUS3IUS3_Superclass___New_orig__() -> itkClampImageFilterIUS3IUS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass___New_orig__()

def itkClampImageFilterIUS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IUS3_Superclass *":
    """itkClampImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUS3IUS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_cast(obj)

class itkClampImageFilterID2ID2(itkClampImageFilterID2ID2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkClampImageFilterID2ID2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID2ID2_Pointer":
        """Clone(itkClampImageFilterID2ID2 self) -> itkClampImageFilterID2ID2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2_Clone(self)


    def GetLowerBound(self) -> "double":
        """GetLowerBound(itkClampImageFilterID2ID2 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2_GetLowerBound(self)


    def GetUpperBound(self) -> "double":
        """GetUpperBound(itkClampImageFilterID2ID2 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'double const', upperBound: 'double const') -> "void":
        """
        SetBounds(itkClampImageFilterID2ID2 self, double const lowerBound, double const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterID2ID2"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2ID2

        Create a new object of the class itkClampImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID2ID2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ID2_Clone, None, itkClampImageFilterID2ID2)
itkClampImageFilterID2ID2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ID2_GetLowerBound, None, itkClampImageFilterID2ID2)
itkClampImageFilterID2ID2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ID2_GetUpperBound, None, itkClampImageFilterID2ID2)
itkClampImageFilterID2ID2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ID2_SetBounds, None, itkClampImageFilterID2ID2)
itkClampImageFilterID2ID2_swigregister = _itkClampImageFilterPython.itkClampImageFilterID2ID2_swigregister
itkClampImageFilterID2ID2_swigregister(itkClampImageFilterID2ID2)

def itkClampImageFilterID2ID2___New_orig__() -> "itkClampImageFilterID2ID2_Pointer":
    """itkClampImageFilterID2ID2___New_orig__() -> itkClampImageFilterID2ID2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID2ID2___New_orig__()

def itkClampImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkClampImageFilterID2ID2 *":
    """itkClampImageFilterID2ID2_cast(itkLightObject obj) -> itkClampImageFilterID2ID2"""
    return _itkClampImageFilterPython.itkClampImageFilterID2ID2_cast(obj)

class itkClampImageFilterID2IF2(itkClampImageFilterID2IF2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID2IF2_Pointer":
        """__New_orig__() -> itkClampImageFilterID2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID2IF2_Pointer":
        """Clone(itkClampImageFilterID2IF2 self) -> itkClampImageFilterID2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterID2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterID2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterID2IF2 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IF2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IF2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterID2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IF2

        Create a new object of the class itkClampImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID2IF2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IF2_Clone, None, itkClampImageFilterID2IF2)
itkClampImageFilterID2IF2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IF2_GetLowerBound, None, itkClampImageFilterID2IF2)
itkClampImageFilterID2IF2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IF2_GetUpperBound, None, itkClampImageFilterID2IF2)
itkClampImageFilterID2IF2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IF2_SetBounds, None, itkClampImageFilterID2IF2)
itkClampImageFilterID2IF2_swigregister = _itkClampImageFilterPython.itkClampImageFilterID2IF2_swigregister
itkClampImageFilterID2IF2_swigregister(itkClampImageFilterID2IF2)

def itkClampImageFilterID2IF2___New_orig__() -> "itkClampImageFilterID2IF2_Pointer":
    """itkClampImageFilterID2IF2___New_orig__() -> itkClampImageFilterID2IF2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IF2___New_orig__()

def itkClampImageFilterID2IF2_cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IF2 *":
    """itkClampImageFilterID2IF2_cast(itkLightObject obj) -> itkClampImageFilterID2IF2"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IF2_cast(obj)

class itkClampImageFilterID2ISS2(itkClampImageFilterID2ISS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID2ISS2_Pointer":
        """__New_orig__() -> itkClampImageFilterID2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID2ISS2_Pointer":
        """Clone(itkClampImageFilterID2ISS2 self) -> itkClampImageFilterID2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterID2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterID2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterID2ISS2 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2ISS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID2ISS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterID2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2ISS2

        Create a new object of the class itkClampImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID2ISS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Clone, None, itkClampImageFilterID2ISS2)
itkClampImageFilterID2ISS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_GetLowerBound, None, itkClampImageFilterID2ISS2)
itkClampImageFilterID2ISS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_GetUpperBound, None, itkClampImageFilterID2ISS2)
itkClampImageFilterID2ISS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_SetBounds, None, itkClampImageFilterID2ISS2)
itkClampImageFilterID2ISS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterID2ISS2_swigregister
itkClampImageFilterID2ISS2_swigregister(itkClampImageFilterID2ISS2)

def itkClampImageFilterID2ISS2___New_orig__() -> "itkClampImageFilterID2ISS2_Pointer":
    """itkClampImageFilterID2ISS2___New_orig__() -> itkClampImageFilterID2ISS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID2ISS2___New_orig__()

def itkClampImageFilterID2ISS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterID2ISS2 *":
    """itkClampImageFilterID2ISS2_cast(itkLightObject obj) -> itkClampImageFilterID2ISS2"""
    return _itkClampImageFilterPython.itkClampImageFilterID2ISS2_cast(obj)

class itkClampImageFilterID2IUC2(itkClampImageFilterID2IUC2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID2IUC2_Pointer":
        """__New_orig__() -> itkClampImageFilterID2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID2IUC2_Pointer":
        """Clone(itkClampImageFilterID2IUC2 self) -> itkClampImageFilterID2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterID2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterID2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterID2IUC2 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IUC2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IUC2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterID2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IUC2

        Create a new object of the class itkClampImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID2IUC2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Clone, None, itkClampImageFilterID2IUC2)
itkClampImageFilterID2IUC2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_GetLowerBound, None, itkClampImageFilterID2IUC2)
itkClampImageFilterID2IUC2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_GetUpperBound, None, itkClampImageFilterID2IUC2)
itkClampImageFilterID2IUC2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_SetBounds, None, itkClampImageFilterID2IUC2)
itkClampImageFilterID2IUC2_swigregister = _itkClampImageFilterPython.itkClampImageFilterID2IUC2_swigregister
itkClampImageFilterID2IUC2_swigregister(itkClampImageFilterID2IUC2)

def itkClampImageFilterID2IUC2___New_orig__() -> "itkClampImageFilterID2IUC2_Pointer":
    """itkClampImageFilterID2IUC2___New_orig__() -> itkClampImageFilterID2IUC2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IUC2___New_orig__()

def itkClampImageFilterID2IUC2_cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IUC2 *":
    """itkClampImageFilterID2IUC2_cast(itkLightObject obj) -> itkClampImageFilterID2IUC2"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IUC2_cast(obj)

class itkClampImageFilterID2IUS2(itkClampImageFilterID2IUS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID2IUS2_Pointer":
        """__New_orig__() -> itkClampImageFilterID2IUS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID2IUS2_Pointer":
        """Clone(itkClampImageFilterID2IUS2 self) -> itkClampImageFilterID2IUS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Clone(self)


    def GetLowerBound(self) -> "unsigned short":
        """GetLowerBound(itkClampImageFilterID2IUS2 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned short":
        """GetUpperBound(itkClampImageFilterID2IUS2 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned short const', upperBound: 'unsigned short const') -> "void":
        """
        SetBounds(itkClampImageFilterID2IUS2 self, unsigned short const lowerBound, unsigned short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IUS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IUS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterID2IUS2"""
        return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IUS2

        Create a new object of the class itkClampImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID2IUS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Clone, None, itkClampImageFilterID2IUS2)
itkClampImageFilterID2IUS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_GetLowerBound, None, itkClampImageFilterID2IUS2)
itkClampImageFilterID2IUS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_GetUpperBound, None, itkClampImageFilterID2IUS2)
itkClampImageFilterID2IUS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_SetBounds, None, itkClampImageFilterID2IUS2)
itkClampImageFilterID2IUS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterID2IUS2_swigregister
itkClampImageFilterID2IUS2_swigregister(itkClampImageFilterID2IUS2)

def itkClampImageFilterID2IUS2___New_orig__() -> "itkClampImageFilterID2IUS2_Pointer":
    """itkClampImageFilterID2IUS2___New_orig__() -> itkClampImageFilterID2IUS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IUS2___New_orig__()

def itkClampImageFilterID2IUS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterID2IUS2 *":
    """itkClampImageFilterID2IUS2_cast(itkLightObject obj) -> itkClampImageFilterID2IUS2"""
    return _itkClampImageFilterPython.itkClampImageFilterID2IUS2_cast(obj)

class itkClampImageFilterID3ID3(itkClampImageFilterID3ID3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkClampImageFilterID3ID3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID3ID3_Pointer":
        """Clone(itkClampImageFilterID3ID3 self) -> itkClampImageFilterID3ID3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3_Clone(self)


    def GetLowerBound(self) -> "double":
        """GetLowerBound(itkClampImageFilterID3ID3 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3_GetLowerBound(self)


    def GetUpperBound(self) -> "double":
        """GetUpperBound(itkClampImageFilterID3ID3 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'double const', upperBound: 'double const') -> "void":
        """
        SetBounds(itkClampImageFilterID3ID3 self, double const lowerBound, double const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterID3ID3"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3ID3

        Create a new object of the class itkClampImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID3ID3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ID3_Clone, None, itkClampImageFilterID3ID3)
itkClampImageFilterID3ID3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ID3_GetLowerBound, None, itkClampImageFilterID3ID3)
itkClampImageFilterID3ID3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ID3_GetUpperBound, None, itkClampImageFilterID3ID3)
itkClampImageFilterID3ID3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ID3_SetBounds, None, itkClampImageFilterID3ID3)
itkClampImageFilterID3ID3_swigregister = _itkClampImageFilterPython.itkClampImageFilterID3ID3_swigregister
itkClampImageFilterID3ID3_swigregister(itkClampImageFilterID3ID3)

def itkClampImageFilterID3ID3___New_orig__() -> "itkClampImageFilterID3ID3_Pointer":
    """itkClampImageFilterID3ID3___New_orig__() -> itkClampImageFilterID3ID3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID3ID3___New_orig__()

def itkClampImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkClampImageFilterID3ID3 *":
    """itkClampImageFilterID3ID3_cast(itkLightObject obj) -> itkClampImageFilterID3ID3"""
    return _itkClampImageFilterPython.itkClampImageFilterID3ID3_cast(obj)

class itkClampImageFilterID3IF3(itkClampImageFilterID3IF3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID3IF3_Pointer":
        """__New_orig__() -> itkClampImageFilterID3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID3IF3_Pointer":
        """Clone(itkClampImageFilterID3IF3 self) -> itkClampImageFilterID3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterID3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterID3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterID3IF3 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IF3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IF3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterID3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IF3

        Create a new object of the class itkClampImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID3IF3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IF3_Clone, None, itkClampImageFilterID3IF3)
itkClampImageFilterID3IF3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IF3_GetLowerBound, None, itkClampImageFilterID3IF3)
itkClampImageFilterID3IF3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IF3_GetUpperBound, None, itkClampImageFilterID3IF3)
itkClampImageFilterID3IF3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IF3_SetBounds, None, itkClampImageFilterID3IF3)
itkClampImageFilterID3IF3_swigregister = _itkClampImageFilterPython.itkClampImageFilterID3IF3_swigregister
itkClampImageFilterID3IF3_swigregister(itkClampImageFilterID3IF3)

def itkClampImageFilterID3IF3___New_orig__() -> "itkClampImageFilterID3IF3_Pointer":
    """itkClampImageFilterID3IF3___New_orig__() -> itkClampImageFilterID3IF3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IF3___New_orig__()

def itkClampImageFilterID3IF3_cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IF3 *":
    """itkClampImageFilterID3IF3_cast(itkLightObject obj) -> itkClampImageFilterID3IF3"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IF3_cast(obj)

class itkClampImageFilterID3ISS3(itkClampImageFilterID3ISS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID3ISS3_Pointer":
        """__New_orig__() -> itkClampImageFilterID3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID3ISS3_Pointer":
        """Clone(itkClampImageFilterID3ISS3 self) -> itkClampImageFilterID3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterID3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterID3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterID3ISS3 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3ISS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID3ISS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterID3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3ISS3

        Create a new object of the class itkClampImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID3ISS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Clone, None, itkClampImageFilterID3ISS3)
itkClampImageFilterID3ISS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_GetLowerBound, None, itkClampImageFilterID3ISS3)
itkClampImageFilterID3ISS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_GetUpperBound, None, itkClampImageFilterID3ISS3)
itkClampImageFilterID3ISS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_SetBounds, None, itkClampImageFilterID3ISS3)
itkClampImageFilterID3ISS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterID3ISS3_swigregister
itkClampImageFilterID3ISS3_swigregister(itkClampImageFilterID3ISS3)

def itkClampImageFilterID3ISS3___New_orig__() -> "itkClampImageFilterID3ISS3_Pointer":
    """itkClampImageFilterID3ISS3___New_orig__() -> itkClampImageFilterID3ISS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID3ISS3___New_orig__()

def itkClampImageFilterID3ISS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterID3ISS3 *":
    """itkClampImageFilterID3ISS3_cast(itkLightObject obj) -> itkClampImageFilterID3ISS3"""
    return _itkClampImageFilterPython.itkClampImageFilterID3ISS3_cast(obj)

class itkClampImageFilterID3IUC3(itkClampImageFilterID3IUC3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID3IUC3_Pointer":
        """__New_orig__() -> itkClampImageFilterID3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID3IUC3_Pointer":
        """Clone(itkClampImageFilterID3IUC3 self) -> itkClampImageFilterID3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterID3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterID3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterID3IUC3 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IUC3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IUC3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterID3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IUC3

        Create a new object of the class itkClampImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID3IUC3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Clone, None, itkClampImageFilterID3IUC3)
itkClampImageFilterID3IUC3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_GetLowerBound, None, itkClampImageFilterID3IUC3)
itkClampImageFilterID3IUC3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_GetUpperBound, None, itkClampImageFilterID3IUC3)
itkClampImageFilterID3IUC3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_SetBounds, None, itkClampImageFilterID3IUC3)
itkClampImageFilterID3IUC3_swigregister = _itkClampImageFilterPython.itkClampImageFilterID3IUC3_swigregister
itkClampImageFilterID3IUC3_swigregister(itkClampImageFilterID3IUC3)

def itkClampImageFilterID3IUC3___New_orig__() -> "itkClampImageFilterID3IUC3_Pointer":
    """itkClampImageFilterID3IUC3___New_orig__() -> itkClampImageFilterID3IUC3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IUC3___New_orig__()

def itkClampImageFilterID3IUC3_cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IUC3 *":
    """itkClampImageFilterID3IUC3_cast(itkLightObject obj) -> itkClampImageFilterID3IUC3"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IUC3_cast(obj)

class itkClampImageFilterID3IUS3(itkClampImageFilterID3IUS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterID3IUS3_Pointer":
        """__New_orig__() -> itkClampImageFilterID3IUS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterID3IUS3_Pointer":
        """Clone(itkClampImageFilterID3IUS3 self) -> itkClampImageFilterID3IUS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Clone(self)


    def GetLowerBound(self) -> "unsigned short":
        """GetLowerBound(itkClampImageFilterID3IUS3 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned short":
        """GetUpperBound(itkClampImageFilterID3IUS3 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned short const', upperBound: 'unsigned short const') -> "void":
        """
        SetBounds(itkClampImageFilterID3IUS3 self, unsigned short const lowerBound, unsigned short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IUS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IUS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterID3IUS3"""
        return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IUS3

        Create a new object of the class itkClampImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterID3IUS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Clone, None, itkClampImageFilterID3IUS3)
itkClampImageFilterID3IUS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_GetLowerBound, None, itkClampImageFilterID3IUS3)
itkClampImageFilterID3IUS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_GetUpperBound, None, itkClampImageFilterID3IUS3)
itkClampImageFilterID3IUS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_SetBounds, None, itkClampImageFilterID3IUS3)
itkClampImageFilterID3IUS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterID3IUS3_swigregister
itkClampImageFilterID3IUS3_swigregister(itkClampImageFilterID3IUS3)

def itkClampImageFilterID3IUS3___New_orig__() -> "itkClampImageFilterID3IUS3_Pointer":
    """itkClampImageFilterID3IUS3___New_orig__() -> itkClampImageFilterID3IUS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IUS3___New_orig__()

def itkClampImageFilterID3IUS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterID3IUS3 *":
    """itkClampImageFilterID3IUS3_cast(itkLightObject obj) -> itkClampImageFilterID3IUS3"""
    return _itkClampImageFilterPython.itkClampImageFilterID3IUS3_cast(obj)

class itkClampImageFilterIF2ID2(itkClampImageFilterIF2ID2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2ID2_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2ID2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2ID2_Pointer":
        """Clone(itkClampImageFilterIF2ID2 self) -> itkClampImageFilterIF2ID2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Clone(self)


    def GetLowerBound(self) -> "double":
        """GetLowerBound(itkClampImageFilterIF2ID2 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_GetLowerBound(self)


    def GetUpperBound(self) -> "double":
        """GetUpperBound(itkClampImageFilterIF2ID2 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'double const', upperBound: 'double const') -> "void":
        """
        SetBounds(itkClampImageFilterIF2ID2 self, double const lowerBound, double const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2ID2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ID2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2ID2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2ID2

        Create a new object of the class itkClampImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2ID2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Clone, None, itkClampImageFilterIF2ID2)
itkClampImageFilterIF2ID2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_GetLowerBound, None, itkClampImageFilterIF2ID2)
itkClampImageFilterIF2ID2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_GetUpperBound, None, itkClampImageFilterIF2ID2)
itkClampImageFilterIF2ID2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_SetBounds, None, itkClampImageFilterIF2ID2)
itkClampImageFilterIF2ID2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2ID2_swigregister
itkClampImageFilterIF2ID2_swigregister(itkClampImageFilterIF2ID2)

def itkClampImageFilterIF2ID2___New_orig__() -> "itkClampImageFilterIF2ID2_Pointer":
    """itkClampImageFilterIF2ID2___New_orig__() -> itkClampImageFilterIF2ID2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ID2___New_orig__()

def itkClampImageFilterIF2ID2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ID2 *":
    """itkClampImageFilterIF2ID2_cast(itkLightObject obj) -> itkClampImageFilterIF2ID2"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ID2_cast(obj)

class itkClampImageFilterIF2IF2(itkClampImageFilterIF2IF2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2IF2_Pointer":
        """Clone(itkClampImageFilterIF2IF2 self) -> itkClampImageFilterIF2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterIF2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterIF2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterIF2IF2 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IF2

        Create a new object of the class itkClampImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2IF2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Clone, None, itkClampImageFilterIF2IF2)
itkClampImageFilterIF2IF2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetLowerBound, None, itkClampImageFilterIF2IF2)
itkClampImageFilterIF2IF2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetUpperBound, None, itkClampImageFilterIF2IF2)
itkClampImageFilterIF2IF2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_SetBounds, None, itkClampImageFilterIF2IF2)
itkClampImageFilterIF2IF2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2IF2_swigregister
itkClampImageFilterIF2IF2_swigregister(itkClampImageFilterIF2IF2)

def itkClampImageFilterIF2IF2___New_orig__() -> "itkClampImageFilterIF2IF2_Pointer":
    """itkClampImageFilterIF2IF2___New_orig__() -> itkClampImageFilterIF2IF2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IF2___New_orig__()

def itkClampImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IF2 *":
    """itkClampImageFilterIF2IF2_cast(itkLightObject obj) -> itkClampImageFilterIF2IF2"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_cast(obj)

class itkClampImageFilterIF2ISS2(itkClampImageFilterIF2ISS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2ISS2_Pointer":
        """Clone(itkClampImageFilterIF2ISS2 self) -> itkClampImageFilterIF2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterIF2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterIF2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterIF2ISS2 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2ISS2

        Create a new object of the class itkClampImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2ISS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Clone, None, itkClampImageFilterIF2ISS2)
itkClampImageFilterIF2ISS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetLowerBound, None, itkClampImageFilterIF2ISS2)
itkClampImageFilterIF2ISS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetUpperBound, None, itkClampImageFilterIF2ISS2)
itkClampImageFilterIF2ISS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_SetBounds, None, itkClampImageFilterIF2ISS2)
itkClampImageFilterIF2ISS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_swigregister
itkClampImageFilterIF2ISS2_swigregister(itkClampImageFilterIF2ISS2)

def itkClampImageFilterIF2ISS2___New_orig__() -> "itkClampImageFilterIF2ISS2_Pointer":
    """itkClampImageFilterIF2ISS2___New_orig__() -> itkClampImageFilterIF2ISS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2___New_orig__()

def itkClampImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ISS2 *":
    """itkClampImageFilterIF2ISS2_cast(itkLightObject obj) -> itkClampImageFilterIF2ISS2"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_cast(obj)

class itkClampImageFilterIF2IUC2(itkClampImageFilterIF2IUC2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2IUC2_Pointer":
        """Clone(itkClampImageFilterIF2IUC2 self) -> itkClampImageFilterIF2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterIF2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterIF2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterIF2IUC2 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IUC2

        Create a new object of the class itkClampImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2IUC2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Clone, None, itkClampImageFilterIF2IUC2)
itkClampImageFilterIF2IUC2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetLowerBound, None, itkClampImageFilterIF2IUC2)
itkClampImageFilterIF2IUC2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetUpperBound, None, itkClampImageFilterIF2IUC2)
itkClampImageFilterIF2IUC2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_SetBounds, None, itkClampImageFilterIF2IUC2)
itkClampImageFilterIF2IUC2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_swigregister
itkClampImageFilterIF2IUC2_swigregister(itkClampImageFilterIF2IUC2)

def itkClampImageFilterIF2IUC2___New_orig__() -> "itkClampImageFilterIF2IUC2_Pointer":
    """itkClampImageFilterIF2IUC2___New_orig__() -> itkClampImageFilterIF2IUC2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2___New_orig__()

def itkClampImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUC2 *":
    """itkClampImageFilterIF2IUC2_cast(itkLightObject obj) -> itkClampImageFilterIF2IUC2"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_cast(obj)

class itkClampImageFilterIF2IUS2(itkClampImageFilterIF2IUS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2IUS2_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2IUS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2IUS2_Pointer":
        """Clone(itkClampImageFilterIF2IUS2 self) -> itkClampImageFilterIF2IUS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Clone(self)


    def GetLowerBound(self) -> "unsigned short":
        """GetLowerBound(itkClampImageFilterIF2IUS2 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned short":
        """GetUpperBound(itkClampImageFilterIF2IUS2 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned short const', upperBound: 'unsigned short const') -> "void":
        """
        SetBounds(itkClampImageFilterIF2IUS2 self, unsigned short const lowerBound, unsigned short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IUS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2IUS2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IUS2

        Create a new object of the class itkClampImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2IUS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Clone, None, itkClampImageFilterIF2IUS2)
itkClampImageFilterIF2IUS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_GetLowerBound, None, itkClampImageFilterIF2IUS2)
itkClampImageFilterIF2IUS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_GetUpperBound, None, itkClampImageFilterIF2IUS2)
itkClampImageFilterIF2IUS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_SetBounds, None, itkClampImageFilterIF2IUS2)
itkClampImageFilterIF2IUS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_swigregister
itkClampImageFilterIF2IUS2_swigregister(itkClampImageFilterIF2IUS2)

def itkClampImageFilterIF2IUS2___New_orig__() -> "itkClampImageFilterIF2IUS2_Pointer":
    """itkClampImageFilterIF2IUS2___New_orig__() -> itkClampImageFilterIF2IUS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2___New_orig__()

def itkClampImageFilterIF2IUS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUS2 *":
    """itkClampImageFilterIF2IUS2_cast(itkLightObject obj) -> itkClampImageFilterIF2IUS2"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_cast(obj)

class itkClampImageFilterIF3ID3(itkClampImageFilterIF3ID3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3ID3_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3ID3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3ID3_Pointer":
        """Clone(itkClampImageFilterIF3ID3 self) -> itkClampImageFilterIF3ID3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Clone(self)


    def GetLowerBound(self) -> "double":
        """GetLowerBound(itkClampImageFilterIF3ID3 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_GetLowerBound(self)


    def GetUpperBound(self) -> "double":
        """GetUpperBound(itkClampImageFilterIF3ID3 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'double const', upperBound: 'double const') -> "void":
        """
        SetBounds(itkClampImageFilterIF3ID3 self, double const lowerBound, double const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3ID3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ID3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3ID3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3ID3

        Create a new object of the class itkClampImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3ID3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Clone, None, itkClampImageFilterIF3ID3)
itkClampImageFilterIF3ID3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_GetLowerBound, None, itkClampImageFilterIF3ID3)
itkClampImageFilterIF3ID3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_GetUpperBound, None, itkClampImageFilterIF3ID3)
itkClampImageFilterIF3ID3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_SetBounds, None, itkClampImageFilterIF3ID3)
itkClampImageFilterIF3ID3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3ID3_swigregister
itkClampImageFilterIF3ID3_swigregister(itkClampImageFilterIF3ID3)

def itkClampImageFilterIF3ID3___New_orig__() -> "itkClampImageFilterIF3ID3_Pointer":
    """itkClampImageFilterIF3ID3___New_orig__() -> itkClampImageFilterIF3ID3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ID3___New_orig__()

def itkClampImageFilterIF3ID3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ID3 *":
    """itkClampImageFilterIF3ID3_cast(itkLightObject obj) -> itkClampImageFilterIF3ID3"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ID3_cast(obj)

class itkClampImageFilterIF3IF3(itkClampImageFilterIF3IF3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3IF3_Pointer":
        """Clone(itkClampImageFilterIF3IF3 self) -> itkClampImageFilterIF3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterIF3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterIF3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterIF3IF3 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IF3

        Create a new object of the class itkClampImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3IF3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Clone, None, itkClampImageFilterIF3IF3)
itkClampImageFilterIF3IF3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetLowerBound, None, itkClampImageFilterIF3IF3)
itkClampImageFilterIF3IF3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetUpperBound, None, itkClampImageFilterIF3IF3)
itkClampImageFilterIF3IF3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_SetBounds, None, itkClampImageFilterIF3IF3)
itkClampImageFilterIF3IF3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3IF3_swigregister
itkClampImageFilterIF3IF3_swigregister(itkClampImageFilterIF3IF3)

def itkClampImageFilterIF3IF3___New_orig__() -> "itkClampImageFilterIF3IF3_Pointer":
    """itkClampImageFilterIF3IF3___New_orig__() -> itkClampImageFilterIF3IF3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IF3___New_orig__()

def itkClampImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IF3 *":
    """itkClampImageFilterIF3IF3_cast(itkLightObject obj) -> itkClampImageFilterIF3IF3"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_cast(obj)

class itkClampImageFilterIF3ISS3(itkClampImageFilterIF3ISS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3ISS3_Pointer":
        """Clone(itkClampImageFilterIF3ISS3 self) -> itkClampImageFilterIF3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterIF3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterIF3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterIF3ISS3 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3ISS3

        Create a new object of the class itkClampImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3ISS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Clone, None, itkClampImageFilterIF3ISS3)
itkClampImageFilterIF3ISS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetLowerBound, None, itkClampImageFilterIF3ISS3)
itkClampImageFilterIF3ISS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetUpperBound, None, itkClampImageFilterIF3ISS3)
itkClampImageFilterIF3ISS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_SetBounds, None, itkClampImageFilterIF3ISS3)
itkClampImageFilterIF3ISS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_swigregister
itkClampImageFilterIF3ISS3_swigregister(itkClampImageFilterIF3ISS3)

def itkClampImageFilterIF3ISS3___New_orig__() -> "itkClampImageFilterIF3ISS3_Pointer":
    """itkClampImageFilterIF3ISS3___New_orig__() -> itkClampImageFilterIF3ISS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3___New_orig__()

def itkClampImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ISS3 *":
    """itkClampImageFilterIF3ISS3_cast(itkLightObject obj) -> itkClampImageFilterIF3ISS3"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_cast(obj)

class itkClampImageFilterIF3IUC3(itkClampImageFilterIF3IUC3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3IUC3_Pointer":
        """Clone(itkClampImageFilterIF3IUC3 self) -> itkClampImageFilterIF3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterIF3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterIF3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterIF3IUC3 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IUC3

        Create a new object of the class itkClampImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3IUC3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Clone, None, itkClampImageFilterIF3IUC3)
itkClampImageFilterIF3IUC3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetLowerBound, None, itkClampImageFilterIF3IUC3)
itkClampImageFilterIF3IUC3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetUpperBound, None, itkClampImageFilterIF3IUC3)
itkClampImageFilterIF3IUC3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_SetBounds, None, itkClampImageFilterIF3IUC3)
itkClampImageFilterIF3IUC3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_swigregister
itkClampImageFilterIF3IUC3_swigregister(itkClampImageFilterIF3IUC3)

def itkClampImageFilterIF3IUC3___New_orig__() -> "itkClampImageFilterIF3IUC3_Pointer":
    """itkClampImageFilterIF3IUC3___New_orig__() -> itkClampImageFilterIF3IUC3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3___New_orig__()

def itkClampImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUC3 *":
    """itkClampImageFilterIF3IUC3_cast(itkLightObject obj) -> itkClampImageFilterIF3IUC3"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_cast(obj)

class itkClampImageFilterIF3IUS3(itkClampImageFilterIF3IUS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3IUS3_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3IUS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3IUS3_Pointer":
        """Clone(itkClampImageFilterIF3IUS3 self) -> itkClampImageFilterIF3IUS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Clone(self)


    def GetLowerBound(self) -> "unsigned short":
        """GetLowerBound(itkClampImageFilterIF3IUS3 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned short":
        """GetUpperBound(itkClampImageFilterIF3IUS3 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned short const', upperBound: 'unsigned short const') -> "void":
        """
        SetBounds(itkClampImageFilterIF3IUS3 self, unsigned short const lowerBound, unsigned short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IUS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3IUS3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IUS3

        Create a new object of the class itkClampImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3IUS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Clone, None, itkClampImageFilterIF3IUS3)
itkClampImageFilterIF3IUS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_GetLowerBound, None, itkClampImageFilterIF3IUS3)
itkClampImageFilterIF3IUS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_GetUpperBound, None, itkClampImageFilterIF3IUS3)
itkClampImageFilterIF3IUS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_SetBounds, None, itkClampImageFilterIF3IUS3)
itkClampImageFilterIF3IUS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_swigregister
itkClampImageFilterIF3IUS3_swigregister(itkClampImageFilterIF3IUS3)

def itkClampImageFilterIF3IUS3___New_orig__() -> "itkClampImageFilterIF3IUS3_Pointer":
    """itkClampImageFilterIF3IUS3___New_orig__() -> itkClampImageFilterIF3IUS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3___New_orig__()

def itkClampImageFilterIF3IUS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUS3 *":
    """itkClampImageFilterIF3IUS3_cast(itkLightObject obj) -> itkClampImageFilterIF3IUS3"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_cast(obj)

class itkClampImageFilterISS2ID2(itkClampImageFilterISS2ID2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2ID2_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2ID2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2ID2_Pointer":
        """Clone(itkClampImageFilterISS2ID2 self) -> itkClampImageFilterISS2ID2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Clone(self)


    def GetLowerBound(self) -> "double":
        """GetLowerBound(itkClampImageFilterISS2ID2 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_GetLowerBound(self)


    def GetUpperBound(self) -> "double":
        """GetUpperBound(itkClampImageFilterISS2ID2 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'double const', upperBound: 'double const') -> "void":
        """
        SetBounds(itkClampImageFilterISS2ID2 self, double const lowerBound, double const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2ID2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ID2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2ID2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2ID2

        Create a new object of the class itkClampImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2ID2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Clone, None, itkClampImageFilterISS2ID2)
itkClampImageFilterISS2ID2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_GetLowerBound, None, itkClampImageFilterISS2ID2)
itkClampImageFilterISS2ID2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_GetUpperBound, None, itkClampImageFilterISS2ID2)
itkClampImageFilterISS2ID2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_SetBounds, None, itkClampImageFilterISS2ID2)
itkClampImageFilterISS2ID2_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2ID2_swigregister
itkClampImageFilterISS2ID2_swigregister(itkClampImageFilterISS2ID2)

def itkClampImageFilterISS2ID2___New_orig__() -> "itkClampImageFilterISS2ID2_Pointer":
    """itkClampImageFilterISS2ID2___New_orig__() -> itkClampImageFilterISS2ID2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ID2___New_orig__()

def itkClampImageFilterISS2ID2_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ID2 *":
    """itkClampImageFilterISS2ID2_cast(itkLightObject obj) -> itkClampImageFilterISS2ID2"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ID2_cast(obj)

class itkClampImageFilterISS2IF2(itkClampImageFilterISS2IF2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2IF2_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2IF2_Pointer":
        """Clone(itkClampImageFilterISS2IF2 self) -> itkClampImageFilterISS2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterISS2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterISS2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterISS2IF2 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IF2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IF2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IF2

        Create a new object of the class itkClampImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2IF2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Clone, None, itkClampImageFilterISS2IF2)
itkClampImageFilterISS2IF2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetLowerBound, None, itkClampImageFilterISS2IF2)
itkClampImageFilterISS2IF2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetUpperBound, None, itkClampImageFilterISS2IF2)
itkClampImageFilterISS2IF2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_SetBounds, None, itkClampImageFilterISS2IF2)
itkClampImageFilterISS2IF2_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2IF2_swigregister
itkClampImageFilterISS2IF2_swigregister(itkClampImageFilterISS2IF2)

def itkClampImageFilterISS2IF2___New_orig__() -> "itkClampImageFilterISS2IF2_Pointer":
    """itkClampImageFilterISS2IF2___New_orig__() -> itkClampImageFilterISS2IF2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IF2___New_orig__()

def itkClampImageFilterISS2IF2_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IF2 *":
    """itkClampImageFilterISS2IF2_cast(itkLightObject obj) -> itkClampImageFilterISS2IF2"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_cast(obj)

class itkClampImageFilterISS2ISS2(itkClampImageFilterISS2ISS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2ISS2_Pointer":
        """Clone(itkClampImageFilterISS2ISS2 self) -> itkClampImageFilterISS2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterISS2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterISS2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterISS2ISS2 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2ISS2

        Create a new object of the class itkClampImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2ISS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Clone, None, itkClampImageFilterISS2ISS2)
itkClampImageFilterISS2ISS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetLowerBound, None, itkClampImageFilterISS2ISS2)
itkClampImageFilterISS2ISS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetUpperBound, None, itkClampImageFilterISS2ISS2)
itkClampImageFilterISS2ISS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_SetBounds, None, itkClampImageFilterISS2ISS2)
itkClampImageFilterISS2ISS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_swigregister
itkClampImageFilterISS2ISS2_swigregister(itkClampImageFilterISS2ISS2)

def itkClampImageFilterISS2ISS2___New_orig__() -> "itkClampImageFilterISS2ISS2_Pointer":
    """itkClampImageFilterISS2ISS2___New_orig__() -> itkClampImageFilterISS2ISS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2___New_orig__()

def itkClampImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ISS2 *":
    """itkClampImageFilterISS2ISS2_cast(itkLightObject obj) -> itkClampImageFilterISS2ISS2"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_cast(obj)

class itkClampImageFilterISS2IUC2(itkClampImageFilterISS2IUC2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2IUC2_Pointer":
        """Clone(itkClampImageFilterISS2IUC2 self) -> itkClampImageFilterISS2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterISS2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterISS2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterISS2IUC2 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IUC2

        Create a new object of the class itkClampImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2IUC2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Clone, None, itkClampImageFilterISS2IUC2)
itkClampImageFilterISS2IUC2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetLowerBound, None, itkClampImageFilterISS2IUC2)
itkClampImageFilterISS2IUC2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetUpperBound, None, itkClampImageFilterISS2IUC2)
itkClampImageFilterISS2IUC2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_SetBounds, None, itkClampImageFilterISS2IUC2)
itkClampImageFilterISS2IUC2_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_swigregister
itkClampImageFilterISS2IUC2_swigregister(itkClampImageFilterISS2IUC2)

def itkClampImageFilterISS2IUC2___New_orig__() -> "itkClampImageFilterISS2IUC2_Pointer":
    """itkClampImageFilterISS2IUC2___New_orig__() -> itkClampImageFilterISS2IUC2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2___New_orig__()

def itkClampImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUC2 *":
    """itkClampImageFilterISS2IUC2_cast(itkLightObject obj) -> itkClampImageFilterISS2IUC2"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_cast(obj)

class itkClampImageFilterISS2IUS2(itkClampImageFilterISS2IUS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2IUS2_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2IUS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2IUS2_Pointer":
        """Clone(itkClampImageFilterISS2IUS2 self) -> itkClampImageFilterISS2IUS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Clone(self)


    def GetLowerBound(self) -> "unsigned short":
        """GetLowerBound(itkClampImageFilterISS2IUS2 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned short":
        """GetUpperBound(itkClampImageFilterISS2IUS2 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned short const', upperBound: 'unsigned short const') -> "void":
        """
        SetBounds(itkClampImageFilterISS2IUS2 self, unsigned short const lowerBound, unsigned short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IUS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2IUS2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IUS2

        Create a new object of the class itkClampImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2IUS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Clone, None, itkClampImageFilterISS2IUS2)
itkClampImageFilterISS2IUS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_GetLowerBound, None, itkClampImageFilterISS2IUS2)
itkClampImageFilterISS2IUS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_GetUpperBound, None, itkClampImageFilterISS2IUS2)
itkClampImageFilterISS2IUS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_SetBounds, None, itkClampImageFilterISS2IUS2)
itkClampImageFilterISS2IUS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_swigregister
itkClampImageFilterISS2IUS2_swigregister(itkClampImageFilterISS2IUS2)

def itkClampImageFilterISS2IUS2___New_orig__() -> "itkClampImageFilterISS2IUS2_Pointer":
    """itkClampImageFilterISS2IUS2___New_orig__() -> itkClampImageFilterISS2IUS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2___New_orig__()

def itkClampImageFilterISS2IUS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUS2 *":
    """itkClampImageFilterISS2IUS2_cast(itkLightObject obj) -> itkClampImageFilterISS2IUS2"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_cast(obj)

class itkClampImageFilterISS3ID3(itkClampImageFilterISS3ID3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3ID3_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3ID3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3ID3_Pointer":
        """Clone(itkClampImageFilterISS3ID3 self) -> itkClampImageFilterISS3ID3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Clone(self)


    def GetLowerBound(self) -> "double":
        """GetLowerBound(itkClampImageFilterISS3ID3 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_GetLowerBound(self)


    def GetUpperBound(self) -> "double":
        """GetUpperBound(itkClampImageFilterISS3ID3 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'double const', upperBound: 'double const') -> "void":
        """
        SetBounds(itkClampImageFilterISS3ID3 self, double const lowerBound, double const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3ID3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ID3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3ID3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3ID3

        Create a new object of the class itkClampImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3ID3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Clone, None, itkClampImageFilterISS3ID3)
itkClampImageFilterISS3ID3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_GetLowerBound, None, itkClampImageFilterISS3ID3)
itkClampImageFilterISS3ID3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_GetUpperBound, None, itkClampImageFilterISS3ID3)
itkClampImageFilterISS3ID3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_SetBounds, None, itkClampImageFilterISS3ID3)
itkClampImageFilterISS3ID3_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3ID3_swigregister
itkClampImageFilterISS3ID3_swigregister(itkClampImageFilterISS3ID3)

def itkClampImageFilterISS3ID3___New_orig__() -> "itkClampImageFilterISS3ID3_Pointer":
    """itkClampImageFilterISS3ID3___New_orig__() -> itkClampImageFilterISS3ID3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ID3___New_orig__()

def itkClampImageFilterISS3ID3_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ID3 *":
    """itkClampImageFilterISS3ID3_cast(itkLightObject obj) -> itkClampImageFilterISS3ID3"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ID3_cast(obj)

class itkClampImageFilterISS3IF3(itkClampImageFilterISS3IF3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3IF3_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3IF3_Pointer":
        """Clone(itkClampImageFilterISS3IF3 self) -> itkClampImageFilterISS3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterISS3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterISS3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterISS3IF3 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IF3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IF3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IF3

        Create a new object of the class itkClampImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3IF3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Clone, None, itkClampImageFilterISS3IF3)
itkClampImageFilterISS3IF3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetLowerBound, None, itkClampImageFilterISS3IF3)
itkClampImageFilterISS3IF3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetUpperBound, None, itkClampImageFilterISS3IF3)
itkClampImageFilterISS3IF3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_SetBounds, None, itkClampImageFilterISS3IF3)
itkClampImageFilterISS3IF3_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3IF3_swigregister
itkClampImageFilterISS3IF3_swigregister(itkClampImageFilterISS3IF3)

def itkClampImageFilterISS3IF3___New_orig__() -> "itkClampImageFilterISS3IF3_Pointer":
    """itkClampImageFilterISS3IF3___New_orig__() -> itkClampImageFilterISS3IF3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IF3___New_orig__()

def itkClampImageFilterISS3IF3_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IF3 *":
    """itkClampImageFilterISS3IF3_cast(itkLightObject obj) -> itkClampImageFilterISS3IF3"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_cast(obj)

class itkClampImageFilterISS3ISS3(itkClampImageFilterISS3ISS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3ISS3_Pointer":
        """Clone(itkClampImageFilterISS3ISS3 self) -> itkClampImageFilterISS3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterISS3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterISS3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterISS3ISS3 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3ISS3

        Create a new object of the class itkClampImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3ISS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Clone, None, itkClampImageFilterISS3ISS3)
itkClampImageFilterISS3ISS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetLowerBound, None, itkClampImageFilterISS3ISS3)
itkClampImageFilterISS3ISS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetUpperBound, None, itkClampImageFilterISS3ISS3)
itkClampImageFilterISS3ISS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_SetBounds, None, itkClampImageFilterISS3ISS3)
itkClampImageFilterISS3ISS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_swigregister
itkClampImageFilterISS3ISS3_swigregister(itkClampImageFilterISS3ISS3)

def itkClampImageFilterISS3ISS3___New_orig__() -> "itkClampImageFilterISS3ISS3_Pointer":
    """itkClampImageFilterISS3ISS3___New_orig__() -> itkClampImageFilterISS3ISS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3___New_orig__()

def itkClampImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ISS3 *":
    """itkClampImageFilterISS3ISS3_cast(itkLightObject obj) -> itkClampImageFilterISS3ISS3"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_cast(obj)

class itkClampImageFilterISS3IUC3(itkClampImageFilterISS3IUC3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3IUC3_Pointer":
        """Clone(itkClampImageFilterISS3IUC3 self) -> itkClampImageFilterISS3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterISS3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterISS3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterISS3IUC3 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IUC3

        Create a new object of the class itkClampImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3IUC3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Clone, None, itkClampImageFilterISS3IUC3)
itkClampImageFilterISS3IUC3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetLowerBound, None, itkClampImageFilterISS3IUC3)
itkClampImageFilterISS3IUC3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetUpperBound, None, itkClampImageFilterISS3IUC3)
itkClampImageFilterISS3IUC3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_SetBounds, None, itkClampImageFilterISS3IUC3)
itkClampImageFilterISS3IUC3_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_swigregister
itkClampImageFilterISS3IUC3_swigregister(itkClampImageFilterISS3IUC3)

def itkClampImageFilterISS3IUC3___New_orig__() -> "itkClampImageFilterISS3IUC3_Pointer":
    """itkClampImageFilterISS3IUC3___New_orig__() -> itkClampImageFilterISS3IUC3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3___New_orig__()

def itkClampImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUC3 *":
    """itkClampImageFilterISS3IUC3_cast(itkLightObject obj) -> itkClampImageFilterISS3IUC3"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_cast(obj)

class itkClampImageFilterISS3IUS3(itkClampImageFilterISS3IUS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3IUS3_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3IUS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3IUS3_Pointer":
        """Clone(itkClampImageFilterISS3IUS3 self) -> itkClampImageFilterISS3IUS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Clone(self)


    def GetLowerBound(self) -> "unsigned short":
        """GetLowerBound(itkClampImageFilterISS3IUS3 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned short":
        """GetUpperBound(itkClampImageFilterISS3IUS3 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned short const', upperBound: 'unsigned short const') -> "void":
        """
        SetBounds(itkClampImageFilterISS3IUS3 self, unsigned short const lowerBound, unsigned short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IUS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3IUS3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IUS3

        Create a new object of the class itkClampImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3IUS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Clone, None, itkClampImageFilterISS3IUS3)
itkClampImageFilterISS3IUS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_GetLowerBound, None, itkClampImageFilterISS3IUS3)
itkClampImageFilterISS3IUS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_GetUpperBound, None, itkClampImageFilterISS3IUS3)
itkClampImageFilterISS3IUS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_SetBounds, None, itkClampImageFilterISS3IUS3)
itkClampImageFilterISS3IUS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_swigregister
itkClampImageFilterISS3IUS3_swigregister(itkClampImageFilterISS3IUS3)

def itkClampImageFilterISS3IUS3___New_orig__() -> "itkClampImageFilterISS3IUS3_Pointer":
    """itkClampImageFilterISS3IUS3___New_orig__() -> itkClampImageFilterISS3IUS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3___New_orig__()

def itkClampImageFilterISS3IUS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUS3 *":
    """itkClampImageFilterISS3IUS3_cast(itkLightObject obj) -> itkClampImageFilterISS3IUS3"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_cast(obj)

class itkClampImageFilterIUC2ID2(itkClampImageFilterIUC2ID2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2ID2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2ID2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2ID2_Pointer":
        """Clone(itkClampImageFilterIUC2ID2 self) -> itkClampImageFilterIUC2ID2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Clone(self)


    def GetLowerBound(self) -> "double":
        """GetLowerBound(itkClampImageFilterIUC2ID2 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_GetLowerBound(self)


    def GetUpperBound(self) -> "double":
        """GetUpperBound(itkClampImageFilterIUC2ID2 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'double const', upperBound: 'double const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC2ID2 self, double const lowerBound, double const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2ID2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ID2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2ID2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2ID2

        Create a new object of the class itkClampImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2ID2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Clone, None, itkClampImageFilterIUC2ID2)
itkClampImageFilterIUC2ID2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_GetLowerBound, None, itkClampImageFilterIUC2ID2)
itkClampImageFilterIUC2ID2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_GetUpperBound, None, itkClampImageFilterIUC2ID2)
itkClampImageFilterIUC2ID2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_SetBounds, None, itkClampImageFilterIUC2ID2)
itkClampImageFilterIUC2ID2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_swigregister
itkClampImageFilterIUC2ID2_swigregister(itkClampImageFilterIUC2ID2)

def itkClampImageFilterIUC2ID2___New_orig__() -> "itkClampImageFilterIUC2ID2_Pointer":
    """itkClampImageFilterIUC2ID2___New_orig__() -> itkClampImageFilterIUC2ID2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2___New_orig__()

def itkClampImageFilterIUC2ID2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ID2 *":
    """itkClampImageFilterIUC2ID2_cast(itkLightObject obj) -> itkClampImageFilterIUC2ID2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_cast(obj)

class itkClampImageFilterIUC2IF2(itkClampImageFilterIUC2IF2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2IF2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2IF2_Pointer":
        """Clone(itkClampImageFilterIUC2IF2 self) -> itkClampImageFilterIUC2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterIUC2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterIUC2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC2IF2 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IF2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IF2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IF2

        Create a new object of the class itkClampImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2IF2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Clone, None, itkClampImageFilterIUC2IF2)
itkClampImageFilterIUC2IF2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetLowerBound, None, itkClampImageFilterIUC2IF2)
itkClampImageFilterIUC2IF2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetUpperBound, None, itkClampImageFilterIUC2IF2)
itkClampImageFilterIUC2IF2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_SetBounds, None, itkClampImageFilterIUC2IF2)
itkClampImageFilterIUC2IF2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_swigregister
itkClampImageFilterIUC2IF2_swigregister(itkClampImageFilterIUC2IF2)

def itkClampImageFilterIUC2IF2___New_orig__() -> "itkClampImageFilterIUC2IF2_Pointer":
    """itkClampImageFilterIUC2IF2___New_orig__() -> itkClampImageFilterIUC2IF2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2___New_orig__()

def itkClampImageFilterIUC2IF2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IF2 *":
    """itkClampImageFilterIUC2IF2_cast(itkLightObject obj) -> itkClampImageFilterIUC2IF2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_cast(obj)

class itkClampImageFilterIUC2ISS2(itkClampImageFilterIUC2ISS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2ISS2_Pointer":
        """Clone(itkClampImageFilterIUC2ISS2 self) -> itkClampImageFilterIUC2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterIUC2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterIUC2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC2ISS2 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2ISS2

        Create a new object of the class itkClampImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2ISS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Clone, None, itkClampImageFilterIUC2ISS2)
itkClampImageFilterIUC2ISS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetLowerBound, None, itkClampImageFilterIUC2ISS2)
itkClampImageFilterIUC2ISS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetUpperBound, None, itkClampImageFilterIUC2ISS2)
itkClampImageFilterIUC2ISS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_SetBounds, None, itkClampImageFilterIUC2ISS2)
itkClampImageFilterIUC2ISS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_swigregister
itkClampImageFilterIUC2ISS2_swigregister(itkClampImageFilterIUC2ISS2)

def itkClampImageFilterIUC2ISS2___New_orig__() -> "itkClampImageFilterIUC2ISS2_Pointer":
    """itkClampImageFilterIUC2ISS2___New_orig__() -> itkClampImageFilterIUC2ISS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2___New_orig__()

def itkClampImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ISS2 *":
    """itkClampImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkClampImageFilterIUC2ISS2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_cast(obj)

class itkClampImageFilterIUC2IUC2(itkClampImageFilterIUC2IUC2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2IUC2_Pointer":
        """Clone(itkClampImageFilterIUC2IUC2 self) -> itkClampImageFilterIUC2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC2IUC2 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IUC2

        Create a new object of the class itkClampImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2IUC2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Clone, None, itkClampImageFilterIUC2IUC2)
itkClampImageFilterIUC2IUC2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetLowerBound, None, itkClampImageFilterIUC2IUC2)
itkClampImageFilterIUC2IUC2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetUpperBound, None, itkClampImageFilterIUC2IUC2)
itkClampImageFilterIUC2IUC2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_SetBounds, None, itkClampImageFilterIUC2IUC2)
itkClampImageFilterIUC2IUC2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_swigregister
itkClampImageFilterIUC2IUC2_swigregister(itkClampImageFilterIUC2IUC2)

def itkClampImageFilterIUC2IUC2___New_orig__() -> "itkClampImageFilterIUC2IUC2_Pointer":
    """itkClampImageFilterIUC2IUC2___New_orig__() -> itkClampImageFilterIUC2IUC2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2___New_orig__()

def itkClampImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUC2 *":
    """itkClampImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkClampImageFilterIUC2IUC2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_cast(obj)

class itkClampImageFilterIUC2IUS2(itkClampImageFilterIUC2IUS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2IUS2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2IUS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2IUS2_Pointer":
        """Clone(itkClampImageFilterIUC2IUS2 self) -> itkClampImageFilterIUC2IUS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Clone(self)


    def GetLowerBound(self) -> "unsigned short":
        """GetLowerBound(itkClampImageFilterIUC2IUS2 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned short":
        """GetUpperBound(itkClampImageFilterIUC2IUS2 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned short const', upperBound: 'unsigned short const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC2IUS2 self, unsigned short const lowerBound, unsigned short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IUS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2IUS2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IUS2

        Create a new object of the class itkClampImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2IUS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Clone, None, itkClampImageFilterIUC2IUS2)
itkClampImageFilterIUC2IUS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_GetLowerBound, None, itkClampImageFilterIUC2IUS2)
itkClampImageFilterIUC2IUS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_GetUpperBound, None, itkClampImageFilterIUC2IUS2)
itkClampImageFilterIUC2IUS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_SetBounds, None, itkClampImageFilterIUC2IUS2)
itkClampImageFilterIUC2IUS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_swigregister
itkClampImageFilterIUC2IUS2_swigregister(itkClampImageFilterIUC2IUS2)

def itkClampImageFilterIUC2IUS2___New_orig__() -> "itkClampImageFilterIUC2IUS2_Pointer":
    """itkClampImageFilterIUC2IUS2___New_orig__() -> itkClampImageFilterIUC2IUS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2___New_orig__()

def itkClampImageFilterIUC2IUS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUS2 *":
    """itkClampImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkClampImageFilterIUC2IUS2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_cast(obj)

class itkClampImageFilterIUC3ID3(itkClampImageFilterIUC3ID3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3ID3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3ID3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3ID3_Pointer":
        """Clone(itkClampImageFilterIUC3ID3 self) -> itkClampImageFilterIUC3ID3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Clone(self)


    def GetLowerBound(self) -> "double":
        """GetLowerBound(itkClampImageFilterIUC3ID3 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_GetLowerBound(self)


    def GetUpperBound(self) -> "double":
        """GetUpperBound(itkClampImageFilterIUC3ID3 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'double const', upperBound: 'double const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC3ID3 self, double const lowerBound, double const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3ID3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ID3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3ID3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3ID3

        Create a new object of the class itkClampImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3ID3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Clone, None, itkClampImageFilterIUC3ID3)
itkClampImageFilterIUC3ID3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_GetLowerBound, None, itkClampImageFilterIUC3ID3)
itkClampImageFilterIUC3ID3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_GetUpperBound, None, itkClampImageFilterIUC3ID3)
itkClampImageFilterIUC3ID3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_SetBounds, None, itkClampImageFilterIUC3ID3)
itkClampImageFilterIUC3ID3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_swigregister
itkClampImageFilterIUC3ID3_swigregister(itkClampImageFilterIUC3ID3)

def itkClampImageFilterIUC3ID3___New_orig__() -> "itkClampImageFilterIUC3ID3_Pointer":
    """itkClampImageFilterIUC3ID3___New_orig__() -> itkClampImageFilterIUC3ID3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3___New_orig__()

def itkClampImageFilterIUC3ID3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ID3 *":
    """itkClampImageFilterIUC3ID3_cast(itkLightObject obj) -> itkClampImageFilterIUC3ID3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_cast(obj)

class itkClampImageFilterIUC3IF3(itkClampImageFilterIUC3IF3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3IF3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3IF3_Pointer":
        """Clone(itkClampImageFilterIUC3IF3 self) -> itkClampImageFilterIUC3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterIUC3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterIUC3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC3IF3 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IF3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IF3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IF3

        Create a new object of the class itkClampImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3IF3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Clone, None, itkClampImageFilterIUC3IF3)
itkClampImageFilterIUC3IF3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetLowerBound, None, itkClampImageFilterIUC3IF3)
itkClampImageFilterIUC3IF3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetUpperBound, None, itkClampImageFilterIUC3IF3)
itkClampImageFilterIUC3IF3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_SetBounds, None, itkClampImageFilterIUC3IF3)
itkClampImageFilterIUC3IF3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_swigregister
itkClampImageFilterIUC3IF3_swigregister(itkClampImageFilterIUC3IF3)

def itkClampImageFilterIUC3IF3___New_orig__() -> "itkClampImageFilterIUC3IF3_Pointer":
    """itkClampImageFilterIUC3IF3___New_orig__() -> itkClampImageFilterIUC3IF3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3___New_orig__()

def itkClampImageFilterIUC3IF3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IF3 *":
    """itkClampImageFilterIUC3IF3_cast(itkLightObject obj) -> itkClampImageFilterIUC3IF3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_cast(obj)

class itkClampImageFilterIUC3ISS3(itkClampImageFilterIUC3ISS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3ISS3_Pointer":
        """Clone(itkClampImageFilterIUC3ISS3 self) -> itkClampImageFilterIUC3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterIUC3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterIUC3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC3ISS3 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3ISS3

        Create a new object of the class itkClampImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3ISS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Clone, None, itkClampImageFilterIUC3ISS3)
itkClampImageFilterIUC3ISS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetLowerBound, None, itkClampImageFilterIUC3ISS3)
itkClampImageFilterIUC3ISS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetUpperBound, None, itkClampImageFilterIUC3ISS3)
itkClampImageFilterIUC3ISS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_SetBounds, None, itkClampImageFilterIUC3ISS3)
itkClampImageFilterIUC3ISS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_swigregister
itkClampImageFilterIUC3ISS3_swigregister(itkClampImageFilterIUC3ISS3)

def itkClampImageFilterIUC3ISS3___New_orig__() -> "itkClampImageFilterIUC3ISS3_Pointer":
    """itkClampImageFilterIUC3ISS3___New_orig__() -> itkClampImageFilterIUC3ISS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3___New_orig__()

def itkClampImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ISS3 *":
    """itkClampImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkClampImageFilterIUC3ISS3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_cast(obj)

class itkClampImageFilterIUC3IUC3(itkClampImageFilterIUC3IUC3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3IUC3_Pointer":
        """Clone(itkClampImageFilterIUC3IUC3 self) -> itkClampImageFilterIUC3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC3IUC3 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IUC3

        Create a new object of the class itkClampImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3IUC3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Clone, None, itkClampImageFilterIUC3IUC3)
itkClampImageFilterIUC3IUC3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetLowerBound, None, itkClampImageFilterIUC3IUC3)
itkClampImageFilterIUC3IUC3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetUpperBound, None, itkClampImageFilterIUC3IUC3)
itkClampImageFilterIUC3IUC3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_SetBounds, None, itkClampImageFilterIUC3IUC3)
itkClampImageFilterIUC3IUC3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_swigregister
itkClampImageFilterIUC3IUC3_swigregister(itkClampImageFilterIUC3IUC3)

def itkClampImageFilterIUC3IUC3___New_orig__() -> "itkClampImageFilterIUC3IUC3_Pointer":
    """itkClampImageFilterIUC3IUC3___New_orig__() -> itkClampImageFilterIUC3IUC3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3___New_orig__()

def itkClampImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUC3 *":
    """itkClampImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkClampImageFilterIUC3IUC3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_cast(obj)

class itkClampImageFilterIUC3IUS3(itkClampImageFilterIUC3IUS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3IUS3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3IUS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3IUS3_Pointer":
        """Clone(itkClampImageFilterIUC3IUS3 self) -> itkClampImageFilterIUC3IUS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Clone(self)


    def GetLowerBound(self) -> "unsigned short":
        """GetLowerBound(itkClampImageFilterIUC3IUS3 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned short":
        """GetUpperBound(itkClampImageFilterIUC3IUS3 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned short const', upperBound: 'unsigned short const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC3IUS3 self, unsigned short const lowerBound, unsigned short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IUS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3IUS3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IUS3

        Create a new object of the class itkClampImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3IUS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Clone, None, itkClampImageFilterIUC3IUS3)
itkClampImageFilterIUC3IUS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_GetLowerBound, None, itkClampImageFilterIUC3IUS3)
itkClampImageFilterIUC3IUS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_GetUpperBound, None, itkClampImageFilterIUC3IUS3)
itkClampImageFilterIUC3IUS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_SetBounds, None, itkClampImageFilterIUC3IUS3)
itkClampImageFilterIUC3IUS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_swigregister
itkClampImageFilterIUC3IUS3_swigregister(itkClampImageFilterIUC3IUS3)

def itkClampImageFilterIUC3IUS3___New_orig__() -> "itkClampImageFilterIUC3IUS3_Pointer":
    """itkClampImageFilterIUC3IUS3___New_orig__() -> itkClampImageFilterIUC3IUS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3___New_orig__()

def itkClampImageFilterIUC3IUS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUS3 *":
    """itkClampImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkClampImageFilterIUC3IUS3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_cast(obj)

class itkClampImageFilterIUS2ID2(itkClampImageFilterIUS2ID2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS2ID2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS2ID2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS2ID2_Pointer":
        """Clone(itkClampImageFilterIUS2ID2 self) -> itkClampImageFilterIUS2ID2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Clone(self)


    def GetLowerBound(self) -> "double":
        """GetLowerBound(itkClampImageFilterIUS2ID2 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_GetLowerBound(self)


    def GetUpperBound(self) -> "double":
        """GetUpperBound(itkClampImageFilterIUS2ID2 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'double const', upperBound: 'double const') -> "void":
        """
        SetBounds(itkClampImageFilterIUS2ID2 self, double const lowerBound, double const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2ID2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2ID2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS2ID2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2ID2

        Create a new object of the class itkClampImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS2ID2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Clone, None, itkClampImageFilterIUS2ID2)
itkClampImageFilterIUS2ID2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_GetLowerBound, None, itkClampImageFilterIUS2ID2)
itkClampImageFilterIUS2ID2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_GetUpperBound, None, itkClampImageFilterIUS2ID2)
itkClampImageFilterIUS2ID2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_SetBounds, None, itkClampImageFilterIUS2ID2)
itkClampImageFilterIUS2ID2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_swigregister
itkClampImageFilterIUS2ID2_swigregister(itkClampImageFilterIUS2ID2)

def itkClampImageFilterIUS2ID2___New_orig__() -> "itkClampImageFilterIUS2ID2_Pointer":
    """itkClampImageFilterIUS2ID2___New_orig__() -> itkClampImageFilterIUS2ID2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2___New_orig__()

def itkClampImageFilterIUS2ID2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2ID2 *":
    """itkClampImageFilterIUS2ID2_cast(itkLightObject obj) -> itkClampImageFilterIUS2ID2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_cast(obj)

class itkClampImageFilterIUS2IF2(itkClampImageFilterIUS2IF2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS2IF2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS2IF2_Pointer":
        """Clone(itkClampImageFilterIUS2IF2 self) -> itkClampImageFilterIUS2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterIUS2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterIUS2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterIUS2IF2 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IF2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IF2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IF2

        Create a new object of the class itkClampImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS2IF2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Clone, None, itkClampImageFilterIUS2IF2)
itkClampImageFilterIUS2IF2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_GetLowerBound, None, itkClampImageFilterIUS2IF2)
itkClampImageFilterIUS2IF2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_GetUpperBound, None, itkClampImageFilterIUS2IF2)
itkClampImageFilterIUS2IF2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_SetBounds, None, itkClampImageFilterIUS2IF2)
itkClampImageFilterIUS2IF2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_swigregister
itkClampImageFilterIUS2IF2_swigregister(itkClampImageFilterIUS2IF2)

def itkClampImageFilterIUS2IF2___New_orig__() -> "itkClampImageFilterIUS2IF2_Pointer":
    """itkClampImageFilterIUS2IF2___New_orig__() -> itkClampImageFilterIUS2IF2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2___New_orig__()

def itkClampImageFilterIUS2IF2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IF2 *":
    """itkClampImageFilterIUS2IF2_cast(itkLightObject obj) -> itkClampImageFilterIUS2IF2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_cast(obj)

class itkClampImageFilterIUS2ISS2(itkClampImageFilterIUS2ISS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS2ISS2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS2ISS2_Pointer":
        """Clone(itkClampImageFilterIUS2ISS2 self) -> itkClampImageFilterIUS2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterIUS2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterIUS2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterIUS2ISS2 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2ISS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2ISS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2ISS2

        Create a new object of the class itkClampImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS2ISS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Clone, None, itkClampImageFilterIUS2ISS2)
itkClampImageFilterIUS2ISS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_GetLowerBound, None, itkClampImageFilterIUS2ISS2)
itkClampImageFilterIUS2ISS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_GetUpperBound, None, itkClampImageFilterIUS2ISS2)
itkClampImageFilterIUS2ISS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_SetBounds, None, itkClampImageFilterIUS2ISS2)
itkClampImageFilterIUS2ISS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_swigregister
itkClampImageFilterIUS2ISS2_swigregister(itkClampImageFilterIUS2ISS2)

def itkClampImageFilterIUS2ISS2___New_orig__() -> "itkClampImageFilterIUS2ISS2_Pointer":
    """itkClampImageFilterIUS2ISS2___New_orig__() -> itkClampImageFilterIUS2ISS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2___New_orig__()

def itkClampImageFilterIUS2ISS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2ISS2 *":
    """itkClampImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkClampImageFilterIUS2ISS2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_cast(obj)

class itkClampImageFilterIUS2IUC2(itkClampImageFilterIUS2IUC2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS2IUC2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS2IUC2_Pointer":
        """Clone(itkClampImageFilterIUS2IUC2 self) -> itkClampImageFilterIUS2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterIUS2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterIUS2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterIUS2IUC2 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IUC2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IUC2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IUC2

        Create a new object of the class itkClampImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS2IUC2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Clone, None, itkClampImageFilterIUS2IUC2)
itkClampImageFilterIUS2IUC2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_GetLowerBound, None, itkClampImageFilterIUS2IUC2)
itkClampImageFilterIUS2IUC2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_GetUpperBound, None, itkClampImageFilterIUS2IUC2)
itkClampImageFilterIUS2IUC2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_SetBounds, None, itkClampImageFilterIUS2IUC2)
itkClampImageFilterIUS2IUC2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_swigregister
itkClampImageFilterIUS2IUC2_swigregister(itkClampImageFilterIUS2IUC2)

def itkClampImageFilterIUS2IUC2___New_orig__() -> "itkClampImageFilterIUS2IUC2_Pointer":
    """itkClampImageFilterIUS2IUC2___New_orig__() -> itkClampImageFilterIUS2IUC2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2___New_orig__()

def itkClampImageFilterIUS2IUC2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IUC2 *":
    """itkClampImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkClampImageFilterIUS2IUC2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_cast(obj)

class itkClampImageFilterIUS2IUS2(itkClampImageFilterIUS2IUS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS2IUS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS2IUS2_Pointer":
        """Clone(itkClampImageFilterIUS2IUS2 self) -> itkClampImageFilterIUS2IUS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Clone(self)


    def GetLowerBound(self) -> "unsigned short":
        """GetLowerBound(itkClampImageFilterIUS2IUS2 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned short":
        """GetUpperBound(itkClampImageFilterIUS2IUS2 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned short const', upperBound: 'unsigned short const') -> "void":
        """
        SetBounds(itkClampImageFilterIUS2IUS2 self, unsigned short const lowerBound, unsigned short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS2IUS2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IUS2

        Create a new object of the class itkClampImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS2IUS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Clone, None, itkClampImageFilterIUS2IUS2)
itkClampImageFilterIUS2IUS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_GetLowerBound, None, itkClampImageFilterIUS2IUS2)
itkClampImageFilterIUS2IUS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_GetUpperBound, None, itkClampImageFilterIUS2IUS2)
itkClampImageFilterIUS2IUS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_SetBounds, None, itkClampImageFilterIUS2IUS2)
itkClampImageFilterIUS2IUS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_swigregister
itkClampImageFilterIUS2IUS2_swigregister(itkClampImageFilterIUS2IUS2)

def itkClampImageFilterIUS2IUS2___New_orig__() -> "itkClampImageFilterIUS2IUS2_Pointer":
    """itkClampImageFilterIUS2IUS2___New_orig__() -> itkClampImageFilterIUS2IUS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2___New_orig__()

def itkClampImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS2IUS2 *":
    """itkClampImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkClampImageFilterIUS2IUS2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_cast(obj)

class itkClampImageFilterIUS3ID3(itkClampImageFilterIUS3ID3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS3ID3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS3ID3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS3ID3_Pointer":
        """Clone(itkClampImageFilterIUS3ID3 self) -> itkClampImageFilterIUS3ID3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Clone(self)


    def GetLowerBound(self) -> "double":
        """GetLowerBound(itkClampImageFilterIUS3ID3 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_GetLowerBound(self)


    def GetUpperBound(self) -> "double":
        """GetUpperBound(itkClampImageFilterIUS3ID3 self) -> double"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'double const', upperBound: 'double const') -> "void":
        """
        SetBounds(itkClampImageFilterIUS3ID3 self, double const lowerBound, double const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3ID3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3ID3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS3ID3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3ID3

        Create a new object of the class itkClampImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS3ID3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Clone, None, itkClampImageFilterIUS3ID3)
itkClampImageFilterIUS3ID3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_GetLowerBound, None, itkClampImageFilterIUS3ID3)
itkClampImageFilterIUS3ID3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_GetUpperBound, None, itkClampImageFilterIUS3ID3)
itkClampImageFilterIUS3ID3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_SetBounds, None, itkClampImageFilterIUS3ID3)
itkClampImageFilterIUS3ID3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_swigregister
itkClampImageFilterIUS3ID3_swigregister(itkClampImageFilterIUS3ID3)

def itkClampImageFilterIUS3ID3___New_orig__() -> "itkClampImageFilterIUS3ID3_Pointer":
    """itkClampImageFilterIUS3ID3___New_orig__() -> itkClampImageFilterIUS3ID3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3___New_orig__()

def itkClampImageFilterIUS3ID3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3ID3 *":
    """itkClampImageFilterIUS3ID3_cast(itkLightObject obj) -> itkClampImageFilterIUS3ID3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_cast(obj)

class itkClampImageFilterIUS3IF3(itkClampImageFilterIUS3IF3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS3IF3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS3IF3_Pointer":
        """Clone(itkClampImageFilterIUS3IF3 self) -> itkClampImageFilterIUS3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterIUS3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterIUS3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterIUS3IF3 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IF3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IF3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IF3

        Create a new object of the class itkClampImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS3IF3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Clone, None, itkClampImageFilterIUS3IF3)
itkClampImageFilterIUS3IF3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_GetLowerBound, None, itkClampImageFilterIUS3IF3)
itkClampImageFilterIUS3IF3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_GetUpperBound, None, itkClampImageFilterIUS3IF3)
itkClampImageFilterIUS3IF3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_SetBounds, None, itkClampImageFilterIUS3IF3)
itkClampImageFilterIUS3IF3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_swigregister
itkClampImageFilterIUS3IF3_swigregister(itkClampImageFilterIUS3IF3)

def itkClampImageFilterIUS3IF3___New_orig__() -> "itkClampImageFilterIUS3IF3_Pointer":
    """itkClampImageFilterIUS3IF3___New_orig__() -> itkClampImageFilterIUS3IF3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3___New_orig__()

def itkClampImageFilterIUS3IF3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IF3 *":
    """itkClampImageFilterIUS3IF3_cast(itkLightObject obj) -> itkClampImageFilterIUS3IF3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_cast(obj)

class itkClampImageFilterIUS3ISS3(itkClampImageFilterIUS3ISS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS3ISS3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS3ISS3_Pointer":
        """Clone(itkClampImageFilterIUS3ISS3 self) -> itkClampImageFilterIUS3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterIUS3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterIUS3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterIUS3ISS3 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3ISS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3ISS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3ISS3

        Create a new object of the class itkClampImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS3ISS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Clone, None, itkClampImageFilterIUS3ISS3)
itkClampImageFilterIUS3ISS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_GetLowerBound, None, itkClampImageFilterIUS3ISS3)
itkClampImageFilterIUS3ISS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_GetUpperBound, None, itkClampImageFilterIUS3ISS3)
itkClampImageFilterIUS3ISS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_SetBounds, None, itkClampImageFilterIUS3ISS3)
itkClampImageFilterIUS3ISS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_swigregister
itkClampImageFilterIUS3ISS3_swigregister(itkClampImageFilterIUS3ISS3)

def itkClampImageFilterIUS3ISS3___New_orig__() -> "itkClampImageFilterIUS3ISS3_Pointer":
    """itkClampImageFilterIUS3ISS3___New_orig__() -> itkClampImageFilterIUS3ISS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3___New_orig__()

def itkClampImageFilterIUS3ISS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3ISS3 *":
    """itkClampImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkClampImageFilterIUS3ISS3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_cast(obj)

class itkClampImageFilterIUS3IUC3(itkClampImageFilterIUS3IUC3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS3IUC3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS3IUC3_Pointer":
        """Clone(itkClampImageFilterIUS3IUC3 self) -> itkClampImageFilterIUS3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterIUS3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterIUS3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterIUS3IUC3 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IUC3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IUC3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IUC3

        Create a new object of the class itkClampImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS3IUC3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Clone, None, itkClampImageFilterIUS3IUC3)
itkClampImageFilterIUS3IUC3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_GetLowerBound, None, itkClampImageFilterIUS3IUC3)
itkClampImageFilterIUS3IUC3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_GetUpperBound, None, itkClampImageFilterIUS3IUC3)
itkClampImageFilterIUS3IUC3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_SetBounds, None, itkClampImageFilterIUS3IUC3)
itkClampImageFilterIUS3IUC3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_swigregister
itkClampImageFilterIUS3IUC3_swigregister(itkClampImageFilterIUS3IUC3)

def itkClampImageFilterIUS3IUC3___New_orig__() -> "itkClampImageFilterIUS3IUC3_Pointer":
    """itkClampImageFilterIUS3IUC3___New_orig__() -> itkClampImageFilterIUS3IUC3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3___New_orig__()

def itkClampImageFilterIUS3IUC3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IUC3 *":
    """itkClampImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkClampImageFilterIUS3IUC3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_cast(obj)

class itkClampImageFilterIUS3IUS3(itkClampImageFilterIUS3IUS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range}

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUS3IUS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUS3IUS3_Pointer":
        """Clone(itkClampImageFilterIUS3IUS3 self) -> itkClampImageFilterIUS3IUS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Clone(self)


    def GetLowerBound(self) -> "unsigned short":
        """GetLowerBound(itkClampImageFilterIUS3IUS3 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned short":
        """GetUpperBound(itkClampImageFilterIUS3IUS3 self) -> unsigned short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned short const', upperBound: 'unsigned short const') -> "void":
        """
        SetBounds(itkClampImageFilterIUS3IUS3 self, unsigned short const lowerBound, unsigned short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUS3IUS3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IUS3

        Create a new object of the class itkClampImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUS3IUS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Clone, None, itkClampImageFilterIUS3IUS3)
itkClampImageFilterIUS3IUS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_GetLowerBound, None, itkClampImageFilterIUS3IUS3)
itkClampImageFilterIUS3IUS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_GetUpperBound, None, itkClampImageFilterIUS3IUS3)
itkClampImageFilterIUS3IUS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_SetBounds, None, itkClampImageFilterIUS3IUS3)
itkClampImageFilterIUS3IUS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_swigregister
itkClampImageFilterIUS3IUS3_swigregister(itkClampImageFilterIUS3IUS3)

def itkClampImageFilterIUS3IUS3___New_orig__() -> "itkClampImageFilterIUS3IUS3_Pointer":
    """itkClampImageFilterIUS3IUS3___New_orig__() -> itkClampImageFilterIUS3IUS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3___New_orig__()

def itkClampImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUS3IUS3 *":
    """itkClampImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkClampImageFilterIUS3IUS3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unary_functor_image_filter(*args, **kwargs):
    """Procedural interface for UnaryFunctorImageFilter"""
    import itk
    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnaryFunctorImageFilter.values()[0]
    else:
        filter_object = itk.UnaryFunctorImageFilter

    unary_functor_image_filter.__doc__ = filter_object.__doc__
    unary_functor_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unary_functor_image_filter.__doc__ += "Available Keyword Arguments:\n"
    unary_functor_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def clamp_image_filter(*args, **kwargs):
    """Procedural interface for ClampImageFilter"""
    import itk
    instance = itk.ClampImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def clamp_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ClampImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ClampImageFilter.values()[0]
    else:
        filter_object = itk.ClampImageFilter

    clamp_image_filter.__doc__ = filter_object.__doc__
    clamp_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    clamp_image_filter.__doc__ += "Available Keyword Arguments:\n"
    clamp_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



