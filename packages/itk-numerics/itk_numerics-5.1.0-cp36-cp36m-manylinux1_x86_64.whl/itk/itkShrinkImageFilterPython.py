# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkShrinkImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkShrinkImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkShrinkImageFilterPython
            return _itkShrinkImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkShrinkImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkShrinkImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkShrinkImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFixedArrayPython
import pyBasePython
import ITKCommonBasePython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImageToImageFilterAPython
import itkImagePython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkCovariantVectorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkShrinkImageFilterID3ID3_New():
  return itkShrinkImageFilterID3ID3.New()


def itkShrinkImageFilterID2ID2_New():
  return itkShrinkImageFilterID2ID2.New()


def itkShrinkImageFilterIF3IF3_New():
  return itkShrinkImageFilterIF3IF3.New()


def itkShrinkImageFilterIF2IF2_New():
  return itkShrinkImageFilterIF2IF2.New()


def itkShrinkImageFilterIUS3IUS3_New():
  return itkShrinkImageFilterIUS3IUS3.New()


def itkShrinkImageFilterIUS2IUS2_New():
  return itkShrinkImageFilterIUS2IUS2.New()


def itkShrinkImageFilterIUC3IUC3_New():
  return itkShrinkImageFilterIUC3IUC3.New()


def itkShrinkImageFilterIUC2IUC2_New():
  return itkShrinkImageFilterIUC2IUC2.New()


def itkShrinkImageFilterISS3ISS3_New():
  return itkShrinkImageFilterISS3ISS3.New()


def itkShrinkImageFilterISS2ISS2_New():
  return itkShrinkImageFilterISS2ISS2.New()

class itkShrinkImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    C++ includes: itkShrinkImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShrinkImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkShrinkImageFilterID2ID2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShrinkImageFilterID2ID2_Pointer":
        """Clone(itkShrinkImageFilterID2ID2 self) -> itkShrinkImageFilterID2ID2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_Clone(self)


    def SetShrinkFactors(self, *args) -> "void":
        """
        SetShrinkFactors(itkShrinkImageFilterID2ID2 self, itkFixedArrayUI2 _arg)
        SetShrinkFactors(itkShrinkImageFilterID2ID2 self, unsigned int factor)

        Set the shrink
        factors. Values are clamped to a minimum value of 1. Default is 1 for
        all dimensions. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SetShrinkFactors(self, *args)


    def SetShrinkFactor(self, i: 'unsigned int', factor: 'unsigned int') -> "void":
        """SetShrinkFactor(itkShrinkImageFilterID2ID2 self, unsigned int i, unsigned int factor)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SetShrinkFactor(self, i, factor)


    def GetShrinkFactors(self) -> "itkFixedArrayUI2 const &":
        """
        GetShrinkFactors(itkShrinkImageFilterID2ID2 self) -> itkFixedArrayUI2

        Get the shrink
        factors. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GetShrinkFactors(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkShrinkImageFilterID2ID2 self)

        ShrinkImageFilter produces an image which is a different resolution
        and with a different pixel spacing than its input image. As such,
        ShrinkImageFilter needs to provide an implementation for
        GenerateOutputInformation() in order to inform the pipeline execution
        model. The original documentation of this method is below. See:
        ProcessObject::GenerateOutputInformaton() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkShrinkImageFilterID2ID2 self)

        ShrinkImageFilter needs a larger input requested region than the
        output requested region. As such, ShrinkImageFilter needs to provide
        an implementation for GenerateInputRequestedRegion() in order to
        inform the pipeline execution model. See:
        ProcessObject::GenerateInputRequestedRegion() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GenerateInputRequestedRegion(self)

    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_InputConvertibleToOutputCheck
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SameDimensionCheck
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkShrinkImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkShrinkImageFilterID2ID2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterID2ID2

        Create a new object of the class itkShrinkImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShrinkImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShrinkImageFilterID2ID2.Clone = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_Clone, None, itkShrinkImageFilterID2ID2)
itkShrinkImageFilterID2ID2.SetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SetShrinkFactors, None, itkShrinkImageFilterID2ID2)
itkShrinkImageFilterID2ID2.SetShrinkFactor = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SetShrinkFactor, None, itkShrinkImageFilterID2ID2)
itkShrinkImageFilterID2ID2.GetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GetShrinkFactors, None, itkShrinkImageFilterID2ID2)
itkShrinkImageFilterID2ID2.GenerateOutputInformation = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GenerateOutputInformation, None, itkShrinkImageFilterID2ID2)
itkShrinkImageFilterID2ID2.GenerateInputRequestedRegion = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GenerateInputRequestedRegion, None, itkShrinkImageFilterID2ID2)
itkShrinkImageFilterID2ID2_swigregister = _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_swigregister
itkShrinkImageFilterID2ID2_swigregister(itkShrinkImageFilterID2ID2)

def itkShrinkImageFilterID2ID2___New_orig__() -> "itkShrinkImageFilterID2ID2_Pointer":
    """itkShrinkImageFilterID2ID2___New_orig__() -> itkShrinkImageFilterID2ID2_Pointer"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2___New_orig__()

def itkShrinkImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkShrinkImageFilterID2ID2 *":
    """itkShrinkImageFilterID2ID2_cast(itkLightObject obj) -> itkShrinkImageFilterID2ID2"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_cast(obj)

class itkShrinkImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    C++ includes: itkShrinkImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShrinkImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkShrinkImageFilterID3ID3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShrinkImageFilterID3ID3_Pointer":
        """Clone(itkShrinkImageFilterID3ID3 self) -> itkShrinkImageFilterID3ID3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_Clone(self)


    def SetShrinkFactors(self, *args) -> "void":
        """
        SetShrinkFactors(itkShrinkImageFilterID3ID3 self, itkFixedArrayUI3 _arg)
        SetShrinkFactors(itkShrinkImageFilterID3ID3 self, unsigned int factor)

        Set the shrink
        factors. Values are clamped to a minimum value of 1. Default is 1 for
        all dimensions. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SetShrinkFactors(self, *args)


    def SetShrinkFactor(self, i: 'unsigned int', factor: 'unsigned int') -> "void":
        """SetShrinkFactor(itkShrinkImageFilterID3ID3 self, unsigned int i, unsigned int factor)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SetShrinkFactor(self, i, factor)


    def GetShrinkFactors(self) -> "itkFixedArrayUI3 const &":
        """
        GetShrinkFactors(itkShrinkImageFilterID3ID3 self) -> itkFixedArrayUI3

        Get the shrink
        factors. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GetShrinkFactors(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkShrinkImageFilterID3ID3 self)

        ShrinkImageFilter produces an image which is a different resolution
        and with a different pixel spacing than its input image. As such,
        ShrinkImageFilter needs to provide an implementation for
        GenerateOutputInformation() in order to inform the pipeline execution
        model. The original documentation of this method is below. See:
        ProcessObject::GenerateOutputInformaton() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkShrinkImageFilterID3ID3 self)

        ShrinkImageFilter needs a larger input requested region than the
        output requested region. As such, ShrinkImageFilter needs to provide
        an implementation for GenerateInputRequestedRegion() in order to
        inform the pipeline execution model. See:
        ProcessObject::GenerateInputRequestedRegion() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GenerateInputRequestedRegion(self)

    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_InputConvertibleToOutputCheck
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SameDimensionCheck
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkShrinkImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkShrinkImageFilterID3ID3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterID3ID3

        Create a new object of the class itkShrinkImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShrinkImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShrinkImageFilterID3ID3.Clone = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_Clone, None, itkShrinkImageFilterID3ID3)
itkShrinkImageFilterID3ID3.SetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SetShrinkFactors, None, itkShrinkImageFilterID3ID3)
itkShrinkImageFilterID3ID3.SetShrinkFactor = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SetShrinkFactor, None, itkShrinkImageFilterID3ID3)
itkShrinkImageFilterID3ID3.GetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GetShrinkFactors, None, itkShrinkImageFilterID3ID3)
itkShrinkImageFilterID3ID3.GenerateOutputInformation = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GenerateOutputInformation, None, itkShrinkImageFilterID3ID3)
itkShrinkImageFilterID3ID3.GenerateInputRequestedRegion = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GenerateInputRequestedRegion, None, itkShrinkImageFilterID3ID3)
itkShrinkImageFilterID3ID3_swigregister = _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_swigregister
itkShrinkImageFilterID3ID3_swigregister(itkShrinkImageFilterID3ID3)

def itkShrinkImageFilterID3ID3___New_orig__() -> "itkShrinkImageFilterID3ID3_Pointer":
    """itkShrinkImageFilterID3ID3___New_orig__() -> itkShrinkImageFilterID3ID3_Pointer"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3___New_orig__()

def itkShrinkImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkShrinkImageFilterID3ID3 *":
    """itkShrinkImageFilterID3ID3_cast(itkLightObject obj) -> itkShrinkImageFilterID3ID3"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_cast(obj)

class itkShrinkImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    C++ includes: itkShrinkImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShrinkImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkShrinkImageFilterIF2IF2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShrinkImageFilterIF2IF2_Pointer":
        """Clone(itkShrinkImageFilterIF2IF2 self) -> itkShrinkImageFilterIF2IF2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_Clone(self)


    def SetShrinkFactors(self, *args) -> "void":
        """
        SetShrinkFactors(itkShrinkImageFilterIF2IF2 self, itkFixedArrayUI2 _arg)
        SetShrinkFactors(itkShrinkImageFilterIF2IF2 self, unsigned int factor)

        Set the shrink
        factors. Values are clamped to a minimum value of 1. Default is 1 for
        all dimensions. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SetShrinkFactors(self, *args)


    def SetShrinkFactor(self, i: 'unsigned int', factor: 'unsigned int') -> "void":
        """SetShrinkFactor(itkShrinkImageFilterIF2IF2 self, unsigned int i, unsigned int factor)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SetShrinkFactor(self, i, factor)


    def GetShrinkFactors(self) -> "itkFixedArrayUI2 const &":
        """
        GetShrinkFactors(itkShrinkImageFilterIF2IF2 self) -> itkFixedArrayUI2

        Get the shrink
        factors. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GetShrinkFactors(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkShrinkImageFilterIF2IF2 self)

        ShrinkImageFilter produces an image which is a different resolution
        and with a different pixel spacing than its input image. As such,
        ShrinkImageFilter needs to provide an implementation for
        GenerateOutputInformation() in order to inform the pipeline execution
        model. The original documentation of this method is below. See:
        ProcessObject::GenerateOutputInformaton() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkShrinkImageFilterIF2IF2 self)

        ShrinkImageFilter needs a larger input requested region than the
        output requested region. As such, ShrinkImageFilter needs to provide
        an implementation for GenerateInputRequestedRegion() in order to
        inform the pipeline execution model. See:
        ProcessObject::GenerateInputRequestedRegion() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GenerateInputRequestedRegion(self)

    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_InputConvertibleToOutputCheck
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SameDimensionCheck
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkShrinkImageFilterIF2IF2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIF2IF2

        Create a new object of the class itkShrinkImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShrinkImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShrinkImageFilterIF2IF2.Clone = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_Clone, None, itkShrinkImageFilterIF2IF2)
itkShrinkImageFilterIF2IF2.SetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SetShrinkFactors, None, itkShrinkImageFilterIF2IF2)
itkShrinkImageFilterIF2IF2.SetShrinkFactor = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SetShrinkFactor, None, itkShrinkImageFilterIF2IF2)
itkShrinkImageFilterIF2IF2.GetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GetShrinkFactors, None, itkShrinkImageFilterIF2IF2)
itkShrinkImageFilterIF2IF2.GenerateOutputInformation = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GenerateOutputInformation, None, itkShrinkImageFilterIF2IF2)
itkShrinkImageFilterIF2IF2.GenerateInputRequestedRegion = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GenerateInputRequestedRegion, None, itkShrinkImageFilterIF2IF2)
itkShrinkImageFilterIF2IF2_swigregister = _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_swigregister
itkShrinkImageFilterIF2IF2_swigregister(itkShrinkImageFilterIF2IF2)

def itkShrinkImageFilterIF2IF2___New_orig__() -> "itkShrinkImageFilterIF2IF2_Pointer":
    """itkShrinkImageFilterIF2IF2___New_orig__() -> itkShrinkImageFilterIF2IF2_Pointer"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2___New_orig__()

def itkShrinkImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIF2IF2 *":
    """itkShrinkImageFilterIF2IF2_cast(itkLightObject obj) -> itkShrinkImageFilterIF2IF2"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_cast(obj)

class itkShrinkImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    C++ includes: itkShrinkImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShrinkImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkShrinkImageFilterIF3IF3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShrinkImageFilterIF3IF3_Pointer":
        """Clone(itkShrinkImageFilterIF3IF3 self) -> itkShrinkImageFilterIF3IF3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_Clone(self)


    def SetShrinkFactors(self, *args) -> "void":
        """
        SetShrinkFactors(itkShrinkImageFilterIF3IF3 self, itkFixedArrayUI3 _arg)
        SetShrinkFactors(itkShrinkImageFilterIF3IF3 self, unsigned int factor)

        Set the shrink
        factors. Values are clamped to a minimum value of 1. Default is 1 for
        all dimensions. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SetShrinkFactors(self, *args)


    def SetShrinkFactor(self, i: 'unsigned int', factor: 'unsigned int') -> "void":
        """SetShrinkFactor(itkShrinkImageFilterIF3IF3 self, unsigned int i, unsigned int factor)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SetShrinkFactor(self, i, factor)


    def GetShrinkFactors(self) -> "itkFixedArrayUI3 const &":
        """
        GetShrinkFactors(itkShrinkImageFilterIF3IF3 self) -> itkFixedArrayUI3

        Get the shrink
        factors. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GetShrinkFactors(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkShrinkImageFilterIF3IF3 self)

        ShrinkImageFilter produces an image which is a different resolution
        and with a different pixel spacing than its input image. As such,
        ShrinkImageFilter needs to provide an implementation for
        GenerateOutputInformation() in order to inform the pipeline execution
        model. The original documentation of this method is below. See:
        ProcessObject::GenerateOutputInformaton() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkShrinkImageFilterIF3IF3 self)

        ShrinkImageFilter needs a larger input requested region than the
        output requested region. As such, ShrinkImageFilter needs to provide
        an implementation for GenerateInputRequestedRegion() in order to
        inform the pipeline execution model. See:
        ProcessObject::GenerateInputRequestedRegion() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GenerateInputRequestedRegion(self)

    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_InputConvertibleToOutputCheck
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SameDimensionCheck
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkShrinkImageFilterIF3IF3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIF3IF3

        Create a new object of the class itkShrinkImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShrinkImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShrinkImageFilterIF3IF3.Clone = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_Clone, None, itkShrinkImageFilterIF3IF3)
itkShrinkImageFilterIF3IF3.SetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SetShrinkFactors, None, itkShrinkImageFilterIF3IF3)
itkShrinkImageFilterIF3IF3.SetShrinkFactor = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SetShrinkFactor, None, itkShrinkImageFilterIF3IF3)
itkShrinkImageFilterIF3IF3.GetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GetShrinkFactors, None, itkShrinkImageFilterIF3IF3)
itkShrinkImageFilterIF3IF3.GenerateOutputInformation = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GenerateOutputInformation, None, itkShrinkImageFilterIF3IF3)
itkShrinkImageFilterIF3IF3.GenerateInputRequestedRegion = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GenerateInputRequestedRegion, None, itkShrinkImageFilterIF3IF3)
itkShrinkImageFilterIF3IF3_swigregister = _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_swigregister
itkShrinkImageFilterIF3IF3_swigregister(itkShrinkImageFilterIF3IF3)

def itkShrinkImageFilterIF3IF3___New_orig__() -> "itkShrinkImageFilterIF3IF3_Pointer":
    """itkShrinkImageFilterIF3IF3___New_orig__() -> itkShrinkImageFilterIF3IF3_Pointer"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3___New_orig__()

def itkShrinkImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIF3IF3 *":
    """itkShrinkImageFilterIF3IF3_cast(itkLightObject obj) -> itkShrinkImageFilterIF3IF3"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_cast(obj)

class itkShrinkImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    C++ includes: itkShrinkImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShrinkImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkShrinkImageFilterISS2ISS2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShrinkImageFilterISS2ISS2_Pointer":
        """Clone(itkShrinkImageFilterISS2ISS2 self) -> itkShrinkImageFilterISS2ISS2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_Clone(self)


    def SetShrinkFactors(self, *args) -> "void":
        """
        SetShrinkFactors(itkShrinkImageFilterISS2ISS2 self, itkFixedArrayUI2 _arg)
        SetShrinkFactors(itkShrinkImageFilterISS2ISS2 self, unsigned int factor)

        Set the shrink
        factors. Values are clamped to a minimum value of 1. Default is 1 for
        all dimensions. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SetShrinkFactors(self, *args)


    def SetShrinkFactor(self, i: 'unsigned int', factor: 'unsigned int') -> "void":
        """SetShrinkFactor(itkShrinkImageFilterISS2ISS2 self, unsigned int i, unsigned int factor)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SetShrinkFactor(self, i, factor)


    def GetShrinkFactors(self) -> "itkFixedArrayUI2 const &":
        """
        GetShrinkFactors(itkShrinkImageFilterISS2ISS2 self) -> itkFixedArrayUI2

        Get the shrink
        factors. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GetShrinkFactors(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkShrinkImageFilterISS2ISS2 self)

        ShrinkImageFilter produces an image which is a different resolution
        and with a different pixel spacing than its input image. As such,
        ShrinkImageFilter needs to provide an implementation for
        GenerateOutputInformation() in order to inform the pipeline execution
        model. The original documentation of this method is below. See:
        ProcessObject::GenerateOutputInformaton() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkShrinkImageFilterISS2ISS2 self)

        ShrinkImageFilter needs a larger input requested region than the
        output requested region. As such, ShrinkImageFilter needs to provide
        an implementation for GenerateInputRequestedRegion() in order to
        inform the pipeline execution model. See:
        ProcessObject::GenerateInputRequestedRegion() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GenerateInputRequestedRegion(self)

    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_InputConvertibleToOutputCheck
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SameDimensionCheck
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkShrinkImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkShrinkImageFilterISS2ISS2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterISS2ISS2

        Create a new object of the class itkShrinkImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShrinkImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShrinkImageFilterISS2ISS2.Clone = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_Clone, None, itkShrinkImageFilterISS2ISS2)
itkShrinkImageFilterISS2ISS2.SetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SetShrinkFactors, None, itkShrinkImageFilterISS2ISS2)
itkShrinkImageFilterISS2ISS2.SetShrinkFactor = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SetShrinkFactor, None, itkShrinkImageFilterISS2ISS2)
itkShrinkImageFilterISS2ISS2.GetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GetShrinkFactors, None, itkShrinkImageFilterISS2ISS2)
itkShrinkImageFilterISS2ISS2.GenerateOutputInformation = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GenerateOutputInformation, None, itkShrinkImageFilterISS2ISS2)
itkShrinkImageFilterISS2ISS2.GenerateInputRequestedRegion = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GenerateInputRequestedRegion, None, itkShrinkImageFilterISS2ISS2)
itkShrinkImageFilterISS2ISS2_swigregister = _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_swigregister
itkShrinkImageFilterISS2ISS2_swigregister(itkShrinkImageFilterISS2ISS2)

def itkShrinkImageFilterISS2ISS2___New_orig__() -> "itkShrinkImageFilterISS2ISS2_Pointer":
    """itkShrinkImageFilterISS2ISS2___New_orig__() -> itkShrinkImageFilterISS2ISS2_Pointer"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2___New_orig__()

def itkShrinkImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkShrinkImageFilterISS2ISS2 *":
    """itkShrinkImageFilterISS2ISS2_cast(itkLightObject obj) -> itkShrinkImageFilterISS2ISS2"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_cast(obj)

class itkShrinkImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    C++ includes: itkShrinkImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShrinkImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkShrinkImageFilterISS3ISS3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShrinkImageFilterISS3ISS3_Pointer":
        """Clone(itkShrinkImageFilterISS3ISS3 self) -> itkShrinkImageFilterISS3ISS3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_Clone(self)


    def SetShrinkFactors(self, *args) -> "void":
        """
        SetShrinkFactors(itkShrinkImageFilterISS3ISS3 self, itkFixedArrayUI3 _arg)
        SetShrinkFactors(itkShrinkImageFilterISS3ISS3 self, unsigned int factor)

        Set the shrink
        factors. Values are clamped to a minimum value of 1. Default is 1 for
        all dimensions. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SetShrinkFactors(self, *args)


    def SetShrinkFactor(self, i: 'unsigned int', factor: 'unsigned int') -> "void":
        """SetShrinkFactor(itkShrinkImageFilterISS3ISS3 self, unsigned int i, unsigned int factor)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SetShrinkFactor(self, i, factor)


    def GetShrinkFactors(self) -> "itkFixedArrayUI3 const &":
        """
        GetShrinkFactors(itkShrinkImageFilterISS3ISS3 self) -> itkFixedArrayUI3

        Get the shrink
        factors. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GetShrinkFactors(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkShrinkImageFilterISS3ISS3 self)

        ShrinkImageFilter produces an image which is a different resolution
        and with a different pixel spacing than its input image. As such,
        ShrinkImageFilter needs to provide an implementation for
        GenerateOutputInformation() in order to inform the pipeline execution
        model. The original documentation of this method is below. See:
        ProcessObject::GenerateOutputInformaton() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkShrinkImageFilterISS3ISS3 self)

        ShrinkImageFilter needs a larger input requested region than the
        output requested region. As such, ShrinkImageFilter needs to provide
        an implementation for GenerateInputRequestedRegion() in order to
        inform the pipeline execution model. See:
        ProcessObject::GenerateInputRequestedRegion() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GenerateInputRequestedRegion(self)

    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_InputConvertibleToOutputCheck
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SameDimensionCheck
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkShrinkImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkShrinkImageFilterISS3ISS3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterISS3ISS3

        Create a new object of the class itkShrinkImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShrinkImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShrinkImageFilterISS3ISS3.Clone = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_Clone, None, itkShrinkImageFilterISS3ISS3)
itkShrinkImageFilterISS3ISS3.SetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SetShrinkFactors, None, itkShrinkImageFilterISS3ISS3)
itkShrinkImageFilterISS3ISS3.SetShrinkFactor = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SetShrinkFactor, None, itkShrinkImageFilterISS3ISS3)
itkShrinkImageFilterISS3ISS3.GetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GetShrinkFactors, None, itkShrinkImageFilterISS3ISS3)
itkShrinkImageFilterISS3ISS3.GenerateOutputInformation = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GenerateOutputInformation, None, itkShrinkImageFilterISS3ISS3)
itkShrinkImageFilterISS3ISS3.GenerateInputRequestedRegion = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GenerateInputRequestedRegion, None, itkShrinkImageFilterISS3ISS3)
itkShrinkImageFilterISS3ISS3_swigregister = _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_swigregister
itkShrinkImageFilterISS3ISS3_swigregister(itkShrinkImageFilterISS3ISS3)

def itkShrinkImageFilterISS3ISS3___New_orig__() -> "itkShrinkImageFilterISS3ISS3_Pointer":
    """itkShrinkImageFilterISS3ISS3___New_orig__() -> itkShrinkImageFilterISS3ISS3_Pointer"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3___New_orig__()

def itkShrinkImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkShrinkImageFilterISS3ISS3 *":
    """itkShrinkImageFilterISS3ISS3_cast(itkLightObject obj) -> itkShrinkImageFilterISS3ISS3"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_cast(obj)

class itkShrinkImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    C++ includes: itkShrinkImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShrinkImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkShrinkImageFilterIUC2IUC2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShrinkImageFilterIUC2IUC2_Pointer":
        """Clone(itkShrinkImageFilterIUC2IUC2 self) -> itkShrinkImageFilterIUC2IUC2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_Clone(self)


    def SetShrinkFactors(self, *args) -> "void":
        """
        SetShrinkFactors(itkShrinkImageFilterIUC2IUC2 self, itkFixedArrayUI2 _arg)
        SetShrinkFactors(itkShrinkImageFilterIUC2IUC2 self, unsigned int factor)

        Set the shrink
        factors. Values are clamped to a minimum value of 1. Default is 1 for
        all dimensions. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SetShrinkFactors(self, *args)


    def SetShrinkFactor(self, i: 'unsigned int', factor: 'unsigned int') -> "void":
        """SetShrinkFactor(itkShrinkImageFilterIUC2IUC2 self, unsigned int i, unsigned int factor)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SetShrinkFactor(self, i, factor)


    def GetShrinkFactors(self) -> "itkFixedArrayUI2 const &":
        """
        GetShrinkFactors(itkShrinkImageFilterIUC2IUC2 self) -> itkFixedArrayUI2

        Get the shrink
        factors. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GetShrinkFactors(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkShrinkImageFilterIUC2IUC2 self)

        ShrinkImageFilter produces an image which is a different resolution
        and with a different pixel spacing than its input image. As such,
        ShrinkImageFilter needs to provide an implementation for
        GenerateOutputInformation() in order to inform the pipeline execution
        model. The original documentation of this method is below. See:
        ProcessObject::GenerateOutputInformaton() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkShrinkImageFilterIUC2IUC2 self)

        ShrinkImageFilter needs a larger input requested region than the
        output requested region. As such, ShrinkImageFilter needs to provide
        an implementation for GenerateInputRequestedRegion() in order to
        inform the pipeline execution model. See:
        ProcessObject::GenerateInputRequestedRegion() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GenerateInputRequestedRegion(self)

    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SameDimensionCheck
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkShrinkImageFilterIUC2IUC2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUC2IUC2

        Create a new object of the class itkShrinkImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShrinkImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShrinkImageFilterIUC2IUC2.Clone = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_Clone, None, itkShrinkImageFilterIUC2IUC2)
itkShrinkImageFilterIUC2IUC2.SetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SetShrinkFactors, None, itkShrinkImageFilterIUC2IUC2)
itkShrinkImageFilterIUC2IUC2.SetShrinkFactor = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SetShrinkFactor, None, itkShrinkImageFilterIUC2IUC2)
itkShrinkImageFilterIUC2IUC2.GetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GetShrinkFactors, None, itkShrinkImageFilterIUC2IUC2)
itkShrinkImageFilterIUC2IUC2.GenerateOutputInformation = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GenerateOutputInformation, None, itkShrinkImageFilterIUC2IUC2)
itkShrinkImageFilterIUC2IUC2.GenerateInputRequestedRegion = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GenerateInputRequestedRegion, None, itkShrinkImageFilterIUC2IUC2)
itkShrinkImageFilterIUC2IUC2_swigregister = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_swigregister
itkShrinkImageFilterIUC2IUC2_swigregister(itkShrinkImageFilterIUC2IUC2)

def itkShrinkImageFilterIUC2IUC2___New_orig__() -> "itkShrinkImageFilterIUC2IUC2_Pointer":
    """itkShrinkImageFilterIUC2IUC2___New_orig__() -> itkShrinkImageFilterIUC2IUC2_Pointer"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2___New_orig__()

def itkShrinkImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIUC2IUC2 *":
    """itkShrinkImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkShrinkImageFilterIUC2IUC2"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_cast(obj)

class itkShrinkImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    C++ includes: itkShrinkImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShrinkImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkShrinkImageFilterIUC3IUC3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShrinkImageFilterIUC3IUC3_Pointer":
        """Clone(itkShrinkImageFilterIUC3IUC3 self) -> itkShrinkImageFilterIUC3IUC3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_Clone(self)


    def SetShrinkFactors(self, *args) -> "void":
        """
        SetShrinkFactors(itkShrinkImageFilterIUC3IUC3 self, itkFixedArrayUI3 _arg)
        SetShrinkFactors(itkShrinkImageFilterIUC3IUC3 self, unsigned int factor)

        Set the shrink
        factors. Values are clamped to a minimum value of 1. Default is 1 for
        all dimensions. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SetShrinkFactors(self, *args)


    def SetShrinkFactor(self, i: 'unsigned int', factor: 'unsigned int') -> "void":
        """SetShrinkFactor(itkShrinkImageFilterIUC3IUC3 self, unsigned int i, unsigned int factor)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SetShrinkFactor(self, i, factor)


    def GetShrinkFactors(self) -> "itkFixedArrayUI3 const &":
        """
        GetShrinkFactors(itkShrinkImageFilterIUC3IUC3 self) -> itkFixedArrayUI3

        Get the shrink
        factors. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GetShrinkFactors(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkShrinkImageFilterIUC3IUC3 self)

        ShrinkImageFilter produces an image which is a different resolution
        and with a different pixel spacing than its input image. As such,
        ShrinkImageFilter needs to provide an implementation for
        GenerateOutputInformation() in order to inform the pipeline execution
        model. The original documentation of this method is below. See:
        ProcessObject::GenerateOutputInformaton() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkShrinkImageFilterIUC3IUC3 self)

        ShrinkImageFilter needs a larger input requested region than the
        output requested region. As such, ShrinkImageFilter needs to provide
        an implementation for GenerateInputRequestedRegion() in order to
        inform the pipeline execution model. See:
        ProcessObject::GenerateInputRequestedRegion() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GenerateInputRequestedRegion(self)

    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SameDimensionCheck
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkShrinkImageFilterIUC3IUC3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUC3IUC3

        Create a new object of the class itkShrinkImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShrinkImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShrinkImageFilterIUC3IUC3.Clone = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_Clone, None, itkShrinkImageFilterIUC3IUC3)
itkShrinkImageFilterIUC3IUC3.SetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SetShrinkFactors, None, itkShrinkImageFilterIUC3IUC3)
itkShrinkImageFilterIUC3IUC3.SetShrinkFactor = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SetShrinkFactor, None, itkShrinkImageFilterIUC3IUC3)
itkShrinkImageFilterIUC3IUC3.GetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GetShrinkFactors, None, itkShrinkImageFilterIUC3IUC3)
itkShrinkImageFilterIUC3IUC3.GenerateOutputInformation = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GenerateOutputInformation, None, itkShrinkImageFilterIUC3IUC3)
itkShrinkImageFilterIUC3IUC3.GenerateInputRequestedRegion = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GenerateInputRequestedRegion, None, itkShrinkImageFilterIUC3IUC3)
itkShrinkImageFilterIUC3IUC3_swigregister = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_swigregister
itkShrinkImageFilterIUC3IUC3_swigregister(itkShrinkImageFilterIUC3IUC3)

def itkShrinkImageFilterIUC3IUC3___New_orig__() -> "itkShrinkImageFilterIUC3IUC3_Pointer":
    """itkShrinkImageFilterIUC3IUC3___New_orig__() -> itkShrinkImageFilterIUC3IUC3_Pointer"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3___New_orig__()

def itkShrinkImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIUC3IUC3 *":
    """itkShrinkImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkShrinkImageFilterIUC3IUC3"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_cast(obj)

class itkShrinkImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    C++ includes: itkShrinkImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShrinkImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkShrinkImageFilterIUS2IUS2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShrinkImageFilterIUS2IUS2_Pointer":
        """Clone(itkShrinkImageFilterIUS2IUS2 self) -> itkShrinkImageFilterIUS2IUS2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_Clone(self)


    def SetShrinkFactors(self, *args) -> "void":
        """
        SetShrinkFactors(itkShrinkImageFilterIUS2IUS2 self, itkFixedArrayUI2 _arg)
        SetShrinkFactors(itkShrinkImageFilterIUS2IUS2 self, unsigned int factor)

        Set the shrink
        factors. Values are clamped to a minimum value of 1. Default is 1 for
        all dimensions. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SetShrinkFactors(self, *args)


    def SetShrinkFactor(self, i: 'unsigned int', factor: 'unsigned int') -> "void":
        """SetShrinkFactor(itkShrinkImageFilterIUS2IUS2 self, unsigned int i, unsigned int factor)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SetShrinkFactor(self, i, factor)


    def GetShrinkFactors(self) -> "itkFixedArrayUI2 const &":
        """
        GetShrinkFactors(itkShrinkImageFilterIUS2IUS2 self) -> itkFixedArrayUI2

        Get the shrink
        factors. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GetShrinkFactors(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkShrinkImageFilterIUS2IUS2 self)

        ShrinkImageFilter produces an image which is a different resolution
        and with a different pixel spacing than its input image. As such,
        ShrinkImageFilter needs to provide an implementation for
        GenerateOutputInformation() in order to inform the pipeline execution
        model. The original documentation of this method is below. See:
        ProcessObject::GenerateOutputInformaton() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkShrinkImageFilterIUS2IUS2 self)

        ShrinkImageFilter needs a larger input requested region than the
        output requested region. As such, ShrinkImageFilter needs to provide
        an implementation for GenerateInputRequestedRegion() in order to
        inform the pipeline execution model. See:
        ProcessObject::GenerateInputRequestedRegion() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GenerateInputRequestedRegion(self)

    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SameDimensionCheck
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkShrinkImageFilterIUS2IUS2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUS2IUS2

        Create a new object of the class itkShrinkImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShrinkImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShrinkImageFilterIUS2IUS2.Clone = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_Clone, None, itkShrinkImageFilterIUS2IUS2)
itkShrinkImageFilterIUS2IUS2.SetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SetShrinkFactors, None, itkShrinkImageFilterIUS2IUS2)
itkShrinkImageFilterIUS2IUS2.SetShrinkFactor = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SetShrinkFactor, None, itkShrinkImageFilterIUS2IUS2)
itkShrinkImageFilterIUS2IUS2.GetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GetShrinkFactors, None, itkShrinkImageFilterIUS2IUS2)
itkShrinkImageFilterIUS2IUS2.GenerateOutputInformation = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GenerateOutputInformation, None, itkShrinkImageFilterIUS2IUS2)
itkShrinkImageFilterIUS2IUS2.GenerateInputRequestedRegion = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GenerateInputRequestedRegion, None, itkShrinkImageFilterIUS2IUS2)
itkShrinkImageFilterIUS2IUS2_swigregister = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_swigregister
itkShrinkImageFilterIUS2IUS2_swigregister(itkShrinkImageFilterIUS2IUS2)

def itkShrinkImageFilterIUS2IUS2___New_orig__() -> "itkShrinkImageFilterIUS2IUS2_Pointer":
    """itkShrinkImageFilterIUS2IUS2___New_orig__() -> itkShrinkImageFilterIUS2IUS2_Pointer"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2___New_orig__()

def itkShrinkImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIUS2IUS2 *":
    """itkShrinkImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkShrinkImageFilterIUS2IUS2"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_cast(obj)

class itkShrinkImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    C++ includes: itkShrinkImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShrinkImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkShrinkImageFilterIUS3IUS3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShrinkImageFilterIUS3IUS3_Pointer":
        """Clone(itkShrinkImageFilterIUS3IUS3 self) -> itkShrinkImageFilterIUS3IUS3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_Clone(self)


    def SetShrinkFactors(self, *args) -> "void":
        """
        SetShrinkFactors(itkShrinkImageFilterIUS3IUS3 self, itkFixedArrayUI3 _arg)
        SetShrinkFactors(itkShrinkImageFilterIUS3IUS3 self, unsigned int factor)

        Set the shrink
        factors. Values are clamped to a minimum value of 1. Default is 1 for
        all dimensions. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SetShrinkFactors(self, *args)


    def SetShrinkFactor(self, i: 'unsigned int', factor: 'unsigned int') -> "void":
        """SetShrinkFactor(itkShrinkImageFilterIUS3IUS3 self, unsigned int i, unsigned int factor)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SetShrinkFactor(self, i, factor)


    def GetShrinkFactors(self) -> "itkFixedArrayUI3 const &":
        """
        GetShrinkFactors(itkShrinkImageFilterIUS3IUS3 self) -> itkFixedArrayUI3

        Get the shrink
        factors. 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GetShrinkFactors(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkShrinkImageFilterIUS3IUS3 self)

        ShrinkImageFilter produces an image which is a different resolution
        and with a different pixel spacing than its input image. As such,
        ShrinkImageFilter needs to provide an implementation for
        GenerateOutputInformation() in order to inform the pipeline execution
        model. The original documentation of this method is below. See:
        ProcessObject::GenerateOutputInformaton() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkShrinkImageFilterIUS3IUS3 self)

        ShrinkImageFilter needs a larger input requested region than the
        output requested region. As such, ShrinkImageFilter needs to provide
        an implementation for GenerateInputRequestedRegion() in order to
        inform the pipeline execution model. See:
        ProcessObject::GenerateInputRequestedRegion() 
        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GenerateInputRequestedRegion(self)

    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SameDimensionCheck
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkShrinkImageFilterIUS3IUS3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUS3IUS3

        Create a new object of the class itkShrinkImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShrinkImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShrinkImageFilterIUS3IUS3.Clone = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_Clone, None, itkShrinkImageFilterIUS3IUS3)
itkShrinkImageFilterIUS3IUS3.SetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SetShrinkFactors, None, itkShrinkImageFilterIUS3IUS3)
itkShrinkImageFilterIUS3IUS3.SetShrinkFactor = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SetShrinkFactor, None, itkShrinkImageFilterIUS3IUS3)
itkShrinkImageFilterIUS3IUS3.GetShrinkFactors = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GetShrinkFactors, None, itkShrinkImageFilterIUS3IUS3)
itkShrinkImageFilterIUS3IUS3.GenerateOutputInformation = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GenerateOutputInformation, None, itkShrinkImageFilterIUS3IUS3)
itkShrinkImageFilterIUS3IUS3.GenerateInputRequestedRegion = new_instancemethod(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GenerateInputRequestedRegion, None, itkShrinkImageFilterIUS3IUS3)
itkShrinkImageFilterIUS3IUS3_swigregister = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_swigregister
itkShrinkImageFilterIUS3IUS3_swigregister(itkShrinkImageFilterIUS3IUS3)

def itkShrinkImageFilterIUS3IUS3___New_orig__() -> "itkShrinkImageFilterIUS3IUS3_Pointer":
    """itkShrinkImageFilterIUS3IUS3___New_orig__() -> itkShrinkImageFilterIUS3IUS3_Pointer"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3___New_orig__()

def itkShrinkImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkShrinkImageFilterIUS3IUS3 *":
    """itkShrinkImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkShrinkImageFilterIUS3IUS3"""
    return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def shrink_image_filter(*args, **kwargs):
    """Procedural interface for ShrinkImageFilter"""
    import itk
    instance = itk.ShrinkImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def shrink_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ShrinkImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ShrinkImageFilter.values()[0]
    else:
        filter_object = itk.ShrinkImageFilter

    shrink_image_filter.__doc__ = filter_object.__doc__
    shrink_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    shrink_image_filter.__doc__ += "Available Keyword Arguments:\n"
    shrink_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



