# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ITKImageIntensityPython
else:
    import _ITKImageIntensityPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _ITKImageIntensityPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _ITKImageIntensityPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



import ITKPyBasePython
import ITKPathPython
import ITKImageStatisticsPython
import ITKImageGridPython
from itkAbsImageFilterPython import *
from itkAcosImageFilterPython import *
from itkAddImageFilterPython import *
from itkAndImageFilterPython import *
from itkAsinImageFilterPython import *
from itkAtan2ImageFilterPython import *
from itkAtanImageFilterPython import *
from itkBinaryMagnitudeImageFilterPython import *
from itkBoundedReciprocalImageFilterPython import *
from itkClampImageFilterPython import *
from itkComplexToImaginaryImageFilterPython import *
from itkComplexToModulusImageFilterPython import *
from itkComplexToPhaseImageFilterPython import *
from itkComplexToRealImageFilterPython import *
from itkConstrainedValueAdditionImageFilterPython import *
from itkConstrainedValueDifferenceImageFilterPython import *
from itkCosImageFilterPython import *
from itkDivideImageFilterPython import *
from itkEdgePotentialImageFilterPython import *
from itkExpImageFilterPython import *
from itkExpNegativeImageFilterPython import *
from itkHistogramMatchingImageFilterPython import *
from itkIntensityWindowingImageFilterPython import *
from itkInvertIntensityImageFilterPython import *
from itkLog10ImageFilterPython import *
from itkLogImageFilterPython import *
from itkMagnitudeAndPhaseToComplexImageFilterPython import *
from itkMaskImageFilterPython import *
from itkMaskNegatedImageFilterPython import *
from itkMaximumImageFilterPython import *
from itkMinimumImageFilterPython import *
from itkModulusImageFilterPython import *
from itkMultiplyImageFilterPython import *
from itkNaryAddImageFilterPython import *
from itkNaryMaximumImageFilterPython import *
from itkNormalizeImageFilterPython import *
from itkNormalizeToConstantImageFilterPython import *
from itkNotImageFilterPython import *
from itkOrImageFilterPython import *
from itkPowImageFilterPython import *
from itkRGBToLuminanceImageFilterPython import *
from itkRescaleIntensityImageFilterPython import *
from itkRoundImageFilterPython import *
from itkShiftScaleImageFilterPython import *
from itkSigmoidImageFilterPython import *
from itkSinImageFilterPython import *
from itkSqrtImageFilterPython import *
from itkSquareImageFilterPython import *
from itkSubtractImageFilterPython import *
from itkSymmetricEigenAnalysisImageFilterPython import *
from itkTanImageFilterPython import *
from itkTernaryAddImageFilterPython import *
from itkTernaryMagnitudeImageFilterPython import *
from itkTernaryMagnitudeSquaredImageFilterPython import *
from itkVectorIndexSelectionCastImageFilterPython import *
from itkVectorMagnitudeImageFilterPython import *
from itkVectorRescaleIntensityImageFilterPython import *
from itkWeightedAddImageFilterPython import *
from itkXorImageFilterPython import *




