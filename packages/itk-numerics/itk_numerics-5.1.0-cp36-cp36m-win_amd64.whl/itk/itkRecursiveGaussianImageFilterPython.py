# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRecursiveGaussianImageFilterPython
else:
    import _itkRecursiveGaussianImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkRecursiveGaussianImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkRecursiveGaussianImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itkRecursiveSeparableImageFilterPython
import itkImageRegionPython
import ITKCommonBasePython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkVectorPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkCovariantVectorPython
import itkPointPython
import vnl_matrix_fixedPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython

def itkRecursiveGaussianImageFilterID3ID3_New():
  return itkRecursiveGaussianImageFilterID3ID3.New()


def itkRecursiveGaussianImageFilterID2ID2_New():
  return itkRecursiveGaussianImageFilterID2ID2.New()


def itkRecursiveGaussianImageFilterIF3IF3_New():
  return itkRecursiveGaussianImageFilterIF3IF3.New()


def itkRecursiveGaussianImageFilterIF2IF2_New():
  return itkRecursiveGaussianImageFilterIF2IF2.New()


def itkRecursiveGaussianImageFilterIUS3IUS3_New():
  return itkRecursiveGaussianImageFilterIUS3IUS3.New()


def itkRecursiveGaussianImageFilterIUS2IUS2_New():
  return itkRecursiveGaussianImageFilterIUS2IUS2.New()


def itkRecursiveGaussianImageFilterIUC3IUC3_New():
  return itkRecursiveGaussianImageFilterIUC3IUC3.New()


def itkRecursiveGaussianImageFilterIUC2IUC2_New():
  return itkRecursiveGaussianImageFilterIUC2IUC2.New()


def itkRecursiveGaussianImageFilterISS3ISS3_New():
  return itkRecursiveGaussianImageFilterISS3ISS3.New()


def itkRecursiveGaussianImageFilterISS2ISS2_New():
  return itkRecursiveGaussianImageFilterISS2ISS2.New()

class itkRecursiveGaussianImageFilterEnums(object):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GaussianOrder_ZeroOrder = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterEnums_GaussianOrder_ZeroOrder
    
    GaussianOrder_FirstOrder = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterEnums_GaussianOrder_FirstOrder
    
    GaussianOrder_SecondOrder = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterEnums_GaussianOrder_SecondOrder
    

    def __init__(self, *args):
        r"""
        __init__(itkRecursiveGaussianImageFilterEnums self) -> itkRecursiveGaussianImageFilterEnums
        __init__(itkRecursiveGaussianImageFilterEnums self, itkRecursiveGaussianImageFilterEnums arg0) -> itkRecursiveGaussianImageFilterEnums
        """
        _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterEnums_swiginit(self, _itkRecursiveGaussianImageFilterPython.new_itkRecursiveGaussianImageFilterEnums(*args))
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterEnums

# Register itkRecursiveGaussianImageFilterEnums in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterEnums_swigregister(itkRecursiveGaussianImageFilterEnums)

class itkRecursiveGaussianImageFilterID2ID2(itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_Clone)
    GetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_GetSigma)
    SetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_SetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_GetNormalizeAcrossScale)
    SetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_SetOrder)
    GetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_GetOrder)
    SetZeroOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_SetZeroOrder)
    SetFirstOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_SetFirstOrder)
    SetSecondOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_SetSecondOrder)
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterID2ID2
    cast = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkRecursiveGaussianImageFilterID2ID2

        Create a new object of the class itkRecursiveGaussianImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRecursiveGaussianImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRecursiveGaussianImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveGaussianImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRecursiveGaussianImageFilterID2ID2 in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_swigregister(itkRecursiveGaussianImageFilterID2ID2)
itkRecursiveGaussianImageFilterID2ID2___New_orig__ = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2___New_orig__
itkRecursiveGaussianImageFilterID2ID2_cast = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID2ID2_cast

class itkRecursiveGaussianImageFilterID3ID3(itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_Clone)
    GetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_GetSigma)
    SetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_SetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_GetNormalizeAcrossScale)
    SetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_SetOrder)
    GetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_GetOrder)
    SetZeroOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_SetZeroOrder)
    SetFirstOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_SetFirstOrder)
    SetSecondOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_SetSecondOrder)
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterID3ID3
    cast = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkRecursiveGaussianImageFilterID3ID3

        Create a new object of the class itkRecursiveGaussianImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRecursiveGaussianImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRecursiveGaussianImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveGaussianImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRecursiveGaussianImageFilterID3ID3 in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_swigregister(itkRecursiveGaussianImageFilterID3ID3)
itkRecursiveGaussianImageFilterID3ID3___New_orig__ = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3___New_orig__
itkRecursiveGaussianImageFilterID3ID3_cast = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterID3ID3_cast

class itkRecursiveGaussianImageFilterIF2IF2(itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_Clone)
    GetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_GetSigma)
    SetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_SetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_GetNormalizeAcrossScale)
    SetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_SetOrder)
    GetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_GetOrder)
    SetZeroOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_SetZeroOrder)
    SetFirstOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_SetFirstOrder)
    SetSecondOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_SetSecondOrder)
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterIF2IF2
    cast = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkRecursiveGaussianImageFilterIF2IF2

        Create a new object of the class itkRecursiveGaussianImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRecursiveGaussianImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRecursiveGaussianImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveGaussianImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRecursiveGaussianImageFilterIF2IF2 in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_swigregister(itkRecursiveGaussianImageFilterIF2IF2)
itkRecursiveGaussianImageFilterIF2IF2___New_orig__ = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2___New_orig__
itkRecursiveGaussianImageFilterIF2IF2_cast = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF2IF2_cast

class itkRecursiveGaussianImageFilterIF3IF3(itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_Clone)
    GetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_GetSigma)
    SetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_SetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_GetNormalizeAcrossScale)
    SetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_SetOrder)
    GetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_GetOrder)
    SetZeroOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_SetZeroOrder)
    SetFirstOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_SetFirstOrder)
    SetSecondOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_SetSecondOrder)
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterIF3IF3
    cast = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkRecursiveGaussianImageFilterIF3IF3

        Create a new object of the class itkRecursiveGaussianImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRecursiveGaussianImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRecursiveGaussianImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveGaussianImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRecursiveGaussianImageFilterIF3IF3 in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_swigregister(itkRecursiveGaussianImageFilterIF3IF3)
itkRecursiveGaussianImageFilterIF3IF3___New_orig__ = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3___New_orig__
itkRecursiveGaussianImageFilterIF3IF3_cast = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIF3IF3_cast

class itkRecursiveGaussianImageFilterISS2ISS2(itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterISS2ISS2):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_Clone)
    GetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_GetSigma)
    SetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_SetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_GetNormalizeAcrossScale)
    SetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_SetOrder)
    GetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_GetOrder)
    SetZeroOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_SetZeroOrder)
    SetFirstOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_SetFirstOrder)
    SetSecondOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_SetSecondOrder)
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRecursiveGaussianImageFilterISS2ISS2

        Create a new object of the class itkRecursiveGaussianImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRecursiveGaussianImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRecursiveGaussianImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveGaussianImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRecursiveGaussianImageFilterISS2ISS2 in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_swigregister(itkRecursiveGaussianImageFilterISS2ISS2)
itkRecursiveGaussianImageFilterISS2ISS2___New_orig__ = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2___New_orig__
itkRecursiveGaussianImageFilterISS2ISS2_cast = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS2ISS2_cast

class itkRecursiveGaussianImageFilterISS3ISS3(itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterISS3ISS3):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_Clone)
    GetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_GetSigma)
    SetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_SetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_GetNormalizeAcrossScale)
    SetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_SetOrder)
    GetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_GetOrder)
    SetZeroOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_SetZeroOrder)
    SetFirstOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_SetFirstOrder)
    SetSecondOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_SetSecondOrder)
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRecursiveGaussianImageFilterISS3ISS3

        Create a new object of the class itkRecursiveGaussianImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRecursiveGaussianImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRecursiveGaussianImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveGaussianImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRecursiveGaussianImageFilterISS3ISS3 in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_swigregister(itkRecursiveGaussianImageFilterISS3ISS3)
itkRecursiveGaussianImageFilterISS3ISS3___New_orig__ = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3___New_orig__
itkRecursiveGaussianImageFilterISS3ISS3_cast = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterISS3ISS3_cast

class itkRecursiveGaussianImageFilterIUC2IUC2(itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_Clone)
    GetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_GetSigma)
    SetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_SetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_GetNormalizeAcrossScale)
    SetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_SetOrder)
    GetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_GetOrder)
    SetZeroOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_SetZeroOrder)
    SetFirstOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_SetFirstOrder)
    SetSecondOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_SetSecondOrder)
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRecursiveGaussianImageFilterIUC2IUC2

        Create a new object of the class itkRecursiveGaussianImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRecursiveGaussianImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRecursiveGaussianImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveGaussianImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRecursiveGaussianImageFilterIUC2IUC2 in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_swigregister(itkRecursiveGaussianImageFilterIUC2IUC2)
itkRecursiveGaussianImageFilterIUC2IUC2___New_orig__ = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2___New_orig__
itkRecursiveGaussianImageFilterIUC2IUC2_cast = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC2IUC2_cast

class itkRecursiveGaussianImageFilterIUC3IUC3(itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_Clone)
    GetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_GetSigma)
    SetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_SetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_GetNormalizeAcrossScale)
    SetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_SetOrder)
    GetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_GetOrder)
    SetZeroOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_SetZeroOrder)
    SetFirstOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_SetFirstOrder)
    SetSecondOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_SetSecondOrder)
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRecursiveGaussianImageFilterIUC3IUC3

        Create a new object of the class itkRecursiveGaussianImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRecursiveGaussianImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRecursiveGaussianImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveGaussianImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRecursiveGaussianImageFilterIUC3IUC3 in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_swigregister(itkRecursiveGaussianImageFilterIUC3IUC3)
itkRecursiveGaussianImageFilterIUC3IUC3___New_orig__ = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3___New_orig__
itkRecursiveGaussianImageFilterIUC3IUC3_cast = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUC3IUC3_cast

class itkRecursiveGaussianImageFilterIUS2IUS2(itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_Clone)
    GetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_GetSigma)
    SetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_SetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_GetNormalizeAcrossScale)
    SetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_SetOrder)
    GetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_GetOrder)
    SetZeroOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_SetZeroOrder)
    SetFirstOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_SetFirstOrder)
    SetSecondOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_SetSecondOrder)
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRecursiveGaussianImageFilterIUS2IUS2

        Create a new object of the class itkRecursiveGaussianImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRecursiveGaussianImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRecursiveGaussianImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveGaussianImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRecursiveGaussianImageFilterIUS2IUS2 in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_swigregister(itkRecursiveGaussianImageFilterIUS2IUS2)
itkRecursiveGaussianImageFilterIUS2IUS2___New_orig__ = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2___New_orig__
itkRecursiveGaussianImageFilterIUS2IUS2_cast = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS2IUS2_cast

class itkRecursiveGaussianImageFilterIUS3IUS3(itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3):
    r"""Proxy of C++ itkRecursiveGaussianImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_Clone)
    GetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_GetSigma)
    SetSigma = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_SetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_GetNormalizeAcrossScale)
    SetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_SetOrder)
    GetOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_GetOrder)
    SetZeroOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_SetZeroOrder)
    SetFirstOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_SetFirstOrder)
    SetSecondOrder = _swig_new_instance_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_SetSecondOrder)
    __swig_destroy__ = _itkRecursiveGaussianImageFilterPython.delete_itkRecursiveGaussianImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRecursiveGaussianImageFilterIUS3IUS3

        Create a new object of the class itkRecursiveGaussianImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRecursiveGaussianImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRecursiveGaussianImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveGaussianImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRecursiveGaussianImageFilterIUS3IUS3 in _itkRecursiveGaussianImageFilterPython:
_itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_swigregister(itkRecursiveGaussianImageFilterIUS3IUS3)
itkRecursiveGaussianImageFilterIUS3IUS3___New_orig__ = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3___New_orig__
itkRecursiveGaussianImageFilterIUS3IUS3_cast = _itkRecursiveGaussianImageFilterPython.itkRecursiveGaussianImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def recursive_gaussian_image_filter(*args, **kwargs):
    """Procedural interface for RecursiveGaussianImageFilter"""
    import itk
    instance = itk.RecursiveGaussianImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def recursive_gaussian_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.RecursiveGaussianImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.RecursiveGaussianImageFilter.values()[0]
    else:
        filter_object = itk.RecursiveGaussianImageFilter

    recursive_gaussian_image_filter.__doc__ = filter_object.__doc__
    recursive_gaussian_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    recursive_gaussian_image_filter.__doc__ += "Available Keyword Arguments:\n"
    recursive_gaussian_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



