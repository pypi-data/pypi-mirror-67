# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkOrientImageFilterPython
else:
    import _itkOrientImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkOrientImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkOrientImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itkImageToImageFilterBPython
import itkImageToImageFilterCommonPython
import pyBasePython
import ITKCommonBasePython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkVectorPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import itkCovariantVectorPython
import itkPointPython
import vnl_matrix_fixedPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkSpatialOrientationPython
import itkImageToImageFilterAPython

def itkOrientImageFilterICF3ICF3_New():
  return itkOrientImageFilterICF3ICF3.New()


def itkOrientImageFilterID3ID3_New():
  return itkOrientImageFilterID3ID3.New()


def itkOrientImageFilterIF3IF3_New():
  return itkOrientImageFilterIF3IF3.New()


def itkOrientImageFilterIUS3IUS3_New():
  return itkOrientImageFilterIUS3IUS3.New()


def itkOrientImageFilterIUC3IUC3_New():
  return itkOrientImageFilterIUC3IUC3.New()


def itkOrientImageFilterISS3ISS3_New():
  return itkOrientImageFilterISS3ISS3.New()


def itkOrientImageFilterICVF43ICVF43_New():
  return itkOrientImageFilterICVF43ICVF43.New()


def itkOrientImageFilterICVF33ICVF33_New():
  return itkOrientImageFilterICVF33ICVF33.New()


def itkOrientImageFilterICVF23ICVF23_New():
  return itkOrientImageFilterICVF23ICVF23.New()


def itkOrientImageFilterIVF43IVF43_New():
  return itkOrientImageFilterIVF43IVF43.New()


def itkOrientImageFilterIVF33IVF33_New():
  return itkOrientImageFilterIVF33IVF33.New()


def itkOrientImageFilterIVF23IVF23_New():
  return itkOrientImageFilterIVF23IVF23.New()


def itkOrientImageFilterIRGBAUC3IRGBAUC3_New():
  return itkOrientImageFilterIRGBAUC3IRGBAUC3.New()


def itkOrientImageFilterIRGBUC3IRGBUC3_New():
  return itkOrientImageFilterIRGBUC3IRGBUC3.New()

class itkOrientImageFilterICF3ICF3(itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkOrientImageFilterICF3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterICF3ICF3
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterICF3ICF3

        Create a new object of the class itkOrientImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterICF3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterICF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterICF3ICF3 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_swigregister(itkOrientImageFilterICF3ICF3)
itkOrientImageFilterICF3ICF3___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3___New_orig__
itkOrientImageFilterICF3ICF3_cast = _itkOrientImageFilterPython.itkOrientImageFilterICF3ICF3_cast

class itkOrientImageFilterICVF23ICVF23(itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkOrientImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterICVF23ICVF23
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterICVF23ICVF23

        Create a new object of the class itkOrientImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterICVF23ICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterICVF23ICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterICVF23ICVF23 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_swigregister(itkOrientImageFilterICVF23ICVF23)
itkOrientImageFilterICVF23ICVF23___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23___New_orig__
itkOrientImageFilterICVF23ICVF23_cast = _itkOrientImageFilterPython.itkOrientImageFilterICVF23ICVF23_cast

class itkOrientImageFilterICVF33ICVF33(itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkOrientImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterICVF33ICVF33
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterICVF33ICVF33

        Create a new object of the class itkOrientImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterICVF33ICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterICVF33ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterICVF33ICVF33 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_swigregister(itkOrientImageFilterICVF33ICVF33)
itkOrientImageFilterICVF33ICVF33___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33___New_orig__
itkOrientImageFilterICVF33ICVF33_cast = _itkOrientImageFilterPython.itkOrientImageFilterICVF33ICVF33_cast

class itkOrientImageFilterICVF43ICVF43(itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkOrientImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterICVF43ICVF43
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterICVF43ICVF43

        Create a new object of the class itkOrientImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterICVF43ICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterICVF43ICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterICVF43ICVF43 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_swigregister(itkOrientImageFilterICVF43ICVF43)
itkOrientImageFilterICVF43ICVF43___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43___New_orig__
itkOrientImageFilterICVF43ICVF43_cast = _itkOrientImageFilterPython.itkOrientImageFilterICVF43ICVF43_cast

class itkOrientImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkOrientImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterID3ID3_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterID3ID3_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterID3ID3_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterID3ID3
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterID3ID3

        Create a new object of the class itkOrientImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterID3ID3 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterID3ID3_swigregister(itkOrientImageFilterID3ID3)
itkOrientImageFilterID3ID3___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterID3ID3___New_orig__
itkOrientImageFilterID3ID3_cast = _itkOrientImageFilterPython.itkOrientImageFilterID3ID3_cast

class itkOrientImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkOrientImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterIF3IF3
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterIF3IF3

        Create a new object of the class itkOrientImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterIF3IF3 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_swigregister(itkOrientImageFilterIF3IF3)
itkOrientImageFilterIF3IF3___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterIF3IF3___New_orig__
itkOrientImageFilterIF3IF3_cast = _itkOrientImageFilterPython.itkOrientImageFilterIF3IF3_cast

class itkOrientImageFilterIRGBAUC3IRGBAUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3):
    r"""Proxy of C++ itkOrientImageFilterIRGBAUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterIRGBAUC3IRGBAUC3
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkOrientImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterIRGBAUC3IRGBAUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterIRGBAUC3IRGBAUC3 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_swigregister(itkOrientImageFilterIRGBAUC3IRGBAUC3)
itkOrientImageFilterIRGBAUC3IRGBAUC3___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3___New_orig__
itkOrientImageFilterIRGBAUC3IRGBAUC3_cast = _itkOrientImageFilterPython.itkOrientImageFilterIRGBAUC3IRGBAUC3_cast

class itkOrientImageFilterIRGBUC3IRGBUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    r"""Proxy of C++ itkOrientImageFilterIRGBUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkOrientImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterIRGBUC3IRGBUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterIRGBUC3IRGBUC3 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_swigregister(itkOrientImageFilterIRGBUC3IRGBUC3)
itkOrientImageFilterIRGBUC3IRGBUC3___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3___New_orig__
itkOrientImageFilterIRGBUC3IRGBUC3_cast = _itkOrientImageFilterPython.itkOrientImageFilterIRGBUC3IRGBUC3_cast

class itkOrientImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkOrientImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterISS3ISS3

        Create a new object of the class itkOrientImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterISS3ISS3 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_swigregister(itkOrientImageFilterISS3ISS3)
itkOrientImageFilterISS3ISS3___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3___New_orig__
itkOrientImageFilterISS3ISS3_cast = _itkOrientImageFilterPython.itkOrientImageFilterISS3ISS3_cast

class itkOrientImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkOrientImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterIUC3IUC3

        Create a new object of the class itkOrientImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterIUC3IUC3 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_swigregister(itkOrientImageFilterIUC3IUC3)
itkOrientImageFilterIUC3IUC3___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3___New_orig__
itkOrientImageFilterIUC3IUC3_cast = _itkOrientImageFilterPython.itkOrientImageFilterIUC3IUC3_cast

class itkOrientImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkOrientImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterIUS3IUS3

        Create a new object of the class itkOrientImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterIUS3IUS3 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_swigregister(itkOrientImageFilterIUS3IUS3)
itkOrientImageFilterIUS3IUS3___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3___New_orig__
itkOrientImageFilterIUS3IUS3_cast = _itkOrientImageFilterPython.itkOrientImageFilterIUS3IUS3_cast

class itkOrientImageFilterIVF23IVF23(itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    r"""Proxy of C++ itkOrientImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterIVF23IVF23

        Create a new object of the class itkOrientImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterIVF23IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterIVF23IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterIVF23IVF23 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_swigregister(itkOrientImageFilterIVF23IVF23)
itkOrientImageFilterIVF23IVF23___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23___New_orig__
itkOrientImageFilterIVF23IVF23_cast = _itkOrientImageFilterPython.itkOrientImageFilterIVF23IVF23_cast

class itkOrientImageFilterIVF33IVF33(itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    r"""Proxy of C++ itkOrientImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterIVF33IVF33

        Create a new object of the class itkOrientImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterIVF33IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterIVF33IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterIVF33IVF33 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_swigregister(itkOrientImageFilterIVF33IVF33)
itkOrientImageFilterIVF33IVF33___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33___New_orig__
itkOrientImageFilterIVF33IVF33_cast = _itkOrientImageFilterPython.itkOrientImageFilterIVF33IVF33_cast

class itkOrientImageFilterIVF43IVF43(itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    r"""Proxy of C++ itkOrientImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_Clone)
    GetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_GetGivenCoordinateOrientation)
    SetGivenCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_SetGivenCoordinateOrientation)
    SetGivenCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_SetGivenCoordinateDirection)
    GetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_GetDesiredCoordinateOrientation)
    SetDesiredCoordinateOrientation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_SetDesiredCoordinateOrientation)
    SetDesiredCoordinateDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_SetDesiredCoordinateDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_UseImageDirectionOff)
    GetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_GetUseImageDirection)
    SetUseImageDirection = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_SetUseImageDirection)
    GetPermuteOrder = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_GetPermuteOrder)
    GetFlipAxes = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_GetFlipAxes)
    SetDesiredCoordinateOrientationToAxial = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_SetDesiredCoordinateOrientationToAxial)
    SetDesiredCoordinateOrientationToCoronal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_SetDesiredCoordinateOrientationToCoronal)
    SetDesiredCoordinateOrientationToSagittal = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_SetDesiredCoordinateOrientationToSagittal)
    GenerateOutputInformation = _swig_new_instance_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_GenerateOutputInformation)
    InputConvertibleToOutput = _itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_InputConvertibleToOutput
    
    SameDimension = _itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_SameDimension
    
    DimensionShouldBe3 = _itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_DimensionShouldBe3
    
    __swig_destroy__ = _itkOrientImageFilterPython.delete_itkOrientImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkOrientImageFilterIVF43IVF43

        Create a new object of the class itkOrientImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOrientImageFilterIVF43IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOrientImageFilterIVF43IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOrientImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOrientImageFilterIVF43IVF43 in _itkOrientImageFilterPython:
_itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_swigregister(itkOrientImageFilterIVF43IVF43)
itkOrientImageFilterIVF43IVF43___New_orig__ = _itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43___New_orig__
itkOrientImageFilterIVF43IVF43_cast = _itkOrientImageFilterPython.itkOrientImageFilterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def orient_image_filter(*args, **kwargs):
    """Procedural interface for OrientImageFilter"""
    import itk
    instance = itk.OrientImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def orient_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.OrientImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.OrientImageFilter.values()[0]
    else:
        filter_object = itk.OrientImageFilter

    orient_image_filter.__doc__ = filter_object.__doc__
    orient_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    orient_image_filter.__doc__ += "Available Keyword Arguments:\n"
    orient_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



