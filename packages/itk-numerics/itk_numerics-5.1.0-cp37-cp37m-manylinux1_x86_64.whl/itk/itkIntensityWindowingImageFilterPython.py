# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkIntensityWindowingImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkIntensityWindowingImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkIntensityWindowingImageFilterPython
            return _itkIntensityWindowingImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkIntensityWindowingImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkIntensityWindowingImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkIntensityWindowingImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import itkIndexPython
import itkSizePython
import pyBasePython
import itkOffsetPython
import ITKCommonBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import stdcomplexPython
import itkImagePython
import itkPointPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkSymmetricSecondRankTensorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def itkIntensityWindowingImageFilterID3ID3_New():
  return itkIntensityWindowingImageFilterID3ID3.New()


def itkIntensityWindowingImageFilterID3ID3_Superclass_New():
  return itkIntensityWindowingImageFilterID3ID3_Superclass.New()


def itkIntensityWindowingImageFilterID2ID2_New():
  return itkIntensityWindowingImageFilterID2ID2.New()


def itkIntensityWindowingImageFilterID2ID2_Superclass_New():
  return itkIntensityWindowingImageFilterID2ID2_Superclass.New()


def itkIntensityWindowingImageFilterID3IF3_New():
  return itkIntensityWindowingImageFilterID3IF3.New()


def itkIntensityWindowingImageFilterID3IF3_Superclass_New():
  return itkIntensityWindowingImageFilterID3IF3_Superclass.New()


def itkIntensityWindowingImageFilterID2IF2_New():
  return itkIntensityWindowingImageFilterID2IF2.New()


def itkIntensityWindowingImageFilterID2IF2_Superclass_New():
  return itkIntensityWindowingImageFilterID2IF2_Superclass.New()


def itkIntensityWindowingImageFilterID3IUS3_New():
  return itkIntensityWindowingImageFilterID3IUS3.New()


def itkIntensityWindowingImageFilterID3IUS3_Superclass_New():
  return itkIntensityWindowingImageFilterID3IUS3_Superclass.New()


def itkIntensityWindowingImageFilterID2IUS2_New():
  return itkIntensityWindowingImageFilterID2IUS2.New()


def itkIntensityWindowingImageFilterID2IUS2_Superclass_New():
  return itkIntensityWindowingImageFilterID2IUS2_Superclass.New()


def itkIntensityWindowingImageFilterID3ISS3_New():
  return itkIntensityWindowingImageFilterID3ISS3.New()


def itkIntensityWindowingImageFilterID3ISS3_Superclass_New():
  return itkIntensityWindowingImageFilterID3ISS3_Superclass.New()


def itkIntensityWindowingImageFilterID2ISS2_New():
  return itkIntensityWindowingImageFilterID2ISS2.New()


def itkIntensityWindowingImageFilterID2ISS2_Superclass_New():
  return itkIntensityWindowingImageFilterID2ISS2_Superclass.New()


def itkIntensityWindowingImageFilterID3IUC3_New():
  return itkIntensityWindowingImageFilterID3IUC3.New()


def itkIntensityWindowingImageFilterID3IUC3_Superclass_New():
  return itkIntensityWindowingImageFilterID3IUC3_Superclass.New()


def itkIntensityWindowingImageFilterID2IUC2_New():
  return itkIntensityWindowingImageFilterID2IUC2.New()


def itkIntensityWindowingImageFilterID2IUC2_Superclass_New():
  return itkIntensityWindowingImageFilterID2IUC2_Superclass.New()


def itkIntensityWindowingImageFilterIF3ID3_New():
  return itkIntensityWindowingImageFilterIF3ID3.New()


def itkIntensityWindowingImageFilterIF3ID3_Superclass_New():
  return itkIntensityWindowingImageFilterIF3ID3_Superclass.New()


def itkIntensityWindowingImageFilterIF2ID2_New():
  return itkIntensityWindowingImageFilterIF2ID2.New()


def itkIntensityWindowingImageFilterIF2ID2_Superclass_New():
  return itkIntensityWindowingImageFilterIF2ID2_Superclass.New()


def itkIntensityWindowingImageFilterIF3IF3_New():
  return itkIntensityWindowingImageFilterIF3IF3.New()


def itkIntensityWindowingImageFilterIF3IF3_Superclass_New():
  return itkIntensityWindowingImageFilterIF3IF3_Superclass.New()


def itkIntensityWindowingImageFilterIF2IF2_New():
  return itkIntensityWindowingImageFilterIF2IF2.New()


def itkIntensityWindowingImageFilterIF2IF2_Superclass_New():
  return itkIntensityWindowingImageFilterIF2IF2_Superclass.New()


def itkIntensityWindowingImageFilterIF3IUS3_New():
  return itkIntensityWindowingImageFilterIF3IUS3.New()


def itkIntensityWindowingImageFilterIF3IUS3_Superclass_New():
  return itkIntensityWindowingImageFilterIF3IUS3_Superclass.New()


def itkIntensityWindowingImageFilterIF2IUS2_New():
  return itkIntensityWindowingImageFilterIF2IUS2.New()


def itkIntensityWindowingImageFilterIF2IUS2_Superclass_New():
  return itkIntensityWindowingImageFilterIF2IUS2_Superclass.New()


def itkIntensityWindowingImageFilterIF3ISS3_New():
  return itkIntensityWindowingImageFilterIF3ISS3.New()


def itkIntensityWindowingImageFilterIF3ISS3_Superclass_New():
  return itkIntensityWindowingImageFilterIF3ISS3_Superclass.New()


def itkIntensityWindowingImageFilterIF2ISS2_New():
  return itkIntensityWindowingImageFilterIF2ISS2.New()


def itkIntensityWindowingImageFilterIF2ISS2_Superclass_New():
  return itkIntensityWindowingImageFilterIF2ISS2_Superclass.New()


def itkIntensityWindowingImageFilterIF3IUC3_New():
  return itkIntensityWindowingImageFilterIF3IUC3.New()


def itkIntensityWindowingImageFilterIF3IUC3_Superclass_New():
  return itkIntensityWindowingImageFilterIF3IUC3_Superclass.New()


def itkIntensityWindowingImageFilterIF2IUC2_New():
  return itkIntensityWindowingImageFilterIF2IUC2.New()


def itkIntensityWindowingImageFilterIF2IUC2_Superclass_New():
  return itkIntensityWindowingImageFilterIF2IUC2_Superclass.New()


def itkIntensityWindowingImageFilterIUS3ID3_New():
  return itkIntensityWindowingImageFilterIUS3ID3.New()


def itkIntensityWindowingImageFilterIUS3ID3_Superclass_New():
  return itkIntensityWindowingImageFilterIUS3ID3_Superclass.New()


def itkIntensityWindowingImageFilterIUS2ID2_New():
  return itkIntensityWindowingImageFilterIUS2ID2.New()


def itkIntensityWindowingImageFilterIUS2ID2_Superclass_New():
  return itkIntensityWindowingImageFilterIUS2ID2_Superclass.New()


def itkIntensityWindowingImageFilterIUS3IF3_New():
  return itkIntensityWindowingImageFilterIUS3IF3.New()


def itkIntensityWindowingImageFilterIUS3IF3_Superclass_New():
  return itkIntensityWindowingImageFilterIUS3IF3_Superclass.New()


def itkIntensityWindowingImageFilterIUS2IF2_New():
  return itkIntensityWindowingImageFilterIUS2IF2.New()


def itkIntensityWindowingImageFilterIUS2IF2_Superclass_New():
  return itkIntensityWindowingImageFilterIUS2IF2_Superclass.New()


def itkIntensityWindowingImageFilterIUS3IUS3_New():
  return itkIntensityWindowingImageFilterIUS3IUS3.New()


def itkIntensityWindowingImageFilterIUS3IUS3_Superclass_New():
  return itkIntensityWindowingImageFilterIUS3IUS3_Superclass.New()


def itkIntensityWindowingImageFilterIUS2IUS2_New():
  return itkIntensityWindowingImageFilterIUS2IUS2.New()


def itkIntensityWindowingImageFilterIUS2IUS2_Superclass_New():
  return itkIntensityWindowingImageFilterIUS2IUS2_Superclass.New()


def itkIntensityWindowingImageFilterIUS3ISS3_New():
  return itkIntensityWindowingImageFilterIUS3ISS3.New()


def itkIntensityWindowingImageFilterIUS3ISS3_Superclass_New():
  return itkIntensityWindowingImageFilterIUS3ISS3_Superclass.New()


def itkIntensityWindowingImageFilterIUS2ISS2_New():
  return itkIntensityWindowingImageFilterIUS2ISS2.New()


def itkIntensityWindowingImageFilterIUS2ISS2_Superclass_New():
  return itkIntensityWindowingImageFilterIUS2ISS2_Superclass.New()


def itkIntensityWindowingImageFilterIUS3IUC3_New():
  return itkIntensityWindowingImageFilterIUS3IUC3.New()


def itkIntensityWindowingImageFilterIUS3IUC3_Superclass_New():
  return itkIntensityWindowingImageFilterIUS3IUC3_Superclass.New()


def itkIntensityWindowingImageFilterIUS2IUC2_New():
  return itkIntensityWindowingImageFilterIUS2IUC2.New()


def itkIntensityWindowingImageFilterIUS2IUC2_Superclass_New():
  return itkIntensityWindowingImageFilterIUS2IUC2_Superclass.New()


def itkIntensityWindowingImageFilterIUC3ID3_New():
  return itkIntensityWindowingImageFilterIUC3ID3.New()


def itkIntensityWindowingImageFilterIUC3ID3_Superclass_New():
  return itkIntensityWindowingImageFilterIUC3ID3_Superclass.New()


def itkIntensityWindowingImageFilterIUC2ID2_New():
  return itkIntensityWindowingImageFilterIUC2ID2.New()


def itkIntensityWindowingImageFilterIUC2ID2_Superclass_New():
  return itkIntensityWindowingImageFilterIUC2ID2_Superclass.New()


def itkIntensityWindowingImageFilterIUC3IF3_New():
  return itkIntensityWindowingImageFilterIUC3IF3.New()


def itkIntensityWindowingImageFilterIUC3IF3_Superclass_New():
  return itkIntensityWindowingImageFilterIUC3IF3_Superclass.New()


def itkIntensityWindowingImageFilterIUC2IF2_New():
  return itkIntensityWindowingImageFilterIUC2IF2.New()


def itkIntensityWindowingImageFilterIUC2IF2_Superclass_New():
  return itkIntensityWindowingImageFilterIUC2IF2_Superclass.New()


def itkIntensityWindowingImageFilterIUC3IUS3_New():
  return itkIntensityWindowingImageFilterIUC3IUS3.New()


def itkIntensityWindowingImageFilterIUC3IUS3_Superclass_New():
  return itkIntensityWindowingImageFilterIUC3IUS3_Superclass.New()


def itkIntensityWindowingImageFilterIUC2IUS2_New():
  return itkIntensityWindowingImageFilterIUC2IUS2.New()


def itkIntensityWindowingImageFilterIUC2IUS2_Superclass_New():
  return itkIntensityWindowingImageFilterIUC2IUS2_Superclass.New()


def itkIntensityWindowingImageFilterIUC3ISS3_New():
  return itkIntensityWindowingImageFilterIUC3ISS3.New()


def itkIntensityWindowingImageFilterIUC3ISS3_Superclass_New():
  return itkIntensityWindowingImageFilterIUC3ISS3_Superclass.New()


def itkIntensityWindowingImageFilterIUC2ISS2_New():
  return itkIntensityWindowingImageFilterIUC2ISS2.New()


def itkIntensityWindowingImageFilterIUC2ISS2_Superclass_New():
  return itkIntensityWindowingImageFilterIUC2ISS2_Superclass.New()


def itkIntensityWindowingImageFilterIUC3IUC3_New():
  return itkIntensityWindowingImageFilterIUC3IUC3.New()


def itkIntensityWindowingImageFilterIUC3IUC3_Superclass_New():
  return itkIntensityWindowingImageFilterIUC3IUC3_Superclass.New()


def itkIntensityWindowingImageFilterIUC2IUC2_New():
  return itkIntensityWindowingImageFilterIUC2IUC2.New()


def itkIntensityWindowingImageFilterIUC2IUC2_Superclass_New():
  return itkIntensityWindowingImageFilterIUC2IUC2_Superclass.New()


def itkIntensityWindowingImageFilterISS3ID3_New():
  return itkIntensityWindowingImageFilterISS3ID3.New()


def itkIntensityWindowingImageFilterISS3ID3_Superclass_New():
  return itkIntensityWindowingImageFilterISS3ID3_Superclass.New()


def itkIntensityWindowingImageFilterISS2ID2_New():
  return itkIntensityWindowingImageFilterISS2ID2.New()


def itkIntensityWindowingImageFilterISS2ID2_Superclass_New():
  return itkIntensityWindowingImageFilterISS2ID2_Superclass.New()


def itkIntensityWindowingImageFilterISS3IF3_New():
  return itkIntensityWindowingImageFilterISS3IF3.New()


def itkIntensityWindowingImageFilterISS3IF3_Superclass_New():
  return itkIntensityWindowingImageFilterISS3IF3_Superclass.New()


def itkIntensityWindowingImageFilterISS2IF2_New():
  return itkIntensityWindowingImageFilterISS2IF2.New()


def itkIntensityWindowingImageFilterISS2IF2_Superclass_New():
  return itkIntensityWindowingImageFilterISS2IF2_Superclass.New()


def itkIntensityWindowingImageFilterISS3IUS3_New():
  return itkIntensityWindowingImageFilterISS3IUS3.New()


def itkIntensityWindowingImageFilterISS3IUS3_Superclass_New():
  return itkIntensityWindowingImageFilterISS3IUS3_Superclass.New()


def itkIntensityWindowingImageFilterISS2IUS2_New():
  return itkIntensityWindowingImageFilterISS2IUS2.New()


def itkIntensityWindowingImageFilterISS2IUS2_Superclass_New():
  return itkIntensityWindowingImageFilterISS2IUS2_Superclass.New()


def itkIntensityWindowingImageFilterISS3ISS3_New():
  return itkIntensityWindowingImageFilterISS3ISS3.New()


def itkIntensityWindowingImageFilterISS3ISS3_Superclass_New():
  return itkIntensityWindowingImageFilterISS3ISS3_Superclass.New()


def itkIntensityWindowingImageFilterISS2ISS2_New():
  return itkIntensityWindowingImageFilterISS2ISS2.New()


def itkIntensityWindowingImageFilterISS2ISS2_Superclass_New():
  return itkIntensityWindowingImageFilterISS2ISS2_Superclass.New()


def itkIntensityWindowingImageFilterISS3IUC3_New():
  return itkIntensityWindowingImageFilterISS3IUC3.New()


def itkIntensityWindowingImageFilterISS3IUC3_Superclass_New():
  return itkIntensityWindowingImageFilterISS3IUC3_Superclass.New()


def itkIntensityWindowingImageFilterISS2IUC2_New():
  return itkIntensityWindowingImageFilterISS2IUC2.New()


def itkIntensityWindowingImageFilterISS2IUC2_Superclass_New():
  return itkIntensityWindowingImageFilterISS2IUC2_Superclass.New()

class itkIntensityWindowingImageFilterID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkIntensityWindowingImageFilterID2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterID2ID2_Superclass self) -> itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< double,double > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterID2ID2_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,double >
        GetFunctor(itkIntensityWindowingImageFilterID2ID2_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,double > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< double,double > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterID2ID2_Superclass self, itk::Functor::IntensityWindowingTransform< double,double > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2ID2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID2ID2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID2ID2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass_Clone, None, itkIntensityWindowingImageFilterID2ID2_Superclass)
itkIntensityWindowingImageFilterID2ID2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterID2ID2_Superclass)
itkIntensityWindowingImageFilterID2ID2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterID2ID2_Superclass)
itkIntensityWindowingImageFilterID2ID2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass_swigregister
itkIntensityWindowingImageFilterID2ID2_Superclass_swigregister(itkIntensityWindowingImageFilterID2ID2_Superclass)

def itkIntensityWindowingImageFilterID2ID2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterID2ID2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterID2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2ID2_Superclass *":
    """itkIntensityWindowingImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2ID2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterID2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    """Proxy of C++ itkIntensityWindowingImageFilterID2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterID2IF2_Superclass self) -> itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< double,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterID2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,float >
        GetFunctor(itkIntensityWindowingImageFilterID2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< double,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterID2IF2_Superclass self, itk::Functor::IntensityWindowingTransform< double,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID2IF2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterID2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID2IF2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass_Clone, None, itkIntensityWindowingImageFilterID2IF2_Superclass)
itkIntensityWindowingImageFilterID2IF2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterID2IF2_Superclass)
itkIntensityWindowingImageFilterID2IF2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterID2IF2_Superclass)
itkIntensityWindowingImageFilterID2IF2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass_swigregister
itkIntensityWindowingImageFilterID2IF2_Superclass_swigregister(itkIntensityWindowingImageFilterID2IF2_Superclass)

def itkIntensityWindowingImageFilterID2IF2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterID2IF2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterID2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IF2_Superclass *":
    """itkIntensityWindowingImageFilterID2IF2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IF2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterID2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    """Proxy of C++ itkIntensityWindowingImageFilterID2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID2ISS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterID2ISS2_Superclass self) -> itkIntensityWindowingImageFilterID2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< double,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterID2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,short >
        GetFunctor(itkIntensityWindowingImageFilterID2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< double,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterID2ISS2_Superclass self, itk::Functor::IntensityWindowingTransform< double,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID2ISS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterID2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID2ISS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass_Clone, None, itkIntensityWindowingImageFilterID2ISS2_Superclass)
itkIntensityWindowingImageFilterID2ISS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterID2ISS2_Superclass)
itkIntensityWindowingImageFilterID2ISS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterID2ISS2_Superclass)
itkIntensityWindowingImageFilterID2ISS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass_swigregister
itkIntensityWindowingImageFilterID2ISS2_Superclass_swigregister(itkIntensityWindowingImageFilterID2ISS2_Superclass)

def itkIntensityWindowingImageFilterID2ISS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterID2ISS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterID2ISS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterID2ISS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterID2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2ISS2_Superclass *":
    """itkIntensityWindowingImageFilterID2ISS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2ISS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterID2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    """Proxy of C++ itkIntensityWindowingImageFilterID2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterID2IUC2_Superclass self) -> itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< double,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterID2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterID2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< double,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterID2IUC2_Superclass self, itk::Functor::IntensityWindowingTransform< double,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID2IUC2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterID2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID2IUC2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass_Clone, None, itkIntensityWindowingImageFilterID2IUC2_Superclass)
itkIntensityWindowingImageFilterID2IUC2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterID2IUC2_Superclass)
itkIntensityWindowingImageFilterID2IUC2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterID2IUC2_Superclass)
itkIntensityWindowingImageFilterID2IUC2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass_swigregister
itkIntensityWindowingImageFilterID2IUC2_Superclass_swigregister(itkIntensityWindowingImageFilterID2IUC2_Superclass)

def itkIntensityWindowingImageFilterID2IUC2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterID2IUC2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterID2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IUC2_Superclass *":
    """itkIntensityWindowingImageFilterID2IUC2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IUC2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterID2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    """Proxy of C++ itkIntensityWindowingImageFilterID2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterID2IUS2_Superclass self) -> itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< double,unsigned short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterID2IUS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,unsigned short >
        GetFunctor(itkIntensityWindowingImageFilterID2IUS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,unsigned short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< double,unsigned short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterID2IUS2_Superclass self, itk::Functor::IntensityWindowingTransform< double,unsigned short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IUS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID2IUS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterID2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID2IUS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass_Clone, None, itkIntensityWindowingImageFilterID2IUS2_Superclass)
itkIntensityWindowingImageFilterID2IUS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterID2IUS2_Superclass)
itkIntensityWindowingImageFilterID2IUS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterID2IUS2_Superclass)
itkIntensityWindowingImageFilterID2IUS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass_swigregister
itkIntensityWindowingImageFilterID2IUS2_Superclass_swigregister(itkIntensityWindowingImageFilterID2IUS2_Superclass)

def itkIntensityWindowingImageFilterID2IUS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterID2IUS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterID2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IUS2_Superclass *":
    """itkIntensityWindowingImageFilterID2IUS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IUS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkIntensityWindowingImageFilterID3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterID3ID3_Superclass self) -> itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< double,double > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterID3ID3_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,double >
        GetFunctor(itkIntensityWindowingImageFilterID3ID3_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,double > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< double,double > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterID3ID3_Superclass self, itk::Functor::IntensityWindowingTransform< double,double > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3ID3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID3ID3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID3ID3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass_Clone, None, itkIntensityWindowingImageFilterID3ID3_Superclass)
itkIntensityWindowingImageFilterID3ID3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterID3ID3_Superclass)
itkIntensityWindowingImageFilterID3ID3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterID3ID3_Superclass)
itkIntensityWindowingImageFilterID3ID3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass_swigregister
itkIntensityWindowingImageFilterID3ID3_Superclass_swigregister(itkIntensityWindowingImageFilterID3ID3_Superclass)

def itkIntensityWindowingImageFilterID3ID3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterID3ID3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterID3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3ID3_Superclass *":
    """itkIntensityWindowingImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3ID3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterID3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    """Proxy of C++ itkIntensityWindowingImageFilterID3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterID3IF3_Superclass self) -> itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< double,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterID3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,float >
        GetFunctor(itkIntensityWindowingImageFilterID3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< double,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterID3IF3_Superclass self, itk::Functor::IntensityWindowingTransform< double,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID3IF3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterID3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID3IF3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass_Clone, None, itkIntensityWindowingImageFilterID3IF3_Superclass)
itkIntensityWindowingImageFilterID3IF3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterID3IF3_Superclass)
itkIntensityWindowingImageFilterID3IF3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterID3IF3_Superclass)
itkIntensityWindowingImageFilterID3IF3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass_swigregister
itkIntensityWindowingImageFilterID3IF3_Superclass_swigregister(itkIntensityWindowingImageFilterID3IF3_Superclass)

def itkIntensityWindowingImageFilterID3IF3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterID3IF3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterID3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IF3_Superclass *":
    """itkIntensityWindowingImageFilterID3IF3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IF3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterID3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    """Proxy of C++ itkIntensityWindowingImageFilterID3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID3ISS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterID3ISS3_Superclass self) -> itkIntensityWindowingImageFilterID3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< double,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterID3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,short >
        GetFunctor(itkIntensityWindowingImageFilterID3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< double,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterID3ISS3_Superclass self, itk::Functor::IntensityWindowingTransform< double,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID3ISS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterID3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID3ISS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass_Clone, None, itkIntensityWindowingImageFilterID3ISS3_Superclass)
itkIntensityWindowingImageFilterID3ISS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterID3ISS3_Superclass)
itkIntensityWindowingImageFilterID3ISS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterID3ISS3_Superclass)
itkIntensityWindowingImageFilterID3ISS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass_swigregister
itkIntensityWindowingImageFilterID3ISS3_Superclass_swigregister(itkIntensityWindowingImageFilterID3ISS3_Superclass)

def itkIntensityWindowingImageFilterID3ISS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterID3ISS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterID3ISS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterID3ISS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterID3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3ISS3_Superclass *":
    """itkIntensityWindowingImageFilterID3ISS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3ISS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterID3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    """Proxy of C++ itkIntensityWindowingImageFilterID3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterID3IUC3_Superclass self) -> itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< double,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterID3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterID3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< double,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterID3IUC3_Superclass self, itk::Functor::IntensityWindowingTransform< double,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID3IUC3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterID3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID3IUC3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass_Clone, None, itkIntensityWindowingImageFilterID3IUC3_Superclass)
itkIntensityWindowingImageFilterID3IUC3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterID3IUC3_Superclass)
itkIntensityWindowingImageFilterID3IUC3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterID3IUC3_Superclass)
itkIntensityWindowingImageFilterID3IUC3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass_swigregister
itkIntensityWindowingImageFilterID3IUC3_Superclass_swigregister(itkIntensityWindowingImageFilterID3IUC3_Superclass)

def itkIntensityWindowingImageFilterID3IUC3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterID3IUC3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterID3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IUC3_Superclass *":
    """itkIntensityWindowingImageFilterID3IUC3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IUC3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterID3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    """Proxy of C++ itkIntensityWindowingImageFilterID3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterID3IUS3_Superclass self) -> itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< double,unsigned short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterID3IUS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,unsigned short >
        GetFunctor(itkIntensityWindowingImageFilterID3IUS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< double,unsigned short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< double,unsigned short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterID3IUS3_Superclass self, itk::Functor::IntensityWindowingTransform< double,unsigned short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IUS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID3IUS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterID3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID3IUS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass_Clone, None, itkIntensityWindowingImageFilterID3IUS3_Superclass)
itkIntensityWindowingImageFilterID3IUS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterID3IUS3_Superclass)
itkIntensityWindowingImageFilterID3IUS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterID3IUS3_Superclass)
itkIntensityWindowingImageFilterID3IUS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass_swigregister
itkIntensityWindowingImageFilterID3IUS3_Superclass_swigregister(itkIntensityWindowingImageFilterID3IUS3_Superclass)

def itkIntensityWindowingImageFilterID3IUS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterID3IUS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterID3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IUS3_Superclass *":
    """itkIntensityWindowingImageFilterID3IUS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IUS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    """Proxy of C++ itkIntensityWindowingImageFilterIF2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2ID2_Superclass self) -> itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,double > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF2ID2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,double >
        GetFunctor(itkIntensityWindowingImageFilterIF2ID2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,double > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,double > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF2ID2_Superclass self, itk::Functor::IntensityWindowingTransform< float,double > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ID2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2ID2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2ID2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass_Clone, None, itkIntensityWindowingImageFilterIF2ID2_Superclass)
itkIntensityWindowingImageFilterIF2ID2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF2ID2_Superclass)
itkIntensityWindowingImageFilterIF2ID2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF2ID2_Superclass)
itkIntensityWindowingImageFilterIF2ID2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass_swigregister
itkIntensityWindowingImageFilterIF2ID2_Superclass_swigregister(itkIntensityWindowingImageFilterIF2ID2_Superclass)

def itkIntensityWindowingImageFilterIF2ID2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF2ID2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ID2_Superclass *":
    """itkIntensityWindowingImageFilterIF2ID2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ID2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkIntensityWindowingImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2IF2_Superclass self) -> itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,float >
        GetFunctor(itkIntensityWindowingImageFilterIF2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF2IF2_Superclass self, itk::Functor::IntensityWindowingTransform< float,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2IF2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_Clone, None, itkIntensityWindowingImageFilterIF2IF2_Superclass)
itkIntensityWindowingImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF2IF2_Superclass)
itkIntensityWindowingImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF2IF2_Superclass)
itkIntensityWindowingImageFilterIF2IF2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_swigregister
itkIntensityWindowingImageFilterIF2IF2_Superclass_swigregister(itkIntensityWindowingImageFilterIF2IF2_Superclass)

def itkIntensityWindowingImageFilterIF2IF2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF2IF2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IF2_Superclass *":
    """itkIntensityWindowingImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IF2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    """Proxy of C++ itkIntensityWindowingImageFilterIF2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2ISS2_Superclass self) -> itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,short >
        GetFunctor(itkIntensityWindowingImageFilterIF2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF2ISS2_Superclass self, itk::Functor::IntensityWindowingTransform< float,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2ISS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2ISS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_Clone, None, itkIntensityWindowingImageFilterIF2ISS2_Superclass)
itkIntensityWindowingImageFilterIF2ISS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF2ISS2_Superclass)
itkIntensityWindowingImageFilterIF2ISS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF2ISS2_Superclass)
itkIntensityWindowingImageFilterIF2ISS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_swigregister
itkIntensityWindowingImageFilterIF2ISS2_Superclass_swigregister(itkIntensityWindowingImageFilterIF2ISS2_Superclass)

def itkIntensityWindowingImageFilterIF2ISS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF2ISS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass *":
    """itkIntensityWindowingImageFilterIF2ISS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ISS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    """Proxy of C++ itkIntensityWindowingImageFilterIF2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2IUC2_Superclass self) -> itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterIF2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF2IUC2_Superclass self, itk::Functor::IntensityWindowingTransform< float,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2IUC2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2IUC2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_Clone, None, itkIntensityWindowingImageFilterIF2IUC2_Superclass)
itkIntensityWindowingImageFilterIF2IUC2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF2IUC2_Superclass)
itkIntensityWindowingImageFilterIF2IUC2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF2IUC2_Superclass)
itkIntensityWindowingImageFilterIF2IUC2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_swigregister
itkIntensityWindowingImageFilterIF2IUC2_Superclass_swigregister(itkIntensityWindowingImageFilterIF2IUC2_Superclass)

def itkIntensityWindowingImageFilterIF2IUC2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF2IUC2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass *":
    """itkIntensityWindowingImageFilterIF2IUC2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUC2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    """Proxy of C++ itkIntensityWindowingImageFilterIF2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2IUS2_Superclass self) -> itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,unsigned short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF2IUS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned short >
        GetFunctor(itkIntensityWindowingImageFilterIF2IUS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,unsigned short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF2IUS2_Superclass self, itk::Functor::IntensityWindowingTransform< float,unsigned short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2IUS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2IUS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass_Clone, None, itkIntensityWindowingImageFilterIF2IUS2_Superclass)
itkIntensityWindowingImageFilterIF2IUS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF2IUS2_Superclass)
itkIntensityWindowingImageFilterIF2IUS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF2IUS2_Superclass)
itkIntensityWindowingImageFilterIF2IUS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass_swigregister
itkIntensityWindowingImageFilterIF2IUS2_Superclass_swigregister(itkIntensityWindowingImageFilterIF2IUS2_Superclass)

def itkIntensityWindowingImageFilterIF2IUS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF2IUS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUS2_Superclass *":
    """itkIntensityWindowingImageFilterIF2IUS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    """Proxy of C++ itkIntensityWindowingImageFilterIF3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3ID3_Superclass self) -> itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,double > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF3ID3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,double >
        GetFunctor(itkIntensityWindowingImageFilterIF3ID3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,double > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,double > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF3ID3_Superclass self, itk::Functor::IntensityWindowingTransform< float,double > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ID3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3ID3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3ID3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass_Clone, None, itkIntensityWindowingImageFilterIF3ID3_Superclass)
itkIntensityWindowingImageFilterIF3ID3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF3ID3_Superclass)
itkIntensityWindowingImageFilterIF3ID3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF3ID3_Superclass)
itkIntensityWindowingImageFilterIF3ID3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass_swigregister
itkIntensityWindowingImageFilterIF3ID3_Superclass_swigregister(itkIntensityWindowingImageFilterIF3ID3_Superclass)

def itkIntensityWindowingImageFilterIF3ID3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF3ID3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ID3_Superclass *":
    """itkIntensityWindowingImageFilterIF3ID3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ID3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkIntensityWindowingImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3IF3_Superclass self) -> itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,float >
        GetFunctor(itkIntensityWindowingImageFilterIF3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF3IF3_Superclass self, itk::Functor::IntensityWindowingTransform< float,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3IF3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_Clone, None, itkIntensityWindowingImageFilterIF3IF3_Superclass)
itkIntensityWindowingImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF3IF3_Superclass)
itkIntensityWindowingImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF3IF3_Superclass)
itkIntensityWindowingImageFilterIF3IF3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_swigregister
itkIntensityWindowingImageFilterIF3IF3_Superclass_swigregister(itkIntensityWindowingImageFilterIF3IF3_Superclass)

def itkIntensityWindowingImageFilterIF3IF3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF3IF3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IF3_Superclass *":
    """itkIntensityWindowingImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IF3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    """Proxy of C++ itkIntensityWindowingImageFilterIF3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3ISS3_Superclass self) -> itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,short >
        GetFunctor(itkIntensityWindowingImageFilterIF3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF3ISS3_Superclass self, itk::Functor::IntensityWindowingTransform< float,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3ISS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3ISS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_Clone, None, itkIntensityWindowingImageFilterIF3ISS3_Superclass)
itkIntensityWindowingImageFilterIF3ISS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF3ISS3_Superclass)
itkIntensityWindowingImageFilterIF3ISS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF3ISS3_Superclass)
itkIntensityWindowingImageFilterIF3ISS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_swigregister
itkIntensityWindowingImageFilterIF3ISS3_Superclass_swigregister(itkIntensityWindowingImageFilterIF3ISS3_Superclass)

def itkIntensityWindowingImageFilterIF3ISS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF3ISS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass *":
    """itkIntensityWindowingImageFilterIF3ISS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ISS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    """Proxy of C++ itkIntensityWindowingImageFilterIF3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3IUC3_Superclass self) -> itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterIF3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF3IUC3_Superclass self, itk::Functor::IntensityWindowingTransform< float,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3IUC3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3IUC3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_Clone, None, itkIntensityWindowingImageFilterIF3IUC3_Superclass)
itkIntensityWindowingImageFilterIF3IUC3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF3IUC3_Superclass)
itkIntensityWindowingImageFilterIF3IUC3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF3IUC3_Superclass)
itkIntensityWindowingImageFilterIF3IUC3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_swigregister
itkIntensityWindowingImageFilterIF3IUC3_Superclass_swigregister(itkIntensityWindowingImageFilterIF3IUC3_Superclass)

def itkIntensityWindowingImageFilterIF3IUC3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF3IUC3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass *":
    """itkIntensityWindowingImageFilterIF3IUC3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUC3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    """Proxy of C++ itkIntensityWindowingImageFilterIF3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3IUS3_Superclass self) -> itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,unsigned short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF3IUS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned short >
        GetFunctor(itkIntensityWindowingImageFilterIF3IUS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,unsigned short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF3IUS3_Superclass self, itk::Functor::IntensityWindowingTransform< float,unsigned short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3IUS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3IUS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass_Clone, None, itkIntensityWindowingImageFilterIF3IUS3_Superclass)
itkIntensityWindowingImageFilterIF3IUS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF3IUS3_Superclass)
itkIntensityWindowingImageFilterIF3IUS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF3IUS3_Superclass)
itkIntensityWindowingImageFilterIF3IUS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass_swigregister
itkIntensityWindowingImageFilterIF3IUS3_Superclass_swigregister(itkIntensityWindowingImageFilterIF3IUS3_Superclass)

def itkIntensityWindowingImageFilterIF3IUS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF3IUS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUS3_Superclass *":
    """itkIntensityWindowingImageFilterIF3IUS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    """Proxy of C++ itkIntensityWindowingImageFilterISS2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2ID2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2ID2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2ID2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2ID2_Superclass self) -> itkIntensityWindowingImageFilterISS2ID2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,double > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS2ID2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,double >
        GetFunctor(itkIntensityWindowingImageFilterISS2ID2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,double > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,double > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS2ID2_Superclass self, itk::Functor::IntensityWindowingTransform< short,double > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ID2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2ID2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2ID2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass_Clone, None, itkIntensityWindowingImageFilterISS2ID2_Superclass)
itkIntensityWindowingImageFilterISS2ID2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS2ID2_Superclass)
itkIntensityWindowingImageFilterISS2ID2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS2ID2_Superclass)
itkIntensityWindowingImageFilterISS2ID2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass_swigregister
itkIntensityWindowingImageFilterISS2ID2_Superclass_swigregister(itkIntensityWindowingImageFilterISS2ID2_Superclass)

def itkIntensityWindowingImageFilterISS2ID2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS2ID2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS2ID2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS2ID2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ID2_Superclass *":
    """itkIntensityWindowingImageFilterISS2ID2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ID2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    """Proxy of C++ itkIntensityWindowingImageFilterISS2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2IF2_Superclass self) -> itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,float >
        GetFunctor(itkIntensityWindowingImageFilterISS2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS2IF2_Superclass self, itk::Functor::IntensityWindowingTransform< short,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2IF2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2IF2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_Clone, None, itkIntensityWindowingImageFilterISS2IF2_Superclass)
itkIntensityWindowingImageFilterISS2IF2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS2IF2_Superclass)
itkIntensityWindowingImageFilterISS2IF2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS2IF2_Superclass)
itkIntensityWindowingImageFilterISS2IF2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_swigregister
itkIntensityWindowingImageFilterISS2IF2_Superclass_swigregister(itkIntensityWindowingImageFilterISS2IF2_Superclass)

def itkIntensityWindowingImageFilterISS2IF2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS2IF2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IF2_Superclass *":
    """itkIntensityWindowingImageFilterISS2IF2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IF2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkIntensityWindowingImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2ISS2_Superclass self) -> itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,short >
        GetFunctor(itkIntensityWindowingImageFilterISS2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS2ISS2_Superclass self, itk::Functor::IntensityWindowingTransform< short,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2ISS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_Clone, None, itkIntensityWindowingImageFilterISS2ISS2_Superclass)
itkIntensityWindowingImageFilterISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS2ISS2_Superclass)
itkIntensityWindowingImageFilterISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS2ISS2_Superclass)
itkIntensityWindowingImageFilterISS2ISS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_swigregister
itkIntensityWindowingImageFilterISS2ISS2_Superclass_swigregister(itkIntensityWindowingImageFilterISS2ISS2_Superclass)

def itkIntensityWindowingImageFilterISS2ISS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS2ISS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass *":
    """itkIntensityWindowingImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ISS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    """Proxy of C++ itkIntensityWindowingImageFilterISS2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2IUC2_Superclass self) -> itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterISS2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS2IUC2_Superclass self, itk::Functor::IntensityWindowingTransform< short,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2IUC2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2IUC2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_Clone, None, itkIntensityWindowingImageFilterISS2IUC2_Superclass)
itkIntensityWindowingImageFilterISS2IUC2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS2IUC2_Superclass)
itkIntensityWindowingImageFilterISS2IUC2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS2IUC2_Superclass)
itkIntensityWindowingImageFilterISS2IUC2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_swigregister
itkIntensityWindowingImageFilterISS2IUC2_Superclass_swigregister(itkIntensityWindowingImageFilterISS2IUC2_Superclass)

def itkIntensityWindowingImageFilterISS2IUC2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS2IUC2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass *":
    """itkIntensityWindowingImageFilterISS2IUC2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUC2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    """Proxy of C++ itkIntensityWindowingImageFilterISS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2IUS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2IUS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2IUS2_Superclass self) -> itkIntensityWindowingImageFilterISS2IUS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,unsigned short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS2IUS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned short >
        GetFunctor(itkIntensityWindowingImageFilterISS2IUS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,unsigned short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS2IUS2_Superclass self, itk::Functor::IntensityWindowingTransform< short,unsigned short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2IUS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2IUS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass_Clone, None, itkIntensityWindowingImageFilterISS2IUS2_Superclass)
itkIntensityWindowingImageFilterISS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS2IUS2_Superclass)
itkIntensityWindowingImageFilterISS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS2IUS2_Superclass)
itkIntensityWindowingImageFilterISS2IUS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass_swigregister
itkIntensityWindowingImageFilterISS2IUS2_Superclass_swigregister(itkIntensityWindowingImageFilterISS2IUS2_Superclass)

def itkIntensityWindowingImageFilterISS2IUS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS2IUS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS2IUS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS2IUS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUS2_Superclass *":
    """itkIntensityWindowingImageFilterISS2IUS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    """Proxy of C++ itkIntensityWindowingImageFilterISS3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3ID3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3ID3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3ID3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3ID3_Superclass self) -> itkIntensityWindowingImageFilterISS3ID3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,double > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS3ID3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,double >
        GetFunctor(itkIntensityWindowingImageFilterISS3ID3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,double > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,double > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS3ID3_Superclass self, itk::Functor::IntensityWindowingTransform< short,double > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ID3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3ID3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3ID3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass_Clone, None, itkIntensityWindowingImageFilterISS3ID3_Superclass)
itkIntensityWindowingImageFilterISS3ID3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS3ID3_Superclass)
itkIntensityWindowingImageFilterISS3ID3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS3ID3_Superclass)
itkIntensityWindowingImageFilterISS3ID3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass_swigregister
itkIntensityWindowingImageFilterISS3ID3_Superclass_swigregister(itkIntensityWindowingImageFilterISS3ID3_Superclass)

def itkIntensityWindowingImageFilterISS3ID3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS3ID3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS3ID3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS3ID3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ID3_Superclass *":
    """itkIntensityWindowingImageFilterISS3ID3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ID3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    """Proxy of C++ itkIntensityWindowingImageFilterISS3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3IF3_Superclass self) -> itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,float >
        GetFunctor(itkIntensityWindowingImageFilterISS3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS3IF3_Superclass self, itk::Functor::IntensityWindowingTransform< short,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3IF3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3IF3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_Clone, None, itkIntensityWindowingImageFilterISS3IF3_Superclass)
itkIntensityWindowingImageFilterISS3IF3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS3IF3_Superclass)
itkIntensityWindowingImageFilterISS3IF3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS3IF3_Superclass)
itkIntensityWindowingImageFilterISS3IF3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_swigregister
itkIntensityWindowingImageFilterISS3IF3_Superclass_swigregister(itkIntensityWindowingImageFilterISS3IF3_Superclass)

def itkIntensityWindowingImageFilterISS3IF3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS3IF3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IF3_Superclass *":
    """itkIntensityWindowingImageFilterISS3IF3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IF3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkIntensityWindowingImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3ISS3_Superclass self) -> itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,short >
        GetFunctor(itkIntensityWindowingImageFilterISS3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS3ISS3_Superclass self, itk::Functor::IntensityWindowingTransform< short,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3ISS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_Clone, None, itkIntensityWindowingImageFilterISS3ISS3_Superclass)
itkIntensityWindowingImageFilterISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS3ISS3_Superclass)
itkIntensityWindowingImageFilterISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS3ISS3_Superclass)
itkIntensityWindowingImageFilterISS3ISS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_swigregister
itkIntensityWindowingImageFilterISS3ISS3_Superclass_swigregister(itkIntensityWindowingImageFilterISS3ISS3_Superclass)

def itkIntensityWindowingImageFilterISS3ISS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS3ISS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass *":
    """itkIntensityWindowingImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ISS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    """Proxy of C++ itkIntensityWindowingImageFilterISS3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3IUC3_Superclass self) -> itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterISS3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS3IUC3_Superclass self, itk::Functor::IntensityWindowingTransform< short,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3IUC3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3IUC3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_Clone, None, itkIntensityWindowingImageFilterISS3IUC3_Superclass)
itkIntensityWindowingImageFilterISS3IUC3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS3IUC3_Superclass)
itkIntensityWindowingImageFilterISS3IUC3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS3IUC3_Superclass)
itkIntensityWindowingImageFilterISS3IUC3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_swigregister
itkIntensityWindowingImageFilterISS3IUC3_Superclass_swigregister(itkIntensityWindowingImageFilterISS3IUC3_Superclass)

def itkIntensityWindowingImageFilterISS3IUC3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS3IUC3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass *":
    """itkIntensityWindowingImageFilterISS3IUC3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUC3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    """Proxy of C++ itkIntensityWindowingImageFilterISS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3IUS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3IUS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3IUS3_Superclass self) -> itkIntensityWindowingImageFilterISS3IUS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,unsigned short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS3IUS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned short >
        GetFunctor(itkIntensityWindowingImageFilterISS3IUS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,unsigned short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS3IUS3_Superclass self, itk::Functor::IntensityWindowingTransform< short,unsigned short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3IUS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3IUS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass_Clone, None, itkIntensityWindowingImageFilterISS3IUS3_Superclass)
itkIntensityWindowingImageFilterISS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS3IUS3_Superclass)
itkIntensityWindowingImageFilterISS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS3IUS3_Superclass)
itkIntensityWindowingImageFilterISS3IUS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass_swigregister
itkIntensityWindowingImageFilterISS3IUS3_Superclass_swigregister(itkIntensityWindowingImageFilterISS3IUS3_Superclass)

def itkIntensityWindowingImageFilterISS3IUS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS3IUS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS3IUS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS3IUS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUS3_Superclass *":
    """itkIntensityWindowingImageFilterISS3IUS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2ID2_Superclass self) -> itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,double > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC2ID2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,double >
        GetFunctor(itkIntensityWindowingImageFilterIUC2ID2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,double > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,double > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC2ID2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,double > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ID2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2ID2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2ID2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC2ID2_Superclass)
itkIntensityWindowingImageFilterIUC2ID2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC2ID2_Superclass)
itkIntensityWindowingImageFilterIUC2ID2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC2ID2_Superclass)
itkIntensityWindowingImageFilterIUC2ID2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass_swigregister
itkIntensityWindowingImageFilterIUC2ID2_Superclass_swigregister(itkIntensityWindowingImageFilterIUC2ID2_Superclass)

def itkIntensityWindowingImageFilterIUC2ID2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC2ID2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ID2_Superclass *":
    """itkIntensityWindowingImageFilterIUC2ID2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ID2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2IF2_Superclass self) -> itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,float >
        GetFunctor(itkIntensityWindowingImageFilterIUC2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC2IF2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2IF2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2IF2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC2IF2_Superclass)
itkIntensityWindowingImageFilterIUC2IF2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC2IF2_Superclass)
itkIntensityWindowingImageFilterIUC2IF2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC2IF2_Superclass)
itkIntensityWindowingImageFilterIUC2IF2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_swigregister
itkIntensityWindowingImageFilterIUC2IF2_Superclass_swigregister(itkIntensityWindowingImageFilterIUC2IF2_Superclass)

def itkIntensityWindowingImageFilterIUC2IF2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC2IF2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass *":
    """itkIntensityWindowingImageFilterIUC2IF2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IF2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2ISS2_Superclass self) -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,short >
        GetFunctor(itkIntensityWindowingImageFilterIUC2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC2ISS2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2ISS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC2ISS2_Superclass)
itkIntensityWindowingImageFilterIUC2ISS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC2ISS2_Superclass)
itkIntensityWindowingImageFilterIUC2ISS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC2ISS2_Superclass)
itkIntensityWindowingImageFilterIUC2ISS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_swigregister
itkIntensityWindowingImageFilterIUC2ISS2_Superclass_swigregister(itkIntensityWindowingImageFilterIUC2ISS2_Superclass)

def itkIntensityWindowingImageFilterIUC2ISS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC2ISS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass *":
    """itkIntensityWindowingImageFilterIUC2ISS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2IUC2_Superclass self) -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterIUC2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC2IUC2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC2IUC2_Superclass)
itkIntensityWindowingImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC2IUC2_Superclass)
itkIntensityWindowingImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC2IUC2_Superclass)
itkIntensityWindowingImageFilterIUC2IUC2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_swigregister
itkIntensityWindowingImageFilterIUC2IUC2_Superclass_swigregister(itkIntensityWindowingImageFilterIUC2IUC2_Superclass)

def itkIntensityWindowingImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC2IUC2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass *":
    """itkIntensityWindowingImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2IUS2_Superclass self) -> itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,unsigned short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC2IUS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned short >
        GetFunctor(itkIntensityWindowingImageFilterIUC2IUS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,unsigned short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC2IUS2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,unsigned short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2IUS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2IUS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC2IUS2_Superclass)
itkIntensityWindowingImageFilterIUC2IUS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC2IUS2_Superclass)
itkIntensityWindowingImageFilterIUC2IUS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC2IUS2_Superclass)
itkIntensityWindowingImageFilterIUC2IUS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass_swigregister
itkIntensityWindowingImageFilterIUC2IUS2_Superclass_swigregister(itkIntensityWindowingImageFilterIUC2IUS2_Superclass)

def itkIntensityWindowingImageFilterIUC2IUS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC2IUS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUS2_Superclass *":
    """itkIntensityWindowingImageFilterIUC2IUS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3ID3_Superclass self) -> itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,double > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC3ID3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,double >
        GetFunctor(itkIntensityWindowingImageFilterIUC3ID3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,double > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,double > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC3ID3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,double > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ID3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3ID3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3ID3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC3ID3_Superclass)
itkIntensityWindowingImageFilterIUC3ID3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC3ID3_Superclass)
itkIntensityWindowingImageFilterIUC3ID3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC3ID3_Superclass)
itkIntensityWindowingImageFilterIUC3ID3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass_swigregister
itkIntensityWindowingImageFilterIUC3ID3_Superclass_swigregister(itkIntensityWindowingImageFilterIUC3ID3_Superclass)

def itkIntensityWindowingImageFilterIUC3ID3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC3ID3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ID3_Superclass *":
    """itkIntensityWindowingImageFilterIUC3ID3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ID3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3IF3_Superclass self) -> itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,float >
        GetFunctor(itkIntensityWindowingImageFilterIUC3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC3IF3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3IF3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3IF3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC3IF3_Superclass)
itkIntensityWindowingImageFilterIUC3IF3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC3IF3_Superclass)
itkIntensityWindowingImageFilterIUC3IF3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC3IF3_Superclass)
itkIntensityWindowingImageFilterIUC3IF3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_swigregister
itkIntensityWindowingImageFilterIUC3IF3_Superclass_swigregister(itkIntensityWindowingImageFilterIUC3IF3_Superclass)

def itkIntensityWindowingImageFilterIUC3IF3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC3IF3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass *":
    """itkIntensityWindowingImageFilterIUC3IF3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IF3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3ISS3_Superclass self) -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,short >
        GetFunctor(itkIntensityWindowingImageFilterIUC3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC3ISS3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3ISS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC3ISS3_Superclass)
itkIntensityWindowingImageFilterIUC3ISS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC3ISS3_Superclass)
itkIntensityWindowingImageFilterIUC3ISS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC3ISS3_Superclass)
itkIntensityWindowingImageFilterIUC3ISS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_swigregister
itkIntensityWindowingImageFilterIUC3ISS3_Superclass_swigregister(itkIntensityWindowingImageFilterIUC3ISS3_Superclass)

def itkIntensityWindowingImageFilterIUC3ISS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC3ISS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass *":
    """itkIntensityWindowingImageFilterIUC3ISS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3IUC3_Superclass self) -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterIUC3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC3IUC3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC3IUC3_Superclass)
itkIntensityWindowingImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC3IUC3_Superclass)
itkIntensityWindowingImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC3IUC3_Superclass)
itkIntensityWindowingImageFilterIUC3IUC3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_swigregister
itkIntensityWindowingImageFilterIUC3IUC3_Superclass_swigregister(itkIntensityWindowingImageFilterIUC3IUC3_Superclass)

def itkIntensityWindowingImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC3IUC3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass *":
    """itkIntensityWindowingImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3IUS3_Superclass self) -> itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,unsigned short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC3IUS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned short >
        GetFunctor(itkIntensityWindowingImageFilterIUC3IUS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,unsigned short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC3IUS3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,unsigned short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3IUS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3IUS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC3IUS3_Superclass)
itkIntensityWindowingImageFilterIUC3IUS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC3IUS3_Superclass)
itkIntensityWindowingImageFilterIUC3IUS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC3IUS3_Superclass)
itkIntensityWindowingImageFilterIUC3IUS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass_swigregister
itkIntensityWindowingImageFilterIUC3IUS3_Superclass_swigregister(itkIntensityWindowingImageFilterIUC3IUS3_Superclass)

def itkIntensityWindowingImageFilterIUC3IUS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC3IUS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUS3_Superclass *":
    """itkIntensityWindowingImageFilterIUC3IUS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUS2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUS2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS2ID2_Superclass self) -> itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned short,double > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUS2ID2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,double >
        GetFunctor(itkIntensityWindowingImageFilterIUS2ID2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,double > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned short,double > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUS2ID2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned short,double > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2ID2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS2ID2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUS2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS2ID2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUS2ID2_Superclass)
itkIntensityWindowingImageFilterIUS2ID2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUS2ID2_Superclass)
itkIntensityWindowingImageFilterIUS2ID2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUS2ID2_Superclass)
itkIntensityWindowingImageFilterIUS2ID2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass_swigregister
itkIntensityWindowingImageFilterIUS2ID2_Superclass_swigregister(itkIntensityWindowingImageFilterIUS2ID2_Superclass)

def itkIntensityWindowingImageFilterIUS2ID2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUS2ID2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUS2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2ID2_Superclass *":
    """itkIntensityWindowingImageFilterIUS2ID2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2ID2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUS2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUS2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS2IF2_Superclass self) -> itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned short,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUS2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,float >
        GetFunctor(itkIntensityWindowingImageFilterIUS2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned short,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUS2IF2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned short,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS2IF2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS2IF2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUS2IF2_Superclass)
itkIntensityWindowingImageFilterIUS2IF2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUS2IF2_Superclass)
itkIntensityWindowingImageFilterIUS2IF2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUS2IF2_Superclass)
itkIntensityWindowingImageFilterIUS2IF2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass_swigregister
itkIntensityWindowingImageFilterIUS2IF2_Superclass_swigregister(itkIntensityWindowingImageFilterIUS2IF2_Superclass)

def itkIntensityWindowingImageFilterIUS2IF2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUS2IF2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUS2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IF2_Superclass *":
    """itkIntensityWindowingImageFilterIUS2IF2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IF2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS2ISS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS2ISS2_Superclass self) -> itkIntensityWindowingImageFilterIUS2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned short,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUS2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,short >
        GetFunctor(itkIntensityWindowingImageFilterIUS2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned short,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUS2ISS2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned short,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS2ISS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS2ISS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUS2ISS2_Superclass)
itkIntensityWindowingImageFilterIUS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUS2ISS2_Superclass)
itkIntensityWindowingImageFilterIUS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUS2ISS2_Superclass)
itkIntensityWindowingImageFilterIUS2ISS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass_swigregister
itkIntensityWindowingImageFilterIUS2ISS2_Superclass_swigregister(itkIntensityWindowingImageFilterIUS2ISS2_Superclass)

def itkIntensityWindowingImageFilterIUS2ISS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUS2ISS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUS2ISS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUS2ISS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2ISS2_Superclass *":
    """itkIntensityWindowingImageFilterIUS2ISS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2ISS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUS2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUS2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS2IUC2_Superclass self) -> itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned short,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUS2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterIUS2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned short,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUS2IUC2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned short,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS2IUC2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS2IUC2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUS2IUC2_Superclass)
itkIntensityWindowingImageFilterIUS2IUC2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUS2IUC2_Superclass)
itkIntensityWindowingImageFilterIUS2IUC2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUS2IUC2_Superclass)
itkIntensityWindowingImageFilterIUS2IUC2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass_swigregister
itkIntensityWindowingImageFilterIUS2IUC2_Superclass_swigregister(itkIntensityWindowingImageFilterIUS2IUC2_Superclass)

def itkIntensityWindowingImageFilterIUS2IUC2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUS2IUC2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUS2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IUC2_Superclass *":
    """itkIntensityWindowingImageFilterIUS2IUC2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IUC2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS2IUS2_Superclass self) -> itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned short,unsigned short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUS2IUS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,unsigned short >
        GetFunctor(itkIntensityWindowingImageFilterIUS2IUS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,unsigned short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned short,unsigned short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUS2IUS2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned short,unsigned short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IUS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS2IUS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUS2IUS2_Superclass)
itkIntensityWindowingImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUS2IUS2_Superclass)
itkIntensityWindowingImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUS2IUS2_Superclass)
itkIntensityWindowingImageFilterIUS2IUS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass_swigregister
itkIntensityWindowingImageFilterIUS2IUS2_Superclass_swigregister(itkIntensityWindowingImageFilterIUS2IUS2_Superclass)

def itkIntensityWindowingImageFilterIUS2IUS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUS2IUS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IUS2_Superclass *":
    """itkIntensityWindowingImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IUS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUS3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUS3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS3ID3_Superclass self) -> itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned short,double > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUS3ID3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,double >
        GetFunctor(itkIntensityWindowingImageFilterIUS3ID3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,double > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned short,double > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUS3ID3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned short,double > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3ID3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS3ID3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUS3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS3ID3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUS3ID3_Superclass)
itkIntensityWindowingImageFilterIUS3ID3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUS3ID3_Superclass)
itkIntensityWindowingImageFilterIUS3ID3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUS3ID3_Superclass)
itkIntensityWindowingImageFilterIUS3ID3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass_swigregister
itkIntensityWindowingImageFilterIUS3ID3_Superclass_swigregister(itkIntensityWindowingImageFilterIUS3ID3_Superclass)

def itkIntensityWindowingImageFilterIUS3ID3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUS3ID3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUS3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3ID3_Superclass *":
    """itkIntensityWindowingImageFilterIUS3ID3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3ID3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUS3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUS3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS3IF3_Superclass self) -> itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned short,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUS3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,float >
        GetFunctor(itkIntensityWindowingImageFilterIUS3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned short,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUS3IF3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned short,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS3IF3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS3IF3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUS3IF3_Superclass)
itkIntensityWindowingImageFilterIUS3IF3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUS3IF3_Superclass)
itkIntensityWindowingImageFilterIUS3IF3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUS3IF3_Superclass)
itkIntensityWindowingImageFilterIUS3IF3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass_swigregister
itkIntensityWindowingImageFilterIUS3IF3_Superclass_swigregister(itkIntensityWindowingImageFilterIUS3IF3_Superclass)

def itkIntensityWindowingImageFilterIUS3IF3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUS3IF3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUS3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IF3_Superclass *":
    """itkIntensityWindowingImageFilterIUS3IF3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IF3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS3ISS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS3ISS3_Superclass self) -> itkIntensityWindowingImageFilterIUS3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned short,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUS3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,short >
        GetFunctor(itkIntensityWindowingImageFilterIUS3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned short,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUS3ISS3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned short,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS3ISS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS3ISS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUS3ISS3_Superclass)
itkIntensityWindowingImageFilterIUS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUS3ISS3_Superclass)
itkIntensityWindowingImageFilterIUS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUS3ISS3_Superclass)
itkIntensityWindowingImageFilterIUS3ISS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass_swigregister
itkIntensityWindowingImageFilterIUS3ISS3_Superclass_swigregister(itkIntensityWindowingImageFilterIUS3ISS3_Superclass)

def itkIntensityWindowingImageFilterIUS3ISS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUS3ISS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUS3ISS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUS3ISS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3ISS3_Superclass *":
    """itkIntensityWindowingImageFilterIUS3ISS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3ISS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUS3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUS3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS3IUC3_Superclass self) -> itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned short,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUS3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterIUS3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned short,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUS3IUC3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned short,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS3IUC3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS3IUC3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUS3IUC3_Superclass)
itkIntensityWindowingImageFilterIUS3IUC3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUS3IUC3_Superclass)
itkIntensityWindowingImageFilterIUS3IUC3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUS3IUC3_Superclass)
itkIntensityWindowingImageFilterIUS3IUC3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass_swigregister
itkIntensityWindowingImageFilterIUS3IUC3_Superclass_swigregister(itkIntensityWindowingImageFilterIUS3IUC3_Superclass)

def itkIntensityWindowingImageFilterIUS3IUC3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUS3IUC3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUS3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IUC3_Superclass *":
    """itkIntensityWindowingImageFilterIUS3IUC3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IUC3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS3IUS3_Superclass self) -> itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned short,unsigned short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUS3IUS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,unsigned short >
        GetFunctor(itkIntensityWindowingImageFilterIUS3IUS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned short,unsigned short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned short,unsigned short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUS3IUS3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned short,unsigned short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IUS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS3IUS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUS3IUS3_Superclass)
itkIntensityWindowingImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUS3IUS3_Superclass)
itkIntensityWindowingImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUS3IUS3_Superclass)
itkIntensityWindowingImageFilterIUS3IUS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass_swigregister
itkIntensityWindowingImageFilterIUS3IUS3_Superclass_swigregister(itkIntensityWindowingImageFilterIUS3IUS3_Superclass)

def itkIntensityWindowingImageFilterIUS3IUS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUS3IUS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IUS3_Superclass *":
    """itkIntensityWindowingImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IUS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterID2ID2(itkIntensityWindowingImageFilterID2ID2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID2ID2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID2ID2_Pointer":
        """Clone(itkIntensityWindowingImageFilterID2ID2 self) -> itkIntensityWindowingImageFilterID2ID2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Clone(self)


    def SetOutputMinimum(self, _arg: 'double const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterID2ID2 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'double const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterID2ID2 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "double const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterID2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "double const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterID2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'double const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterID2ID2 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'double const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterID2ID2 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "double const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterID2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "double const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterID2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'double const &', level: 'double const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterID2ID2 self, double const & window, double const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "double":
        """GetWindow(itkIntensityWindowingImageFilterID2ID2 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetWindow(self)


    def GetLevel(self) -> "double":
        """GetLevel(itkIntensityWindowingImageFilterID2ID2 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterID2ID2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterID2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterID2ID2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterID2ID2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2ID2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID2ID2

        Create a new object of the class itkIntensityWindowingImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID2ID2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_Clone, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_SetOutputMinimum, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_SetOutputMaximum, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetOutputMinimum, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetOutputMaximum, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_SetWindowMinimum, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_SetWindowMaximum, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetWindowMinimum, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetWindowMaximum, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_SetWindowLevel, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetWindow, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetLevel, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetScale, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_GetShift, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_PrintSelf, None, itkIntensityWindowingImageFilterID2ID2)
itkIntensityWindowingImageFilterID2ID2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_swigregister
itkIntensityWindowingImageFilterID2ID2_swigregister(itkIntensityWindowingImageFilterID2ID2)

def itkIntensityWindowingImageFilterID2ID2___New_orig__() -> "itkIntensityWindowingImageFilterID2ID2_Pointer":
    """itkIntensityWindowingImageFilterID2ID2___New_orig__() -> itkIntensityWindowingImageFilterID2ID2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2___New_orig__()

def itkIntensityWindowingImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2ID2 *":
    """itkIntensityWindowingImageFilterID2ID2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2ID2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ID2_cast(obj)

class itkIntensityWindowingImageFilterID2IF2(itkIntensityWindowingImageFilterID2IF2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID2IF2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID2IF2_Pointer":
        """Clone(itkIntensityWindowingImageFilterID2IF2 self) -> itkIntensityWindowingImageFilterID2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterID2IF2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterID2IF2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterID2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterID2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'double const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterID2IF2 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'double const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterID2IF2 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "double const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterID2IF2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "double const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterID2IF2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'double const &', level: 'double const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterID2IF2 self, double const & window, double const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "double":
        """GetWindow(itkIntensityWindowingImageFilterID2IF2 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetWindow(self)


    def GetLevel(self) -> "double":
        """GetLevel(itkIntensityWindowingImageFilterID2IF2 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterID2IF2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterID2IF2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterID2IF2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterID2IF2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID2IF2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IF2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID2IF2

        Create a new object of the class itkIntensityWindowingImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID2IF2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_Clone, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_SetOutputMinimum, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_SetOutputMaximum, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetOutputMinimum, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetOutputMaximum, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_SetWindowMinimum, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_SetWindowMaximum, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetWindowMinimum, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetWindowMaximum, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_SetWindowLevel, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetWindow, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetLevel, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetScale, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_GetShift, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_PrintSelf, None, itkIntensityWindowingImageFilterID2IF2)
itkIntensityWindowingImageFilterID2IF2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_swigregister
itkIntensityWindowingImageFilterID2IF2_swigregister(itkIntensityWindowingImageFilterID2IF2)

def itkIntensityWindowingImageFilterID2IF2___New_orig__() -> "itkIntensityWindowingImageFilterID2IF2_Pointer":
    """itkIntensityWindowingImageFilterID2IF2___New_orig__() -> itkIntensityWindowingImageFilterID2IF2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2___New_orig__()

def itkIntensityWindowingImageFilterID2IF2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IF2 *":
    """itkIntensityWindowingImageFilterID2IF2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IF2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IF2_cast(obj)

class itkIntensityWindowingImageFilterID2ISS2(itkIntensityWindowingImageFilterID2ISS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID2ISS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID2ISS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterID2ISS2 self) -> itkIntensityWindowingImageFilterID2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterID2ISS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterID2ISS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterID2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterID2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'double const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterID2ISS2 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'double const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterID2ISS2 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "double const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterID2ISS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "double const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterID2ISS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'double const &', level: 'double const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterID2ISS2 self, double const & window, double const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "double":
        """GetWindow(itkIntensityWindowingImageFilterID2ISS2 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetWindow(self)


    def GetLevel(self) -> "double":
        """GetLevel(itkIntensityWindowingImageFilterID2ISS2 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterID2ISS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterID2ISS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterID2ISS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterID2ISS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2ISS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID2ISS2

        Create a new object of the class itkIntensityWindowingImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID2ISS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_Clone, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_SetWindowLevel, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetWindow, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetLevel, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetScale, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_GetShift, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_PrintSelf, None, itkIntensityWindowingImageFilterID2ISS2)
itkIntensityWindowingImageFilterID2ISS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_swigregister
itkIntensityWindowingImageFilterID2ISS2_swigregister(itkIntensityWindowingImageFilterID2ISS2)

def itkIntensityWindowingImageFilterID2ISS2___New_orig__() -> "itkIntensityWindowingImageFilterID2ISS2_Pointer":
    """itkIntensityWindowingImageFilterID2ISS2___New_orig__() -> itkIntensityWindowingImageFilterID2ISS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2___New_orig__()

def itkIntensityWindowingImageFilterID2ISS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2ISS2 *":
    """itkIntensityWindowingImageFilterID2ISS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2ISS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2ISS2_cast(obj)

class itkIntensityWindowingImageFilterID2IUC2(itkIntensityWindowingImageFilterID2IUC2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID2IUC2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID2IUC2_Pointer":
        """Clone(itkIntensityWindowingImageFilterID2IUC2 self) -> itkIntensityWindowingImageFilterID2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterID2IUC2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterID2IUC2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterID2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterID2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'double const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterID2IUC2 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'double const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterID2IUC2 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "double const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterID2IUC2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "double const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterID2IUC2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'double const &', level: 'double const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterID2IUC2 self, double const & window, double const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "double":
        """GetWindow(itkIntensityWindowingImageFilterID2IUC2 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetWindow(self)


    def GetLevel(self) -> "double":
        """GetLevel(itkIntensityWindowingImageFilterID2IUC2 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterID2IUC2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterID2IUC2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterID2IUC2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterID2IUC2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IUC2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID2IUC2

        Create a new object of the class itkIntensityWindowingImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID2IUC2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_Clone, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_SetOutputMinimum, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_SetOutputMaximum, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetOutputMinimum, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetOutputMaximum, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_SetWindowMinimum, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_SetWindowMaximum, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetWindowMinimum, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetWindowMaximum, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_SetWindowLevel, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetWindow, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetLevel, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetScale, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_GetShift, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_PrintSelf, None, itkIntensityWindowingImageFilterID2IUC2)
itkIntensityWindowingImageFilterID2IUC2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_swigregister
itkIntensityWindowingImageFilterID2IUC2_swigregister(itkIntensityWindowingImageFilterID2IUC2)

def itkIntensityWindowingImageFilterID2IUC2___New_orig__() -> "itkIntensityWindowingImageFilterID2IUC2_Pointer":
    """itkIntensityWindowingImageFilterID2IUC2___New_orig__() -> itkIntensityWindowingImageFilterID2IUC2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2___New_orig__()

def itkIntensityWindowingImageFilterID2IUC2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IUC2 *":
    """itkIntensityWindowingImageFilterID2IUC2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IUC2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUC2_cast(obj)

class itkIntensityWindowingImageFilterID2IUS2(itkIntensityWindowingImageFilterID2IUS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID2IUS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID2IUS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID2IUS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterID2IUS2 self) -> itkIntensityWindowingImageFilterID2IUS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterID2IUS2 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterID2IUS2 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterID2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterID2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'double const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterID2IUS2 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'double const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterID2IUS2 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "double const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterID2IUS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "double const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterID2IUS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'double const &', level: 'double const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterID2IUS2 self, double const & window, double const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "double":
        """GetWindow(itkIntensityWindowingImageFilterID2IUS2 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetWindow(self)


    def GetLevel(self) -> "double":
        """GetLevel(itkIntensityWindowingImageFilterID2IUS2 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterID2IUS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterID2IUS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterID2IUS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterID2IUS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID2IUS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IUS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IUS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID2IUS2

        Create a new object of the class itkIntensityWindowingImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID2IUS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_Clone, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_SetWindowLevel, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetWindow, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetLevel, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetScale, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_GetShift, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_PrintSelf, None, itkIntensityWindowingImageFilterID2IUS2)
itkIntensityWindowingImageFilterID2IUS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_swigregister
itkIntensityWindowingImageFilterID2IUS2_swigregister(itkIntensityWindowingImageFilterID2IUS2)

def itkIntensityWindowingImageFilterID2IUS2___New_orig__() -> "itkIntensityWindowingImageFilterID2IUS2_Pointer":
    """itkIntensityWindowingImageFilterID2IUS2___New_orig__() -> itkIntensityWindowingImageFilterID2IUS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2___New_orig__()

def itkIntensityWindowingImageFilterID2IUS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID2IUS2 *":
    """itkIntensityWindowingImageFilterID2IUS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID2IUS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID2IUS2_cast(obj)

class itkIntensityWindowingImageFilterID3ID3(itkIntensityWindowingImageFilterID3ID3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID3ID3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID3ID3_Pointer":
        """Clone(itkIntensityWindowingImageFilterID3ID3 self) -> itkIntensityWindowingImageFilterID3ID3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Clone(self)


    def SetOutputMinimum(self, _arg: 'double const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterID3ID3 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'double const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterID3ID3 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "double const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterID3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "double const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterID3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'double const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterID3ID3 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'double const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterID3ID3 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "double const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterID3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "double const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterID3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'double const &', level: 'double const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterID3ID3 self, double const & window, double const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "double":
        """GetWindow(itkIntensityWindowingImageFilterID3ID3 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetWindow(self)


    def GetLevel(self) -> "double":
        """GetLevel(itkIntensityWindowingImageFilterID3ID3 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterID3ID3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterID3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterID3ID3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterID3ID3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3ID3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID3ID3

        Create a new object of the class itkIntensityWindowingImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID3ID3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_Clone, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_SetOutputMinimum, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_SetOutputMaximum, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetOutputMinimum, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetOutputMaximum, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_SetWindowMinimum, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_SetWindowMaximum, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetWindowMinimum, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetWindowMaximum, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_SetWindowLevel, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetWindow, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetLevel, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetScale, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_GetShift, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_PrintSelf, None, itkIntensityWindowingImageFilterID3ID3)
itkIntensityWindowingImageFilterID3ID3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_swigregister
itkIntensityWindowingImageFilterID3ID3_swigregister(itkIntensityWindowingImageFilterID3ID3)

def itkIntensityWindowingImageFilterID3ID3___New_orig__() -> "itkIntensityWindowingImageFilterID3ID3_Pointer":
    """itkIntensityWindowingImageFilterID3ID3___New_orig__() -> itkIntensityWindowingImageFilterID3ID3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3___New_orig__()

def itkIntensityWindowingImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3ID3 *":
    """itkIntensityWindowingImageFilterID3ID3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3ID3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ID3_cast(obj)

class itkIntensityWindowingImageFilterID3IF3(itkIntensityWindowingImageFilterID3IF3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID3IF3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID3IF3_Pointer":
        """Clone(itkIntensityWindowingImageFilterID3IF3 self) -> itkIntensityWindowingImageFilterID3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterID3IF3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterID3IF3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterID3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterID3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'double const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterID3IF3 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'double const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterID3IF3 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "double const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterID3IF3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "double const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterID3IF3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'double const &', level: 'double const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterID3IF3 self, double const & window, double const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "double":
        """GetWindow(itkIntensityWindowingImageFilterID3IF3 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetWindow(self)


    def GetLevel(self) -> "double":
        """GetLevel(itkIntensityWindowingImageFilterID3IF3 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterID3IF3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterID3IF3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterID3IF3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterID3IF3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID3IF3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IF3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID3IF3

        Create a new object of the class itkIntensityWindowingImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID3IF3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_Clone, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_SetOutputMinimum, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_SetOutputMaximum, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetOutputMinimum, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetOutputMaximum, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_SetWindowMinimum, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_SetWindowMaximum, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetWindowMinimum, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetWindowMaximum, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_SetWindowLevel, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetWindow, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetLevel, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetScale, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_GetShift, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_PrintSelf, None, itkIntensityWindowingImageFilterID3IF3)
itkIntensityWindowingImageFilterID3IF3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_swigregister
itkIntensityWindowingImageFilterID3IF3_swigregister(itkIntensityWindowingImageFilterID3IF3)

def itkIntensityWindowingImageFilterID3IF3___New_orig__() -> "itkIntensityWindowingImageFilterID3IF3_Pointer":
    """itkIntensityWindowingImageFilterID3IF3___New_orig__() -> itkIntensityWindowingImageFilterID3IF3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3___New_orig__()

def itkIntensityWindowingImageFilterID3IF3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IF3 *":
    """itkIntensityWindowingImageFilterID3IF3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IF3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IF3_cast(obj)

class itkIntensityWindowingImageFilterID3ISS3(itkIntensityWindowingImageFilterID3ISS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID3ISS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID3ISS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterID3ISS3 self) -> itkIntensityWindowingImageFilterID3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterID3ISS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterID3ISS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterID3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterID3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'double const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterID3ISS3 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'double const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterID3ISS3 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "double const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterID3ISS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "double const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterID3ISS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'double const &', level: 'double const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterID3ISS3 self, double const & window, double const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "double":
        """GetWindow(itkIntensityWindowingImageFilterID3ISS3 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetWindow(self)


    def GetLevel(self) -> "double":
        """GetLevel(itkIntensityWindowingImageFilterID3ISS3 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterID3ISS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterID3ISS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterID3ISS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterID3ISS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3ISS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID3ISS3

        Create a new object of the class itkIntensityWindowingImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID3ISS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_Clone, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_SetWindowLevel, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetWindow, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetLevel, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetScale, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_GetShift, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_PrintSelf, None, itkIntensityWindowingImageFilterID3ISS3)
itkIntensityWindowingImageFilterID3ISS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_swigregister
itkIntensityWindowingImageFilterID3ISS3_swigregister(itkIntensityWindowingImageFilterID3ISS3)

def itkIntensityWindowingImageFilterID3ISS3___New_orig__() -> "itkIntensityWindowingImageFilterID3ISS3_Pointer":
    """itkIntensityWindowingImageFilterID3ISS3___New_orig__() -> itkIntensityWindowingImageFilterID3ISS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3___New_orig__()

def itkIntensityWindowingImageFilterID3ISS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3ISS3 *":
    """itkIntensityWindowingImageFilterID3ISS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3ISS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3ISS3_cast(obj)

class itkIntensityWindowingImageFilterID3IUC3(itkIntensityWindowingImageFilterID3IUC3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID3IUC3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID3IUC3_Pointer":
        """Clone(itkIntensityWindowingImageFilterID3IUC3 self) -> itkIntensityWindowingImageFilterID3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterID3IUC3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterID3IUC3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterID3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterID3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'double const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterID3IUC3 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'double const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterID3IUC3 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "double const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterID3IUC3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "double const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterID3IUC3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'double const &', level: 'double const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterID3IUC3 self, double const & window, double const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "double":
        """GetWindow(itkIntensityWindowingImageFilterID3IUC3 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetWindow(self)


    def GetLevel(self) -> "double":
        """GetLevel(itkIntensityWindowingImageFilterID3IUC3 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterID3IUC3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterID3IUC3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterID3IUC3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterID3IUC3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IUC3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID3IUC3

        Create a new object of the class itkIntensityWindowingImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID3IUC3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_Clone, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_SetOutputMinimum, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_SetOutputMaximum, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetOutputMinimum, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetOutputMaximum, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_SetWindowMinimum, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_SetWindowMaximum, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetWindowMinimum, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetWindowMaximum, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_SetWindowLevel, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetWindow, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetLevel, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetScale, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_GetShift, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_PrintSelf, None, itkIntensityWindowingImageFilterID3IUC3)
itkIntensityWindowingImageFilterID3IUC3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_swigregister
itkIntensityWindowingImageFilterID3IUC3_swigregister(itkIntensityWindowingImageFilterID3IUC3)

def itkIntensityWindowingImageFilterID3IUC3___New_orig__() -> "itkIntensityWindowingImageFilterID3IUC3_Pointer":
    """itkIntensityWindowingImageFilterID3IUC3___New_orig__() -> itkIntensityWindowingImageFilterID3IUC3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3___New_orig__()

def itkIntensityWindowingImageFilterID3IUC3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IUC3 *":
    """itkIntensityWindowingImageFilterID3IUC3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IUC3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUC3_cast(obj)

class itkIntensityWindowingImageFilterID3IUS3(itkIntensityWindowingImageFilterID3IUS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterID3IUS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterID3IUS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterID3IUS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterID3IUS3 self) -> itkIntensityWindowingImageFilterID3IUS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterID3IUS3 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterID3IUS3 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterID3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterID3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'double const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterID3IUS3 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'double const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterID3IUS3 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "double const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterID3IUS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "double const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterID3IUS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'double const &', level: 'double const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterID3IUS3 self, double const & window, double const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "double":
        """GetWindow(itkIntensityWindowingImageFilterID3IUS3 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetWindow(self)


    def GetLevel(self) -> "double":
        """GetLevel(itkIntensityWindowingImageFilterID3IUS3 self) -> double"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterID3IUS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterID3IUS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterID3IUS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterID3IUS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterID3IUS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IUS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IUS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterID3IUS3

        Create a new object of the class itkIntensityWindowingImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterID3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterID3IUS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_Clone, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_SetWindowLevel, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetWindow, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetLevel, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetScale, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_GetShift, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_PrintSelf, None, itkIntensityWindowingImageFilterID3IUS3)
itkIntensityWindowingImageFilterID3IUS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_swigregister
itkIntensityWindowingImageFilterID3IUS3_swigregister(itkIntensityWindowingImageFilterID3IUS3)

def itkIntensityWindowingImageFilterID3IUS3___New_orig__() -> "itkIntensityWindowingImageFilterID3IUS3_Pointer":
    """itkIntensityWindowingImageFilterID3IUS3___New_orig__() -> itkIntensityWindowingImageFilterID3IUS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3___New_orig__()

def itkIntensityWindowingImageFilterID3IUS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterID3IUS3 *":
    """itkIntensityWindowingImageFilterID3IUS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterID3IUS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterID3IUS3_cast(obj)

class itkIntensityWindowingImageFilterIF2ID2(itkIntensityWindowingImageFilterIF2ID2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2ID2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2ID2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2ID2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2ID2 self) -> itkIntensityWindowingImageFilterIF2ID2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Clone(self)


    def SetOutputMinimum(self, _arg: 'double const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF2ID2 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'double const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF2ID2 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "double const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "double const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF2ID2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF2ID2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF2ID2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF2ID2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF2ID2 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF2ID2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF2ID2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF2ID2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF2ID2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF2ID2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2ID2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ID2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ID2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2ID2

        Create a new object of the class itkIntensityWindowingImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2ID2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_Clone, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_SetWindowLevel, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetWindow, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetLevel, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetScale, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_GetShift, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_PrintSelf, None, itkIntensityWindowingImageFilterIF2ID2)
itkIntensityWindowingImageFilterIF2ID2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_swigregister
itkIntensityWindowingImageFilterIF2ID2_swigregister(itkIntensityWindowingImageFilterIF2ID2)

def itkIntensityWindowingImageFilterIF2ID2___New_orig__() -> "itkIntensityWindowingImageFilterIF2ID2_Pointer":
    """itkIntensityWindowingImageFilterIF2ID2___New_orig__() -> itkIntensityWindowingImageFilterIF2ID2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2___New_orig__()

def itkIntensityWindowingImageFilterIF2ID2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ID2 *":
    """itkIntensityWindowingImageFilterIF2ID2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ID2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ID2_cast(obj)

class itkIntensityWindowingImageFilterIF2IF2(itkIntensityWindowingImageFilterIF2IF2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2IF2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2IF2 self) -> itkIntensityWindowingImageFilterIF2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF2IF2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF2IF2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF2IF2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF2IF2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF2IF2 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF2IF2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF2IF2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF2IF2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF2IF2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF2IF2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF2IF2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2IF2

        Create a new object of the class itkIntensityWindowingImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2IF2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Clone, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowLevel, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindow, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetLevel, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetScale, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetShift, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_PrintSelf, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_swigregister
itkIntensityWindowingImageFilterIF2IF2_swigregister(itkIntensityWindowingImageFilterIF2IF2)

def itkIntensityWindowingImageFilterIF2IF2___New_orig__() -> "itkIntensityWindowingImageFilterIF2IF2_Pointer":
    """itkIntensityWindowingImageFilterIF2IF2___New_orig__() -> itkIntensityWindowingImageFilterIF2IF2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2___New_orig__()

def itkIntensityWindowingImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IF2 *":
    """itkIntensityWindowingImageFilterIF2IF2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IF2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_cast(obj)

class itkIntensityWindowingImageFilterIF2ISS2(itkIntensityWindowingImageFilterIF2ISS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2ISS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2ISS2 self) -> itkIntensityWindowingImageFilterIF2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF2ISS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF2ISS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF2ISS2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF2ISS2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF2ISS2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF2ISS2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF2ISS2 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF2ISS2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF2ISS2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF2ISS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF2ISS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF2ISS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF2ISS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2ISS2

        Create a new object of the class itkIntensityWindowingImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2ISS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Clone, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowLevel, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindow, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetLevel, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetScale, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetShift, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_PrintSelf, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_swigregister
itkIntensityWindowingImageFilterIF2ISS2_swigregister(itkIntensityWindowingImageFilterIF2ISS2)

def itkIntensityWindowingImageFilterIF2ISS2___New_orig__() -> "itkIntensityWindowingImageFilterIF2ISS2_Pointer":
    """itkIntensityWindowingImageFilterIF2ISS2___New_orig__() -> itkIntensityWindowingImageFilterIF2ISS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2___New_orig__()

def itkIntensityWindowingImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ISS2 *":
    """itkIntensityWindowingImageFilterIF2ISS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ISS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_cast(obj)

class itkIntensityWindowingImageFilterIF2IUC2(itkIntensityWindowingImageFilterIF2IUC2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2IUC2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2IUC2 self) -> itkIntensityWindowingImageFilterIF2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF2IUC2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF2IUC2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF2IUC2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF2IUC2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF2IUC2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF2IUC2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF2IUC2 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF2IUC2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF2IUC2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF2IUC2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF2IUC2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF2IUC2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF2IUC2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2IUC2

        Create a new object of the class itkIntensityWindowingImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2IUC2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Clone, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowLevel, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindow, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetLevel, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetScale, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetShift, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_PrintSelf, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_swigregister
itkIntensityWindowingImageFilterIF2IUC2_swigregister(itkIntensityWindowingImageFilterIF2IUC2)

def itkIntensityWindowingImageFilterIF2IUC2___New_orig__() -> "itkIntensityWindowingImageFilterIF2IUC2_Pointer":
    """itkIntensityWindowingImageFilterIF2IUC2___New_orig__() -> itkIntensityWindowingImageFilterIF2IUC2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2___New_orig__()

def itkIntensityWindowingImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUC2 *":
    """itkIntensityWindowingImageFilterIF2IUC2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUC2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_cast(obj)

class itkIntensityWindowingImageFilterIF2IUS2(itkIntensityWindowingImageFilterIF2IUS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2IUS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2IUS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2IUS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2IUS2 self) -> itkIntensityWindowingImageFilterIF2IUS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF2IUS2 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF2IUS2 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF2IUS2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF2IUS2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF2IUS2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF2IUS2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF2IUS2 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF2IUS2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF2IUS2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF2IUS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF2IUS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF2IUS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF2IUS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2IUS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2IUS2

        Create a new object of the class itkIntensityWindowingImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2IUS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_Clone, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_SetWindowLevel, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetWindow, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetLevel, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetScale, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_GetShift, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_PrintSelf, None, itkIntensityWindowingImageFilterIF2IUS2)
itkIntensityWindowingImageFilterIF2IUS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_swigregister
itkIntensityWindowingImageFilterIF2IUS2_swigregister(itkIntensityWindowingImageFilterIF2IUS2)

def itkIntensityWindowingImageFilterIF2IUS2___New_orig__() -> "itkIntensityWindowingImageFilterIF2IUS2_Pointer":
    """itkIntensityWindowingImageFilterIF2IUS2___New_orig__() -> itkIntensityWindowingImageFilterIF2IUS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2___New_orig__()

def itkIntensityWindowingImageFilterIF2IUS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUS2 *":
    """itkIntensityWindowingImageFilterIF2IUS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUS2_cast(obj)

class itkIntensityWindowingImageFilterIF3ID3(itkIntensityWindowingImageFilterIF3ID3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3ID3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3ID3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3ID3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3ID3 self) -> itkIntensityWindowingImageFilterIF3ID3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Clone(self)


    def SetOutputMinimum(self, _arg: 'double const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF3ID3 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'double const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF3ID3 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "double const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "double const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF3ID3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF3ID3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF3ID3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF3ID3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF3ID3 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF3ID3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF3ID3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF3ID3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF3ID3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF3ID3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3ID3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ID3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ID3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3ID3

        Create a new object of the class itkIntensityWindowingImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3ID3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_Clone, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_SetWindowLevel, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetWindow, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetLevel, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetScale, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_GetShift, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_PrintSelf, None, itkIntensityWindowingImageFilterIF3ID3)
itkIntensityWindowingImageFilterIF3ID3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_swigregister
itkIntensityWindowingImageFilterIF3ID3_swigregister(itkIntensityWindowingImageFilterIF3ID3)

def itkIntensityWindowingImageFilterIF3ID3___New_orig__() -> "itkIntensityWindowingImageFilterIF3ID3_Pointer":
    """itkIntensityWindowingImageFilterIF3ID3___New_orig__() -> itkIntensityWindowingImageFilterIF3ID3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3___New_orig__()

def itkIntensityWindowingImageFilterIF3ID3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ID3 *":
    """itkIntensityWindowingImageFilterIF3ID3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ID3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ID3_cast(obj)

class itkIntensityWindowingImageFilterIF3IF3(itkIntensityWindowingImageFilterIF3IF3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3IF3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3IF3 self) -> itkIntensityWindowingImageFilterIF3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF3IF3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF3IF3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF3IF3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF3IF3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF3IF3 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF3IF3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF3IF3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF3IF3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF3IF3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF3IF3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF3IF3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3IF3

        Create a new object of the class itkIntensityWindowingImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3IF3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Clone, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowLevel, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindow, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetLevel, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetScale, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetShift, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_PrintSelf, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_swigregister
itkIntensityWindowingImageFilterIF3IF3_swigregister(itkIntensityWindowingImageFilterIF3IF3)

def itkIntensityWindowingImageFilterIF3IF3___New_orig__() -> "itkIntensityWindowingImageFilterIF3IF3_Pointer":
    """itkIntensityWindowingImageFilterIF3IF3___New_orig__() -> itkIntensityWindowingImageFilterIF3IF3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3___New_orig__()

def itkIntensityWindowingImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IF3 *":
    """itkIntensityWindowingImageFilterIF3IF3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IF3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_cast(obj)

class itkIntensityWindowingImageFilterIF3ISS3(itkIntensityWindowingImageFilterIF3ISS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3ISS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3ISS3 self) -> itkIntensityWindowingImageFilterIF3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF3ISS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF3ISS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF3ISS3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF3ISS3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF3ISS3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF3ISS3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF3ISS3 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF3ISS3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF3ISS3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF3ISS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF3ISS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF3ISS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF3ISS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3ISS3

        Create a new object of the class itkIntensityWindowingImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3ISS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Clone, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowLevel, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindow, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetLevel, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetScale, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetShift, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_PrintSelf, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_swigregister
itkIntensityWindowingImageFilterIF3ISS3_swigregister(itkIntensityWindowingImageFilterIF3ISS3)

def itkIntensityWindowingImageFilterIF3ISS3___New_orig__() -> "itkIntensityWindowingImageFilterIF3ISS3_Pointer":
    """itkIntensityWindowingImageFilterIF3ISS3___New_orig__() -> itkIntensityWindowingImageFilterIF3ISS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3___New_orig__()

def itkIntensityWindowingImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ISS3 *":
    """itkIntensityWindowingImageFilterIF3ISS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ISS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_cast(obj)

class itkIntensityWindowingImageFilterIF3IUC3(itkIntensityWindowingImageFilterIF3IUC3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3IUC3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3IUC3 self) -> itkIntensityWindowingImageFilterIF3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF3IUC3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF3IUC3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF3IUC3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF3IUC3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF3IUC3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF3IUC3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF3IUC3 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF3IUC3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF3IUC3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF3IUC3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF3IUC3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF3IUC3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF3IUC3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3IUC3

        Create a new object of the class itkIntensityWindowingImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3IUC3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Clone, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowLevel, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindow, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetLevel, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetScale, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetShift, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_PrintSelf, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_swigregister
itkIntensityWindowingImageFilterIF3IUC3_swigregister(itkIntensityWindowingImageFilterIF3IUC3)

def itkIntensityWindowingImageFilterIF3IUC3___New_orig__() -> "itkIntensityWindowingImageFilterIF3IUC3_Pointer":
    """itkIntensityWindowingImageFilterIF3IUC3___New_orig__() -> itkIntensityWindowingImageFilterIF3IUC3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3___New_orig__()

def itkIntensityWindowingImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUC3 *":
    """itkIntensityWindowingImageFilterIF3IUC3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUC3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_cast(obj)

class itkIntensityWindowingImageFilterIF3IUS3(itkIntensityWindowingImageFilterIF3IUS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3IUS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3IUS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3IUS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3IUS3 self) -> itkIntensityWindowingImageFilterIF3IUS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF3IUS3 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF3IUS3 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF3IUS3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF3IUS3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF3IUS3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF3IUS3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF3IUS3 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF3IUS3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF3IUS3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF3IUS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF3IUS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF3IUS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF3IUS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3IUS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3IUS3

        Create a new object of the class itkIntensityWindowingImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3IUS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_Clone, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_SetWindowLevel, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetWindow, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetLevel, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetScale, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_GetShift, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_PrintSelf, None, itkIntensityWindowingImageFilterIF3IUS3)
itkIntensityWindowingImageFilterIF3IUS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_swigregister
itkIntensityWindowingImageFilterIF3IUS3_swigregister(itkIntensityWindowingImageFilterIF3IUS3)

def itkIntensityWindowingImageFilterIF3IUS3___New_orig__() -> "itkIntensityWindowingImageFilterIF3IUS3_Pointer":
    """itkIntensityWindowingImageFilterIF3IUS3___New_orig__() -> itkIntensityWindowingImageFilterIF3IUS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3___New_orig__()

def itkIntensityWindowingImageFilterIF3IUS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUS3 *":
    """itkIntensityWindowingImageFilterIF3IUS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUS3_cast(obj)

class itkIntensityWindowingImageFilterISS2ID2(itkIntensityWindowingImageFilterISS2ID2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2ID2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2ID2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2ID2_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2ID2 self) -> itkIntensityWindowingImageFilterISS2ID2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Clone(self)


    def SetOutputMinimum(self, _arg: 'double const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS2ID2 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'double const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS2ID2 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "double const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "double const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS2ID2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS2ID2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS2ID2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS2ID2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS2ID2 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS2ID2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS2ID2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS2ID2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS2ID2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS2ID2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2ID2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ID2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ID2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2ID2

        Create a new object of the class itkIntensityWindowingImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2ID2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_Clone, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_SetWindowLevel, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetWindow, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetLevel, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetScale, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_GetShift, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_PrintSelf, None, itkIntensityWindowingImageFilterISS2ID2)
itkIntensityWindowingImageFilterISS2ID2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_swigregister
itkIntensityWindowingImageFilterISS2ID2_swigregister(itkIntensityWindowingImageFilterISS2ID2)

def itkIntensityWindowingImageFilterISS2ID2___New_orig__() -> "itkIntensityWindowingImageFilterISS2ID2_Pointer":
    """itkIntensityWindowingImageFilterISS2ID2___New_orig__() -> itkIntensityWindowingImageFilterISS2ID2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2___New_orig__()

def itkIntensityWindowingImageFilterISS2ID2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ID2 *":
    """itkIntensityWindowingImageFilterISS2ID2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ID2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ID2_cast(obj)

class itkIntensityWindowingImageFilterISS2IF2(itkIntensityWindowingImageFilterISS2IF2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2IF2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2IF2_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2IF2 self) -> itkIntensityWindowingImageFilterISS2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS2IF2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS2IF2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS2IF2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS2IF2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS2IF2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS2IF2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS2IF2 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS2IF2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS2IF2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS2IF2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS2IF2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS2IF2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS2IF2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2IF2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IF2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2IF2

        Create a new object of the class itkIntensityWindowingImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2IF2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Clone, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowLevel, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindow, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetLevel, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetScale, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetShift, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_PrintSelf, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_swigregister
itkIntensityWindowingImageFilterISS2IF2_swigregister(itkIntensityWindowingImageFilterISS2IF2)

def itkIntensityWindowingImageFilterISS2IF2___New_orig__() -> "itkIntensityWindowingImageFilterISS2IF2_Pointer":
    """itkIntensityWindowingImageFilterISS2IF2___New_orig__() -> itkIntensityWindowingImageFilterISS2IF2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2___New_orig__()

def itkIntensityWindowingImageFilterISS2IF2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IF2 *":
    """itkIntensityWindowingImageFilterISS2IF2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IF2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_cast(obj)

class itkIntensityWindowingImageFilterISS2ISS2(itkIntensityWindowingImageFilterISS2ISS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2ISS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2ISS2 self) -> itkIntensityWindowingImageFilterISS2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS2ISS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS2ISS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS2ISS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS2ISS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS2ISS2 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS2ISS2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS2ISS2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS2ISS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS2ISS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS2ISS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS2ISS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2ISS2

        Create a new object of the class itkIntensityWindowingImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2ISS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Clone, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowLevel, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindow, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetLevel, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetScale, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetShift, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_PrintSelf, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_swigregister
itkIntensityWindowingImageFilterISS2ISS2_swigregister(itkIntensityWindowingImageFilterISS2ISS2)

def itkIntensityWindowingImageFilterISS2ISS2___New_orig__() -> "itkIntensityWindowingImageFilterISS2ISS2_Pointer":
    """itkIntensityWindowingImageFilterISS2ISS2___New_orig__() -> itkIntensityWindowingImageFilterISS2ISS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2___New_orig__()

def itkIntensityWindowingImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ISS2 *":
    """itkIntensityWindowingImageFilterISS2ISS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ISS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_cast(obj)

class itkIntensityWindowingImageFilterISS2IUC2(itkIntensityWindowingImageFilterISS2IUC2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2IUC2_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2IUC2 self) -> itkIntensityWindowingImageFilterISS2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS2IUC2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS2IUC2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS2IUC2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS2IUC2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS2IUC2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS2IUC2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS2IUC2 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS2IUC2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS2IUC2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS2IUC2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS2IUC2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS2IUC2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS2IUC2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2IUC2

        Create a new object of the class itkIntensityWindowingImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2IUC2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Clone, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowLevel, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindow, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetLevel, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetScale, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetShift, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_PrintSelf, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_swigregister
itkIntensityWindowingImageFilterISS2IUC2_swigregister(itkIntensityWindowingImageFilterISS2IUC2)

def itkIntensityWindowingImageFilterISS2IUC2___New_orig__() -> "itkIntensityWindowingImageFilterISS2IUC2_Pointer":
    """itkIntensityWindowingImageFilterISS2IUC2___New_orig__() -> itkIntensityWindowingImageFilterISS2IUC2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2___New_orig__()

def itkIntensityWindowingImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUC2 *":
    """itkIntensityWindowingImageFilterISS2IUC2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUC2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_cast(obj)

class itkIntensityWindowingImageFilterISS2IUS2(itkIntensityWindowingImageFilterISS2IUS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2IUS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2IUS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2IUS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2IUS2 self) -> itkIntensityWindowingImageFilterISS2IUS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS2IUS2 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS2IUS2 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS2IUS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS2IUS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS2IUS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS2IUS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS2IUS2 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS2IUS2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS2IUS2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS2IUS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS2IUS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS2IUS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS2IUS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2IUS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2IUS2

        Create a new object of the class itkIntensityWindowingImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2IUS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_Clone, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_SetWindowLevel, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetWindow, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetLevel, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetScale, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_GetShift, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_PrintSelf, None, itkIntensityWindowingImageFilterISS2IUS2)
itkIntensityWindowingImageFilterISS2IUS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_swigregister
itkIntensityWindowingImageFilterISS2IUS2_swigregister(itkIntensityWindowingImageFilterISS2IUS2)

def itkIntensityWindowingImageFilterISS2IUS2___New_orig__() -> "itkIntensityWindowingImageFilterISS2IUS2_Pointer":
    """itkIntensityWindowingImageFilterISS2IUS2___New_orig__() -> itkIntensityWindowingImageFilterISS2IUS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2___New_orig__()

def itkIntensityWindowingImageFilterISS2IUS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUS2 *":
    """itkIntensityWindowingImageFilterISS2IUS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUS2_cast(obj)

class itkIntensityWindowingImageFilterISS3ID3(itkIntensityWindowingImageFilterISS3ID3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3ID3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3ID3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3ID3_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3ID3 self) -> itkIntensityWindowingImageFilterISS3ID3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Clone(self)


    def SetOutputMinimum(self, _arg: 'double const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS3ID3 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'double const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS3ID3 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "double const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "double const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS3ID3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS3ID3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS3ID3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS3ID3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS3ID3 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS3ID3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS3ID3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS3ID3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS3ID3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS3ID3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3ID3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ID3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ID3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3ID3

        Create a new object of the class itkIntensityWindowingImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3ID3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_Clone, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_SetWindowLevel, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetWindow, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetLevel, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetScale, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_GetShift, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_PrintSelf, None, itkIntensityWindowingImageFilterISS3ID3)
itkIntensityWindowingImageFilterISS3ID3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_swigregister
itkIntensityWindowingImageFilterISS3ID3_swigregister(itkIntensityWindowingImageFilterISS3ID3)

def itkIntensityWindowingImageFilterISS3ID3___New_orig__() -> "itkIntensityWindowingImageFilterISS3ID3_Pointer":
    """itkIntensityWindowingImageFilterISS3ID3___New_orig__() -> itkIntensityWindowingImageFilterISS3ID3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3___New_orig__()

def itkIntensityWindowingImageFilterISS3ID3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ID3 *":
    """itkIntensityWindowingImageFilterISS3ID3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ID3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ID3_cast(obj)

class itkIntensityWindowingImageFilterISS3IF3(itkIntensityWindowingImageFilterISS3IF3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3IF3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3IF3_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3IF3 self) -> itkIntensityWindowingImageFilterISS3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS3IF3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS3IF3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS3IF3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS3IF3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS3IF3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS3IF3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS3IF3 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS3IF3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS3IF3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS3IF3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS3IF3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS3IF3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS3IF3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3IF3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IF3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3IF3

        Create a new object of the class itkIntensityWindowingImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3IF3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Clone, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowLevel, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindow, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetLevel, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetScale, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetShift, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_PrintSelf, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_swigregister
itkIntensityWindowingImageFilterISS3IF3_swigregister(itkIntensityWindowingImageFilterISS3IF3)

def itkIntensityWindowingImageFilterISS3IF3___New_orig__() -> "itkIntensityWindowingImageFilterISS3IF3_Pointer":
    """itkIntensityWindowingImageFilterISS3IF3___New_orig__() -> itkIntensityWindowingImageFilterISS3IF3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3___New_orig__()

def itkIntensityWindowingImageFilterISS3IF3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IF3 *":
    """itkIntensityWindowingImageFilterISS3IF3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IF3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_cast(obj)

class itkIntensityWindowingImageFilterISS3ISS3(itkIntensityWindowingImageFilterISS3ISS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3ISS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3ISS3 self) -> itkIntensityWindowingImageFilterISS3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS3ISS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS3ISS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS3ISS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS3ISS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS3ISS3 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS3ISS3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS3ISS3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS3ISS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS3ISS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS3ISS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS3ISS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3ISS3

        Create a new object of the class itkIntensityWindowingImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3ISS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Clone, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowLevel, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindow, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetLevel, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetScale, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetShift, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_PrintSelf, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_swigregister
itkIntensityWindowingImageFilterISS3ISS3_swigregister(itkIntensityWindowingImageFilterISS3ISS3)

def itkIntensityWindowingImageFilterISS3ISS3___New_orig__() -> "itkIntensityWindowingImageFilterISS3ISS3_Pointer":
    """itkIntensityWindowingImageFilterISS3ISS3___New_orig__() -> itkIntensityWindowingImageFilterISS3ISS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3___New_orig__()

def itkIntensityWindowingImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ISS3 *":
    """itkIntensityWindowingImageFilterISS3ISS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ISS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_cast(obj)

class itkIntensityWindowingImageFilterISS3IUC3(itkIntensityWindowingImageFilterISS3IUC3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3IUC3_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3IUC3 self) -> itkIntensityWindowingImageFilterISS3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS3IUC3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS3IUC3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS3IUC3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS3IUC3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS3IUC3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS3IUC3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS3IUC3 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS3IUC3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS3IUC3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS3IUC3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS3IUC3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS3IUC3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS3IUC3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3IUC3

        Create a new object of the class itkIntensityWindowingImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3IUC3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Clone, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowLevel, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindow, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetLevel, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetScale, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetShift, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_PrintSelf, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_swigregister
itkIntensityWindowingImageFilterISS3IUC3_swigregister(itkIntensityWindowingImageFilterISS3IUC3)

def itkIntensityWindowingImageFilterISS3IUC3___New_orig__() -> "itkIntensityWindowingImageFilterISS3IUC3_Pointer":
    """itkIntensityWindowingImageFilterISS3IUC3___New_orig__() -> itkIntensityWindowingImageFilterISS3IUC3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3___New_orig__()

def itkIntensityWindowingImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUC3 *":
    """itkIntensityWindowingImageFilterISS3IUC3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUC3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_cast(obj)

class itkIntensityWindowingImageFilterISS3IUS3(itkIntensityWindowingImageFilterISS3IUS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3IUS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3IUS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3IUS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3IUS3 self) -> itkIntensityWindowingImageFilterISS3IUS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS3IUS3 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS3IUS3 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS3IUS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS3IUS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS3IUS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS3IUS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS3IUS3 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS3IUS3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS3IUS3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS3IUS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS3IUS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS3IUS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS3IUS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3IUS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3IUS3

        Create a new object of the class itkIntensityWindowingImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3IUS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_Clone, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_SetWindowLevel, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetWindow, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetLevel, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetScale, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_GetShift, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_PrintSelf, None, itkIntensityWindowingImageFilterISS3IUS3)
itkIntensityWindowingImageFilterISS3IUS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_swigregister
itkIntensityWindowingImageFilterISS3IUS3_swigregister(itkIntensityWindowingImageFilterISS3IUS3)

def itkIntensityWindowingImageFilterISS3IUS3___New_orig__() -> "itkIntensityWindowingImageFilterISS3IUS3_Pointer":
    """itkIntensityWindowingImageFilterISS3IUS3___New_orig__() -> itkIntensityWindowingImageFilterISS3IUS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3___New_orig__()

def itkIntensityWindowingImageFilterISS3IUS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUS3 *":
    """itkIntensityWindowingImageFilterISS3IUS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUS3_cast(obj)

class itkIntensityWindowingImageFilterIUC2ID2(itkIntensityWindowingImageFilterIUC2ID2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2ID2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2ID2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2ID2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2ID2 self) -> itkIntensityWindowingImageFilterIUC2ID2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Clone(self)


    def SetOutputMinimum(self, _arg: 'double const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC2ID2 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'double const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC2ID2 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "double const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "double const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC2ID2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC2ID2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC2ID2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC2ID2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC2ID2 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC2ID2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC2ID2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC2ID2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC2ID2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC2ID2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2ID2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ID2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ID2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2ID2

        Create a new object of the class itkIntensityWindowingImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2ID2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_Clone, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetWindow, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetLevel, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetScale, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_GetShift, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_PrintSelf, None, itkIntensityWindowingImageFilterIUC2ID2)
itkIntensityWindowingImageFilterIUC2ID2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_swigregister
itkIntensityWindowingImageFilterIUC2ID2_swigregister(itkIntensityWindowingImageFilterIUC2ID2)

def itkIntensityWindowingImageFilterIUC2ID2___New_orig__() -> "itkIntensityWindowingImageFilterIUC2ID2_Pointer":
    """itkIntensityWindowingImageFilterIUC2ID2___New_orig__() -> itkIntensityWindowingImageFilterIUC2ID2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2___New_orig__()

def itkIntensityWindowingImageFilterIUC2ID2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ID2 *":
    """itkIntensityWindowingImageFilterIUC2ID2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ID2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ID2_cast(obj)

class itkIntensityWindowingImageFilterIUC2IF2(itkIntensityWindowingImageFilterIUC2IF2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2IF2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2IF2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2IF2 self) -> itkIntensityWindowingImageFilterIUC2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC2IF2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC2IF2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC2IF2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC2IF2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC2IF2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC2IF2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC2IF2 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC2IF2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC2IF2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC2IF2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC2IF2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC2IF2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC2IF2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2IF2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IF2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2IF2

        Create a new object of the class itkIntensityWindowingImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2IF2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Clone, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindow, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetLevel, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetScale, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetShift, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_PrintSelf, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_swigregister
itkIntensityWindowingImageFilterIUC2IF2_swigregister(itkIntensityWindowingImageFilterIUC2IF2)

def itkIntensityWindowingImageFilterIUC2IF2___New_orig__() -> "itkIntensityWindowingImageFilterIUC2IF2_Pointer":
    """itkIntensityWindowingImageFilterIUC2IF2___New_orig__() -> itkIntensityWindowingImageFilterIUC2IF2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2___New_orig__()

def itkIntensityWindowingImageFilterIUC2IF2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IF2 *":
    """itkIntensityWindowingImageFilterIUC2IF2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IF2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_cast(obj)

class itkIntensityWindowingImageFilterIUC2ISS2(itkIntensityWindowingImageFilterIUC2ISS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2ISS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2ISS2 self) -> itkIntensityWindowingImageFilterIUC2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC2ISS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC2ISS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC2ISS2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC2ISS2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC2ISS2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC2ISS2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC2ISS2 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC2ISS2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC2ISS2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC2ISS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC2ISS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC2ISS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC2ISS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2ISS2

        Create a new object of the class itkIntensityWindowingImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2ISS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Clone, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindow, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetLevel, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetScale, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetShift, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_PrintSelf, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_swigregister
itkIntensityWindowingImageFilterIUC2ISS2_swigregister(itkIntensityWindowingImageFilterIUC2ISS2)

def itkIntensityWindowingImageFilterIUC2ISS2___New_orig__() -> "itkIntensityWindowingImageFilterIUC2ISS2_Pointer":
    """itkIntensityWindowingImageFilterIUC2ISS2___New_orig__() -> itkIntensityWindowingImageFilterIUC2ISS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2___New_orig__()

def itkIntensityWindowingImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ISS2 *":
    """itkIntensityWindowingImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ISS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_cast(obj)

class itkIntensityWindowingImageFilterIUC2IUC2(itkIntensityWindowingImageFilterIUC2IUC2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2IUC2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2IUC2 self) -> itkIntensityWindowingImageFilterIUC2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC2IUC2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC2IUC2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC2IUC2 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC2IUC2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC2IUC2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC2IUC2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC2IUC2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2IUC2

        Create a new object of the class itkIntensityWindowingImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2IUC2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Clone, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindow, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetLevel, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetScale, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetShift, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_PrintSelf, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_swigregister
itkIntensityWindowingImageFilterIUC2IUC2_swigregister(itkIntensityWindowingImageFilterIUC2IUC2)

def itkIntensityWindowingImageFilterIUC2IUC2___New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUC2_Pointer":
    """itkIntensityWindowingImageFilterIUC2IUC2___New_orig__() -> itkIntensityWindowingImageFilterIUC2IUC2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2___New_orig__()

def itkIntensityWindowingImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUC2 *":
    """itkIntensityWindowingImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUC2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_cast(obj)

class itkIntensityWindowingImageFilterIUC2IUS2(itkIntensityWindowingImageFilterIUC2IUS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2IUS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2IUS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2IUS2 self) -> itkIntensityWindowingImageFilterIUC2IUS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC2IUS2 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC2IUS2 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC2IUS2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC2IUS2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC2IUS2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC2IUS2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC2IUS2 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC2IUS2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC2IUS2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC2IUS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC2IUS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC2IUS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC2IUS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2IUS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2IUS2

        Create a new object of the class itkIntensityWindowingImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2IUS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_Clone, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetWindow, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetLevel, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetScale, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_GetShift, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_PrintSelf, None, itkIntensityWindowingImageFilterIUC2IUS2)
itkIntensityWindowingImageFilterIUC2IUS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_swigregister
itkIntensityWindowingImageFilterIUC2IUS2_swigregister(itkIntensityWindowingImageFilterIUC2IUS2)

def itkIntensityWindowingImageFilterIUC2IUS2___New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUS2_Pointer":
    """itkIntensityWindowingImageFilterIUC2IUS2___New_orig__() -> itkIntensityWindowingImageFilterIUC2IUS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2___New_orig__()

def itkIntensityWindowingImageFilterIUC2IUS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUS2 *":
    """itkIntensityWindowingImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUS2_cast(obj)

class itkIntensityWindowingImageFilterIUC3ID3(itkIntensityWindowingImageFilterIUC3ID3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3ID3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3ID3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3ID3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3ID3 self) -> itkIntensityWindowingImageFilterIUC3ID3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Clone(self)


    def SetOutputMinimum(self, _arg: 'double const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC3ID3 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'double const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC3ID3 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "double const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "double const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC3ID3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC3ID3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC3ID3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC3ID3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC3ID3 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC3ID3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC3ID3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC3ID3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC3ID3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC3ID3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3ID3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ID3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ID3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3ID3

        Create a new object of the class itkIntensityWindowingImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3ID3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_Clone, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetWindow, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetLevel, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetScale, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_GetShift, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_PrintSelf, None, itkIntensityWindowingImageFilterIUC3ID3)
itkIntensityWindowingImageFilterIUC3ID3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_swigregister
itkIntensityWindowingImageFilterIUC3ID3_swigregister(itkIntensityWindowingImageFilterIUC3ID3)

def itkIntensityWindowingImageFilterIUC3ID3___New_orig__() -> "itkIntensityWindowingImageFilterIUC3ID3_Pointer":
    """itkIntensityWindowingImageFilterIUC3ID3___New_orig__() -> itkIntensityWindowingImageFilterIUC3ID3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3___New_orig__()

def itkIntensityWindowingImageFilterIUC3ID3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ID3 *":
    """itkIntensityWindowingImageFilterIUC3ID3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ID3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ID3_cast(obj)

class itkIntensityWindowingImageFilterIUC3IF3(itkIntensityWindowingImageFilterIUC3IF3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3IF3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3IF3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3IF3 self) -> itkIntensityWindowingImageFilterIUC3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC3IF3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC3IF3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC3IF3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC3IF3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC3IF3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC3IF3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC3IF3 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC3IF3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC3IF3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC3IF3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC3IF3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC3IF3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC3IF3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3IF3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IF3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3IF3

        Create a new object of the class itkIntensityWindowingImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3IF3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Clone, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindow, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetLevel, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetScale, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetShift, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_PrintSelf, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_swigregister
itkIntensityWindowingImageFilterIUC3IF3_swigregister(itkIntensityWindowingImageFilterIUC3IF3)

def itkIntensityWindowingImageFilterIUC3IF3___New_orig__() -> "itkIntensityWindowingImageFilterIUC3IF3_Pointer":
    """itkIntensityWindowingImageFilterIUC3IF3___New_orig__() -> itkIntensityWindowingImageFilterIUC3IF3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3___New_orig__()

def itkIntensityWindowingImageFilterIUC3IF3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IF3 *":
    """itkIntensityWindowingImageFilterIUC3IF3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IF3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_cast(obj)

class itkIntensityWindowingImageFilterIUC3ISS3(itkIntensityWindowingImageFilterIUC3ISS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3ISS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3ISS3 self) -> itkIntensityWindowingImageFilterIUC3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC3ISS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC3ISS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC3ISS3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC3ISS3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC3ISS3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC3ISS3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC3ISS3 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC3ISS3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC3ISS3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC3ISS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC3ISS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC3ISS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC3ISS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3ISS3

        Create a new object of the class itkIntensityWindowingImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3ISS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Clone, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindow, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetLevel, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetScale, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetShift, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_PrintSelf, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_swigregister
itkIntensityWindowingImageFilterIUC3ISS3_swigregister(itkIntensityWindowingImageFilterIUC3ISS3)

def itkIntensityWindowingImageFilterIUC3ISS3___New_orig__() -> "itkIntensityWindowingImageFilterIUC3ISS3_Pointer":
    """itkIntensityWindowingImageFilterIUC3ISS3___New_orig__() -> itkIntensityWindowingImageFilterIUC3ISS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3___New_orig__()

def itkIntensityWindowingImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ISS3 *":
    """itkIntensityWindowingImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ISS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_cast(obj)

class itkIntensityWindowingImageFilterIUC3IUC3(itkIntensityWindowingImageFilterIUC3IUC3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3IUC3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3IUC3 self) -> itkIntensityWindowingImageFilterIUC3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC3IUC3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC3IUC3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC3IUC3 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC3IUC3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC3IUC3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC3IUC3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC3IUC3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3IUC3

        Create a new object of the class itkIntensityWindowingImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3IUC3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Clone, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindow, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetLevel, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetScale, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetShift, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_PrintSelf, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_swigregister
itkIntensityWindowingImageFilterIUC3IUC3_swigregister(itkIntensityWindowingImageFilterIUC3IUC3)

def itkIntensityWindowingImageFilterIUC3IUC3___New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUC3_Pointer":
    """itkIntensityWindowingImageFilterIUC3IUC3___New_orig__() -> itkIntensityWindowingImageFilterIUC3IUC3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3___New_orig__()

def itkIntensityWindowingImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUC3 *":
    """itkIntensityWindowingImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUC3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_cast(obj)

class itkIntensityWindowingImageFilterIUC3IUS3(itkIntensityWindowingImageFilterIUC3IUS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3IUS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3IUS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3IUS3 self) -> itkIntensityWindowingImageFilterIUC3IUS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC3IUS3 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC3IUS3 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC3IUS3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC3IUS3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC3IUS3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC3IUS3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC3IUS3 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC3IUS3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC3IUS3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC3IUS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC3IUS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC3IUS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC3IUS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3IUS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3IUS3

        Create a new object of the class itkIntensityWindowingImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3IUS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_Clone, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetWindow, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetLevel, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetScale, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_GetShift, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_PrintSelf, None, itkIntensityWindowingImageFilterIUC3IUS3)
itkIntensityWindowingImageFilterIUC3IUS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_swigregister
itkIntensityWindowingImageFilterIUC3IUS3_swigregister(itkIntensityWindowingImageFilterIUC3IUS3)

def itkIntensityWindowingImageFilterIUC3IUS3___New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUS3_Pointer":
    """itkIntensityWindowingImageFilterIUC3IUS3___New_orig__() -> itkIntensityWindowingImageFilterIUC3IUS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3___New_orig__()

def itkIntensityWindowingImageFilterIUC3IUS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUS3 *":
    """itkIntensityWindowingImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUS3_cast(obj)

class itkIntensityWindowingImageFilterIUS2ID2(itkIntensityWindowingImageFilterIUS2ID2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS2ID2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS2ID2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS2ID2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS2ID2 self) -> itkIntensityWindowingImageFilterIUS2ID2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Clone(self)


    def SetOutputMinimum(self, _arg: 'double const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUS2ID2 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'double const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUS2ID2 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "double const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUS2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "double const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUS2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUS2ID2 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUS2ID2 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUS2ID2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUS2ID2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned short const &', level: 'unsigned short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUS2ID2 self, unsigned short const & window, unsigned short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned short":
        """GetWindow(itkIntensityWindowingImageFilterIUS2ID2 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetWindow(self)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkIntensityWindowingImageFilterIUS2ID2 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUS2ID2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUS2ID2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUS2ID2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUS2ID2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS2ID2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2ID2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2ID2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS2ID2

        Create a new object of the class itkIntensityWindowingImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS2ID2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_Clone, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetWindow, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetLevel, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetScale, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_GetShift, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_PrintSelf, None, itkIntensityWindowingImageFilterIUS2ID2)
itkIntensityWindowingImageFilterIUS2ID2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_swigregister
itkIntensityWindowingImageFilterIUS2ID2_swigregister(itkIntensityWindowingImageFilterIUS2ID2)

def itkIntensityWindowingImageFilterIUS2ID2___New_orig__() -> "itkIntensityWindowingImageFilterIUS2ID2_Pointer":
    """itkIntensityWindowingImageFilterIUS2ID2___New_orig__() -> itkIntensityWindowingImageFilterIUS2ID2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2___New_orig__()

def itkIntensityWindowingImageFilterIUS2ID2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2ID2 *":
    """itkIntensityWindowingImageFilterIUS2ID2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2ID2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ID2_cast(obj)

class itkIntensityWindowingImageFilterIUS2IF2(itkIntensityWindowingImageFilterIUS2IF2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS2IF2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS2IF2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS2IF2 self) -> itkIntensityWindowingImageFilterIUS2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUS2IF2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUS2IF2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUS2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUS2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUS2IF2 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUS2IF2 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUS2IF2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUS2IF2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned short const &', level: 'unsigned short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUS2IF2 self, unsigned short const & window, unsigned short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned short":
        """GetWindow(itkIntensityWindowingImageFilterIUS2IF2 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetWindow(self)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkIntensityWindowingImageFilterIUS2IF2 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUS2IF2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUS2IF2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUS2IF2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUS2IF2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS2IF2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IF2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS2IF2

        Create a new object of the class itkIntensityWindowingImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS2IF2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_Clone, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetWindow, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetLevel, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetScale, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_GetShift, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_PrintSelf, None, itkIntensityWindowingImageFilterIUS2IF2)
itkIntensityWindowingImageFilterIUS2IF2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_swigregister
itkIntensityWindowingImageFilterIUS2IF2_swigregister(itkIntensityWindowingImageFilterIUS2IF2)

def itkIntensityWindowingImageFilterIUS2IF2___New_orig__() -> "itkIntensityWindowingImageFilterIUS2IF2_Pointer":
    """itkIntensityWindowingImageFilterIUS2IF2___New_orig__() -> itkIntensityWindowingImageFilterIUS2IF2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2___New_orig__()

def itkIntensityWindowingImageFilterIUS2IF2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IF2 *":
    """itkIntensityWindowingImageFilterIUS2IF2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IF2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IF2_cast(obj)

class itkIntensityWindowingImageFilterIUS2ISS2(itkIntensityWindowingImageFilterIUS2ISS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS2ISS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS2ISS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS2ISS2 self) -> itkIntensityWindowingImageFilterIUS2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUS2ISS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUS2ISS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUS2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUS2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUS2ISS2 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUS2ISS2 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUS2ISS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUS2ISS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned short const &', level: 'unsigned short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUS2ISS2 self, unsigned short const & window, unsigned short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned short":
        """GetWindow(itkIntensityWindowingImageFilterIUS2ISS2 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetWindow(self)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkIntensityWindowingImageFilterIUS2ISS2 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUS2ISS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUS2ISS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUS2ISS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUS2ISS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2ISS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS2ISS2

        Create a new object of the class itkIntensityWindowingImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS2ISS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_Clone, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetWindow, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetLevel, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetScale, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_GetShift, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_PrintSelf, None, itkIntensityWindowingImageFilterIUS2ISS2)
itkIntensityWindowingImageFilterIUS2ISS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_swigregister
itkIntensityWindowingImageFilterIUS2ISS2_swigregister(itkIntensityWindowingImageFilterIUS2ISS2)

def itkIntensityWindowingImageFilterIUS2ISS2___New_orig__() -> "itkIntensityWindowingImageFilterIUS2ISS2_Pointer":
    """itkIntensityWindowingImageFilterIUS2ISS2___New_orig__() -> itkIntensityWindowingImageFilterIUS2ISS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2___New_orig__()

def itkIntensityWindowingImageFilterIUS2ISS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2ISS2 *":
    """itkIntensityWindowingImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2ISS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2ISS2_cast(obj)

class itkIntensityWindowingImageFilterIUS2IUC2(itkIntensityWindowingImageFilterIUS2IUC2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS2IUC2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS2IUC2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS2IUC2 self) -> itkIntensityWindowingImageFilterIUS2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUS2IUC2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUS2IUC2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUS2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUS2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUS2IUC2 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUS2IUC2 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUS2IUC2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUS2IUC2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned short const &', level: 'unsigned short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUS2IUC2 self, unsigned short const & window, unsigned short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned short":
        """GetWindow(itkIntensityWindowingImageFilterIUS2IUC2 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetWindow(self)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkIntensityWindowingImageFilterIUS2IUC2 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUS2IUC2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUS2IUC2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUS2IUC2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUS2IUC2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IUC2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS2IUC2

        Create a new object of the class itkIntensityWindowingImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS2IUC2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_Clone, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetWindow, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetLevel, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetScale, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_GetShift, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_PrintSelf, None, itkIntensityWindowingImageFilterIUS2IUC2)
itkIntensityWindowingImageFilterIUS2IUC2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_swigregister
itkIntensityWindowingImageFilterIUS2IUC2_swigregister(itkIntensityWindowingImageFilterIUS2IUC2)

def itkIntensityWindowingImageFilterIUS2IUC2___New_orig__() -> "itkIntensityWindowingImageFilterIUS2IUC2_Pointer":
    """itkIntensityWindowingImageFilterIUS2IUC2___New_orig__() -> itkIntensityWindowingImageFilterIUS2IUC2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2___New_orig__()

def itkIntensityWindowingImageFilterIUS2IUC2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IUC2 *":
    """itkIntensityWindowingImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IUC2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUC2_cast(obj)

class itkIntensityWindowingImageFilterIUS2IUS2(itkIntensityWindowingImageFilterIUS2IUS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS2IUS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS2IUS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS2IUS2 self) -> itkIntensityWindowingImageFilterIUS2IUS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUS2IUS2 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUS2IUS2 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUS2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUS2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUS2IUS2 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUS2IUS2 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUS2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUS2IUS2 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned short const &', level: 'unsigned short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUS2IUS2 self, unsigned short const & window, unsigned short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned short":
        """GetWindow(itkIntensityWindowingImageFilterIUS2IUS2 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetWindow(self)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkIntensityWindowingImageFilterIUS2IUS2 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUS2IUS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUS2IUS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUS2IUS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUS2IUS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IUS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS2IUS2

        Create a new object of the class itkIntensityWindowingImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS2IUS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_Clone, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetWindow, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetLevel, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetScale, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_GetShift, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_PrintSelf, None, itkIntensityWindowingImageFilterIUS2IUS2)
itkIntensityWindowingImageFilterIUS2IUS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_swigregister
itkIntensityWindowingImageFilterIUS2IUS2_swigregister(itkIntensityWindowingImageFilterIUS2IUS2)

def itkIntensityWindowingImageFilterIUS2IUS2___New_orig__() -> "itkIntensityWindowingImageFilterIUS2IUS2_Pointer":
    """itkIntensityWindowingImageFilterIUS2IUS2___New_orig__() -> itkIntensityWindowingImageFilterIUS2IUS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2___New_orig__()

def itkIntensityWindowingImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS2IUS2 *":
    """itkIntensityWindowingImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS2IUS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS2IUS2_cast(obj)

class itkIntensityWindowingImageFilterIUS3ID3(itkIntensityWindowingImageFilterIUS3ID3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS3ID3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS3ID3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS3ID3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS3ID3 self) -> itkIntensityWindowingImageFilterIUS3ID3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Clone(self)


    def SetOutputMinimum(self, _arg: 'double const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUS3ID3 self, double const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'double const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUS3ID3 self, double const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "double const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUS3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "double const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUS3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUS3ID3 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUS3ID3 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUS3ID3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUS3ID3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned short const &', level: 'unsigned short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUS3ID3 self, unsigned short const & window, unsigned short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned short":
        """GetWindow(itkIntensityWindowingImageFilterIUS3ID3 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetWindow(self)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkIntensityWindowingImageFilterIUS3ID3 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUS3ID3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUS3ID3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUS3ID3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUS3ID3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS3ID3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3ID3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3ID3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS3ID3

        Create a new object of the class itkIntensityWindowingImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS3ID3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_Clone, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetWindow, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetLevel, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetScale, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_GetShift, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_PrintSelf, None, itkIntensityWindowingImageFilterIUS3ID3)
itkIntensityWindowingImageFilterIUS3ID3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_swigregister
itkIntensityWindowingImageFilterIUS3ID3_swigregister(itkIntensityWindowingImageFilterIUS3ID3)

def itkIntensityWindowingImageFilterIUS3ID3___New_orig__() -> "itkIntensityWindowingImageFilterIUS3ID3_Pointer":
    """itkIntensityWindowingImageFilterIUS3ID3___New_orig__() -> itkIntensityWindowingImageFilterIUS3ID3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3___New_orig__()

def itkIntensityWindowingImageFilterIUS3ID3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3ID3 *":
    """itkIntensityWindowingImageFilterIUS3ID3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3ID3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ID3_cast(obj)

class itkIntensityWindowingImageFilterIUS3IF3(itkIntensityWindowingImageFilterIUS3IF3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS3IF3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS3IF3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS3IF3 self) -> itkIntensityWindowingImageFilterIUS3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUS3IF3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUS3IF3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUS3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUS3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUS3IF3 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUS3IF3 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUS3IF3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUS3IF3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned short const &', level: 'unsigned short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUS3IF3 self, unsigned short const & window, unsigned short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned short":
        """GetWindow(itkIntensityWindowingImageFilterIUS3IF3 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetWindow(self)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkIntensityWindowingImageFilterIUS3IF3 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUS3IF3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUS3IF3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUS3IF3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUS3IF3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS3IF3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IF3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS3IF3

        Create a new object of the class itkIntensityWindowingImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS3IF3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_Clone, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetWindow, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetLevel, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetScale, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_GetShift, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_PrintSelf, None, itkIntensityWindowingImageFilterIUS3IF3)
itkIntensityWindowingImageFilterIUS3IF3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_swigregister
itkIntensityWindowingImageFilterIUS3IF3_swigregister(itkIntensityWindowingImageFilterIUS3IF3)

def itkIntensityWindowingImageFilterIUS3IF3___New_orig__() -> "itkIntensityWindowingImageFilterIUS3IF3_Pointer":
    """itkIntensityWindowingImageFilterIUS3IF3___New_orig__() -> itkIntensityWindowingImageFilterIUS3IF3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3___New_orig__()

def itkIntensityWindowingImageFilterIUS3IF3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IF3 *":
    """itkIntensityWindowingImageFilterIUS3IF3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IF3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IF3_cast(obj)

class itkIntensityWindowingImageFilterIUS3ISS3(itkIntensityWindowingImageFilterIUS3ISS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS3ISS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS3ISS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS3ISS3 self) -> itkIntensityWindowingImageFilterIUS3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUS3ISS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUS3ISS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUS3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUS3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUS3ISS3 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUS3ISS3 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUS3ISS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUS3ISS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned short const &', level: 'unsigned short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUS3ISS3 self, unsigned short const & window, unsigned short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned short":
        """GetWindow(itkIntensityWindowingImageFilterIUS3ISS3 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetWindow(self)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkIntensityWindowingImageFilterIUS3ISS3 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUS3ISS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUS3ISS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUS3ISS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUS3ISS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3ISS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS3ISS3

        Create a new object of the class itkIntensityWindowingImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS3ISS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_Clone, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetWindow, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetLevel, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetScale, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_GetShift, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_PrintSelf, None, itkIntensityWindowingImageFilterIUS3ISS3)
itkIntensityWindowingImageFilterIUS3ISS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_swigregister
itkIntensityWindowingImageFilterIUS3ISS3_swigregister(itkIntensityWindowingImageFilterIUS3ISS3)

def itkIntensityWindowingImageFilterIUS3ISS3___New_orig__() -> "itkIntensityWindowingImageFilterIUS3ISS3_Pointer":
    """itkIntensityWindowingImageFilterIUS3ISS3___New_orig__() -> itkIntensityWindowingImageFilterIUS3ISS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3___New_orig__()

def itkIntensityWindowingImageFilterIUS3ISS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3ISS3 *":
    """itkIntensityWindowingImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3ISS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3ISS3_cast(obj)

class itkIntensityWindowingImageFilterIUS3IUC3(itkIntensityWindowingImageFilterIUS3IUC3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS3IUC3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS3IUC3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS3IUC3 self) -> itkIntensityWindowingImageFilterIUS3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUS3IUC3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUS3IUC3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUS3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUS3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUS3IUC3 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUS3IUC3 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUS3IUC3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUS3IUC3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned short const &', level: 'unsigned short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUS3IUC3 self, unsigned short const & window, unsigned short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned short":
        """GetWindow(itkIntensityWindowingImageFilterIUS3IUC3 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetWindow(self)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkIntensityWindowingImageFilterIUS3IUC3 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUS3IUC3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUS3IUC3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUS3IUC3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUS3IUC3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IUC3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS3IUC3

        Create a new object of the class itkIntensityWindowingImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS3IUC3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_Clone, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetWindow, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetLevel, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetScale, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_GetShift, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_PrintSelf, None, itkIntensityWindowingImageFilterIUS3IUC3)
itkIntensityWindowingImageFilterIUS3IUC3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_swigregister
itkIntensityWindowingImageFilterIUS3IUC3_swigregister(itkIntensityWindowingImageFilterIUS3IUC3)

def itkIntensityWindowingImageFilterIUS3IUC3___New_orig__() -> "itkIntensityWindowingImageFilterIUS3IUC3_Pointer":
    """itkIntensityWindowingImageFilterIUS3IUC3___New_orig__() -> itkIntensityWindowingImageFilterIUS3IUC3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3___New_orig__()

def itkIntensityWindowingImageFilterIUS3IUC3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IUC3 *":
    """itkIntensityWindowingImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IUC3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUC3_cast(obj)

class itkIntensityWindowingImageFilterIUS3IUS3(itkIntensityWindowingImageFilterIUS3IUS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUS3IUS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUS3IUS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUS3IUS3 self) -> itkIntensityWindowingImageFilterIUS3IUS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUS3IUS3 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUS3IUS3 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUS3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUS3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUS3IUS3 self, unsigned short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUS3IUS3 self, unsigned short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUS3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUS3IUS3 self) -> unsigned short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned short const &', level: 'unsigned short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUS3IUS3 self, unsigned short const & window, unsigned short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned short":
        """GetWindow(itkIntensityWindowingImageFilterIUS3IUS3 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetWindow(self)


    def GetLevel(self) -> "unsigned short":
        """GetLevel(itkIntensityWindowingImageFilterIUS3IUS3 self) -> unsigned short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUS3IUS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUS3IUS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUS3IUS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUS3IUS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IUS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUS3IUS3

        Create a new object of the class itkIntensityWindowingImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUS3IUS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_Clone, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetWindow, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetLevel, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetScale, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_GetShift, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_PrintSelf, None, itkIntensityWindowingImageFilterIUS3IUS3)
itkIntensityWindowingImageFilterIUS3IUS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_swigregister
itkIntensityWindowingImageFilterIUS3IUS3_swigregister(itkIntensityWindowingImageFilterIUS3IUS3)

def itkIntensityWindowingImageFilterIUS3IUS3___New_orig__() -> "itkIntensityWindowingImageFilterIUS3IUS3_Pointer":
    """itkIntensityWindowingImageFilterIUS3IUS3___New_orig__() -> itkIntensityWindowingImageFilterIUS3IUS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3___New_orig__()

def itkIntensityWindowingImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUS3IUS3 *":
    """itkIntensityWindowingImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUS3IUS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def intensity_windowing_image_filter(*args, **kwargs):
    """Procedural interface for IntensityWindowingImageFilter"""
    import itk
    instance = itk.IntensityWindowingImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def intensity_windowing_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.IntensityWindowingImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.IntensityWindowingImageFilter.values()[0]
    else:
        filter_object = itk.IntensityWindowingImageFilter

    intensity_windowing_image_filter.__doc__ = filter_object.__doc__
    intensity_windowing_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    intensity_windowing_image_filter.__doc__ += "Available Keyword Arguments:\n"
    intensity_windowing_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unary_functor_image_filter(*args, **kwargs):
    """Procedural interface for UnaryFunctorImageFilter"""
    import itk
    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnaryFunctorImageFilter.values()[0]
    else:
        filter_object = itk.UnaryFunctorImageFilter

    unary_functor_image_filter.__doc__ = filter_object.__doc__
    unary_functor_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unary_functor_image_filter.__doc__ += "Available Keyword Arguments:\n"
    unary_functor_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



