# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageShapeModelEstimatorBasePython
else:
    import _itkImageShapeModelEstimatorBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageShapeModelEstimatorBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageShapeModelEstimatorBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itkImageToImageFilterAPython
import ITKCommonBasePython
import pyBasePython
import itkVectorImagePython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkVariableLengthVectorPython
import stdcomplexPython
import itkImagePython
import itkMatrixPython
import vnl_matrixPython
import vnl_vectorPython
import vnl_matrix_fixedPython
import itkPointPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageRegionPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython

def itkImageShapeModelEstimatorBaseID3ID3_New():
  return itkImageShapeModelEstimatorBaseID3ID3.New()


def itkImageShapeModelEstimatorBaseID3IF3_New():
  return itkImageShapeModelEstimatorBaseID3IF3.New()


def itkImageShapeModelEstimatorBaseIF3ID3_New():
  return itkImageShapeModelEstimatorBaseIF3ID3.New()


def itkImageShapeModelEstimatorBaseIF3IF3_New():
  return itkImageShapeModelEstimatorBaseIF3IF3.New()


def itkImageShapeModelEstimatorBaseIUS3ID3_New():
  return itkImageShapeModelEstimatorBaseIUS3ID3.New()


def itkImageShapeModelEstimatorBaseIUS3IF3_New():
  return itkImageShapeModelEstimatorBaseIUS3IF3.New()


def itkImageShapeModelEstimatorBaseIUC3ID3_New():
  return itkImageShapeModelEstimatorBaseIUC3ID3.New()


def itkImageShapeModelEstimatorBaseIUC3IF3_New():
  return itkImageShapeModelEstimatorBaseIUC3IF3.New()


def itkImageShapeModelEstimatorBaseISS3ID3_New():
  return itkImageShapeModelEstimatorBaseISS3ID3.New()


def itkImageShapeModelEstimatorBaseISS3IF3_New():
  return itkImageShapeModelEstimatorBaseISS3IF3.New()


def itkImageShapeModelEstimatorBaseID2ID2_New():
  return itkImageShapeModelEstimatorBaseID2ID2.New()


def itkImageShapeModelEstimatorBaseID2IF2_New():
  return itkImageShapeModelEstimatorBaseID2IF2.New()


def itkImageShapeModelEstimatorBaseIF2ID2_New():
  return itkImageShapeModelEstimatorBaseIF2ID2.New()


def itkImageShapeModelEstimatorBaseIF2IF2_New():
  return itkImageShapeModelEstimatorBaseIF2IF2.New()


def itkImageShapeModelEstimatorBaseIUS2ID2_New():
  return itkImageShapeModelEstimatorBaseIUS2ID2.New()


def itkImageShapeModelEstimatorBaseIUS2IF2_New():
  return itkImageShapeModelEstimatorBaseIUS2IF2.New()


def itkImageShapeModelEstimatorBaseIUC2ID2_New():
  return itkImageShapeModelEstimatorBaseIUC2ID2.New()


def itkImageShapeModelEstimatorBaseIUC2IF2_New():
  return itkImageShapeModelEstimatorBaseIUC2IF2.New()


def itkImageShapeModelEstimatorBaseISS2ID2_New():
  return itkImageShapeModelEstimatorBaseISS2ID2.New()


def itkImageShapeModelEstimatorBaseISS2IF2_New():
  return itkImageShapeModelEstimatorBaseISS2IF2.New()

class itkImageShapeModelEstimatorBaseID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseID2ID2
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseID2ID2

        Create a new object of the class itkImageShapeModelEstimatorBaseID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseID2ID2 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID2ID2_swigregister(itkImageShapeModelEstimatorBaseID2ID2)
itkImageShapeModelEstimatorBaseID2ID2_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID2ID2_cast

class itkImageShapeModelEstimatorBaseID2IF2(itkImageToImageFilterAPython.itkImageToImageFilterID2IF2):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseID2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseID2IF2
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseID2IF2

        Create a new object of the class itkImageShapeModelEstimatorBaseID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseID2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseID2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseID2IF2 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID2IF2_swigregister(itkImageShapeModelEstimatorBaseID2IF2)
itkImageShapeModelEstimatorBaseID2IF2_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID2IF2_cast

class itkImageShapeModelEstimatorBaseID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseID3ID3
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseID3ID3

        Create a new object of the class itkImageShapeModelEstimatorBaseID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseID3ID3 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID3ID3_swigregister(itkImageShapeModelEstimatorBaseID3ID3)
itkImageShapeModelEstimatorBaseID3ID3_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID3ID3_cast

class itkImageShapeModelEstimatorBaseID3IF3(itkImageToImageFilterAPython.itkImageToImageFilterID3IF3):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseID3IF3
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseID3IF3

        Create a new object of the class itkImageShapeModelEstimatorBaseID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseID3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseID3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseID3IF3 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID3IF3_swigregister(itkImageShapeModelEstimatorBaseID3IF3)
itkImageShapeModelEstimatorBaseID3IF3_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseID3IF3_cast

class itkImageShapeModelEstimatorBaseIF2ID2(itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIF2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIF2ID2
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIF2ID2

        Create a new object of the class itkImageShapeModelEstimatorBaseIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIF2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIF2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIF2ID2 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF2ID2_swigregister(itkImageShapeModelEstimatorBaseIF2ID2)
itkImageShapeModelEstimatorBaseIF2ID2_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF2ID2_cast

class itkImageShapeModelEstimatorBaseIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIF2IF2
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIF2IF2

        Create a new object of the class itkImageShapeModelEstimatorBaseIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIF2IF2 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF2IF2_swigregister(itkImageShapeModelEstimatorBaseIF2IF2)
itkImageShapeModelEstimatorBaseIF2IF2_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF2IF2_cast

class itkImageShapeModelEstimatorBaseIF3ID3(itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIF3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIF3ID3
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIF3ID3

        Create a new object of the class itkImageShapeModelEstimatorBaseIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIF3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIF3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIF3ID3 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF3ID3_swigregister(itkImageShapeModelEstimatorBaseIF3ID3)
itkImageShapeModelEstimatorBaseIF3ID3_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF3ID3_cast

class itkImageShapeModelEstimatorBaseIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIF3IF3
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIF3IF3

        Create a new object of the class itkImageShapeModelEstimatorBaseIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIF3IF3 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF3IF3_swigregister(itkImageShapeModelEstimatorBaseIF3IF3)
itkImageShapeModelEstimatorBaseIF3IF3_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIF3IF3_cast

class itkImageShapeModelEstimatorBaseISS2ID2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseISS2ID2
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseISS2ID2

        Create a new object of the class itkImageShapeModelEstimatorBaseISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseISS2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseISS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseISS2ID2 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS2ID2_swigregister(itkImageShapeModelEstimatorBaseISS2ID2)
itkImageShapeModelEstimatorBaseISS2ID2_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS2ID2_cast

class itkImageShapeModelEstimatorBaseISS2IF2(itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseISS2IF2
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseISS2IF2

        Create a new object of the class itkImageShapeModelEstimatorBaseISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseISS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseISS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseISS2IF2 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS2IF2_swigregister(itkImageShapeModelEstimatorBaseISS2IF2)
itkImageShapeModelEstimatorBaseISS2IF2_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS2IF2_cast

class itkImageShapeModelEstimatorBaseISS3ID3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseISS3ID3
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseISS3ID3

        Create a new object of the class itkImageShapeModelEstimatorBaseISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseISS3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseISS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseISS3ID3 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS3ID3_swigregister(itkImageShapeModelEstimatorBaseISS3ID3)
itkImageShapeModelEstimatorBaseISS3ID3_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS3ID3_cast

class itkImageShapeModelEstimatorBaseISS3IF3(itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseISS3IF3
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseISS3IF3

        Create a new object of the class itkImageShapeModelEstimatorBaseISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseISS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseISS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseISS3IF3 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS3IF3_swigregister(itkImageShapeModelEstimatorBaseISS3IF3)
itkImageShapeModelEstimatorBaseISS3IF3_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseISS3IF3_cast

class itkImageShapeModelEstimatorBaseIUC2ID2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIUC2ID2
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIUC2ID2

        Create a new object of the class itkImageShapeModelEstimatorBaseIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIUC2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIUC2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIUC2ID2 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC2ID2_swigregister(itkImageShapeModelEstimatorBaseIUC2ID2)
itkImageShapeModelEstimatorBaseIUC2ID2_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC2ID2_cast

class itkImageShapeModelEstimatorBaseIUC2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIUC2IF2
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIUC2IF2

        Create a new object of the class itkImageShapeModelEstimatorBaseIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIUC2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIUC2IF2 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC2IF2_swigregister(itkImageShapeModelEstimatorBaseIUC2IF2)
itkImageShapeModelEstimatorBaseIUC2IF2_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC2IF2_cast

class itkImageShapeModelEstimatorBaseIUC3ID3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIUC3ID3
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIUC3ID3

        Create a new object of the class itkImageShapeModelEstimatorBaseIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIUC3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIUC3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIUC3ID3 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC3ID3_swigregister(itkImageShapeModelEstimatorBaseIUC3ID3)
itkImageShapeModelEstimatorBaseIUC3ID3_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC3ID3_cast

class itkImageShapeModelEstimatorBaseIUC3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIUC3IF3
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIUC3IF3

        Create a new object of the class itkImageShapeModelEstimatorBaseIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIUC3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIUC3IF3 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC3IF3_swigregister(itkImageShapeModelEstimatorBaseIUC3IF3)
itkImageShapeModelEstimatorBaseIUC3IF3_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUC3IF3_cast

class itkImageShapeModelEstimatorBaseIUS2ID2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIUS2ID2
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIUS2ID2

        Create a new object of the class itkImageShapeModelEstimatorBaseIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIUS2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIUS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIUS2ID2 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS2ID2_swigregister(itkImageShapeModelEstimatorBaseIUS2ID2)
itkImageShapeModelEstimatorBaseIUS2ID2_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS2ID2_cast

class itkImageShapeModelEstimatorBaseIUS2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIUS2IF2
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIUS2IF2

        Create a new object of the class itkImageShapeModelEstimatorBaseIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIUS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIUS2IF2 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS2IF2_swigregister(itkImageShapeModelEstimatorBaseIUS2IF2)
itkImageShapeModelEstimatorBaseIUS2IF2_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS2IF2_cast

class itkImageShapeModelEstimatorBaseIUS3ID3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIUS3ID3
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIUS3ID3

        Create a new object of the class itkImageShapeModelEstimatorBaseIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIUS3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIUS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIUS3ID3 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS3ID3_swigregister(itkImageShapeModelEstimatorBaseIUS3ID3)
itkImageShapeModelEstimatorBaseIUS3ID3_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS3ID3_cast

class itkImageShapeModelEstimatorBaseIUS3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    r"""Proxy of C++ itkImageShapeModelEstimatorBaseIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkImageShapeModelEstimatorBasePython.delete_itkImageShapeModelEstimatorBaseIUS3IF3
    cast = _swig_new_static_method(_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageShapeModelEstimatorBaseIUS3IF3

        Create a new object of the class itkImageShapeModelEstimatorBaseIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageShapeModelEstimatorBaseIUS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageShapeModelEstimatorBaseIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageShapeModelEstimatorBaseIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageShapeModelEstimatorBaseIUS3IF3 in _itkImageShapeModelEstimatorBasePython:
_itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS3IF3_swigregister(itkImageShapeModelEstimatorBaseIUS3IF3)
itkImageShapeModelEstimatorBaseIUS3IF3_cast = _itkImageShapeModelEstimatorBasePython.itkImageShapeModelEstimatorBaseIUS3IF3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_shape_model_estimator_base(*args, **kwargs):
    """Procedural interface for ImageShapeModelEstimatorBase"""
    import itk
    instance = itk.ImageShapeModelEstimatorBase.New(*args, **kwargs)
    return instance.__internal_call__()

def image_shape_model_estimator_base_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageShapeModelEstimatorBase, itkTemplate.itkTemplate):
        filter_object = itk.ImageShapeModelEstimatorBase.values()[0]
    else:
        filter_object = itk.ImageShapeModelEstimatorBase

    image_shape_model_estimator_base.__doc__ = filter_object.__doc__
    image_shape_model_estimator_base.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_shape_model_estimator_base.__doc__ += "Available Keyword Arguments:\n"
    image_shape_model_estimator_base.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



