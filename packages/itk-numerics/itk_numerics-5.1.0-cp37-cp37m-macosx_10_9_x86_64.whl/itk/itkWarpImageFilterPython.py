# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkWarpImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkWarpImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkWarpImageFilterPython
            return _itkWarpImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkWarpImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkWarpImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkWarpImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import pyBasePython
import itkMatrixPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRegionPython
import ITKCommonBasePython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkImageToImageFilterAPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkInterpolateImageFunctionPython
import itkContinuousIndexPython
import itkImageFunctionBasePython
import itkFunctionBasePython
import itkArrayPython

def itkWarpImageFilterID3ID3IVF43_New():
  return itkWarpImageFilterID3ID3IVF43.New()


def itkWarpImageFilterID2ID2IVF42_New():
  return itkWarpImageFilterID2ID2IVF42.New()


def itkWarpImageFilterID3ID3IVF33_New():
  return itkWarpImageFilterID3ID3IVF33.New()


def itkWarpImageFilterID2ID2IVF32_New():
  return itkWarpImageFilterID2ID2IVF32.New()


def itkWarpImageFilterID3ID3IVF23_New():
  return itkWarpImageFilterID3ID3IVF23.New()


def itkWarpImageFilterID2ID2IVF22_New():
  return itkWarpImageFilterID2ID2IVF22.New()


def itkWarpImageFilterIF3IF3IVF43_New():
  return itkWarpImageFilterIF3IF3IVF43.New()


def itkWarpImageFilterIF2IF2IVF42_New():
  return itkWarpImageFilterIF2IF2IVF42.New()


def itkWarpImageFilterIF3IF3IVF33_New():
  return itkWarpImageFilterIF3IF3IVF33.New()


def itkWarpImageFilterIF2IF2IVF32_New():
  return itkWarpImageFilterIF2IF2IVF32.New()


def itkWarpImageFilterIF3IF3IVF23_New():
  return itkWarpImageFilterIF3IF3IVF23.New()


def itkWarpImageFilterIF2IF2IVF22_New():
  return itkWarpImageFilterIF2IF2IVF22.New()


def itkWarpImageFilterIUS3IUS3IVF43_New():
  return itkWarpImageFilterIUS3IUS3IVF43.New()


def itkWarpImageFilterIUS2IUS2IVF42_New():
  return itkWarpImageFilterIUS2IUS2IVF42.New()


def itkWarpImageFilterIUS3IUS3IVF33_New():
  return itkWarpImageFilterIUS3IUS3IVF33.New()


def itkWarpImageFilterIUS2IUS2IVF32_New():
  return itkWarpImageFilterIUS2IUS2IVF32.New()


def itkWarpImageFilterIUS3IUS3IVF23_New():
  return itkWarpImageFilterIUS3IUS3IVF23.New()


def itkWarpImageFilterIUS2IUS2IVF22_New():
  return itkWarpImageFilterIUS2IUS2IVF22.New()


def itkWarpImageFilterIUC3IUC3IVF43_New():
  return itkWarpImageFilterIUC3IUC3IVF43.New()


def itkWarpImageFilterIUC2IUC2IVF42_New():
  return itkWarpImageFilterIUC2IUC2IVF42.New()


def itkWarpImageFilterIUC3IUC3IVF33_New():
  return itkWarpImageFilterIUC3IUC3IVF33.New()


def itkWarpImageFilterIUC2IUC2IVF32_New():
  return itkWarpImageFilterIUC2IUC2IVF32.New()


def itkWarpImageFilterIUC3IUC3IVF23_New():
  return itkWarpImageFilterIUC3IUC3IVF23.New()


def itkWarpImageFilterIUC2IUC2IVF22_New():
  return itkWarpImageFilterIUC2IUC2IVF22.New()


def itkWarpImageFilterISS3ISS3IVF43_New():
  return itkWarpImageFilterISS3ISS3IVF43.New()


def itkWarpImageFilterISS2ISS2IVF42_New():
  return itkWarpImageFilterISS2ISS2IVF42.New()


def itkWarpImageFilterISS3ISS3IVF33_New():
  return itkWarpImageFilterISS3ISS3IVF33.New()


def itkWarpImageFilterISS2ISS2IVF32_New():
  return itkWarpImageFilterISS2ISS2IVF32.New()


def itkWarpImageFilterISS3ISS3IVF23_New():
  return itkWarpImageFilterISS3ISS3IVF23.New()


def itkWarpImageFilterISS2ISS2IVF22_New():
  return itkWarpImageFilterISS2ISS2IVF22.New()

class itkWarpImageFilterID2ID2IVF22(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterID2ID2IVF22_Pointer":
        """__New_orig__() -> itkWarpImageFilterID2ID2IVF22_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterID2ID2IVF22_Pointer":
        """Clone(itkWarpImageFilterID2ID2IVF22 self) -> itkWarpImageFilterID2ID2IVF22_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF22') -> "void":
        """SetDisplacementField(itkWarpImageFilterID2ID2IVF22 self, itkImageVF22 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF22 const *":
        """GetDisplacementField(itkWarpImageFilterID2ID2IVF22 self) -> itkImageVF22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionID2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterID2ID2IVF22 self, itkInterpolateImageFunctionID2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionID2D *":
        """GetModifiableInterpolator(itkWarpImageFilterID2ID2IVF22 self) -> itkInterpolateImageFunctionID2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionID2D *":
        """
        GetInterpolator(itkWarpImageFilterID2ID2IVF22 self) -> itkInterpolateImageFunctionID2D
        GetInterpolator(itkWarpImageFilterID2ID2IVF22 self) -> itkInterpolateImageFunctionID2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterID2ID2IVF22 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterID2ID2IVF22 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterID2ID2IVF22 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterID2ID2IVF22 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterID2ID2IVF22 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterID2ID2IVF22 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterID2ID2IVF22 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterID2ID2IVF22 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterID2ID2IVF22 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterID2ID2IVF22 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterID2ID2IVF22 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterID2ID2IVF22 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterID2ID2IVF22 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'double const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterID2ID2IVF22 self, double const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "double":
        """
        GetEdgePaddingValue(itkWarpImageFilterID2ID2IVF22 self) -> double

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterID2ID2IVF22 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterID2ID2IVF22 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterID2ID2IVF22 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterID2ID2IVF22 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterID2ID2IVF22

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterID2ID2IVF22 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterID2ID2IVF22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID2ID2IVF22

        Create a new object of the class itkWarpImageFilterID2ID2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID2ID2IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID2ID2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterID2ID2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterID2ID2IVF22.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_Clone, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetDisplacementField, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetDisplacementField, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetInterpolator, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetModifiableInterpolator, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetInterpolator, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputSpacing, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetOutputSpacing, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputOrigin, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetOutputOrigin, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputDirection, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetOutputDirection, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputParametersFromImage, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputStartIndex, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetOutputStartIndex, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetOutputSize, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetOutputSize, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_SetEdgePaddingValue, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GetEdgePaddingValue, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GenerateOutputInformation, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_GenerateInputRequestedRegion, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_BeforeThreadedGenerateData, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_AfterThreadedGenerateData, None, itkWarpImageFilterID2ID2IVF22)
itkWarpImageFilterID2ID2IVF22_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_swigregister
itkWarpImageFilterID2ID2IVF22_swigregister(itkWarpImageFilterID2ID2IVF22)

def itkWarpImageFilterID2ID2IVF22___New_orig__() -> "itkWarpImageFilterID2ID2IVF22_Pointer":
    """itkWarpImageFilterID2ID2IVF22___New_orig__() -> itkWarpImageFilterID2ID2IVF22_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22___New_orig__()

def itkWarpImageFilterID2ID2IVF22_cast(obj: 'itkLightObject') -> "itkWarpImageFilterID2ID2IVF22 *":
    """itkWarpImageFilterID2ID2IVF22_cast(itkLightObject obj) -> itkWarpImageFilterID2ID2IVF22"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF22_cast(obj)

class itkWarpImageFilterID2ID2IVF32(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterID2ID2IVF32_Pointer":
        """__New_orig__() -> itkWarpImageFilterID2ID2IVF32_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterID2ID2IVF32_Pointer":
        """Clone(itkWarpImageFilterID2ID2IVF32 self) -> itkWarpImageFilterID2ID2IVF32_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF32') -> "void":
        """SetDisplacementField(itkWarpImageFilterID2ID2IVF32 self, itkImageVF32 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF32 const *":
        """GetDisplacementField(itkWarpImageFilterID2ID2IVF32 self) -> itkImageVF32"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionID2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterID2ID2IVF32 self, itkInterpolateImageFunctionID2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionID2D *":
        """GetModifiableInterpolator(itkWarpImageFilterID2ID2IVF32 self) -> itkInterpolateImageFunctionID2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionID2D *":
        """
        GetInterpolator(itkWarpImageFilterID2ID2IVF32 self) -> itkInterpolateImageFunctionID2D
        GetInterpolator(itkWarpImageFilterID2ID2IVF32 self) -> itkInterpolateImageFunctionID2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterID2ID2IVF32 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterID2ID2IVF32 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterID2ID2IVF32 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterID2ID2IVF32 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterID2ID2IVF32 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterID2ID2IVF32 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterID2ID2IVF32 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterID2ID2IVF32 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterID2ID2IVF32 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterID2ID2IVF32 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterID2ID2IVF32 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterID2ID2IVF32 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterID2ID2IVF32 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'double const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterID2ID2IVF32 self, double const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "double":
        """
        GetEdgePaddingValue(itkWarpImageFilterID2ID2IVF32 self) -> double

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterID2ID2IVF32 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterID2ID2IVF32 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterID2ID2IVF32 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterID2ID2IVF32 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterID2ID2IVF32

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterID2ID2IVF32 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterID2ID2IVF32"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID2ID2IVF32

        Create a new object of the class itkWarpImageFilterID2ID2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID2ID2IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID2ID2IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterID2ID2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterID2ID2IVF32.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_Clone, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetDisplacementField, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetDisplacementField, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetInterpolator, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetModifiableInterpolator, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetInterpolator, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputSpacing, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetOutputSpacing, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputOrigin, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetOutputOrigin, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputDirection, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetOutputDirection, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputParametersFromImage, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputStartIndex, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetOutputStartIndex, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetOutputSize, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetOutputSize, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_SetEdgePaddingValue, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GetEdgePaddingValue, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GenerateOutputInformation, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_GenerateInputRequestedRegion, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_BeforeThreadedGenerateData, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_AfterThreadedGenerateData, None, itkWarpImageFilterID2ID2IVF32)
itkWarpImageFilterID2ID2IVF32_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_swigregister
itkWarpImageFilterID2ID2IVF32_swigregister(itkWarpImageFilterID2ID2IVF32)

def itkWarpImageFilterID2ID2IVF32___New_orig__() -> "itkWarpImageFilterID2ID2IVF32_Pointer":
    """itkWarpImageFilterID2ID2IVF32___New_orig__() -> itkWarpImageFilterID2ID2IVF32_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32___New_orig__()

def itkWarpImageFilterID2ID2IVF32_cast(obj: 'itkLightObject') -> "itkWarpImageFilterID2ID2IVF32 *":
    """itkWarpImageFilterID2ID2IVF32_cast(itkLightObject obj) -> itkWarpImageFilterID2ID2IVF32"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF32_cast(obj)

class itkWarpImageFilterID2ID2IVF42(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterID2ID2IVF42_Pointer":
        """__New_orig__() -> itkWarpImageFilterID2ID2IVF42_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterID2ID2IVF42_Pointer":
        """Clone(itkWarpImageFilterID2ID2IVF42 self) -> itkWarpImageFilterID2ID2IVF42_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF42') -> "void":
        """SetDisplacementField(itkWarpImageFilterID2ID2IVF42 self, itkImageVF42 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF42 const *":
        """GetDisplacementField(itkWarpImageFilterID2ID2IVF42 self) -> itkImageVF42"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionID2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterID2ID2IVF42 self, itkInterpolateImageFunctionID2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionID2D *":
        """GetModifiableInterpolator(itkWarpImageFilterID2ID2IVF42 self) -> itkInterpolateImageFunctionID2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionID2D *":
        """
        GetInterpolator(itkWarpImageFilterID2ID2IVF42 self) -> itkInterpolateImageFunctionID2D
        GetInterpolator(itkWarpImageFilterID2ID2IVF42 self) -> itkInterpolateImageFunctionID2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterID2ID2IVF42 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterID2ID2IVF42 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterID2ID2IVF42 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterID2ID2IVF42 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterID2ID2IVF42 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterID2ID2IVF42 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterID2ID2IVF42 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterID2ID2IVF42 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterID2ID2IVF42 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterID2ID2IVF42 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterID2ID2IVF42 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterID2ID2IVF42 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterID2ID2IVF42 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'double const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterID2ID2IVF42 self, double const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "double":
        """
        GetEdgePaddingValue(itkWarpImageFilterID2ID2IVF42 self) -> double

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterID2ID2IVF42 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterID2ID2IVF42 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterID2ID2IVF42 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterID2ID2IVF42 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterID2ID2IVF42

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterID2ID2IVF42 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterID2ID2IVF42"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID2ID2IVF42

        Create a new object of the class itkWarpImageFilterID2ID2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID2ID2IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID2ID2IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterID2ID2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterID2ID2IVF42.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_Clone, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetDisplacementField, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetDisplacementField, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetInterpolator, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetModifiableInterpolator, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetInterpolator, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputSpacing, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetOutputSpacing, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputOrigin, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetOutputOrigin, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputDirection, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetOutputDirection, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputParametersFromImage, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputStartIndex, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetOutputStartIndex, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetOutputSize, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetOutputSize, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_SetEdgePaddingValue, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GetEdgePaddingValue, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GenerateOutputInformation, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_GenerateInputRequestedRegion, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_BeforeThreadedGenerateData, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_AfterThreadedGenerateData, None, itkWarpImageFilterID2ID2IVF42)
itkWarpImageFilterID2ID2IVF42_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_swigregister
itkWarpImageFilterID2ID2IVF42_swigregister(itkWarpImageFilterID2ID2IVF42)

def itkWarpImageFilterID2ID2IVF42___New_orig__() -> "itkWarpImageFilterID2ID2IVF42_Pointer":
    """itkWarpImageFilterID2ID2IVF42___New_orig__() -> itkWarpImageFilterID2ID2IVF42_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42___New_orig__()

def itkWarpImageFilterID2ID2IVF42_cast(obj: 'itkLightObject') -> "itkWarpImageFilterID2ID2IVF42 *":
    """itkWarpImageFilterID2ID2IVF42_cast(itkLightObject obj) -> itkWarpImageFilterID2ID2IVF42"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID2ID2IVF42_cast(obj)

class itkWarpImageFilterID3ID3IVF23(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterID3ID3IVF23_Pointer":
        """__New_orig__() -> itkWarpImageFilterID3ID3IVF23_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterID3ID3IVF23_Pointer":
        """Clone(itkWarpImageFilterID3ID3IVF23 self) -> itkWarpImageFilterID3ID3IVF23_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF23') -> "void":
        """SetDisplacementField(itkWarpImageFilterID3ID3IVF23 self, itkImageVF23 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF23 const *":
        """GetDisplacementField(itkWarpImageFilterID3ID3IVF23 self) -> itkImageVF23"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionID3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterID3ID3IVF23 self, itkInterpolateImageFunctionID3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionID3D *":
        """GetModifiableInterpolator(itkWarpImageFilterID3ID3IVF23 self) -> itkInterpolateImageFunctionID3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionID3D *":
        """
        GetInterpolator(itkWarpImageFilterID3ID3IVF23 self) -> itkInterpolateImageFunctionID3D
        GetInterpolator(itkWarpImageFilterID3ID3IVF23 self) -> itkInterpolateImageFunctionID3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterID3ID3IVF23 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterID3ID3IVF23 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterID3ID3IVF23 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterID3ID3IVF23 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterID3ID3IVF23 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterID3ID3IVF23 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterID3ID3IVF23 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterID3ID3IVF23 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterID3ID3IVF23 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterID3ID3IVF23 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterID3ID3IVF23 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterID3ID3IVF23 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterID3ID3IVF23 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'double const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterID3ID3IVF23 self, double const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "double":
        """
        GetEdgePaddingValue(itkWarpImageFilterID3ID3IVF23 self) -> double

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterID3ID3IVF23 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterID3ID3IVF23 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterID3ID3IVF23 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterID3ID3IVF23 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterID3ID3IVF23

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterID3ID3IVF23 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterID3ID3IVF23"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID3ID3IVF23

        Create a new object of the class itkWarpImageFilterID3ID3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID3ID3IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID3ID3IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterID3ID3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterID3ID3IVF23.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_Clone, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetDisplacementField, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetDisplacementField, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetInterpolator, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetModifiableInterpolator, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetInterpolator, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputSpacing, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetOutputSpacing, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputOrigin, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetOutputOrigin, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputDirection, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetOutputDirection, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputParametersFromImage, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputStartIndex, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetOutputStartIndex, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetOutputSize, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetOutputSize, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_SetEdgePaddingValue, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GetEdgePaddingValue, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GenerateOutputInformation, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_GenerateInputRequestedRegion, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_BeforeThreadedGenerateData, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_AfterThreadedGenerateData, None, itkWarpImageFilterID3ID3IVF23)
itkWarpImageFilterID3ID3IVF23_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_swigregister
itkWarpImageFilterID3ID3IVF23_swigregister(itkWarpImageFilterID3ID3IVF23)

def itkWarpImageFilterID3ID3IVF23___New_orig__() -> "itkWarpImageFilterID3ID3IVF23_Pointer":
    """itkWarpImageFilterID3ID3IVF23___New_orig__() -> itkWarpImageFilterID3ID3IVF23_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23___New_orig__()

def itkWarpImageFilterID3ID3IVF23_cast(obj: 'itkLightObject') -> "itkWarpImageFilterID3ID3IVF23 *":
    """itkWarpImageFilterID3ID3IVF23_cast(itkLightObject obj) -> itkWarpImageFilterID3ID3IVF23"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF23_cast(obj)

class itkWarpImageFilterID3ID3IVF33(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterID3ID3IVF33_Pointer":
        """__New_orig__() -> itkWarpImageFilterID3ID3IVF33_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterID3ID3IVF33_Pointer":
        """Clone(itkWarpImageFilterID3ID3IVF33 self) -> itkWarpImageFilterID3ID3IVF33_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF33') -> "void":
        """SetDisplacementField(itkWarpImageFilterID3ID3IVF33 self, itkImageVF33 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF33 const *":
        """GetDisplacementField(itkWarpImageFilterID3ID3IVF33 self) -> itkImageVF33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionID3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterID3ID3IVF33 self, itkInterpolateImageFunctionID3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionID3D *":
        """GetModifiableInterpolator(itkWarpImageFilterID3ID3IVF33 self) -> itkInterpolateImageFunctionID3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionID3D *":
        """
        GetInterpolator(itkWarpImageFilterID3ID3IVF33 self) -> itkInterpolateImageFunctionID3D
        GetInterpolator(itkWarpImageFilterID3ID3IVF33 self) -> itkInterpolateImageFunctionID3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterID3ID3IVF33 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterID3ID3IVF33 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterID3ID3IVF33 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterID3ID3IVF33 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterID3ID3IVF33 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterID3ID3IVF33 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterID3ID3IVF33 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterID3ID3IVF33 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterID3ID3IVF33 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterID3ID3IVF33 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterID3ID3IVF33 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterID3ID3IVF33 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterID3ID3IVF33 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'double const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterID3ID3IVF33 self, double const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "double":
        """
        GetEdgePaddingValue(itkWarpImageFilterID3ID3IVF33 self) -> double

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterID3ID3IVF33 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterID3ID3IVF33 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterID3ID3IVF33 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterID3ID3IVF33 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterID3ID3IVF33

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterID3ID3IVF33 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterID3ID3IVF33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID3ID3IVF33

        Create a new object of the class itkWarpImageFilterID3ID3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID3ID3IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID3ID3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterID3ID3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterID3ID3IVF33.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_Clone, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetDisplacementField, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetDisplacementField, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetInterpolator, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetModifiableInterpolator, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetInterpolator, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputSpacing, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetOutputSpacing, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputOrigin, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetOutputOrigin, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputDirection, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetOutputDirection, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputParametersFromImage, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputStartIndex, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetOutputStartIndex, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetOutputSize, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetOutputSize, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_SetEdgePaddingValue, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GetEdgePaddingValue, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GenerateOutputInformation, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_GenerateInputRequestedRegion, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_BeforeThreadedGenerateData, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_AfterThreadedGenerateData, None, itkWarpImageFilterID3ID3IVF33)
itkWarpImageFilterID3ID3IVF33_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_swigregister
itkWarpImageFilterID3ID3IVF33_swigregister(itkWarpImageFilterID3ID3IVF33)

def itkWarpImageFilterID3ID3IVF33___New_orig__() -> "itkWarpImageFilterID3ID3IVF33_Pointer":
    """itkWarpImageFilterID3ID3IVF33___New_orig__() -> itkWarpImageFilterID3ID3IVF33_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33___New_orig__()

def itkWarpImageFilterID3ID3IVF33_cast(obj: 'itkLightObject') -> "itkWarpImageFilterID3ID3IVF33 *":
    """itkWarpImageFilterID3ID3IVF33_cast(itkLightObject obj) -> itkWarpImageFilterID3ID3IVF33"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF33_cast(obj)

class itkWarpImageFilterID3ID3IVF43(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterID3ID3IVF43_Pointer":
        """__New_orig__() -> itkWarpImageFilterID3ID3IVF43_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterID3ID3IVF43_Pointer":
        """Clone(itkWarpImageFilterID3ID3IVF43 self) -> itkWarpImageFilterID3ID3IVF43_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF43') -> "void":
        """SetDisplacementField(itkWarpImageFilterID3ID3IVF43 self, itkImageVF43 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF43 const *":
        """GetDisplacementField(itkWarpImageFilterID3ID3IVF43 self) -> itkImageVF43"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionID3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterID3ID3IVF43 self, itkInterpolateImageFunctionID3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionID3D *":
        """GetModifiableInterpolator(itkWarpImageFilterID3ID3IVF43 self) -> itkInterpolateImageFunctionID3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionID3D *":
        """
        GetInterpolator(itkWarpImageFilterID3ID3IVF43 self) -> itkInterpolateImageFunctionID3D
        GetInterpolator(itkWarpImageFilterID3ID3IVF43 self) -> itkInterpolateImageFunctionID3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterID3ID3IVF43 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterID3ID3IVF43 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterID3ID3IVF43 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterID3ID3IVF43 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterID3ID3IVF43 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterID3ID3IVF43 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterID3ID3IVF43 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterID3ID3IVF43 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterID3ID3IVF43 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterID3ID3IVF43 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterID3ID3IVF43 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterID3ID3IVF43 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterID3ID3IVF43 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'double const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterID3ID3IVF43 self, double const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "double":
        """
        GetEdgePaddingValue(itkWarpImageFilterID3ID3IVF43 self) -> double

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterID3ID3IVF43 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterID3ID3IVF43 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterID3ID3IVF43 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterID3ID3IVF43 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterID3ID3IVF43

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterID3ID3IVF43 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterID3ID3IVF43"""
        return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID3ID3IVF43

        Create a new object of the class itkWarpImageFilterID3ID3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID3ID3IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID3ID3IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterID3ID3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterID3ID3IVF43.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_Clone, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetDisplacementField, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetDisplacementField, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetInterpolator, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetModifiableInterpolator, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetInterpolator, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputSpacing, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetOutputSpacing, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputOrigin, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetOutputOrigin, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputDirection, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetOutputDirection, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputParametersFromImage, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputStartIndex, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetOutputStartIndex, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetOutputSize, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetOutputSize, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_SetEdgePaddingValue, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GetEdgePaddingValue, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GenerateOutputInformation, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_GenerateInputRequestedRegion, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_BeforeThreadedGenerateData, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_AfterThreadedGenerateData, None, itkWarpImageFilterID3ID3IVF43)
itkWarpImageFilterID3ID3IVF43_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_swigregister
itkWarpImageFilterID3ID3IVF43_swigregister(itkWarpImageFilterID3ID3IVF43)

def itkWarpImageFilterID3ID3IVF43___New_orig__() -> "itkWarpImageFilterID3ID3IVF43_Pointer":
    """itkWarpImageFilterID3ID3IVF43___New_orig__() -> itkWarpImageFilterID3ID3IVF43_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43___New_orig__()

def itkWarpImageFilterID3ID3IVF43_cast(obj: 'itkLightObject') -> "itkWarpImageFilterID3ID3IVF43 *":
    """itkWarpImageFilterID3ID3IVF43_cast(itkLightObject obj) -> itkWarpImageFilterID3ID3IVF43"""
    return _itkWarpImageFilterPython.itkWarpImageFilterID3ID3IVF43_cast(obj)

class itkWarpImageFilterIF2IF2IVF22(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIF2IF2IVF22_Pointer":
        """__New_orig__() -> itkWarpImageFilterIF2IF2IVF22_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIF2IF2IVF22_Pointer":
        """Clone(itkWarpImageFilterIF2IF2IVF22 self) -> itkWarpImageFilterIF2IF2IVF22_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF22') -> "void":
        """SetDisplacementField(itkWarpImageFilterIF2IF2IVF22 self, itkImageVF22 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF22 const *":
        """GetDisplacementField(itkWarpImageFilterIF2IF2IVF22 self) -> itkImageVF22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIF2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIF2IF2IVF22 self, itkInterpolateImageFunctionIF2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIF2D *":
        """GetModifiableInterpolator(itkWarpImageFilterIF2IF2IVF22 self) -> itkInterpolateImageFunctionIF2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIF2D *":
        """
        GetInterpolator(itkWarpImageFilterIF2IF2IVF22 self) -> itkInterpolateImageFunctionIF2D
        GetInterpolator(itkWarpImageFilterIF2IF2IVF22 self) -> itkInterpolateImageFunctionIF2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIF2IF2IVF22 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterIF2IF2IVF22 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIF2IF2IVF22 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIF2IF2IVF22 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterIF2IF2IVF22 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIF2IF2IVF22 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIF2IF2IVF22 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterIF2IF2IVF22 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIF2IF2IVF22 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIF2IF2IVF22 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIF2IF2IVF22 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIF2IF2IVF22 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterIF2IF2IVF22 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'float const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIF2IF2IVF22 self, float const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "float":
        """
        GetEdgePaddingValue(itkWarpImageFilterIF2IF2IVF22 self) -> float

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIF2IF2IVF22 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIF2IF2IVF22 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIF2IF2IVF22 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIF2IF2IVF22 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIF2IF2IVF22

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF2IF2IVF22 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIF2IF2IVF22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF2IF2IVF22

        Create a new object of the class itkWarpImageFilterIF2IF2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF2IF2IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF2IF2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIF2IF2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIF2IF2IVF22.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_Clone, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetDisplacementField, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetDisplacementField, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetInterpolator, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetModifiableInterpolator, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetInterpolator, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputSpacing, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetOutputSpacing, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputOrigin, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetOutputOrigin, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputDirection, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetOutputDirection, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputParametersFromImage, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputStartIndex, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetOutputStartIndex, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetOutputSize, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetOutputSize, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_SetEdgePaddingValue, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GetEdgePaddingValue, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GenerateOutputInformation, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_GenerateInputRequestedRegion, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_BeforeThreadedGenerateData, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_AfterThreadedGenerateData, None, itkWarpImageFilterIF2IF2IVF22)
itkWarpImageFilterIF2IF2IVF22_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_swigregister
itkWarpImageFilterIF2IF2IVF22_swigregister(itkWarpImageFilterIF2IF2IVF22)

def itkWarpImageFilterIF2IF2IVF22___New_orig__() -> "itkWarpImageFilterIF2IF2IVF22_Pointer":
    """itkWarpImageFilterIF2IF2IVF22___New_orig__() -> itkWarpImageFilterIF2IF2IVF22_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22___New_orig__()

def itkWarpImageFilterIF2IF2IVF22_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF2IF2IVF22 *":
    """itkWarpImageFilterIF2IF2IVF22_cast(itkLightObject obj) -> itkWarpImageFilterIF2IF2IVF22"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF22_cast(obj)

class itkWarpImageFilterIF2IF2IVF32(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIF2IF2IVF32_Pointer":
        """__New_orig__() -> itkWarpImageFilterIF2IF2IVF32_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIF2IF2IVF32_Pointer":
        """Clone(itkWarpImageFilterIF2IF2IVF32 self) -> itkWarpImageFilterIF2IF2IVF32_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF32') -> "void":
        """SetDisplacementField(itkWarpImageFilterIF2IF2IVF32 self, itkImageVF32 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF32 const *":
        """GetDisplacementField(itkWarpImageFilterIF2IF2IVF32 self) -> itkImageVF32"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIF2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIF2IF2IVF32 self, itkInterpolateImageFunctionIF2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIF2D *":
        """GetModifiableInterpolator(itkWarpImageFilterIF2IF2IVF32 self) -> itkInterpolateImageFunctionIF2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIF2D *":
        """
        GetInterpolator(itkWarpImageFilterIF2IF2IVF32 self) -> itkInterpolateImageFunctionIF2D
        GetInterpolator(itkWarpImageFilterIF2IF2IVF32 self) -> itkInterpolateImageFunctionIF2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIF2IF2IVF32 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterIF2IF2IVF32 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIF2IF2IVF32 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIF2IF2IVF32 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterIF2IF2IVF32 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIF2IF2IVF32 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIF2IF2IVF32 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterIF2IF2IVF32 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIF2IF2IVF32 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIF2IF2IVF32 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIF2IF2IVF32 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIF2IF2IVF32 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterIF2IF2IVF32 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'float const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIF2IF2IVF32 self, float const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "float":
        """
        GetEdgePaddingValue(itkWarpImageFilterIF2IF2IVF32 self) -> float

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIF2IF2IVF32 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIF2IF2IVF32 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIF2IF2IVF32 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIF2IF2IVF32 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIF2IF2IVF32

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF2IF2IVF32 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIF2IF2IVF32"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF2IF2IVF32

        Create a new object of the class itkWarpImageFilterIF2IF2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF2IF2IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF2IF2IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIF2IF2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIF2IF2IVF32.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_Clone, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetDisplacementField, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetDisplacementField, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetInterpolator, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetModifiableInterpolator, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetInterpolator, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputSpacing, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetOutputSpacing, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputOrigin, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetOutputOrigin, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputDirection, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetOutputDirection, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputParametersFromImage, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputStartIndex, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetOutputStartIndex, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetOutputSize, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetOutputSize, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_SetEdgePaddingValue, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GetEdgePaddingValue, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GenerateOutputInformation, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_GenerateInputRequestedRegion, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_BeforeThreadedGenerateData, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_AfterThreadedGenerateData, None, itkWarpImageFilterIF2IF2IVF32)
itkWarpImageFilterIF2IF2IVF32_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_swigregister
itkWarpImageFilterIF2IF2IVF32_swigregister(itkWarpImageFilterIF2IF2IVF32)

def itkWarpImageFilterIF2IF2IVF32___New_orig__() -> "itkWarpImageFilterIF2IF2IVF32_Pointer":
    """itkWarpImageFilterIF2IF2IVF32___New_orig__() -> itkWarpImageFilterIF2IF2IVF32_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32___New_orig__()

def itkWarpImageFilterIF2IF2IVF32_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF2IF2IVF32 *":
    """itkWarpImageFilterIF2IF2IVF32_cast(itkLightObject obj) -> itkWarpImageFilterIF2IF2IVF32"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF32_cast(obj)

class itkWarpImageFilterIF2IF2IVF42(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIF2IF2IVF42_Pointer":
        """__New_orig__() -> itkWarpImageFilterIF2IF2IVF42_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIF2IF2IVF42_Pointer":
        """Clone(itkWarpImageFilterIF2IF2IVF42 self) -> itkWarpImageFilterIF2IF2IVF42_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF42') -> "void":
        """SetDisplacementField(itkWarpImageFilterIF2IF2IVF42 self, itkImageVF42 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF42 const *":
        """GetDisplacementField(itkWarpImageFilterIF2IF2IVF42 self) -> itkImageVF42"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIF2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIF2IF2IVF42 self, itkInterpolateImageFunctionIF2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIF2D *":
        """GetModifiableInterpolator(itkWarpImageFilterIF2IF2IVF42 self) -> itkInterpolateImageFunctionIF2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIF2D *":
        """
        GetInterpolator(itkWarpImageFilterIF2IF2IVF42 self) -> itkInterpolateImageFunctionIF2D
        GetInterpolator(itkWarpImageFilterIF2IF2IVF42 self) -> itkInterpolateImageFunctionIF2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIF2IF2IVF42 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterIF2IF2IVF42 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIF2IF2IVF42 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIF2IF2IVF42 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterIF2IF2IVF42 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIF2IF2IVF42 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIF2IF2IVF42 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterIF2IF2IVF42 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIF2IF2IVF42 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIF2IF2IVF42 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIF2IF2IVF42 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIF2IF2IVF42 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterIF2IF2IVF42 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'float const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIF2IF2IVF42 self, float const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "float":
        """
        GetEdgePaddingValue(itkWarpImageFilterIF2IF2IVF42 self) -> float

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIF2IF2IVF42 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIF2IF2IVF42 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIF2IF2IVF42 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIF2IF2IVF42 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIF2IF2IVF42

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF2IF2IVF42 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIF2IF2IVF42"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF2IF2IVF42

        Create a new object of the class itkWarpImageFilterIF2IF2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF2IF2IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF2IF2IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIF2IF2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIF2IF2IVF42.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_Clone, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetDisplacementField, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetDisplacementField, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetInterpolator, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetModifiableInterpolator, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetInterpolator, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputSpacing, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetOutputSpacing, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputOrigin, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetOutputOrigin, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputDirection, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetOutputDirection, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputParametersFromImage, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputStartIndex, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetOutputStartIndex, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetOutputSize, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetOutputSize, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_SetEdgePaddingValue, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GetEdgePaddingValue, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GenerateOutputInformation, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_GenerateInputRequestedRegion, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_BeforeThreadedGenerateData, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_AfterThreadedGenerateData, None, itkWarpImageFilterIF2IF2IVF42)
itkWarpImageFilterIF2IF2IVF42_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_swigregister
itkWarpImageFilterIF2IF2IVF42_swigregister(itkWarpImageFilterIF2IF2IVF42)

def itkWarpImageFilterIF2IF2IVF42___New_orig__() -> "itkWarpImageFilterIF2IF2IVF42_Pointer":
    """itkWarpImageFilterIF2IF2IVF42___New_orig__() -> itkWarpImageFilterIF2IF2IVF42_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42___New_orig__()

def itkWarpImageFilterIF2IF2IVF42_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF2IF2IVF42 *":
    """itkWarpImageFilterIF2IF2IVF42_cast(itkLightObject obj) -> itkWarpImageFilterIF2IF2IVF42"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF2IF2IVF42_cast(obj)

class itkWarpImageFilterIF3IF3IVF23(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIF3IF3IVF23_Pointer":
        """__New_orig__() -> itkWarpImageFilterIF3IF3IVF23_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIF3IF3IVF23_Pointer":
        """Clone(itkWarpImageFilterIF3IF3IVF23 self) -> itkWarpImageFilterIF3IF3IVF23_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF23') -> "void":
        """SetDisplacementField(itkWarpImageFilterIF3IF3IVF23 self, itkImageVF23 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF23 const *":
        """GetDisplacementField(itkWarpImageFilterIF3IF3IVF23 self) -> itkImageVF23"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIF3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIF3IF3IVF23 self, itkInterpolateImageFunctionIF3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIF3D *":
        """GetModifiableInterpolator(itkWarpImageFilterIF3IF3IVF23 self) -> itkInterpolateImageFunctionIF3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIF3D *":
        """
        GetInterpolator(itkWarpImageFilterIF3IF3IVF23 self) -> itkInterpolateImageFunctionIF3D
        GetInterpolator(itkWarpImageFilterIF3IF3IVF23 self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIF3IF3IVF23 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterIF3IF3IVF23 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIF3IF3IVF23 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIF3IF3IVF23 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterIF3IF3IVF23 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIF3IF3IVF23 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIF3IF3IVF23 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterIF3IF3IVF23 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIF3IF3IVF23 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIF3IF3IVF23 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIF3IF3IVF23 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIF3IF3IVF23 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterIF3IF3IVF23 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'float const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIF3IF3IVF23 self, float const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "float":
        """
        GetEdgePaddingValue(itkWarpImageFilterIF3IF3IVF23 self) -> float

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIF3IF3IVF23 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIF3IF3IVF23 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIF3IF3IVF23 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIF3IF3IVF23 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIF3IF3IVF23

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF3IF3IVF23 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIF3IF3IVF23"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF3IF3IVF23

        Create a new object of the class itkWarpImageFilterIF3IF3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF3IF3IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF3IF3IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIF3IF3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIF3IF3IVF23.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_Clone, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetDisplacementField, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetDisplacementField, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetInterpolator, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetModifiableInterpolator, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetInterpolator, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputSpacing, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetOutputSpacing, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputOrigin, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetOutputOrigin, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputDirection, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetOutputDirection, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputParametersFromImage, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputStartIndex, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetOutputStartIndex, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetOutputSize, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetOutputSize, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_SetEdgePaddingValue, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GetEdgePaddingValue, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GenerateOutputInformation, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_GenerateInputRequestedRegion, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_BeforeThreadedGenerateData, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_AfterThreadedGenerateData, None, itkWarpImageFilterIF3IF3IVF23)
itkWarpImageFilterIF3IF3IVF23_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_swigregister
itkWarpImageFilterIF3IF3IVF23_swigregister(itkWarpImageFilterIF3IF3IVF23)

def itkWarpImageFilterIF3IF3IVF23___New_orig__() -> "itkWarpImageFilterIF3IF3IVF23_Pointer":
    """itkWarpImageFilterIF3IF3IVF23___New_orig__() -> itkWarpImageFilterIF3IF3IVF23_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23___New_orig__()

def itkWarpImageFilterIF3IF3IVF23_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF3IF3IVF23 *":
    """itkWarpImageFilterIF3IF3IVF23_cast(itkLightObject obj) -> itkWarpImageFilterIF3IF3IVF23"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF23_cast(obj)

class itkWarpImageFilterIF3IF3IVF33(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIF3IF3IVF33_Pointer":
        """__New_orig__() -> itkWarpImageFilterIF3IF3IVF33_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIF3IF3IVF33_Pointer":
        """Clone(itkWarpImageFilterIF3IF3IVF33 self) -> itkWarpImageFilterIF3IF3IVF33_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF33') -> "void":
        """SetDisplacementField(itkWarpImageFilterIF3IF3IVF33 self, itkImageVF33 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF33 const *":
        """GetDisplacementField(itkWarpImageFilterIF3IF3IVF33 self) -> itkImageVF33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIF3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIF3IF3IVF33 self, itkInterpolateImageFunctionIF3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIF3D *":
        """GetModifiableInterpolator(itkWarpImageFilterIF3IF3IVF33 self) -> itkInterpolateImageFunctionIF3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIF3D *":
        """
        GetInterpolator(itkWarpImageFilterIF3IF3IVF33 self) -> itkInterpolateImageFunctionIF3D
        GetInterpolator(itkWarpImageFilterIF3IF3IVF33 self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIF3IF3IVF33 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterIF3IF3IVF33 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIF3IF3IVF33 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIF3IF3IVF33 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterIF3IF3IVF33 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIF3IF3IVF33 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIF3IF3IVF33 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterIF3IF3IVF33 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIF3IF3IVF33 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIF3IF3IVF33 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIF3IF3IVF33 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIF3IF3IVF33 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterIF3IF3IVF33 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'float const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIF3IF3IVF33 self, float const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "float":
        """
        GetEdgePaddingValue(itkWarpImageFilterIF3IF3IVF33 self) -> float

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIF3IF3IVF33 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIF3IF3IVF33 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIF3IF3IVF33 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIF3IF3IVF33 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIF3IF3IVF33

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF3IF3IVF33 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIF3IF3IVF33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF3IF3IVF33

        Create a new object of the class itkWarpImageFilterIF3IF3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF3IF3IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF3IF3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIF3IF3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIF3IF3IVF33.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_Clone, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetDisplacementField, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetDisplacementField, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetInterpolator, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetModifiableInterpolator, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetInterpolator, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputSpacing, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetOutputSpacing, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputOrigin, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetOutputOrigin, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputDirection, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetOutputDirection, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputParametersFromImage, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputStartIndex, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetOutputStartIndex, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetOutputSize, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetOutputSize, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_SetEdgePaddingValue, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GetEdgePaddingValue, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GenerateOutputInformation, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_GenerateInputRequestedRegion, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_BeforeThreadedGenerateData, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_AfterThreadedGenerateData, None, itkWarpImageFilterIF3IF3IVF33)
itkWarpImageFilterIF3IF3IVF33_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_swigregister
itkWarpImageFilterIF3IF3IVF33_swigregister(itkWarpImageFilterIF3IF3IVF33)

def itkWarpImageFilterIF3IF3IVF33___New_orig__() -> "itkWarpImageFilterIF3IF3IVF33_Pointer":
    """itkWarpImageFilterIF3IF3IVF33___New_orig__() -> itkWarpImageFilterIF3IF3IVF33_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33___New_orig__()

def itkWarpImageFilterIF3IF3IVF33_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF3IF3IVF33 *":
    """itkWarpImageFilterIF3IF3IVF33_cast(itkLightObject obj) -> itkWarpImageFilterIF3IF3IVF33"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF33_cast(obj)

class itkWarpImageFilterIF3IF3IVF43(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIF3IF3IVF43_Pointer":
        """__New_orig__() -> itkWarpImageFilterIF3IF3IVF43_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIF3IF3IVF43_Pointer":
        """Clone(itkWarpImageFilterIF3IF3IVF43 self) -> itkWarpImageFilterIF3IF3IVF43_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF43') -> "void":
        """SetDisplacementField(itkWarpImageFilterIF3IF3IVF43 self, itkImageVF43 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF43 const *":
        """GetDisplacementField(itkWarpImageFilterIF3IF3IVF43 self) -> itkImageVF43"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIF3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIF3IF3IVF43 self, itkInterpolateImageFunctionIF3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIF3D *":
        """GetModifiableInterpolator(itkWarpImageFilterIF3IF3IVF43 self) -> itkInterpolateImageFunctionIF3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIF3D *":
        """
        GetInterpolator(itkWarpImageFilterIF3IF3IVF43 self) -> itkInterpolateImageFunctionIF3D
        GetInterpolator(itkWarpImageFilterIF3IF3IVF43 self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIF3IF3IVF43 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterIF3IF3IVF43 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIF3IF3IVF43 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIF3IF3IVF43 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterIF3IF3IVF43 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIF3IF3IVF43 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIF3IF3IVF43 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterIF3IF3IVF43 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIF3IF3IVF43 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIF3IF3IVF43 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIF3IF3IVF43 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIF3IF3IVF43 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterIF3IF3IVF43 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'float const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIF3IF3IVF43 self, float const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "float":
        """
        GetEdgePaddingValue(itkWarpImageFilterIF3IF3IVF43 self) -> float

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIF3IF3IVF43 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIF3IF3IVF43 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIF3IF3IVF43 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIF3IF3IVF43 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIF3IF3IVF43

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF3IF3IVF43 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIF3IF3IVF43"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF3IF3IVF43

        Create a new object of the class itkWarpImageFilterIF3IF3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF3IF3IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF3IF3IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIF3IF3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIF3IF3IVF43.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_Clone, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetDisplacementField, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetDisplacementField, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetInterpolator, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetModifiableInterpolator, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetInterpolator, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputSpacing, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetOutputSpacing, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputOrigin, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetOutputOrigin, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputDirection, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetOutputDirection, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputParametersFromImage, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputStartIndex, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetOutputStartIndex, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetOutputSize, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetOutputSize, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_SetEdgePaddingValue, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GetEdgePaddingValue, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GenerateOutputInformation, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_GenerateInputRequestedRegion, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_BeforeThreadedGenerateData, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_AfterThreadedGenerateData, None, itkWarpImageFilterIF3IF3IVF43)
itkWarpImageFilterIF3IF3IVF43_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_swigregister
itkWarpImageFilterIF3IF3IVF43_swigregister(itkWarpImageFilterIF3IF3IVF43)

def itkWarpImageFilterIF3IF3IVF43___New_orig__() -> "itkWarpImageFilterIF3IF3IVF43_Pointer":
    """itkWarpImageFilterIF3IF3IVF43___New_orig__() -> itkWarpImageFilterIF3IF3IVF43_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43___New_orig__()

def itkWarpImageFilterIF3IF3IVF43_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIF3IF3IVF43 *":
    """itkWarpImageFilterIF3IF3IVF43_cast(itkLightObject obj) -> itkWarpImageFilterIF3IF3IVF43"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIF3IF3IVF43_cast(obj)

class itkWarpImageFilterISS2ISS2IVF22(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterISS2ISS2IVF22_Pointer":
        """__New_orig__() -> itkWarpImageFilterISS2ISS2IVF22_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterISS2ISS2IVF22_Pointer":
        """Clone(itkWarpImageFilterISS2ISS2IVF22 self) -> itkWarpImageFilterISS2ISS2IVF22_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF22') -> "void":
        """SetDisplacementField(itkWarpImageFilterISS2ISS2IVF22 self, itkImageVF22 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF22 const *":
        """GetDisplacementField(itkWarpImageFilterISS2ISS2IVF22 self) -> itkImageVF22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionISS2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterISS2ISS2IVF22 self, itkInterpolateImageFunctionISS2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionISS2D *":
        """GetModifiableInterpolator(itkWarpImageFilterISS2ISS2IVF22 self) -> itkInterpolateImageFunctionISS2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionISS2D *":
        """
        GetInterpolator(itkWarpImageFilterISS2ISS2IVF22 self) -> itkInterpolateImageFunctionISS2D
        GetInterpolator(itkWarpImageFilterISS2ISS2IVF22 self) -> itkInterpolateImageFunctionISS2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterISS2ISS2IVF22 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterISS2ISS2IVF22 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterISS2ISS2IVF22 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterISS2ISS2IVF22 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterISS2ISS2IVF22 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterISS2ISS2IVF22 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterISS2ISS2IVF22 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterISS2ISS2IVF22 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterISS2ISS2IVF22 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterISS2ISS2IVF22 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterISS2ISS2IVF22 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterISS2ISS2IVF22 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterISS2ISS2IVF22 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterISS2ISS2IVF22 self, short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "short":
        """
        GetEdgePaddingValue(itkWarpImageFilterISS2ISS2IVF22 self) -> short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterISS2ISS2IVF22 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterISS2ISS2IVF22 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterISS2ISS2IVF22 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterISS2ISS2IVF22 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterISS2ISS2IVF22

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS2ISS2IVF22 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterISS2ISS2IVF22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterISS2ISS2IVF22

        Create a new object of the class itkWarpImageFilterISS2ISS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterISS2ISS2IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterISS2ISS2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterISS2ISS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterISS2ISS2IVF22.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_Clone, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetDisplacementField, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetDisplacementField, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetInterpolator, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetModifiableInterpolator, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetInterpolator, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputSpacing, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetOutputSpacing, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputOrigin, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetOutputOrigin, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputDirection, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetOutputDirection, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputParametersFromImage, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputStartIndex, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetOutputStartIndex, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetOutputSize, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetOutputSize, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_SetEdgePaddingValue, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GetEdgePaddingValue, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GenerateOutputInformation, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_GenerateInputRequestedRegion, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_BeforeThreadedGenerateData, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_AfterThreadedGenerateData, None, itkWarpImageFilterISS2ISS2IVF22)
itkWarpImageFilterISS2ISS2IVF22_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_swigregister
itkWarpImageFilterISS2ISS2IVF22_swigregister(itkWarpImageFilterISS2ISS2IVF22)

def itkWarpImageFilterISS2ISS2IVF22___New_orig__() -> "itkWarpImageFilterISS2ISS2IVF22_Pointer":
    """itkWarpImageFilterISS2ISS2IVF22___New_orig__() -> itkWarpImageFilterISS2ISS2IVF22_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22___New_orig__()

def itkWarpImageFilterISS2ISS2IVF22_cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS2ISS2IVF22 *":
    """itkWarpImageFilterISS2ISS2IVF22_cast(itkLightObject obj) -> itkWarpImageFilterISS2ISS2IVF22"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF22_cast(obj)

class itkWarpImageFilterISS2ISS2IVF32(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterISS2ISS2IVF32_Pointer":
        """__New_orig__() -> itkWarpImageFilterISS2ISS2IVF32_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterISS2ISS2IVF32_Pointer":
        """Clone(itkWarpImageFilterISS2ISS2IVF32 self) -> itkWarpImageFilterISS2ISS2IVF32_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF32') -> "void":
        """SetDisplacementField(itkWarpImageFilterISS2ISS2IVF32 self, itkImageVF32 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF32 const *":
        """GetDisplacementField(itkWarpImageFilterISS2ISS2IVF32 self) -> itkImageVF32"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionISS2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterISS2ISS2IVF32 self, itkInterpolateImageFunctionISS2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionISS2D *":
        """GetModifiableInterpolator(itkWarpImageFilterISS2ISS2IVF32 self) -> itkInterpolateImageFunctionISS2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionISS2D *":
        """
        GetInterpolator(itkWarpImageFilterISS2ISS2IVF32 self) -> itkInterpolateImageFunctionISS2D
        GetInterpolator(itkWarpImageFilterISS2ISS2IVF32 self) -> itkInterpolateImageFunctionISS2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterISS2ISS2IVF32 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterISS2ISS2IVF32 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterISS2ISS2IVF32 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterISS2ISS2IVF32 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterISS2ISS2IVF32 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterISS2ISS2IVF32 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterISS2ISS2IVF32 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterISS2ISS2IVF32 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterISS2ISS2IVF32 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterISS2ISS2IVF32 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterISS2ISS2IVF32 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterISS2ISS2IVF32 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterISS2ISS2IVF32 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterISS2ISS2IVF32 self, short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "short":
        """
        GetEdgePaddingValue(itkWarpImageFilterISS2ISS2IVF32 self) -> short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterISS2ISS2IVF32 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterISS2ISS2IVF32 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterISS2ISS2IVF32 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterISS2ISS2IVF32 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterISS2ISS2IVF32

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS2ISS2IVF32 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterISS2ISS2IVF32"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterISS2ISS2IVF32

        Create a new object of the class itkWarpImageFilterISS2ISS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterISS2ISS2IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterISS2ISS2IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterISS2ISS2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterISS2ISS2IVF32.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_Clone, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetDisplacementField, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetDisplacementField, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetInterpolator, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetModifiableInterpolator, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetInterpolator, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputSpacing, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetOutputSpacing, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputOrigin, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetOutputOrigin, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputDirection, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetOutputDirection, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputParametersFromImage, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputStartIndex, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetOutputStartIndex, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetOutputSize, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetOutputSize, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_SetEdgePaddingValue, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GetEdgePaddingValue, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GenerateOutputInformation, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_GenerateInputRequestedRegion, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_BeforeThreadedGenerateData, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_AfterThreadedGenerateData, None, itkWarpImageFilterISS2ISS2IVF32)
itkWarpImageFilterISS2ISS2IVF32_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_swigregister
itkWarpImageFilterISS2ISS2IVF32_swigregister(itkWarpImageFilterISS2ISS2IVF32)

def itkWarpImageFilterISS2ISS2IVF32___New_orig__() -> "itkWarpImageFilterISS2ISS2IVF32_Pointer":
    """itkWarpImageFilterISS2ISS2IVF32___New_orig__() -> itkWarpImageFilterISS2ISS2IVF32_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32___New_orig__()

def itkWarpImageFilterISS2ISS2IVF32_cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS2ISS2IVF32 *":
    """itkWarpImageFilterISS2ISS2IVF32_cast(itkLightObject obj) -> itkWarpImageFilterISS2ISS2IVF32"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF32_cast(obj)

class itkWarpImageFilterISS2ISS2IVF42(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterISS2ISS2IVF42_Pointer":
        """__New_orig__() -> itkWarpImageFilterISS2ISS2IVF42_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterISS2ISS2IVF42_Pointer":
        """Clone(itkWarpImageFilterISS2ISS2IVF42 self) -> itkWarpImageFilterISS2ISS2IVF42_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF42') -> "void":
        """SetDisplacementField(itkWarpImageFilterISS2ISS2IVF42 self, itkImageVF42 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF42 const *":
        """GetDisplacementField(itkWarpImageFilterISS2ISS2IVF42 self) -> itkImageVF42"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionISS2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterISS2ISS2IVF42 self, itkInterpolateImageFunctionISS2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionISS2D *":
        """GetModifiableInterpolator(itkWarpImageFilterISS2ISS2IVF42 self) -> itkInterpolateImageFunctionISS2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionISS2D *":
        """
        GetInterpolator(itkWarpImageFilterISS2ISS2IVF42 self) -> itkInterpolateImageFunctionISS2D
        GetInterpolator(itkWarpImageFilterISS2ISS2IVF42 self) -> itkInterpolateImageFunctionISS2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterISS2ISS2IVF42 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterISS2ISS2IVF42 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterISS2ISS2IVF42 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterISS2ISS2IVF42 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterISS2ISS2IVF42 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterISS2ISS2IVF42 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterISS2ISS2IVF42 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterISS2ISS2IVF42 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterISS2ISS2IVF42 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterISS2ISS2IVF42 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterISS2ISS2IVF42 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterISS2ISS2IVF42 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterISS2ISS2IVF42 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterISS2ISS2IVF42 self, short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "short":
        """
        GetEdgePaddingValue(itkWarpImageFilterISS2ISS2IVF42 self) -> short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterISS2ISS2IVF42 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterISS2ISS2IVF42 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterISS2ISS2IVF42 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterISS2ISS2IVF42 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterISS2ISS2IVF42

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS2ISS2IVF42 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterISS2ISS2IVF42"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterISS2ISS2IVF42

        Create a new object of the class itkWarpImageFilterISS2ISS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterISS2ISS2IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterISS2ISS2IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterISS2ISS2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterISS2ISS2IVF42.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_Clone, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetDisplacementField, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetDisplacementField, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetInterpolator, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetModifiableInterpolator, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetInterpolator, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputSpacing, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetOutputSpacing, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputOrigin, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetOutputOrigin, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputDirection, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetOutputDirection, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputParametersFromImage, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputStartIndex, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetOutputStartIndex, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetOutputSize, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetOutputSize, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_SetEdgePaddingValue, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GetEdgePaddingValue, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GenerateOutputInformation, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_GenerateInputRequestedRegion, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_BeforeThreadedGenerateData, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_AfterThreadedGenerateData, None, itkWarpImageFilterISS2ISS2IVF42)
itkWarpImageFilterISS2ISS2IVF42_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_swigregister
itkWarpImageFilterISS2ISS2IVF42_swigregister(itkWarpImageFilterISS2ISS2IVF42)

def itkWarpImageFilterISS2ISS2IVF42___New_orig__() -> "itkWarpImageFilterISS2ISS2IVF42_Pointer":
    """itkWarpImageFilterISS2ISS2IVF42___New_orig__() -> itkWarpImageFilterISS2ISS2IVF42_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42___New_orig__()

def itkWarpImageFilterISS2ISS2IVF42_cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS2ISS2IVF42 *":
    """itkWarpImageFilterISS2ISS2IVF42_cast(itkLightObject obj) -> itkWarpImageFilterISS2ISS2IVF42"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS2ISS2IVF42_cast(obj)

class itkWarpImageFilterISS3ISS3IVF23(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterISS3ISS3IVF23_Pointer":
        """__New_orig__() -> itkWarpImageFilterISS3ISS3IVF23_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterISS3ISS3IVF23_Pointer":
        """Clone(itkWarpImageFilterISS3ISS3IVF23 self) -> itkWarpImageFilterISS3ISS3IVF23_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF23') -> "void":
        """SetDisplacementField(itkWarpImageFilterISS3ISS3IVF23 self, itkImageVF23 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF23 const *":
        """GetDisplacementField(itkWarpImageFilterISS3ISS3IVF23 self) -> itkImageVF23"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionISS3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterISS3ISS3IVF23 self, itkInterpolateImageFunctionISS3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionISS3D *":
        """GetModifiableInterpolator(itkWarpImageFilterISS3ISS3IVF23 self) -> itkInterpolateImageFunctionISS3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionISS3D *":
        """
        GetInterpolator(itkWarpImageFilterISS3ISS3IVF23 self) -> itkInterpolateImageFunctionISS3D
        GetInterpolator(itkWarpImageFilterISS3ISS3IVF23 self) -> itkInterpolateImageFunctionISS3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterISS3ISS3IVF23 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterISS3ISS3IVF23 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterISS3ISS3IVF23 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterISS3ISS3IVF23 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterISS3ISS3IVF23 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterISS3ISS3IVF23 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterISS3ISS3IVF23 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterISS3ISS3IVF23 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterISS3ISS3IVF23 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterISS3ISS3IVF23 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterISS3ISS3IVF23 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterISS3ISS3IVF23 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterISS3ISS3IVF23 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterISS3ISS3IVF23 self, short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "short":
        """
        GetEdgePaddingValue(itkWarpImageFilterISS3ISS3IVF23 self) -> short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterISS3ISS3IVF23 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterISS3ISS3IVF23 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterISS3ISS3IVF23 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterISS3ISS3IVF23 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterISS3ISS3IVF23

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS3ISS3IVF23 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterISS3ISS3IVF23"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterISS3ISS3IVF23

        Create a new object of the class itkWarpImageFilterISS3ISS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterISS3ISS3IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterISS3ISS3IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterISS3ISS3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterISS3ISS3IVF23.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_Clone, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetDisplacementField, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetDisplacementField, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetInterpolator, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetModifiableInterpolator, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetInterpolator, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputSpacing, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetOutputSpacing, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputOrigin, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetOutputOrigin, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputDirection, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetOutputDirection, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputParametersFromImage, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputStartIndex, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetOutputStartIndex, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetOutputSize, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetOutputSize, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_SetEdgePaddingValue, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GetEdgePaddingValue, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GenerateOutputInformation, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_GenerateInputRequestedRegion, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_BeforeThreadedGenerateData, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_AfterThreadedGenerateData, None, itkWarpImageFilterISS3ISS3IVF23)
itkWarpImageFilterISS3ISS3IVF23_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_swigregister
itkWarpImageFilterISS3ISS3IVF23_swigregister(itkWarpImageFilterISS3ISS3IVF23)

def itkWarpImageFilterISS3ISS3IVF23___New_orig__() -> "itkWarpImageFilterISS3ISS3IVF23_Pointer":
    """itkWarpImageFilterISS3ISS3IVF23___New_orig__() -> itkWarpImageFilterISS3ISS3IVF23_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23___New_orig__()

def itkWarpImageFilterISS3ISS3IVF23_cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS3ISS3IVF23 *":
    """itkWarpImageFilterISS3ISS3IVF23_cast(itkLightObject obj) -> itkWarpImageFilterISS3ISS3IVF23"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF23_cast(obj)

class itkWarpImageFilterISS3ISS3IVF33(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterISS3ISS3IVF33_Pointer":
        """__New_orig__() -> itkWarpImageFilterISS3ISS3IVF33_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterISS3ISS3IVF33_Pointer":
        """Clone(itkWarpImageFilterISS3ISS3IVF33 self) -> itkWarpImageFilterISS3ISS3IVF33_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF33') -> "void":
        """SetDisplacementField(itkWarpImageFilterISS3ISS3IVF33 self, itkImageVF33 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF33 const *":
        """GetDisplacementField(itkWarpImageFilterISS3ISS3IVF33 self) -> itkImageVF33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionISS3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterISS3ISS3IVF33 self, itkInterpolateImageFunctionISS3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionISS3D *":
        """GetModifiableInterpolator(itkWarpImageFilterISS3ISS3IVF33 self) -> itkInterpolateImageFunctionISS3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionISS3D *":
        """
        GetInterpolator(itkWarpImageFilterISS3ISS3IVF33 self) -> itkInterpolateImageFunctionISS3D
        GetInterpolator(itkWarpImageFilterISS3ISS3IVF33 self) -> itkInterpolateImageFunctionISS3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterISS3ISS3IVF33 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterISS3ISS3IVF33 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterISS3ISS3IVF33 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterISS3ISS3IVF33 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterISS3ISS3IVF33 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterISS3ISS3IVF33 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterISS3ISS3IVF33 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterISS3ISS3IVF33 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterISS3ISS3IVF33 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterISS3ISS3IVF33 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterISS3ISS3IVF33 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterISS3ISS3IVF33 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterISS3ISS3IVF33 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterISS3ISS3IVF33 self, short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "short":
        """
        GetEdgePaddingValue(itkWarpImageFilterISS3ISS3IVF33 self) -> short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterISS3ISS3IVF33 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterISS3ISS3IVF33 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterISS3ISS3IVF33 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterISS3ISS3IVF33 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterISS3ISS3IVF33

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS3ISS3IVF33 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterISS3ISS3IVF33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterISS3ISS3IVF33

        Create a new object of the class itkWarpImageFilterISS3ISS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterISS3ISS3IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterISS3ISS3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterISS3ISS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterISS3ISS3IVF33.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_Clone, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetDisplacementField, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetDisplacementField, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetInterpolator, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetModifiableInterpolator, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetInterpolator, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputSpacing, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetOutputSpacing, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputOrigin, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetOutputOrigin, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputDirection, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetOutputDirection, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputParametersFromImage, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputStartIndex, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetOutputStartIndex, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetOutputSize, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetOutputSize, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_SetEdgePaddingValue, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GetEdgePaddingValue, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GenerateOutputInformation, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_GenerateInputRequestedRegion, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_BeforeThreadedGenerateData, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_AfterThreadedGenerateData, None, itkWarpImageFilterISS3ISS3IVF33)
itkWarpImageFilterISS3ISS3IVF33_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_swigregister
itkWarpImageFilterISS3ISS3IVF33_swigregister(itkWarpImageFilterISS3ISS3IVF33)

def itkWarpImageFilterISS3ISS3IVF33___New_orig__() -> "itkWarpImageFilterISS3ISS3IVF33_Pointer":
    """itkWarpImageFilterISS3ISS3IVF33___New_orig__() -> itkWarpImageFilterISS3ISS3IVF33_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33___New_orig__()

def itkWarpImageFilterISS3ISS3IVF33_cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS3ISS3IVF33 *":
    """itkWarpImageFilterISS3ISS3IVF33_cast(itkLightObject obj) -> itkWarpImageFilterISS3ISS3IVF33"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF33_cast(obj)

class itkWarpImageFilterISS3ISS3IVF43(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterISS3ISS3IVF43_Pointer":
        """__New_orig__() -> itkWarpImageFilterISS3ISS3IVF43_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterISS3ISS3IVF43_Pointer":
        """Clone(itkWarpImageFilterISS3ISS3IVF43 self) -> itkWarpImageFilterISS3ISS3IVF43_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF43') -> "void":
        """SetDisplacementField(itkWarpImageFilterISS3ISS3IVF43 self, itkImageVF43 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF43 const *":
        """GetDisplacementField(itkWarpImageFilterISS3ISS3IVF43 self) -> itkImageVF43"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionISS3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterISS3ISS3IVF43 self, itkInterpolateImageFunctionISS3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionISS3D *":
        """GetModifiableInterpolator(itkWarpImageFilterISS3ISS3IVF43 self) -> itkInterpolateImageFunctionISS3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionISS3D *":
        """
        GetInterpolator(itkWarpImageFilterISS3ISS3IVF43 self) -> itkInterpolateImageFunctionISS3D
        GetInterpolator(itkWarpImageFilterISS3ISS3IVF43 self) -> itkInterpolateImageFunctionISS3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterISS3ISS3IVF43 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterISS3ISS3IVF43 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterISS3ISS3IVF43 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterISS3ISS3IVF43 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterISS3ISS3IVF43 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterISS3ISS3IVF43 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterISS3ISS3IVF43 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterISS3ISS3IVF43 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterISS3ISS3IVF43 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterISS3ISS3IVF43 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterISS3ISS3IVF43 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterISS3ISS3IVF43 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterISS3ISS3IVF43 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterISS3ISS3IVF43 self, short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "short":
        """
        GetEdgePaddingValue(itkWarpImageFilterISS3ISS3IVF43 self) -> short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterISS3ISS3IVF43 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterISS3ISS3IVF43 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterISS3ISS3IVF43 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterISS3ISS3IVF43 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterISS3ISS3IVF43

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS3ISS3IVF43 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterISS3ISS3IVF43"""
        return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterISS3ISS3IVF43

        Create a new object of the class itkWarpImageFilterISS3ISS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterISS3ISS3IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterISS3ISS3IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterISS3ISS3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterISS3ISS3IVF43.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_Clone, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetDisplacementField, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetDisplacementField, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetInterpolator, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetModifiableInterpolator, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetInterpolator, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputSpacing, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetOutputSpacing, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputOrigin, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetOutputOrigin, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputDirection, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetOutputDirection, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputParametersFromImage, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputStartIndex, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetOutputStartIndex, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetOutputSize, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetOutputSize, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_SetEdgePaddingValue, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GetEdgePaddingValue, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GenerateOutputInformation, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_GenerateInputRequestedRegion, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_BeforeThreadedGenerateData, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_AfterThreadedGenerateData, None, itkWarpImageFilterISS3ISS3IVF43)
itkWarpImageFilterISS3ISS3IVF43_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_swigregister
itkWarpImageFilterISS3ISS3IVF43_swigregister(itkWarpImageFilterISS3ISS3IVF43)

def itkWarpImageFilterISS3ISS3IVF43___New_orig__() -> "itkWarpImageFilterISS3ISS3IVF43_Pointer":
    """itkWarpImageFilterISS3ISS3IVF43___New_orig__() -> itkWarpImageFilterISS3ISS3IVF43_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43___New_orig__()

def itkWarpImageFilterISS3ISS3IVF43_cast(obj: 'itkLightObject') -> "itkWarpImageFilterISS3ISS3IVF43 *":
    """itkWarpImageFilterISS3ISS3IVF43_cast(itkLightObject obj) -> itkWarpImageFilterISS3ISS3IVF43"""
    return _itkWarpImageFilterPython.itkWarpImageFilterISS3ISS3IVF43_cast(obj)

class itkWarpImageFilterIUC2IUC2IVF22(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUC2IUC2IVF22_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUC2IUC2IVF22_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUC2IUC2IVF22_Pointer":
        """Clone(itkWarpImageFilterIUC2IUC2IVF22 self) -> itkWarpImageFilterIUC2IUC2IVF22_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF22') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUC2IUC2IVF22 self, itkImageVF22 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF22 const *":
        """GetDisplacementField(itkWarpImageFilterIUC2IUC2IVF22 self) -> itkImageVF22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUC2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUC2IUC2IVF22 self, itkInterpolateImageFunctionIUC2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUC2D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUC2IUC2IVF22 self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUC2D *":
        """
        GetInterpolator(itkWarpImageFilterIUC2IUC2IVF22 self) -> itkInterpolateImageFunctionIUC2D
        GetInterpolator(itkWarpImageFilterIUC2IUC2IVF22 self) -> itkInterpolateImageFunctionIUC2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUC2IUC2IVF22 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterIUC2IUC2IVF22 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUC2IUC2IVF22 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUC2IUC2IVF22 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterIUC2IUC2IVF22 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUC2IUC2IVF22 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUC2IUC2IVF22 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterIUC2IUC2IVF22 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUC2IUC2IVF22 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUC2IUC2IVF22 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUC2IUC2IVF22 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUC2IUC2IVF22 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterIUC2IUC2IVF22 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUC2IUC2IVF22 self, unsigned char const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned char":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUC2IUC2IVF22 self) -> unsigned char

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUC2IUC2IVF22 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUC2IUC2IVF22 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUC2IUC2IVF22 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUC2IUC2IVF22 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUC2IUC2IVF22

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC2IUC2IVF22 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUC2IUC2IVF22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUC2IUC2IVF22

        Create a new object of the class itkWarpImageFilterIUC2IUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUC2IUC2IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUC2IUC2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUC2IUC2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUC2IUC2IVF22.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_Clone, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetDisplacementField, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetDisplacementField, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetInterpolator, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetModifiableInterpolator, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetInterpolator, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputSpacing, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetOutputSpacing, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputOrigin, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetOutputOrigin, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputDirection, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetOutputDirection, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputParametersFromImage, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputStartIndex, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetOutputStartIndex, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetOutputSize, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetOutputSize, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_SetEdgePaddingValue, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GetEdgePaddingValue, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GenerateOutputInformation, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_GenerateInputRequestedRegion, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_BeforeThreadedGenerateData, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_AfterThreadedGenerateData, None, itkWarpImageFilterIUC2IUC2IVF22)
itkWarpImageFilterIUC2IUC2IVF22_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_swigregister
itkWarpImageFilterIUC2IUC2IVF22_swigregister(itkWarpImageFilterIUC2IUC2IVF22)

def itkWarpImageFilterIUC2IUC2IVF22___New_orig__() -> "itkWarpImageFilterIUC2IUC2IVF22_Pointer":
    """itkWarpImageFilterIUC2IUC2IVF22___New_orig__() -> itkWarpImageFilterIUC2IUC2IVF22_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22___New_orig__()

def itkWarpImageFilterIUC2IUC2IVF22_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC2IUC2IVF22 *":
    """itkWarpImageFilterIUC2IUC2IVF22_cast(itkLightObject obj) -> itkWarpImageFilterIUC2IUC2IVF22"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF22_cast(obj)

class itkWarpImageFilterIUC2IUC2IVF32(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUC2IUC2IVF32_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUC2IUC2IVF32_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUC2IUC2IVF32_Pointer":
        """Clone(itkWarpImageFilterIUC2IUC2IVF32 self) -> itkWarpImageFilterIUC2IUC2IVF32_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF32') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUC2IUC2IVF32 self, itkImageVF32 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF32 const *":
        """GetDisplacementField(itkWarpImageFilterIUC2IUC2IVF32 self) -> itkImageVF32"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUC2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUC2IUC2IVF32 self, itkInterpolateImageFunctionIUC2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUC2D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUC2IUC2IVF32 self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUC2D *":
        """
        GetInterpolator(itkWarpImageFilterIUC2IUC2IVF32 self) -> itkInterpolateImageFunctionIUC2D
        GetInterpolator(itkWarpImageFilterIUC2IUC2IVF32 self) -> itkInterpolateImageFunctionIUC2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUC2IUC2IVF32 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterIUC2IUC2IVF32 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUC2IUC2IVF32 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUC2IUC2IVF32 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterIUC2IUC2IVF32 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUC2IUC2IVF32 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUC2IUC2IVF32 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterIUC2IUC2IVF32 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUC2IUC2IVF32 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUC2IUC2IVF32 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUC2IUC2IVF32 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUC2IUC2IVF32 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterIUC2IUC2IVF32 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUC2IUC2IVF32 self, unsigned char const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned char":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUC2IUC2IVF32 self) -> unsigned char

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUC2IUC2IVF32 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUC2IUC2IVF32 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUC2IUC2IVF32 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUC2IUC2IVF32 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUC2IUC2IVF32

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC2IUC2IVF32 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUC2IUC2IVF32"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUC2IUC2IVF32

        Create a new object of the class itkWarpImageFilterIUC2IUC2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUC2IUC2IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUC2IUC2IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUC2IUC2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUC2IUC2IVF32.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_Clone, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetDisplacementField, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetDisplacementField, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetInterpolator, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetModifiableInterpolator, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetInterpolator, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputSpacing, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetOutputSpacing, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputOrigin, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetOutputOrigin, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputDirection, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetOutputDirection, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputParametersFromImage, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputStartIndex, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetOutputStartIndex, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetOutputSize, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetOutputSize, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_SetEdgePaddingValue, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GetEdgePaddingValue, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GenerateOutputInformation, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_GenerateInputRequestedRegion, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_BeforeThreadedGenerateData, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_AfterThreadedGenerateData, None, itkWarpImageFilterIUC2IUC2IVF32)
itkWarpImageFilterIUC2IUC2IVF32_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_swigregister
itkWarpImageFilterIUC2IUC2IVF32_swigregister(itkWarpImageFilterIUC2IUC2IVF32)

def itkWarpImageFilterIUC2IUC2IVF32___New_orig__() -> "itkWarpImageFilterIUC2IUC2IVF32_Pointer":
    """itkWarpImageFilterIUC2IUC2IVF32___New_orig__() -> itkWarpImageFilterIUC2IUC2IVF32_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32___New_orig__()

def itkWarpImageFilterIUC2IUC2IVF32_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC2IUC2IVF32 *":
    """itkWarpImageFilterIUC2IUC2IVF32_cast(itkLightObject obj) -> itkWarpImageFilterIUC2IUC2IVF32"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF32_cast(obj)

class itkWarpImageFilterIUC2IUC2IVF42(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUC2IUC2IVF42_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUC2IUC2IVF42_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUC2IUC2IVF42_Pointer":
        """Clone(itkWarpImageFilterIUC2IUC2IVF42 self) -> itkWarpImageFilterIUC2IUC2IVF42_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF42') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUC2IUC2IVF42 self, itkImageVF42 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF42 const *":
        """GetDisplacementField(itkWarpImageFilterIUC2IUC2IVF42 self) -> itkImageVF42"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUC2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUC2IUC2IVF42 self, itkInterpolateImageFunctionIUC2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUC2D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUC2IUC2IVF42 self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUC2D *":
        """
        GetInterpolator(itkWarpImageFilterIUC2IUC2IVF42 self) -> itkInterpolateImageFunctionIUC2D
        GetInterpolator(itkWarpImageFilterIUC2IUC2IVF42 self) -> itkInterpolateImageFunctionIUC2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUC2IUC2IVF42 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterIUC2IUC2IVF42 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUC2IUC2IVF42 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUC2IUC2IVF42 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterIUC2IUC2IVF42 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUC2IUC2IVF42 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUC2IUC2IVF42 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterIUC2IUC2IVF42 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUC2IUC2IVF42 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUC2IUC2IVF42 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUC2IUC2IVF42 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUC2IUC2IVF42 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterIUC2IUC2IVF42 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUC2IUC2IVF42 self, unsigned char const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned char":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUC2IUC2IVF42 self) -> unsigned char

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUC2IUC2IVF42 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUC2IUC2IVF42 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUC2IUC2IVF42 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUC2IUC2IVF42 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUC2IUC2IVF42

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC2IUC2IVF42 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUC2IUC2IVF42"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUC2IUC2IVF42

        Create a new object of the class itkWarpImageFilterIUC2IUC2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUC2IUC2IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUC2IUC2IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUC2IUC2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUC2IUC2IVF42.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_Clone, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetDisplacementField, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetDisplacementField, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetInterpolator, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetModifiableInterpolator, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetInterpolator, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputSpacing, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetOutputSpacing, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputOrigin, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetOutputOrigin, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputDirection, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetOutputDirection, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputParametersFromImage, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputStartIndex, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetOutputStartIndex, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetOutputSize, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetOutputSize, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_SetEdgePaddingValue, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GetEdgePaddingValue, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GenerateOutputInformation, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_GenerateInputRequestedRegion, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_BeforeThreadedGenerateData, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_AfterThreadedGenerateData, None, itkWarpImageFilterIUC2IUC2IVF42)
itkWarpImageFilterIUC2IUC2IVF42_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_swigregister
itkWarpImageFilterIUC2IUC2IVF42_swigregister(itkWarpImageFilterIUC2IUC2IVF42)

def itkWarpImageFilterIUC2IUC2IVF42___New_orig__() -> "itkWarpImageFilterIUC2IUC2IVF42_Pointer":
    """itkWarpImageFilterIUC2IUC2IVF42___New_orig__() -> itkWarpImageFilterIUC2IUC2IVF42_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42___New_orig__()

def itkWarpImageFilterIUC2IUC2IVF42_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC2IUC2IVF42 *":
    """itkWarpImageFilterIUC2IUC2IVF42_cast(itkLightObject obj) -> itkWarpImageFilterIUC2IUC2IVF42"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC2IUC2IVF42_cast(obj)

class itkWarpImageFilterIUC3IUC3IVF23(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUC3IUC3IVF23_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUC3IUC3IVF23_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUC3IUC3IVF23_Pointer":
        """Clone(itkWarpImageFilterIUC3IUC3IVF23 self) -> itkWarpImageFilterIUC3IUC3IVF23_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF23') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUC3IUC3IVF23 self, itkImageVF23 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF23 const *":
        """GetDisplacementField(itkWarpImageFilterIUC3IUC3IVF23 self) -> itkImageVF23"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUC3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUC3IUC3IVF23 self, itkInterpolateImageFunctionIUC3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUC3D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUC3IUC3IVF23 self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUC3D *":
        """
        GetInterpolator(itkWarpImageFilterIUC3IUC3IVF23 self) -> itkInterpolateImageFunctionIUC3D
        GetInterpolator(itkWarpImageFilterIUC3IUC3IVF23 self) -> itkInterpolateImageFunctionIUC3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUC3IUC3IVF23 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterIUC3IUC3IVF23 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUC3IUC3IVF23 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUC3IUC3IVF23 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterIUC3IUC3IVF23 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUC3IUC3IVF23 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUC3IUC3IVF23 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterIUC3IUC3IVF23 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUC3IUC3IVF23 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUC3IUC3IVF23 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUC3IUC3IVF23 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUC3IUC3IVF23 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterIUC3IUC3IVF23 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUC3IUC3IVF23 self, unsigned char const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned char":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUC3IUC3IVF23 self) -> unsigned char

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUC3IUC3IVF23 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUC3IUC3IVF23 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUC3IUC3IVF23 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUC3IUC3IVF23 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUC3IUC3IVF23

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC3IUC3IVF23 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUC3IUC3IVF23"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUC3IUC3IVF23

        Create a new object of the class itkWarpImageFilterIUC3IUC3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUC3IUC3IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUC3IUC3IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUC3IUC3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUC3IUC3IVF23.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_Clone, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetDisplacementField, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetDisplacementField, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetInterpolator, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetModifiableInterpolator, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetInterpolator, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputSpacing, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetOutputSpacing, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputOrigin, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetOutputOrigin, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputDirection, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetOutputDirection, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputParametersFromImage, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputStartIndex, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetOutputStartIndex, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetOutputSize, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetOutputSize, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_SetEdgePaddingValue, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GetEdgePaddingValue, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GenerateOutputInformation, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_GenerateInputRequestedRegion, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_BeforeThreadedGenerateData, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_AfterThreadedGenerateData, None, itkWarpImageFilterIUC3IUC3IVF23)
itkWarpImageFilterIUC3IUC3IVF23_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_swigregister
itkWarpImageFilterIUC3IUC3IVF23_swigregister(itkWarpImageFilterIUC3IUC3IVF23)

def itkWarpImageFilterIUC3IUC3IVF23___New_orig__() -> "itkWarpImageFilterIUC3IUC3IVF23_Pointer":
    """itkWarpImageFilterIUC3IUC3IVF23___New_orig__() -> itkWarpImageFilterIUC3IUC3IVF23_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23___New_orig__()

def itkWarpImageFilterIUC3IUC3IVF23_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC3IUC3IVF23 *":
    """itkWarpImageFilterIUC3IUC3IVF23_cast(itkLightObject obj) -> itkWarpImageFilterIUC3IUC3IVF23"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF23_cast(obj)

class itkWarpImageFilterIUC3IUC3IVF33(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUC3IUC3IVF33_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUC3IUC3IVF33_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUC3IUC3IVF33_Pointer":
        """Clone(itkWarpImageFilterIUC3IUC3IVF33 self) -> itkWarpImageFilterIUC3IUC3IVF33_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF33') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUC3IUC3IVF33 self, itkImageVF33 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF33 const *":
        """GetDisplacementField(itkWarpImageFilterIUC3IUC3IVF33 self) -> itkImageVF33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUC3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUC3IUC3IVF33 self, itkInterpolateImageFunctionIUC3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUC3D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUC3IUC3IVF33 self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUC3D *":
        """
        GetInterpolator(itkWarpImageFilterIUC3IUC3IVF33 self) -> itkInterpolateImageFunctionIUC3D
        GetInterpolator(itkWarpImageFilterIUC3IUC3IVF33 self) -> itkInterpolateImageFunctionIUC3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUC3IUC3IVF33 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterIUC3IUC3IVF33 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUC3IUC3IVF33 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUC3IUC3IVF33 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterIUC3IUC3IVF33 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUC3IUC3IVF33 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUC3IUC3IVF33 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterIUC3IUC3IVF33 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUC3IUC3IVF33 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUC3IUC3IVF33 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUC3IUC3IVF33 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUC3IUC3IVF33 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterIUC3IUC3IVF33 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUC3IUC3IVF33 self, unsigned char const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned char":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUC3IUC3IVF33 self) -> unsigned char

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUC3IUC3IVF33 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUC3IUC3IVF33 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUC3IUC3IVF33 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUC3IUC3IVF33 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUC3IUC3IVF33

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC3IUC3IVF33 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUC3IUC3IVF33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUC3IUC3IVF33

        Create a new object of the class itkWarpImageFilterIUC3IUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUC3IUC3IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUC3IUC3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUC3IUC3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUC3IUC3IVF33.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_Clone, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetDisplacementField, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetDisplacementField, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetInterpolator, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetModifiableInterpolator, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetInterpolator, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputSpacing, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetOutputSpacing, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputOrigin, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetOutputOrigin, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputDirection, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetOutputDirection, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputParametersFromImage, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputStartIndex, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetOutputStartIndex, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetOutputSize, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetOutputSize, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_SetEdgePaddingValue, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GetEdgePaddingValue, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GenerateOutputInformation, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_GenerateInputRequestedRegion, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_BeforeThreadedGenerateData, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_AfterThreadedGenerateData, None, itkWarpImageFilterIUC3IUC3IVF33)
itkWarpImageFilterIUC3IUC3IVF33_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_swigregister
itkWarpImageFilterIUC3IUC3IVF33_swigregister(itkWarpImageFilterIUC3IUC3IVF33)

def itkWarpImageFilterIUC3IUC3IVF33___New_orig__() -> "itkWarpImageFilterIUC3IUC3IVF33_Pointer":
    """itkWarpImageFilterIUC3IUC3IVF33___New_orig__() -> itkWarpImageFilterIUC3IUC3IVF33_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33___New_orig__()

def itkWarpImageFilterIUC3IUC3IVF33_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC3IUC3IVF33 *":
    """itkWarpImageFilterIUC3IUC3IVF33_cast(itkLightObject obj) -> itkWarpImageFilterIUC3IUC3IVF33"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF33_cast(obj)

class itkWarpImageFilterIUC3IUC3IVF43(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUC3IUC3IVF43_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUC3IUC3IVF43_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUC3IUC3IVF43_Pointer":
        """Clone(itkWarpImageFilterIUC3IUC3IVF43 self) -> itkWarpImageFilterIUC3IUC3IVF43_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF43') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUC3IUC3IVF43 self, itkImageVF43 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF43 const *":
        """GetDisplacementField(itkWarpImageFilterIUC3IUC3IVF43 self) -> itkImageVF43"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUC3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUC3IUC3IVF43 self, itkInterpolateImageFunctionIUC3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUC3D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUC3IUC3IVF43 self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUC3D *":
        """
        GetInterpolator(itkWarpImageFilterIUC3IUC3IVF43 self) -> itkInterpolateImageFunctionIUC3D
        GetInterpolator(itkWarpImageFilterIUC3IUC3IVF43 self) -> itkInterpolateImageFunctionIUC3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUC3IUC3IVF43 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterIUC3IUC3IVF43 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUC3IUC3IVF43 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUC3IUC3IVF43 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterIUC3IUC3IVF43 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUC3IUC3IVF43 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUC3IUC3IVF43 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterIUC3IUC3IVF43 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUC3IUC3IVF43 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUC3IUC3IVF43 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUC3IUC3IVF43 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUC3IUC3IVF43 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterIUC3IUC3IVF43 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUC3IUC3IVF43 self, unsigned char const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned char":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUC3IUC3IVF43 self) -> unsigned char

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUC3IUC3IVF43 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUC3IUC3IVF43 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUC3IUC3IVF43 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUC3IUC3IVF43 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUC3IUC3IVF43

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC3IUC3IVF43 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUC3IUC3IVF43"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUC3IUC3IVF43

        Create a new object of the class itkWarpImageFilterIUC3IUC3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUC3IUC3IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUC3IUC3IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUC3IUC3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUC3IUC3IVF43.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_Clone, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetDisplacementField, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetDisplacementField, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetInterpolator, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetModifiableInterpolator, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetInterpolator, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputSpacing, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetOutputSpacing, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputOrigin, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetOutputOrigin, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputDirection, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetOutputDirection, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputParametersFromImage, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputStartIndex, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetOutputStartIndex, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetOutputSize, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetOutputSize, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_SetEdgePaddingValue, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GetEdgePaddingValue, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GenerateOutputInformation, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_GenerateInputRequestedRegion, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_BeforeThreadedGenerateData, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_AfterThreadedGenerateData, None, itkWarpImageFilterIUC3IUC3IVF43)
itkWarpImageFilterIUC3IUC3IVF43_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_swigregister
itkWarpImageFilterIUC3IUC3IVF43_swigregister(itkWarpImageFilterIUC3IUC3IVF43)

def itkWarpImageFilterIUC3IUC3IVF43___New_orig__() -> "itkWarpImageFilterIUC3IUC3IVF43_Pointer":
    """itkWarpImageFilterIUC3IUC3IVF43___New_orig__() -> itkWarpImageFilterIUC3IUC3IVF43_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43___New_orig__()

def itkWarpImageFilterIUC3IUC3IVF43_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUC3IUC3IVF43 *":
    """itkWarpImageFilterIUC3IUC3IVF43_cast(itkLightObject obj) -> itkWarpImageFilterIUC3IUC3IVF43"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUC3IUC3IVF43_cast(obj)

class itkWarpImageFilterIUS2IUS2IVF22(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUS2IUS2IVF22_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUS2IUS2IVF22_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUS2IUS2IVF22_Pointer":
        """Clone(itkWarpImageFilterIUS2IUS2IVF22 self) -> itkWarpImageFilterIUS2IUS2IVF22_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF22') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUS2IUS2IVF22 self, itkImageVF22 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF22 const *":
        """GetDisplacementField(itkWarpImageFilterIUS2IUS2IVF22 self) -> itkImageVF22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUS2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUS2IUS2IVF22 self, itkInterpolateImageFunctionIUS2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUS2D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUS2IUS2IVF22 self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUS2D *":
        """
        GetInterpolator(itkWarpImageFilterIUS2IUS2IVF22 self) -> itkInterpolateImageFunctionIUS2D
        GetInterpolator(itkWarpImageFilterIUS2IUS2IVF22 self) -> itkInterpolateImageFunctionIUS2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUS2IUS2IVF22 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterIUS2IUS2IVF22 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUS2IUS2IVF22 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUS2IUS2IVF22 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterIUS2IUS2IVF22 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUS2IUS2IVF22 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUS2IUS2IVF22 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterIUS2IUS2IVF22 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUS2IUS2IVF22 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUS2IUS2IVF22 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUS2IUS2IVF22 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUS2IUS2IVF22 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterIUS2IUS2IVF22 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUS2IUS2IVF22 self, unsigned short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned short":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUS2IUS2IVF22 self) -> unsigned short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUS2IUS2IVF22 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUS2IUS2IVF22 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUS2IUS2IVF22 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUS2IUS2IVF22 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUS2IUS2IVF22

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS2IUS2IVF22 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUS2IUS2IVF22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUS2IUS2IVF22

        Create a new object of the class itkWarpImageFilterIUS2IUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUS2IUS2IVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUS2IUS2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUS2IUS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUS2IUS2IVF22.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_Clone, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetDisplacementField, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetDisplacementField, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetInterpolator, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetModifiableInterpolator, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetInterpolator, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputSpacing, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetOutputSpacing, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputOrigin, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetOutputOrigin, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputDirection, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetOutputDirection, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputParametersFromImage, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputStartIndex, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetOutputStartIndex, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetOutputSize, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetOutputSize, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_SetEdgePaddingValue, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GetEdgePaddingValue, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GenerateOutputInformation, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_GenerateInputRequestedRegion, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_BeforeThreadedGenerateData, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_AfterThreadedGenerateData, None, itkWarpImageFilterIUS2IUS2IVF22)
itkWarpImageFilterIUS2IUS2IVF22_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_swigregister
itkWarpImageFilterIUS2IUS2IVF22_swigregister(itkWarpImageFilterIUS2IUS2IVF22)

def itkWarpImageFilterIUS2IUS2IVF22___New_orig__() -> "itkWarpImageFilterIUS2IUS2IVF22_Pointer":
    """itkWarpImageFilterIUS2IUS2IVF22___New_orig__() -> itkWarpImageFilterIUS2IUS2IVF22_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22___New_orig__()

def itkWarpImageFilterIUS2IUS2IVF22_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS2IUS2IVF22 *":
    """itkWarpImageFilterIUS2IUS2IVF22_cast(itkLightObject obj) -> itkWarpImageFilterIUS2IUS2IVF22"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF22_cast(obj)

class itkWarpImageFilterIUS2IUS2IVF32(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUS2IUS2IVF32_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUS2IUS2IVF32_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUS2IUS2IVF32_Pointer":
        """Clone(itkWarpImageFilterIUS2IUS2IVF32 self) -> itkWarpImageFilterIUS2IUS2IVF32_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF32') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUS2IUS2IVF32 self, itkImageVF32 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF32 const *":
        """GetDisplacementField(itkWarpImageFilterIUS2IUS2IVF32 self) -> itkImageVF32"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUS2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUS2IUS2IVF32 self, itkInterpolateImageFunctionIUS2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUS2D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUS2IUS2IVF32 self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUS2D *":
        """
        GetInterpolator(itkWarpImageFilterIUS2IUS2IVF32 self) -> itkInterpolateImageFunctionIUS2D
        GetInterpolator(itkWarpImageFilterIUS2IUS2IVF32 self) -> itkInterpolateImageFunctionIUS2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUS2IUS2IVF32 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterIUS2IUS2IVF32 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUS2IUS2IVF32 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUS2IUS2IVF32 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterIUS2IUS2IVF32 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUS2IUS2IVF32 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUS2IUS2IVF32 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterIUS2IUS2IVF32 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUS2IUS2IVF32 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUS2IUS2IVF32 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUS2IUS2IVF32 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUS2IUS2IVF32 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterIUS2IUS2IVF32 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUS2IUS2IVF32 self, unsigned short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned short":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUS2IUS2IVF32 self) -> unsigned short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUS2IUS2IVF32 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUS2IUS2IVF32 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUS2IUS2IVF32 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUS2IUS2IVF32 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUS2IUS2IVF32

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS2IUS2IVF32 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUS2IUS2IVF32"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUS2IUS2IVF32

        Create a new object of the class itkWarpImageFilterIUS2IUS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUS2IUS2IVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUS2IUS2IVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUS2IUS2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUS2IUS2IVF32.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_Clone, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetDisplacementField, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetDisplacementField, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetInterpolator, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetModifiableInterpolator, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetInterpolator, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputSpacing, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetOutputSpacing, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputOrigin, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetOutputOrigin, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputDirection, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetOutputDirection, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputParametersFromImage, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputStartIndex, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetOutputStartIndex, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetOutputSize, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetOutputSize, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_SetEdgePaddingValue, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GetEdgePaddingValue, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GenerateOutputInformation, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_GenerateInputRequestedRegion, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_BeforeThreadedGenerateData, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_AfterThreadedGenerateData, None, itkWarpImageFilterIUS2IUS2IVF32)
itkWarpImageFilterIUS2IUS2IVF32_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_swigregister
itkWarpImageFilterIUS2IUS2IVF32_swigregister(itkWarpImageFilterIUS2IUS2IVF32)

def itkWarpImageFilterIUS2IUS2IVF32___New_orig__() -> "itkWarpImageFilterIUS2IUS2IVF32_Pointer":
    """itkWarpImageFilterIUS2IUS2IVF32___New_orig__() -> itkWarpImageFilterIUS2IUS2IVF32_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32___New_orig__()

def itkWarpImageFilterIUS2IUS2IVF32_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS2IUS2IVF32 *":
    """itkWarpImageFilterIUS2IUS2IVF32_cast(itkLightObject obj) -> itkWarpImageFilterIUS2IUS2IVF32"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF32_cast(obj)

class itkWarpImageFilterIUS2IUS2IVF42(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUS2IUS2IVF42_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUS2IUS2IVF42_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUS2IUS2IVF42_Pointer":
        """Clone(itkWarpImageFilterIUS2IUS2IVF42 self) -> itkWarpImageFilterIUS2IUS2IVF42_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF42') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUS2IUS2IVF42 self, itkImageVF42 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF42 const *":
        """GetDisplacementField(itkWarpImageFilterIUS2IUS2IVF42 self) -> itkImageVF42"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUS2D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUS2IUS2IVF42 self, itkInterpolateImageFunctionIUS2D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUS2D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUS2IUS2IVF42 self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUS2D *":
        """
        GetInterpolator(itkWarpImageFilterIUS2IUS2IVF42 self) -> itkInterpolateImageFunctionIUS2D
        GetInterpolator(itkWarpImageFilterIUS2IUS2IVF42 self) -> itkInterpolateImageFunctionIUS2D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUS2IUS2IVF42 self, itkVectorD2 _arg)
        SetOutputSpacing(itkWarpImageFilterIUS2IUS2IVF42 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD2 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUS2IUS2IVF42 self) -> itkVectorD2

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUS2IUS2IVF42 self, itkPointD2 _arg)
        SetOutputOrigin(itkWarpImageFilterIUS2IUS2IVF42 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD2 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUS2IUS2IVF42 self) -> itkPointD2

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD22') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUS2IUS2IVF42 self, itkMatrixD22 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD22 const &":
        """GetOutputDirection(itkWarpImageFilterIUS2IUS2IVF42 self) -> itkMatrixD22"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase2') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUS2IUS2IVF42 self, itkImageBase2 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex2') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUS2IUS2IVF42 self, itkIndex2 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex2 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUS2IUS2IVF42 self) -> itkIndex2

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize2') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUS2IUS2IVF42 self, itkSize2 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize2 const &":
        """
        GetOutputSize(itkWarpImageFilterIUS2IUS2IVF42 self) -> itkSize2

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUS2IUS2IVF42 self, unsigned short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned short":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUS2IUS2IVF42 self) -> unsigned short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUS2IUS2IVF42 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUS2IUS2IVF42 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUS2IUS2IVF42 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUS2IUS2IVF42 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUS2IUS2IVF42

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS2IUS2IVF42 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUS2IUS2IVF42"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUS2IUS2IVF42

        Create a new object of the class itkWarpImageFilterIUS2IUS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUS2IUS2IVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUS2IUS2IVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUS2IUS2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUS2IUS2IVF42.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_Clone, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetDisplacementField, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetDisplacementField, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetInterpolator, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetModifiableInterpolator, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetInterpolator, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputSpacing, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetOutputSpacing, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputOrigin, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetOutputOrigin, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputDirection, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetOutputDirection, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputParametersFromImage, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputStartIndex, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetOutputStartIndex, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetOutputSize, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetOutputSize, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_SetEdgePaddingValue, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GetEdgePaddingValue, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GenerateOutputInformation, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_GenerateInputRequestedRegion, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_BeforeThreadedGenerateData, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_AfterThreadedGenerateData, None, itkWarpImageFilterIUS2IUS2IVF42)
itkWarpImageFilterIUS2IUS2IVF42_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_swigregister
itkWarpImageFilterIUS2IUS2IVF42_swigregister(itkWarpImageFilterIUS2IUS2IVF42)

def itkWarpImageFilterIUS2IUS2IVF42___New_orig__() -> "itkWarpImageFilterIUS2IUS2IVF42_Pointer":
    """itkWarpImageFilterIUS2IUS2IVF42___New_orig__() -> itkWarpImageFilterIUS2IUS2IVF42_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42___New_orig__()

def itkWarpImageFilterIUS2IUS2IVF42_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS2IUS2IVF42 *":
    """itkWarpImageFilterIUS2IUS2IVF42_cast(itkLightObject obj) -> itkWarpImageFilterIUS2IUS2IVF42"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS2IUS2IVF42_cast(obj)

class itkWarpImageFilterIUS3IUS3IVF23(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUS3IUS3IVF23_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUS3IUS3IVF23_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUS3IUS3IVF23_Pointer":
        """Clone(itkWarpImageFilterIUS3IUS3IVF23 self) -> itkWarpImageFilterIUS3IUS3IVF23_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF23') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUS3IUS3IVF23 self, itkImageVF23 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF23 const *":
        """GetDisplacementField(itkWarpImageFilterIUS3IUS3IVF23 self) -> itkImageVF23"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUS3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUS3IUS3IVF23 self, itkInterpolateImageFunctionIUS3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUS3D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUS3IUS3IVF23 self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUS3D *":
        """
        GetInterpolator(itkWarpImageFilterIUS3IUS3IVF23 self) -> itkInterpolateImageFunctionIUS3D
        GetInterpolator(itkWarpImageFilterIUS3IUS3IVF23 self) -> itkInterpolateImageFunctionIUS3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUS3IUS3IVF23 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterIUS3IUS3IVF23 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUS3IUS3IVF23 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUS3IUS3IVF23 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterIUS3IUS3IVF23 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUS3IUS3IVF23 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUS3IUS3IVF23 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterIUS3IUS3IVF23 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUS3IUS3IVF23 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUS3IUS3IVF23 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUS3IUS3IVF23 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUS3IUS3IVF23 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterIUS3IUS3IVF23 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUS3IUS3IVF23 self, unsigned short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned short":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUS3IUS3IVF23 self) -> unsigned short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUS3IUS3IVF23 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUS3IUS3IVF23 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUS3IUS3IVF23 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUS3IUS3IVF23 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUS3IUS3IVF23

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS3IUS3IVF23 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUS3IUS3IVF23"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUS3IUS3IVF23

        Create a new object of the class itkWarpImageFilterIUS3IUS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUS3IUS3IVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUS3IUS3IVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUS3IUS3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUS3IUS3IVF23.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_Clone, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetDisplacementField, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetDisplacementField, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetInterpolator, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetModifiableInterpolator, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetInterpolator, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputSpacing, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetOutputSpacing, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputOrigin, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetOutputOrigin, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputDirection, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetOutputDirection, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputParametersFromImage, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputStartIndex, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetOutputStartIndex, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetOutputSize, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetOutputSize, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_SetEdgePaddingValue, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GetEdgePaddingValue, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GenerateOutputInformation, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_GenerateInputRequestedRegion, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_BeforeThreadedGenerateData, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_AfterThreadedGenerateData, None, itkWarpImageFilterIUS3IUS3IVF23)
itkWarpImageFilterIUS3IUS3IVF23_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_swigregister
itkWarpImageFilterIUS3IUS3IVF23_swigregister(itkWarpImageFilterIUS3IUS3IVF23)

def itkWarpImageFilterIUS3IUS3IVF23___New_orig__() -> "itkWarpImageFilterIUS3IUS3IVF23_Pointer":
    """itkWarpImageFilterIUS3IUS3IVF23___New_orig__() -> itkWarpImageFilterIUS3IUS3IVF23_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23___New_orig__()

def itkWarpImageFilterIUS3IUS3IVF23_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS3IUS3IVF23 *":
    """itkWarpImageFilterIUS3IUS3IVF23_cast(itkLightObject obj) -> itkWarpImageFilterIUS3IUS3IVF23"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF23_cast(obj)

class itkWarpImageFilterIUS3IUS3IVF33(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUS3IUS3IVF33_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUS3IUS3IVF33_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUS3IUS3IVF33_Pointer":
        """Clone(itkWarpImageFilterIUS3IUS3IVF33 self) -> itkWarpImageFilterIUS3IUS3IVF33_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF33') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUS3IUS3IVF33 self, itkImageVF33 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF33 const *":
        """GetDisplacementField(itkWarpImageFilterIUS3IUS3IVF33 self) -> itkImageVF33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUS3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUS3IUS3IVF33 self, itkInterpolateImageFunctionIUS3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUS3D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUS3IUS3IVF33 self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUS3D *":
        """
        GetInterpolator(itkWarpImageFilterIUS3IUS3IVF33 self) -> itkInterpolateImageFunctionIUS3D
        GetInterpolator(itkWarpImageFilterIUS3IUS3IVF33 self) -> itkInterpolateImageFunctionIUS3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUS3IUS3IVF33 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterIUS3IUS3IVF33 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUS3IUS3IVF33 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUS3IUS3IVF33 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterIUS3IUS3IVF33 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUS3IUS3IVF33 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUS3IUS3IVF33 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterIUS3IUS3IVF33 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUS3IUS3IVF33 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUS3IUS3IVF33 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUS3IUS3IVF33 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUS3IUS3IVF33 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterIUS3IUS3IVF33 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUS3IUS3IVF33 self, unsigned short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned short":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUS3IUS3IVF33 self) -> unsigned short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUS3IUS3IVF33 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUS3IUS3IVF33 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUS3IUS3IVF33 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUS3IUS3IVF33 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUS3IUS3IVF33

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS3IUS3IVF33 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUS3IUS3IVF33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUS3IUS3IVF33

        Create a new object of the class itkWarpImageFilterIUS3IUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUS3IUS3IVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUS3IUS3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUS3IUS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUS3IUS3IVF33.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_Clone, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetDisplacementField, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetDisplacementField, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetInterpolator, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetModifiableInterpolator, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetInterpolator, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputSpacing, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetOutputSpacing, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputOrigin, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetOutputOrigin, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputDirection, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetOutputDirection, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputParametersFromImage, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputStartIndex, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetOutputStartIndex, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetOutputSize, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetOutputSize, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_SetEdgePaddingValue, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GetEdgePaddingValue, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GenerateOutputInformation, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_GenerateInputRequestedRegion, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_BeforeThreadedGenerateData, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_AfterThreadedGenerateData, None, itkWarpImageFilterIUS3IUS3IVF33)
itkWarpImageFilterIUS3IUS3IVF33_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_swigregister
itkWarpImageFilterIUS3IUS3IVF33_swigregister(itkWarpImageFilterIUS3IUS3IVF33)

def itkWarpImageFilterIUS3IUS3IVF33___New_orig__() -> "itkWarpImageFilterIUS3IUS3IVF33_Pointer":
    """itkWarpImageFilterIUS3IUS3IVF33___New_orig__() -> itkWarpImageFilterIUS3IUS3IVF33_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33___New_orig__()

def itkWarpImageFilterIUS3IUS3IVF33_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS3IUS3IVF33 *":
    """itkWarpImageFilterIUS3IUS3IVF33_cast(itkLightObject obj) -> itkWarpImageFilterIUS3IUS3IVF33"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF33_cast(obj)

class itkWarpImageFilterIUS3IUS3IVF43(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Warps an image using an input displacement field.

    WarpImageFilter warps an existing image with respect to a given
    displacement field.

    A displacement field is represented as a image whose pixel type is
    some vector type with at least N elements, where N is the dimension of
    the input image. The vector type must support element access via
    operator [].

    The output image is produced by inverse mapping: the output pixels are
    mapped back onto the input image. This scheme avoids the creation of
    any holes and overlaps in the output image.

    Each vector in the displacement field represent the distance between a
    geometric point in the input space and a point in the output space
    such that:

    \\[ p_{in} = p_{out} + d \\]

    Typically the mapped position does not correspond to an integer pixel
    position in the input image. Interpolation via an image function is
    used to compute values at non-integer positions. The default
    interpolation typed used is the LinearInterpolateImageFunction. The
    user can specify a particular interpolation function via
    SetInterpolator(). Note that the input interpolator must derive from
    base class InterpolateImageFunction.

    Position mapped to outside of the input image buffer are assigned a
    edge padding value.

    The LargetPossibleRegion for the output is inherited from the input
    displacement field. The output image spacing, origin and orientation
    may be set via SetOutputSpacing, SetOutputOrigin and
    SetOutputDirection. The default are respectively a vector of 1's, a
    vector of 0's and an identity matrix.

    This class is templated over the type of the input image, the type of
    the output image and the type of the displacement field.

    The input image is set via SetInput. The input displacement field is
    set via SetDisplacementField.

    This filter is implemented as a multithreaded filter.

    WARNING:  This filter assumes that the input type, output type and
    displacement field type all have the same number of dimensions.
    \\sphinx \\sphinxexample{Filtering/ImageGrid/WarpAnImageUsingADef
    ormationField,Warp An Image Using A Deformation Field} \\endsphinx

    C++ includes: itkWarpImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkWarpImageFilterIUS3IUS3IVF43_Pointer":
        """__New_orig__() -> itkWarpImageFilterIUS3IUS3IVF43_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkWarpImageFilterIUS3IUS3IVF43_Pointer":
        """Clone(itkWarpImageFilterIUS3IUS3IVF43 self) -> itkWarpImageFilterIUS3IUS3IVF43_Pointer"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_Clone(self)


    def SetDisplacementField(self, _arg: 'itkImageVF43') -> "void":
        """SetDisplacementField(itkWarpImageFilterIUS3IUS3IVF43 self, itkImageVF43 _arg)"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetDisplacementField(self, _arg)


    def GetDisplacementField(self) -> "itkImageVF43 const *":
        """GetDisplacementField(itkWarpImageFilterIUS3IUS3IVF43 self) -> itkImageVF43"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetDisplacementField(self)


    def SetInterpolator(self, _arg: 'itkInterpolateImageFunctionIUS3D') -> "void":
        """
        SetInterpolator(itkWarpImageFilterIUS3IUS3IVF43 self, itkInterpolateImageFunctionIUS3D _arg)

        Get/Set the
        interpolator function. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetInterpolator(self, _arg)


    def GetModifiableInterpolator(self) -> "itkInterpolateImageFunctionIUS3D *":
        """GetModifiableInterpolator(itkWarpImageFilterIUS3IUS3IVF43 self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetModifiableInterpolator(self)


    def GetInterpolator(self, *args) -> "itkInterpolateImageFunctionIUS3D *":
        """
        GetInterpolator(itkWarpImageFilterIUS3IUS3IVF43 self) -> itkInterpolateImageFunctionIUS3D
        GetInterpolator(itkWarpImageFilterIUS3IUS3IVF43 self) -> itkInterpolateImageFunctionIUS3D
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetInterpolator(self, *args)


    def SetOutputSpacing(self, *args) -> "void":
        """
        SetOutputSpacing(itkWarpImageFilterIUS3IUS3IVF43 self, itkVectorD3 _arg)
        SetOutputSpacing(itkWarpImageFilterIUS3IUS3IVF43 self, double const * values)

        Set the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputSpacing(self, *args)


    def GetOutputSpacing(self) -> "itkVectorD3 const &":
        """
        GetOutputSpacing(itkWarpImageFilterIUS3IUS3IVF43 self) -> itkVectorD3

        Get the output
        image spacing. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetOutputSpacing(self)


    def SetOutputOrigin(self, *args) -> "void":
        """
        SetOutputOrigin(itkWarpImageFilterIUS3IUS3IVF43 self, itkPointD3 _arg)
        SetOutputOrigin(itkWarpImageFilterIUS3IUS3IVF43 self, double const * values)

        Set the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputOrigin(self, *args)


    def GetOutputOrigin(self) -> "itkPointD3 const &":
        """
        GetOutputOrigin(itkWarpImageFilterIUS3IUS3IVF43 self) -> itkPointD3

        Get the output
        image origin. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetOutputOrigin(self)


    def SetOutputDirection(self, _arg: 'itkMatrixD33') -> "void":
        """
        SetOutputDirection(itkWarpImageFilterIUS3IUS3IVF43 self, itkMatrixD33 _arg)

        Set/Get the
        direction (orientation) of the output image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputDirection(self, _arg)


    def GetOutputDirection(self) -> "itkMatrixD33 const &":
        """GetOutputDirection(itkWarpImageFilterIUS3IUS3IVF43 self) -> itkMatrixD33"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetOutputDirection(self)


    def SetOutputParametersFromImage(self, image: 'itkImageBase3') -> "void":
        """
        SetOutputParametersFromImage(itkWarpImageFilterIUS3IUS3IVF43 self, itkImageBase3 image)

        Helper
        method to set the output parameters based on this image 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputParametersFromImage(self, image)


    def SetOutputStartIndex(self, _arg: 'itkIndex3') -> "void":
        """
        SetOutputStartIndex(itkWarpImageFilterIUS3IUS3IVF43 self, itkIndex3 _arg)

        Set the start
        index of the output largest possible region. The default is an index
        of all zeros. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputStartIndex(self, _arg)


    def GetOutputStartIndex(self) -> "itkIndex3 const &":
        """
        GetOutputStartIndex(itkWarpImageFilterIUS3IUS3IVF43 self) -> itkIndex3

        Get the start
        index of the output largest possible region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetOutputStartIndex(self)


    def SetOutputSize(self, _arg: 'itkSize3') -> "void":
        """
        SetOutputSize(itkWarpImageFilterIUS3IUS3IVF43 self, itkSize3 _arg)

        Set the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputSize(self, _arg)


    def GetOutputSize(self) -> "itkSize3 const &":
        """
        GetOutputSize(itkWarpImageFilterIUS3IUS3IVF43 self) -> itkSize3

        Get the size of the
        output image. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetOutputSize(self)


    def SetEdgePaddingValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetEdgePaddingValue(itkWarpImageFilterIUS3IUS3IVF43 self, unsigned short const _arg)

        Set the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetEdgePaddingValue(self, _arg)


    def GetEdgePaddingValue(self) -> "unsigned short":
        """
        GetEdgePaddingValue(itkWarpImageFilterIUS3IUS3IVF43 self) -> unsigned short

        Get the edge
        padding value 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetEdgePaddingValue(self)


    def GenerateOutputInformation(self) -> "void":
        """
        GenerateOutputInformation(itkWarpImageFilterIUS3IUS3IVF43 self)

        WarpImageFilter produces an image which is a different size than its
        input image. As such, it needs to provide an implementation for
        GenerateOutputInformation() which set the output information according
        the OutputSpacing, OutputOrigin and the displacement field's
        LargestPossibleRegion. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GenerateOutputInformation(self)


    def GenerateInputRequestedRegion(self) -> "void":
        """
        GenerateInputRequestedRegion(itkWarpImageFilterIUS3IUS3IVF43 self)

        It is
        difficult to compute in advance the input image region required to
        compute the requested output region. Thus the safest thing to do is to
        request for the whole input image.

        For the displacement field, the input requested region set to be the
        same as that of the output requested region. 
        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GenerateInputRequestedRegion(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkWarpImageFilterIUS3IUS3IVF43 self)

        This
        method is used to set the state of the filter before multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_BeforeThreadedGenerateData(self)


    def AfterThreadedGenerateData(self) -> "void":
        """
        AfterThreadedGenerateData(itkWarpImageFilterIUS3IUS3IVF43 self)

        This
        method is used to set the state of the filter after multi- threading.

        """
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_AfterThreadedGenerateData(self)

    SameDimensionCheck1 = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SameDimensionCheck1
    SameDimensionCheck2 = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SameDimensionCheck2
    InputHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_InputHasNumericTraitsCheck
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_DisplacementFieldHasNumericTraitsCheck
    __swig_destroy__ = _itkWarpImageFilterPython.delete_itkWarpImageFilterIUS3IUS3IVF43

    def cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS3IUS3IVF43 *":
        """cast(itkLightObject obj) -> itkWarpImageFilterIUS3IUS3IVF43"""
        return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIUS3IUS3IVF43

        Create a new object of the class itkWarpImageFilterIUS3IUS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIUS3IUS3IVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIUS3IUS3IVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkWarpImageFilterIUS3IUS3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkWarpImageFilterIUS3IUS3IVF43.Clone = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_Clone, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.SetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetDisplacementField, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GetDisplacementField = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetDisplacementField, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.SetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetInterpolator, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GetModifiableInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetModifiableInterpolator, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GetInterpolator = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetInterpolator, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.SetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputSpacing, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GetOutputSpacing = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetOutputSpacing, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.SetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputOrigin, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GetOutputOrigin = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetOutputOrigin, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.SetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputDirection, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GetOutputDirection = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetOutputDirection, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.SetOutputParametersFromImage = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputParametersFromImage, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.SetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputStartIndex, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GetOutputStartIndex = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetOutputStartIndex, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.SetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetOutputSize, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GetOutputSize = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetOutputSize, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.SetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_SetEdgePaddingValue, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GetEdgePaddingValue = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GetEdgePaddingValue, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GenerateOutputInformation = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GenerateOutputInformation, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.GenerateInputRequestedRegion = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_GenerateInputRequestedRegion, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.BeforeThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_BeforeThreadedGenerateData, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43.AfterThreadedGenerateData = new_instancemethod(_itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_AfterThreadedGenerateData, None, itkWarpImageFilterIUS3IUS3IVF43)
itkWarpImageFilterIUS3IUS3IVF43_swigregister = _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_swigregister
itkWarpImageFilterIUS3IUS3IVF43_swigregister(itkWarpImageFilterIUS3IUS3IVF43)

def itkWarpImageFilterIUS3IUS3IVF43___New_orig__() -> "itkWarpImageFilterIUS3IUS3IVF43_Pointer":
    """itkWarpImageFilterIUS3IUS3IVF43___New_orig__() -> itkWarpImageFilterIUS3IUS3IVF43_Pointer"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43___New_orig__()

def itkWarpImageFilterIUS3IUS3IVF43_cast(obj: 'itkLightObject') -> "itkWarpImageFilterIUS3IUS3IVF43 *":
    """itkWarpImageFilterIUS3IUS3IVF43_cast(itkLightObject obj) -> itkWarpImageFilterIUS3IUS3IVF43"""
    return _itkWarpImageFilterPython.itkWarpImageFilterIUS3IUS3IVF43_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def warp_image_filter(*args, **kwargs):
    """Procedural interface for WarpImageFilter"""
    import itk
    instance = itk.WarpImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def warp_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.WarpImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.WarpImageFilter.values()[0]
    else:
        filter_object = itk.WarpImageFilter

    warp_image_filter.__doc__ = filter_object.__doc__
    warp_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    warp_image_filter.__doc__ += "Available Keyword Arguments:\n"
    warp_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



