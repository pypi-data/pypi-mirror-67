# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkNotImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkNotImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkNotImageFilterPython
            return _itkNotImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkNotImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkNotImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkNotImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import pyBasePython
import itkMatrixPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRegionPython
import ITKCommonBasePython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterBPython

def itkNotImageFilterID3ID3_New():
  return itkNotImageFilterID3ID3.New()


def itkNotImageFilterID3ID3_Superclass_New():
  return itkNotImageFilterID3ID3_Superclass.New()


def itkNotImageFilterID2ID2_New():
  return itkNotImageFilterID2ID2.New()


def itkNotImageFilterID2ID2_Superclass_New():
  return itkNotImageFilterID2ID2_Superclass.New()


def itkNotImageFilterIF3IF3_New():
  return itkNotImageFilterIF3IF3.New()


def itkNotImageFilterIF3IF3_Superclass_New():
  return itkNotImageFilterIF3IF3_Superclass.New()


def itkNotImageFilterIF2IF2_New():
  return itkNotImageFilterIF2IF2.New()


def itkNotImageFilterIF2IF2_Superclass_New():
  return itkNotImageFilterIF2IF2_Superclass.New()


def itkNotImageFilterIUS3IUS3_New():
  return itkNotImageFilterIUS3IUS3.New()


def itkNotImageFilterIUS3IUS3_Superclass_New():
  return itkNotImageFilterIUS3IUS3_Superclass.New()


def itkNotImageFilterIUS2IUS2_New():
  return itkNotImageFilterIUS2IUS2.New()


def itkNotImageFilterIUS2IUS2_Superclass_New():
  return itkNotImageFilterIUS2IUS2_Superclass.New()


def itkNotImageFilterIUC3IUC3_New():
  return itkNotImageFilterIUC3IUC3.New()


def itkNotImageFilterIUC3IUC3_Superclass_New():
  return itkNotImageFilterIUC3IUC3_Superclass.New()


def itkNotImageFilterIUC2IUC2_New():
  return itkNotImageFilterIUC2IUC2.New()


def itkNotImageFilterIUC2IUC2_Superclass_New():
  return itkNotImageFilterIUC2IUC2_Superclass.New()


def itkNotImageFilterISS3ISS3_New():
  return itkNotImageFilterISS3ISS3.New()


def itkNotImageFilterISS3ISS3_Superclass_New():
  return itkNotImageFilterISS3ISS3_Superclass.New()


def itkNotImageFilterISS2ISS2_New():
  return itkNotImageFilterISS2ISS2.New()


def itkNotImageFilterISS2ISS2_Superclass_New():
  return itkNotImageFilterISS2ISS2_Superclass.New()

class itkNotImageFilterID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkNotImageFilterID2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterID2ID2_Superclass_Pointer":
        """__New_orig__() -> itkNotImageFilterID2ID2_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterID2ID2_Superclass_Pointer":
        """Clone(itkNotImageFilterID2ID2_Superclass self) -> itkNotImageFilterID2ID2_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::NOT< double,double > const &":
        """
        GetFunctor(itkNotImageFilterID2ID2_Superclass self) -> itk::Functor::NOT< double,double >
        GetFunctor(itkNotImageFilterID2ID2_Superclass self) -> itk::Functor::NOT< double,double > const &
        """
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::NOT< double,double > const &') -> "void":
        """SetFunctor(itkNotImageFilterID2ID2_Superclass self, itk::Functor::NOT< double,double > const & functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterID2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterID2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkNotImageFilterID2ID2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterID2ID2_Superclass

        Create a new object of the class itkNotImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterID2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterID2ID2_Superclass.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_Clone, None, itkNotImageFilterID2ID2_Superclass)
itkNotImageFilterID2ID2_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_GetFunctor, None, itkNotImageFilterID2ID2_Superclass)
itkNotImageFilterID2ID2_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_SetFunctor, None, itkNotImageFilterID2ID2_Superclass)
itkNotImageFilterID2ID2_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_swigregister
itkNotImageFilterID2ID2_Superclass_swigregister(itkNotImageFilterID2ID2_Superclass)

def itkNotImageFilterID2ID2_Superclass___New_orig__() -> "itkNotImageFilterID2ID2_Superclass_Pointer":
    """itkNotImageFilterID2ID2_Superclass___New_orig__() -> itkNotImageFilterID2ID2_Superclass_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass___New_orig__()

def itkNotImageFilterID2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkNotImageFilterID2ID2_Superclass *":
    """itkNotImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkNotImageFilterID2ID2_Superclass"""
    return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_cast(obj)

class itkNotImageFilterID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkNotImageFilterID3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterID3ID3_Superclass_Pointer":
        """__New_orig__() -> itkNotImageFilterID3ID3_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterID3ID3_Superclass_Pointer":
        """Clone(itkNotImageFilterID3ID3_Superclass self) -> itkNotImageFilterID3ID3_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::NOT< double,double > const &":
        """
        GetFunctor(itkNotImageFilterID3ID3_Superclass self) -> itk::Functor::NOT< double,double >
        GetFunctor(itkNotImageFilterID3ID3_Superclass self) -> itk::Functor::NOT< double,double > const &
        """
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::NOT< double,double > const &') -> "void":
        """SetFunctor(itkNotImageFilterID3ID3_Superclass self, itk::Functor::NOT< double,double > const & functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterID3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterID3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkNotImageFilterID3ID3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterID3ID3_Superclass

        Create a new object of the class itkNotImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterID3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterID3ID3_Superclass.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_Clone, None, itkNotImageFilterID3ID3_Superclass)
itkNotImageFilterID3ID3_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_GetFunctor, None, itkNotImageFilterID3ID3_Superclass)
itkNotImageFilterID3ID3_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_SetFunctor, None, itkNotImageFilterID3ID3_Superclass)
itkNotImageFilterID3ID3_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_swigregister
itkNotImageFilterID3ID3_Superclass_swigregister(itkNotImageFilterID3ID3_Superclass)

def itkNotImageFilterID3ID3_Superclass___New_orig__() -> "itkNotImageFilterID3ID3_Superclass_Pointer":
    """itkNotImageFilterID3ID3_Superclass___New_orig__() -> itkNotImageFilterID3ID3_Superclass_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass___New_orig__()

def itkNotImageFilterID3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkNotImageFilterID3ID3_Superclass *":
    """itkNotImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkNotImageFilterID3ID3_Superclass"""
    return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_cast(obj)

class itkNotImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkNotImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkNotImageFilterIF2IF2_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkNotImageFilterIF2IF2_Superclass self) -> itkNotImageFilterIF2IF2_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::NOT< float,float > const &":
        """
        GetFunctor(itkNotImageFilterIF2IF2_Superclass self) -> itk::Functor::NOT< float,float >
        GetFunctor(itkNotImageFilterIF2IF2_Superclass self) -> itk::Functor::NOT< float,float > const &
        """
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::NOT< float,float > const &') -> "void":
        """SetFunctor(itkNotImageFilterIF2IF2_Superclass self, itk::Functor::NOT< float,float > const & functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkNotImageFilterIF2IF2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIF2IF2_Superclass

        Create a new object of the class itkNotImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_Clone, None, itkNotImageFilterIF2IF2_Superclass)
itkNotImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_GetFunctor, None, itkNotImageFilterIF2IF2_Superclass)
itkNotImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_SetFunctor, None, itkNotImageFilterIF2IF2_Superclass)
itkNotImageFilterIF2IF2_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_swigregister
itkNotImageFilterIF2IF2_Superclass_swigregister(itkNotImageFilterIF2IF2_Superclass)

def itkNotImageFilterIF2IF2_Superclass___New_orig__() -> "itkNotImageFilterIF2IF2_Superclass_Pointer":
    """itkNotImageFilterIF2IF2_Superclass___New_orig__() -> itkNotImageFilterIF2IF2_Superclass_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass___New_orig__()

def itkNotImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkNotImageFilterIF2IF2_Superclass *":
    """itkNotImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIF2IF2_Superclass"""
    return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_cast(obj)

class itkNotImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkNotImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkNotImageFilterIF3IF3_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkNotImageFilterIF3IF3_Superclass self) -> itkNotImageFilterIF3IF3_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::NOT< float,float > const &":
        """
        GetFunctor(itkNotImageFilterIF3IF3_Superclass self) -> itk::Functor::NOT< float,float >
        GetFunctor(itkNotImageFilterIF3IF3_Superclass self) -> itk::Functor::NOT< float,float > const &
        """
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::NOT< float,float > const &') -> "void":
        """SetFunctor(itkNotImageFilterIF3IF3_Superclass self, itk::Functor::NOT< float,float > const & functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkNotImageFilterIF3IF3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIF3IF3_Superclass

        Create a new object of the class itkNotImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_Clone, None, itkNotImageFilterIF3IF3_Superclass)
itkNotImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_GetFunctor, None, itkNotImageFilterIF3IF3_Superclass)
itkNotImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_SetFunctor, None, itkNotImageFilterIF3IF3_Superclass)
itkNotImageFilterIF3IF3_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_swigregister
itkNotImageFilterIF3IF3_Superclass_swigregister(itkNotImageFilterIF3IF3_Superclass)

def itkNotImageFilterIF3IF3_Superclass___New_orig__() -> "itkNotImageFilterIF3IF3_Superclass_Pointer":
    """itkNotImageFilterIF3IF3_Superclass___New_orig__() -> itkNotImageFilterIF3IF3_Superclass_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass___New_orig__()

def itkNotImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkNotImageFilterIF3IF3_Superclass *":
    """itkNotImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIF3IF3_Superclass"""
    return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_cast(obj)

class itkNotImageFilterISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkNotImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkNotImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkNotImageFilterISS2ISS2_Superclass self) -> itkNotImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::NOT< short,short > const &":
        """
        GetFunctor(itkNotImageFilterISS2ISS2_Superclass self) -> itk::Functor::NOT< short,short >
        GetFunctor(itkNotImageFilterISS2ISS2_Superclass self) -> itk::Functor::NOT< short,short > const &
        """
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::NOT< short,short > const &') -> "void":
        """SetFunctor(itkNotImageFilterISS2ISS2_Superclass self, itk::Functor::NOT< short,short > const & functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkNotImageFilterISS2ISS2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterISS2ISS2_Superclass

        Create a new object of the class itkNotImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass_Clone, None, itkNotImageFilterISS2ISS2_Superclass)
itkNotImageFilterISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass_GetFunctor, None, itkNotImageFilterISS2ISS2_Superclass)
itkNotImageFilterISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass_SetFunctor, None, itkNotImageFilterISS2ISS2_Superclass)
itkNotImageFilterISS2ISS2_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass_swigregister
itkNotImageFilterISS2ISS2_Superclass_swigregister(itkNotImageFilterISS2ISS2_Superclass)

def itkNotImageFilterISS2ISS2_Superclass___New_orig__() -> "itkNotImageFilterISS2ISS2_Superclass_Pointer":
    """itkNotImageFilterISS2ISS2_Superclass___New_orig__() -> itkNotImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass___New_orig__()

def itkNotImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkNotImageFilterISS2ISS2_Superclass *":
    """itkNotImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkNotImageFilterISS2ISS2_Superclass"""
    return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Superclass_cast(obj)

class itkNotImageFilterISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkNotImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkNotImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkNotImageFilterISS3ISS3_Superclass self) -> itkNotImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::NOT< short,short > const &":
        """
        GetFunctor(itkNotImageFilterISS3ISS3_Superclass self) -> itk::Functor::NOT< short,short >
        GetFunctor(itkNotImageFilterISS3ISS3_Superclass self) -> itk::Functor::NOT< short,short > const &
        """
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::NOT< short,short > const &') -> "void":
        """SetFunctor(itkNotImageFilterISS3ISS3_Superclass self, itk::Functor::NOT< short,short > const & functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkNotImageFilterISS3ISS3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterISS3ISS3_Superclass

        Create a new object of the class itkNotImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass_Clone, None, itkNotImageFilterISS3ISS3_Superclass)
itkNotImageFilterISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass_GetFunctor, None, itkNotImageFilterISS3ISS3_Superclass)
itkNotImageFilterISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass_SetFunctor, None, itkNotImageFilterISS3ISS3_Superclass)
itkNotImageFilterISS3ISS3_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass_swigregister
itkNotImageFilterISS3ISS3_Superclass_swigregister(itkNotImageFilterISS3ISS3_Superclass)

def itkNotImageFilterISS3ISS3_Superclass___New_orig__() -> "itkNotImageFilterISS3ISS3_Superclass_Pointer":
    """itkNotImageFilterISS3ISS3_Superclass___New_orig__() -> itkNotImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass___New_orig__()

def itkNotImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkNotImageFilterISS3ISS3_Superclass *":
    """itkNotImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkNotImageFilterISS3ISS3_Superclass"""
    return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Superclass_cast(obj)

class itkNotImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkNotImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkNotImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkNotImageFilterIUC2IUC2_Superclass self) -> itkNotImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::NOT< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkNotImageFilterIUC2IUC2_Superclass self) -> itk::Functor::NOT< unsigned char,unsigned char >
        GetFunctor(itkNotImageFilterIUC2IUC2_Superclass self) -> itk::Functor::NOT< unsigned char,unsigned char > const &
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::NOT< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkNotImageFilterIUC2IUC2_Superclass self, itk::Functor::NOT< unsigned char,unsigned char > const & functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkNotImageFilterIUC2IUC2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkNotImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_Clone, None, itkNotImageFilterIUC2IUC2_Superclass)
itkNotImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_GetFunctor, None, itkNotImageFilterIUC2IUC2_Superclass)
itkNotImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_SetFunctor, None, itkNotImageFilterIUC2IUC2_Superclass)
itkNotImageFilterIUC2IUC2_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_swigregister
itkNotImageFilterIUC2IUC2_Superclass_swigregister(itkNotImageFilterIUC2IUC2_Superclass)

def itkNotImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkNotImageFilterIUC2IUC2_Superclass_Pointer":
    """itkNotImageFilterIUC2IUC2_Superclass___New_orig__() -> itkNotImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass___New_orig__()

def itkNotImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkNotImageFilterIUC2IUC2_Superclass *":
    """itkNotImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIUC2IUC2_Superclass"""
    return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_cast(obj)

class itkNotImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkNotImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkNotImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkNotImageFilterIUC3IUC3_Superclass self) -> itkNotImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::NOT< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkNotImageFilterIUC3IUC3_Superclass self) -> itk::Functor::NOT< unsigned char,unsigned char >
        GetFunctor(itkNotImageFilterIUC3IUC3_Superclass self) -> itk::Functor::NOT< unsigned char,unsigned char > const &
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::NOT< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkNotImageFilterIUC3IUC3_Superclass self, itk::Functor::NOT< unsigned char,unsigned char > const & functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkNotImageFilterIUC3IUC3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkNotImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_Clone, None, itkNotImageFilterIUC3IUC3_Superclass)
itkNotImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_GetFunctor, None, itkNotImageFilterIUC3IUC3_Superclass)
itkNotImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_SetFunctor, None, itkNotImageFilterIUC3IUC3_Superclass)
itkNotImageFilterIUC3IUC3_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_swigregister
itkNotImageFilterIUC3IUC3_Superclass_swigregister(itkNotImageFilterIUC3IUC3_Superclass)

def itkNotImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkNotImageFilterIUC3IUC3_Superclass_Pointer":
    """itkNotImageFilterIUC3IUC3_Superclass___New_orig__() -> itkNotImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass___New_orig__()

def itkNotImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkNotImageFilterIUC3IUC3_Superclass *":
    """itkNotImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIUC3IUC3_Superclass"""
    return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_cast(obj)

class itkNotImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkNotImageFilterIUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIUS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkNotImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIUS2IUS2_Superclass_Pointer":
        """Clone(itkNotImageFilterIUS2IUS2_Superclass self) -> itkNotImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::NOT< unsigned short,unsigned short > const &":
        """
        GetFunctor(itkNotImageFilterIUS2IUS2_Superclass self) -> itk::Functor::NOT< unsigned short,unsigned short >
        GetFunctor(itkNotImageFilterIUS2IUS2_Superclass self) -> itk::Functor::NOT< unsigned short,unsigned short > const &
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::NOT< unsigned short,unsigned short > const &') -> "void":
        """SetFunctor(itkNotImageFilterIUS2IUS2_Superclass self, itk::Functor::NOT< unsigned short,unsigned short > const & functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIUS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkNotImageFilterIUS2IUS2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkNotImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUS2IUS2_Superclass.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_Clone, None, itkNotImageFilterIUS2IUS2_Superclass)
itkNotImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_GetFunctor, None, itkNotImageFilterIUS2IUS2_Superclass)
itkNotImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_SetFunctor, None, itkNotImageFilterIUS2IUS2_Superclass)
itkNotImageFilterIUS2IUS2_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_swigregister
itkNotImageFilterIUS2IUS2_Superclass_swigregister(itkNotImageFilterIUS2IUS2_Superclass)

def itkNotImageFilterIUS2IUS2_Superclass___New_orig__() -> "itkNotImageFilterIUS2IUS2_Superclass_Pointer":
    """itkNotImageFilterIUS2IUS2_Superclass___New_orig__() -> itkNotImageFilterIUS2IUS2_Superclass_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass___New_orig__()

def itkNotImageFilterIUS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkNotImageFilterIUS2IUS2_Superclass *":
    """itkNotImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIUS2IUS2_Superclass"""
    return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_cast(obj)

class itkNotImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkNotImageFilterIUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIUS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkNotImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIUS3IUS3_Superclass_Pointer":
        """Clone(itkNotImageFilterIUS3IUS3_Superclass self) -> itkNotImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::NOT< unsigned short,unsigned short > const &":
        """
        GetFunctor(itkNotImageFilterIUS3IUS3_Superclass self) -> itk::Functor::NOT< unsigned short,unsigned short >
        GetFunctor(itkNotImageFilterIUS3IUS3_Superclass self) -> itk::Functor::NOT< unsigned short,unsigned short > const &
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::NOT< unsigned short,unsigned short > const &') -> "void":
        """SetFunctor(itkNotImageFilterIUS3IUS3_Superclass self, itk::Functor::NOT< unsigned short,unsigned short > const & functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIUS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkNotImageFilterIUS3IUS3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkNotImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUS3IUS3_Superclass.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_Clone, None, itkNotImageFilterIUS3IUS3_Superclass)
itkNotImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_GetFunctor, None, itkNotImageFilterIUS3IUS3_Superclass)
itkNotImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_SetFunctor, None, itkNotImageFilterIUS3IUS3_Superclass)
itkNotImageFilterIUS3IUS3_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_swigregister
itkNotImageFilterIUS3IUS3_Superclass_swigregister(itkNotImageFilterIUS3IUS3_Superclass)

def itkNotImageFilterIUS3IUS3_Superclass___New_orig__() -> "itkNotImageFilterIUS3IUS3_Superclass_Pointer":
    """itkNotImageFilterIUS3IUS3_Superclass___New_orig__() -> itkNotImageFilterIUS3IUS3_Superclass_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass___New_orig__()

def itkNotImageFilterIUS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkNotImageFilterIUS3IUS3_Superclass *":
    """itkNotImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIUS3IUS3_Superclass"""
    return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_cast(obj)

class itkNotImageFilterID2ID2(itkNotImageFilterID2ID2_Superclass):
    """


    Implements the NOT logical operator pixel-wise on an image.

    This class is templated over the type of an input image and the type
    of the output image. Numeric conversions (castings) are done by the
    C++ defaults.

    Since the logical NOT operation operates only on boolean types, the
    input type must be implicitly convertible to bool, which is only
    defined in C++ for integer types, the images passed to this filter
    must comply with the requirement of using integer pixel type.

    The total operation over one pixel will be

    Where "!" is the unary Logical NOT operator in C++.

    C++ includes: itkNotImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkNotImageFilterID2ID2_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterID2ID2_Pointer":
        """Clone(itkNotImageFilterID2ID2 self) -> itkNotImageFilterID2ID2_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Clone(self)


    def SetBackgroundValue(self, backgroundValue: 'double const &') -> "void":
        """
        SetBackgroundValue(itkNotImageFilterID2ID2 self, double const & backgroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 0 
        """
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_SetBackgroundValue(self, backgroundValue)


    def GetBackgroundValue(self) -> "double":
        """GetBackgroundValue(itkNotImageFilterID2ID2 self) -> double"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_GetBackgroundValue(self)


    def SetForegroundValue(self, foregroundValue: 'double const &') -> "void":
        """
        SetForegroundValue(itkNotImageFilterID2ID2 self, double const & foregroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 1 
        """
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_SetForegroundValue(self, foregroundValue)


    def GetForegroundValue(self) -> "double":
        """GetForegroundValue(itkNotImageFilterID2ID2 self) -> double"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_GetForegroundValue(self)

    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterID2ID2_InputConvertibleToOutputCheck
    OutputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterID2ID2_OutputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterID2ID2_InputNotOperatorCheck
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkNotImageFilterID2ID2"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterID2ID2

        Create a new object of the class itkNotImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterID2ID2.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_Clone, None, itkNotImageFilterID2ID2)
itkNotImageFilterID2ID2.SetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_SetBackgroundValue, None, itkNotImageFilterID2ID2)
itkNotImageFilterID2ID2.GetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_GetBackgroundValue, None, itkNotImageFilterID2ID2)
itkNotImageFilterID2ID2.SetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_SetForegroundValue, None, itkNotImageFilterID2ID2)
itkNotImageFilterID2ID2.GetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_GetForegroundValue, None, itkNotImageFilterID2ID2)
itkNotImageFilterID2ID2_swigregister = _itkNotImageFilterPython.itkNotImageFilterID2ID2_swigregister
itkNotImageFilterID2ID2_swigregister(itkNotImageFilterID2ID2)

def itkNotImageFilterID2ID2___New_orig__() -> "itkNotImageFilterID2ID2_Pointer":
    """itkNotImageFilterID2ID2___New_orig__() -> itkNotImageFilterID2ID2_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterID2ID2___New_orig__()

def itkNotImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkNotImageFilterID2ID2 *":
    """itkNotImageFilterID2ID2_cast(itkLightObject obj) -> itkNotImageFilterID2ID2"""
    return _itkNotImageFilterPython.itkNotImageFilterID2ID2_cast(obj)

class itkNotImageFilterID3ID3(itkNotImageFilterID3ID3_Superclass):
    """


    Implements the NOT logical operator pixel-wise on an image.

    This class is templated over the type of an input image and the type
    of the output image. Numeric conversions (castings) are done by the
    C++ defaults.

    Since the logical NOT operation operates only on boolean types, the
    input type must be implicitly convertible to bool, which is only
    defined in C++ for integer types, the images passed to this filter
    must comply with the requirement of using integer pixel type.

    The total operation over one pixel will be

    Where "!" is the unary Logical NOT operator in C++.

    C++ includes: itkNotImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkNotImageFilterID3ID3_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterID3ID3_Pointer":
        """Clone(itkNotImageFilterID3ID3 self) -> itkNotImageFilterID3ID3_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Clone(self)


    def SetBackgroundValue(self, backgroundValue: 'double const &') -> "void":
        """
        SetBackgroundValue(itkNotImageFilterID3ID3 self, double const & backgroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 0 
        """
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_SetBackgroundValue(self, backgroundValue)


    def GetBackgroundValue(self) -> "double":
        """GetBackgroundValue(itkNotImageFilterID3ID3 self) -> double"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_GetBackgroundValue(self)


    def SetForegroundValue(self, foregroundValue: 'double const &') -> "void":
        """
        SetForegroundValue(itkNotImageFilterID3ID3 self, double const & foregroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 1 
        """
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_SetForegroundValue(self, foregroundValue)


    def GetForegroundValue(self) -> "double":
        """GetForegroundValue(itkNotImageFilterID3ID3 self) -> double"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_GetForegroundValue(self)

    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterID3ID3_InputConvertibleToOutputCheck
    OutputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterID3ID3_OutputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterID3ID3_InputNotOperatorCheck
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkNotImageFilterID3ID3"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterID3ID3

        Create a new object of the class itkNotImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterID3ID3.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_Clone, None, itkNotImageFilterID3ID3)
itkNotImageFilterID3ID3.SetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_SetBackgroundValue, None, itkNotImageFilterID3ID3)
itkNotImageFilterID3ID3.GetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_GetBackgroundValue, None, itkNotImageFilterID3ID3)
itkNotImageFilterID3ID3.SetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_SetForegroundValue, None, itkNotImageFilterID3ID3)
itkNotImageFilterID3ID3.GetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_GetForegroundValue, None, itkNotImageFilterID3ID3)
itkNotImageFilterID3ID3_swigregister = _itkNotImageFilterPython.itkNotImageFilterID3ID3_swigregister
itkNotImageFilterID3ID3_swigregister(itkNotImageFilterID3ID3)

def itkNotImageFilterID3ID3___New_orig__() -> "itkNotImageFilterID3ID3_Pointer":
    """itkNotImageFilterID3ID3___New_orig__() -> itkNotImageFilterID3ID3_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterID3ID3___New_orig__()

def itkNotImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkNotImageFilterID3ID3 *":
    """itkNotImageFilterID3ID3_cast(itkLightObject obj) -> itkNotImageFilterID3ID3"""
    return _itkNotImageFilterPython.itkNotImageFilterID3ID3_cast(obj)

class itkNotImageFilterIF2IF2(itkNotImageFilterIF2IF2_Superclass):
    """


    Implements the NOT logical operator pixel-wise on an image.

    This class is templated over the type of an input image and the type
    of the output image. Numeric conversions (castings) are done by the
    C++ defaults.

    Since the logical NOT operation operates only on boolean types, the
    input type must be implicitly convertible to bool, which is only
    defined in C++ for integer types, the images passed to this filter
    must comply with the requirement of using integer pixel type.

    The total operation over one pixel will be

    Where "!" is the unary Logical NOT operator in C++.

    C++ includes: itkNotImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkNotImageFilterIF2IF2_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIF2IF2_Pointer":
        """Clone(itkNotImageFilterIF2IF2 self) -> itkNotImageFilterIF2IF2_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Clone(self)


    def SetBackgroundValue(self, backgroundValue: 'float const &') -> "void":
        """
        SetBackgroundValue(itkNotImageFilterIF2IF2 self, float const & backgroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 0 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_SetBackgroundValue(self, backgroundValue)


    def GetBackgroundValue(self) -> "float":
        """GetBackgroundValue(itkNotImageFilterIF2IF2 self) -> float"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_GetBackgroundValue(self)


    def SetForegroundValue(self, foregroundValue: 'float const &') -> "void":
        """
        SetForegroundValue(itkNotImageFilterIF2IF2 self, float const & foregroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 1 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_SetForegroundValue(self, foregroundValue)


    def GetForegroundValue(self) -> "float":
        """GetForegroundValue(itkNotImageFilterIF2IF2 self) -> float"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_GetForegroundValue(self)

    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIF2IF2_InputConvertibleToOutputCheck
    OutputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIF2IF2_OutputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIF2IF2_InputNotOperatorCheck
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkNotImageFilterIF2IF2"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIF2IF2

        Create a new object of the class itkNotImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIF2IF2.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_Clone, None, itkNotImageFilterIF2IF2)
itkNotImageFilterIF2IF2.SetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_SetBackgroundValue, None, itkNotImageFilterIF2IF2)
itkNotImageFilterIF2IF2.GetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_GetBackgroundValue, None, itkNotImageFilterIF2IF2)
itkNotImageFilterIF2IF2.SetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_SetForegroundValue, None, itkNotImageFilterIF2IF2)
itkNotImageFilterIF2IF2.GetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_GetForegroundValue, None, itkNotImageFilterIF2IF2)
itkNotImageFilterIF2IF2_swigregister = _itkNotImageFilterPython.itkNotImageFilterIF2IF2_swigregister
itkNotImageFilterIF2IF2_swigregister(itkNotImageFilterIF2IF2)

def itkNotImageFilterIF2IF2___New_orig__() -> "itkNotImageFilterIF2IF2_Pointer":
    """itkNotImageFilterIF2IF2___New_orig__() -> itkNotImageFilterIF2IF2_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIF2IF2___New_orig__()

def itkNotImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkNotImageFilterIF2IF2 *":
    """itkNotImageFilterIF2IF2_cast(itkLightObject obj) -> itkNotImageFilterIF2IF2"""
    return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_cast(obj)

class itkNotImageFilterIF3IF3(itkNotImageFilterIF3IF3_Superclass):
    """


    Implements the NOT logical operator pixel-wise on an image.

    This class is templated over the type of an input image and the type
    of the output image. Numeric conversions (castings) are done by the
    C++ defaults.

    Since the logical NOT operation operates only on boolean types, the
    input type must be implicitly convertible to bool, which is only
    defined in C++ for integer types, the images passed to this filter
    must comply with the requirement of using integer pixel type.

    The total operation over one pixel will be

    Where "!" is the unary Logical NOT operator in C++.

    C++ includes: itkNotImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkNotImageFilterIF3IF3_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIF3IF3_Pointer":
        """Clone(itkNotImageFilterIF3IF3 self) -> itkNotImageFilterIF3IF3_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Clone(self)


    def SetBackgroundValue(self, backgroundValue: 'float const &') -> "void":
        """
        SetBackgroundValue(itkNotImageFilterIF3IF3 self, float const & backgroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 0 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_SetBackgroundValue(self, backgroundValue)


    def GetBackgroundValue(self) -> "float":
        """GetBackgroundValue(itkNotImageFilterIF3IF3 self) -> float"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_GetBackgroundValue(self)


    def SetForegroundValue(self, foregroundValue: 'float const &') -> "void":
        """
        SetForegroundValue(itkNotImageFilterIF3IF3 self, float const & foregroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 1 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_SetForegroundValue(self, foregroundValue)


    def GetForegroundValue(self) -> "float":
        """GetForegroundValue(itkNotImageFilterIF3IF3 self) -> float"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_GetForegroundValue(self)

    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIF3IF3_InputConvertibleToOutputCheck
    OutputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIF3IF3_OutputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIF3IF3_InputNotOperatorCheck
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkNotImageFilterIF3IF3"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIF3IF3

        Create a new object of the class itkNotImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIF3IF3.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_Clone, None, itkNotImageFilterIF3IF3)
itkNotImageFilterIF3IF3.SetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_SetBackgroundValue, None, itkNotImageFilterIF3IF3)
itkNotImageFilterIF3IF3.GetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_GetBackgroundValue, None, itkNotImageFilterIF3IF3)
itkNotImageFilterIF3IF3.SetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_SetForegroundValue, None, itkNotImageFilterIF3IF3)
itkNotImageFilterIF3IF3.GetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_GetForegroundValue, None, itkNotImageFilterIF3IF3)
itkNotImageFilterIF3IF3_swigregister = _itkNotImageFilterPython.itkNotImageFilterIF3IF3_swigregister
itkNotImageFilterIF3IF3_swigregister(itkNotImageFilterIF3IF3)

def itkNotImageFilterIF3IF3___New_orig__() -> "itkNotImageFilterIF3IF3_Pointer":
    """itkNotImageFilterIF3IF3___New_orig__() -> itkNotImageFilterIF3IF3_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIF3IF3___New_orig__()

def itkNotImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkNotImageFilterIF3IF3 *":
    """itkNotImageFilterIF3IF3_cast(itkLightObject obj) -> itkNotImageFilterIF3IF3"""
    return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_cast(obj)

class itkNotImageFilterISS2ISS2(itkNotImageFilterISS2ISS2_Superclass):
    """


    Implements the NOT logical operator pixel-wise on an image.

    This class is templated over the type of an input image and the type
    of the output image. Numeric conversions (castings) are done by the
    C++ defaults.

    Since the logical NOT operation operates only on boolean types, the
    input type must be implicitly convertible to bool, which is only
    defined in C++ for integer types, the images passed to this filter
    must comply with the requirement of using integer pixel type.

    The total operation over one pixel will be

    Where "!" is the unary Logical NOT operator in C++.

    C++ includes: itkNotImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkNotImageFilterISS2ISS2_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterISS2ISS2_Pointer":
        """Clone(itkNotImageFilterISS2ISS2 self) -> itkNotImageFilterISS2ISS2_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Clone(self)


    def SetBackgroundValue(self, backgroundValue: 'short const &') -> "void":
        """
        SetBackgroundValue(itkNotImageFilterISS2ISS2 self, short const & backgroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 0 
        """
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_SetBackgroundValue(self, backgroundValue)


    def GetBackgroundValue(self) -> "short":
        """GetBackgroundValue(itkNotImageFilterISS2ISS2 self) -> short"""
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_GetBackgroundValue(self)


    def SetForegroundValue(self, foregroundValue: 'short const &') -> "void":
        """
        SetForegroundValue(itkNotImageFilterISS2ISS2 self, short const & foregroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 1 
        """
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_SetForegroundValue(self, foregroundValue)


    def GetForegroundValue(self) -> "short":
        """GetForegroundValue(itkNotImageFilterISS2ISS2 self) -> short"""
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_GetForegroundValue(self)

    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_InputConvertibleToOutputCheck
    OutputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_OutputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_InputNotOperatorCheck
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkNotImageFilterISS2ISS2"""
        return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterISS2ISS2

        Create a new object of the class itkNotImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterISS2ISS2.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS2ISS2_Clone, None, itkNotImageFilterISS2ISS2)
itkNotImageFilterISS2ISS2.SetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS2ISS2_SetBackgroundValue, None, itkNotImageFilterISS2ISS2)
itkNotImageFilterISS2ISS2.GetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS2ISS2_GetBackgroundValue, None, itkNotImageFilterISS2ISS2)
itkNotImageFilterISS2ISS2.SetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS2ISS2_SetForegroundValue, None, itkNotImageFilterISS2ISS2)
itkNotImageFilterISS2ISS2.GetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS2ISS2_GetForegroundValue, None, itkNotImageFilterISS2ISS2)
itkNotImageFilterISS2ISS2_swigregister = _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_swigregister
itkNotImageFilterISS2ISS2_swigregister(itkNotImageFilterISS2ISS2)

def itkNotImageFilterISS2ISS2___New_orig__() -> "itkNotImageFilterISS2ISS2_Pointer":
    """itkNotImageFilterISS2ISS2___New_orig__() -> itkNotImageFilterISS2ISS2_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2___New_orig__()

def itkNotImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkNotImageFilterISS2ISS2 *":
    """itkNotImageFilterISS2ISS2_cast(itkLightObject obj) -> itkNotImageFilterISS2ISS2"""
    return _itkNotImageFilterPython.itkNotImageFilterISS2ISS2_cast(obj)

class itkNotImageFilterISS3ISS3(itkNotImageFilterISS3ISS3_Superclass):
    """


    Implements the NOT logical operator pixel-wise on an image.

    This class is templated over the type of an input image and the type
    of the output image. Numeric conversions (castings) are done by the
    C++ defaults.

    Since the logical NOT operation operates only on boolean types, the
    input type must be implicitly convertible to bool, which is only
    defined in C++ for integer types, the images passed to this filter
    must comply with the requirement of using integer pixel type.

    The total operation over one pixel will be

    Where "!" is the unary Logical NOT operator in C++.

    C++ includes: itkNotImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkNotImageFilterISS3ISS3_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterISS3ISS3_Pointer":
        """Clone(itkNotImageFilterISS3ISS3 self) -> itkNotImageFilterISS3ISS3_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Clone(self)


    def SetBackgroundValue(self, backgroundValue: 'short const &') -> "void":
        """
        SetBackgroundValue(itkNotImageFilterISS3ISS3 self, short const & backgroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 0 
        """
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_SetBackgroundValue(self, backgroundValue)


    def GetBackgroundValue(self) -> "short":
        """GetBackgroundValue(itkNotImageFilterISS3ISS3 self) -> short"""
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_GetBackgroundValue(self)


    def SetForegroundValue(self, foregroundValue: 'short const &') -> "void":
        """
        SetForegroundValue(itkNotImageFilterISS3ISS3 self, short const & foregroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 1 
        """
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_SetForegroundValue(self, foregroundValue)


    def GetForegroundValue(self) -> "short":
        """GetForegroundValue(itkNotImageFilterISS3ISS3 self) -> short"""
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_GetForegroundValue(self)

    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_InputConvertibleToOutputCheck
    OutputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_OutputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_InputNotOperatorCheck
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkNotImageFilterISS3ISS3"""
        return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterISS3ISS3

        Create a new object of the class itkNotImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterISS3ISS3.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS3ISS3_Clone, None, itkNotImageFilterISS3ISS3)
itkNotImageFilterISS3ISS3.SetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS3ISS3_SetBackgroundValue, None, itkNotImageFilterISS3ISS3)
itkNotImageFilterISS3ISS3.GetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS3ISS3_GetBackgroundValue, None, itkNotImageFilterISS3ISS3)
itkNotImageFilterISS3ISS3.SetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS3ISS3_SetForegroundValue, None, itkNotImageFilterISS3ISS3)
itkNotImageFilterISS3ISS3.GetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterISS3ISS3_GetForegroundValue, None, itkNotImageFilterISS3ISS3)
itkNotImageFilterISS3ISS3_swigregister = _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_swigregister
itkNotImageFilterISS3ISS3_swigregister(itkNotImageFilterISS3ISS3)

def itkNotImageFilterISS3ISS3___New_orig__() -> "itkNotImageFilterISS3ISS3_Pointer":
    """itkNotImageFilterISS3ISS3___New_orig__() -> itkNotImageFilterISS3ISS3_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3___New_orig__()

def itkNotImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkNotImageFilterISS3ISS3 *":
    """itkNotImageFilterISS3ISS3_cast(itkLightObject obj) -> itkNotImageFilterISS3ISS3"""
    return _itkNotImageFilterPython.itkNotImageFilterISS3ISS3_cast(obj)

class itkNotImageFilterIUC2IUC2(itkNotImageFilterIUC2IUC2_Superclass):
    """


    Implements the NOT logical operator pixel-wise on an image.

    This class is templated over the type of an input image and the type
    of the output image. Numeric conversions (castings) are done by the
    C++ defaults.

    Since the logical NOT operation operates only on boolean types, the
    input type must be implicitly convertible to bool, which is only
    defined in C++ for integer types, the images passed to this filter
    must comply with the requirement of using integer pixel type.

    The total operation over one pixel will be

    Where "!" is the unary Logical NOT operator in C++.

    C++ includes: itkNotImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkNotImageFilterIUC2IUC2_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIUC2IUC2_Pointer":
        """Clone(itkNotImageFilterIUC2IUC2 self) -> itkNotImageFilterIUC2IUC2_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Clone(self)


    def SetBackgroundValue(self, backgroundValue: 'unsigned char const &') -> "void":
        """
        SetBackgroundValue(itkNotImageFilterIUC2IUC2 self, unsigned char const & backgroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 0 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_SetBackgroundValue(self, backgroundValue)


    def GetBackgroundValue(self) -> "unsigned char":
        """GetBackgroundValue(itkNotImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_GetBackgroundValue(self)


    def SetForegroundValue(self, foregroundValue: 'unsigned char const &') -> "void":
        """
        SetForegroundValue(itkNotImageFilterIUC2IUC2 self, unsigned char const & foregroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 1 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_SetForegroundValue(self, foregroundValue)


    def GetForegroundValue(self) -> "unsigned char":
        """GetForegroundValue(itkNotImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_GetForegroundValue(self)

    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    OutputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_OutputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_InputNotOperatorCheck
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkNotImageFilterIUC2IUC2"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUC2IUC2

        Create a new object of the class itkNotImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUC2IUC2.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Clone, None, itkNotImageFilterIUC2IUC2)
itkNotImageFilterIUC2IUC2.SetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_SetBackgroundValue, None, itkNotImageFilterIUC2IUC2)
itkNotImageFilterIUC2IUC2.GetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_GetBackgroundValue, None, itkNotImageFilterIUC2IUC2)
itkNotImageFilterIUC2IUC2.SetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_SetForegroundValue, None, itkNotImageFilterIUC2IUC2)
itkNotImageFilterIUC2IUC2.GetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_GetForegroundValue, None, itkNotImageFilterIUC2IUC2)
itkNotImageFilterIUC2IUC2_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_swigregister
itkNotImageFilterIUC2IUC2_swigregister(itkNotImageFilterIUC2IUC2)

def itkNotImageFilterIUC2IUC2___New_orig__() -> "itkNotImageFilterIUC2IUC2_Pointer":
    """itkNotImageFilterIUC2IUC2___New_orig__() -> itkNotImageFilterIUC2IUC2_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2___New_orig__()

def itkNotImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkNotImageFilterIUC2IUC2 *":
    """itkNotImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkNotImageFilterIUC2IUC2"""
    return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_cast(obj)

class itkNotImageFilterIUC3IUC3(itkNotImageFilterIUC3IUC3_Superclass):
    """


    Implements the NOT logical operator pixel-wise on an image.

    This class is templated over the type of an input image and the type
    of the output image. Numeric conversions (castings) are done by the
    C++ defaults.

    Since the logical NOT operation operates only on boolean types, the
    input type must be implicitly convertible to bool, which is only
    defined in C++ for integer types, the images passed to this filter
    must comply with the requirement of using integer pixel type.

    The total operation over one pixel will be

    Where "!" is the unary Logical NOT operator in C++.

    C++ includes: itkNotImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkNotImageFilterIUC3IUC3_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIUC3IUC3_Pointer":
        """Clone(itkNotImageFilterIUC3IUC3 self) -> itkNotImageFilterIUC3IUC3_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Clone(self)


    def SetBackgroundValue(self, backgroundValue: 'unsigned char const &') -> "void":
        """
        SetBackgroundValue(itkNotImageFilterIUC3IUC3 self, unsigned char const & backgroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 0 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_SetBackgroundValue(self, backgroundValue)


    def GetBackgroundValue(self) -> "unsigned char":
        """GetBackgroundValue(itkNotImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_GetBackgroundValue(self)


    def SetForegroundValue(self, foregroundValue: 'unsigned char const &') -> "void":
        """
        SetForegroundValue(itkNotImageFilterIUC3IUC3 self, unsigned char const & foregroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 1 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_SetForegroundValue(self, foregroundValue)


    def GetForegroundValue(self) -> "unsigned char":
        """GetForegroundValue(itkNotImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_GetForegroundValue(self)

    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    OutputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_OutputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_InputNotOperatorCheck
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkNotImageFilterIUC3IUC3"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUC3IUC3

        Create a new object of the class itkNotImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUC3IUC3.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Clone, None, itkNotImageFilterIUC3IUC3)
itkNotImageFilterIUC3IUC3.SetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_SetBackgroundValue, None, itkNotImageFilterIUC3IUC3)
itkNotImageFilterIUC3IUC3.GetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_GetBackgroundValue, None, itkNotImageFilterIUC3IUC3)
itkNotImageFilterIUC3IUC3.SetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_SetForegroundValue, None, itkNotImageFilterIUC3IUC3)
itkNotImageFilterIUC3IUC3.GetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_GetForegroundValue, None, itkNotImageFilterIUC3IUC3)
itkNotImageFilterIUC3IUC3_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_swigregister
itkNotImageFilterIUC3IUC3_swigregister(itkNotImageFilterIUC3IUC3)

def itkNotImageFilterIUC3IUC3___New_orig__() -> "itkNotImageFilterIUC3IUC3_Pointer":
    """itkNotImageFilterIUC3IUC3___New_orig__() -> itkNotImageFilterIUC3IUC3_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3___New_orig__()

def itkNotImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkNotImageFilterIUC3IUC3 *":
    """itkNotImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkNotImageFilterIUC3IUC3"""
    return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_cast(obj)

class itkNotImageFilterIUS2IUS2(itkNotImageFilterIUS2IUS2_Superclass):
    """


    Implements the NOT logical operator pixel-wise on an image.

    This class is templated over the type of an input image and the type
    of the output image. Numeric conversions (castings) are done by the
    C++ defaults.

    Since the logical NOT operation operates only on boolean types, the
    input type must be implicitly convertible to bool, which is only
    defined in C++ for integer types, the images passed to this filter
    must comply with the requirement of using integer pixel type.

    The total operation over one pixel will be

    Where "!" is the unary Logical NOT operator in C++.

    C++ includes: itkNotImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkNotImageFilterIUS2IUS2_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIUS2IUS2_Pointer":
        """Clone(itkNotImageFilterIUS2IUS2 self) -> itkNotImageFilterIUS2IUS2_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Clone(self)


    def SetBackgroundValue(self, backgroundValue: 'unsigned short const &') -> "void":
        """
        SetBackgroundValue(itkNotImageFilterIUS2IUS2 self, unsigned short const & backgroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 0 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_SetBackgroundValue(self, backgroundValue)


    def GetBackgroundValue(self) -> "unsigned short":
        """GetBackgroundValue(itkNotImageFilterIUS2IUS2 self) -> unsigned short"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_GetBackgroundValue(self)


    def SetForegroundValue(self, foregroundValue: 'unsigned short const &') -> "void":
        """
        SetForegroundValue(itkNotImageFilterIUS2IUS2 self, unsigned short const & foregroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 1 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_SetForegroundValue(self, foregroundValue)


    def GetForegroundValue(self) -> "unsigned short":
        """GetForegroundValue(itkNotImageFilterIUS2IUS2 self) -> unsigned short"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_GetForegroundValue(self)

    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    OutputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_OutputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_InputNotOperatorCheck
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkNotImageFilterIUS2IUS2"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUS2IUS2

        Create a new object of the class itkNotImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUS2IUS2.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Clone, None, itkNotImageFilterIUS2IUS2)
itkNotImageFilterIUS2IUS2.SetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_SetBackgroundValue, None, itkNotImageFilterIUS2IUS2)
itkNotImageFilterIUS2IUS2.GetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_GetBackgroundValue, None, itkNotImageFilterIUS2IUS2)
itkNotImageFilterIUS2IUS2.SetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_SetForegroundValue, None, itkNotImageFilterIUS2IUS2)
itkNotImageFilterIUS2IUS2.GetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_GetForegroundValue, None, itkNotImageFilterIUS2IUS2)
itkNotImageFilterIUS2IUS2_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_swigregister
itkNotImageFilterIUS2IUS2_swigregister(itkNotImageFilterIUS2IUS2)

def itkNotImageFilterIUS2IUS2___New_orig__() -> "itkNotImageFilterIUS2IUS2_Pointer":
    """itkNotImageFilterIUS2IUS2___New_orig__() -> itkNotImageFilterIUS2IUS2_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2___New_orig__()

def itkNotImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkNotImageFilterIUS2IUS2 *":
    """itkNotImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkNotImageFilterIUS2IUS2"""
    return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_cast(obj)

class itkNotImageFilterIUS3IUS3(itkNotImageFilterIUS3IUS3_Superclass):
    """


    Implements the NOT logical operator pixel-wise on an image.

    This class is templated over the type of an input image and the type
    of the output image. Numeric conversions (castings) are done by the
    C++ defaults.

    Since the logical NOT operation operates only on boolean types, the
    input type must be implicitly convertible to bool, which is only
    defined in C++ for integer types, the images passed to this filter
    must comply with the requirement of using integer pixel type.

    The total operation over one pixel will be

    Where "!" is the unary Logical NOT operator in C++.

    C++ includes: itkNotImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkNotImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkNotImageFilterIUS3IUS3_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkNotImageFilterIUS3IUS3_Pointer":
        """Clone(itkNotImageFilterIUS3IUS3 self) -> itkNotImageFilterIUS3IUS3_Pointer"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Clone(self)


    def SetBackgroundValue(self, backgroundValue: 'unsigned short const &') -> "void":
        """
        SetBackgroundValue(itkNotImageFilterIUS3IUS3 self, unsigned short const & backgroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 0 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_SetBackgroundValue(self, backgroundValue)


    def GetBackgroundValue(self) -> "unsigned short":
        """GetBackgroundValue(itkNotImageFilterIUS3IUS3 self) -> unsigned short"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_GetBackgroundValue(self)


    def SetForegroundValue(self, foregroundValue: 'unsigned short const &') -> "void":
        """
        SetForegroundValue(itkNotImageFilterIUS3IUS3 self, unsigned short const & foregroundValue)

        Set/Get the
        value used to mark the false pixels of the result of the operator.
        Defaults to 1 
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_SetForegroundValue(self, foregroundValue)


    def GetForegroundValue(self) -> "unsigned short":
        """GetForegroundValue(itkNotImageFilterIUS3IUS3 self) -> unsigned short"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_GetForegroundValue(self)

    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    OutputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_OutputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_InputNotOperatorCheck
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkNotImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkNotImageFilterIUS3IUS3"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUS3IUS3

        Create a new object of the class itkNotImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNotImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkNotImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUS3IUS3.Clone = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Clone, None, itkNotImageFilterIUS3IUS3)
itkNotImageFilterIUS3IUS3.SetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_SetBackgroundValue, None, itkNotImageFilterIUS3IUS3)
itkNotImageFilterIUS3IUS3.GetBackgroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_GetBackgroundValue, None, itkNotImageFilterIUS3IUS3)
itkNotImageFilterIUS3IUS3.SetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_SetForegroundValue, None, itkNotImageFilterIUS3IUS3)
itkNotImageFilterIUS3IUS3.GetForegroundValue = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_GetForegroundValue, None, itkNotImageFilterIUS3IUS3)
itkNotImageFilterIUS3IUS3_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_swigregister
itkNotImageFilterIUS3IUS3_swigregister(itkNotImageFilterIUS3IUS3)

def itkNotImageFilterIUS3IUS3___New_orig__() -> "itkNotImageFilterIUS3IUS3_Pointer":
    """itkNotImageFilterIUS3IUS3___New_orig__() -> itkNotImageFilterIUS3IUS3_Pointer"""
    return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3___New_orig__()

def itkNotImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkNotImageFilterIUS3IUS3 *":
    """itkNotImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkNotImageFilterIUS3IUS3"""
    return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def not_image_filter(*args, **kwargs):
    """Procedural interface for NotImageFilter"""
    import itk
    instance = itk.NotImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def not_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.NotImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.NotImageFilter.values()[0]
    else:
        filter_object = itk.NotImageFilter

    not_image_filter.__doc__ = filter_object.__doc__
    not_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    not_image_filter.__doc__ += "Available Keyword Arguments:\n"
    not_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unary_functor_image_filter(*args, **kwargs):
    """Procedural interface for UnaryFunctorImageFilter"""
    import itk
    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnaryFunctorImageFilter.values()[0]
    else:
        filter_object = itk.UnaryFunctorImageFilter

    unary_functor_image_filter.__doc__ = filter_object.__doc__
    unary_functor_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unary_functor_image_filter.__doc__ += "Available Keyword Arguments:\n"
    unary_functor_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



