# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkBinaryProjectionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBinaryProjectionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBinaryProjectionImageFilterPython
            return _itkBinaryProjectionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBinaryProjectionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBinaryProjectionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBinaryProjectionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterBPython
import itkImagePython
import itkSymmetricSecondRankTensorPython
import itkFixedArrayPython
import pyBasePython
import itkMatrixPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImageRegionPython
import ITKCommonBasePython
import itkRGBAPixelPython
import itkRGBPixelPython
import itkImageToImageFilterCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterAPython

def itkBinaryProjectionImageFilterIUS3IUS2_New():
  return itkBinaryProjectionImageFilterIUS3IUS2.New()


def itkBinaryProjectionImageFilterIUS3IUS2_Superclass_New():
  return itkBinaryProjectionImageFilterIUS3IUS2_Superclass.New()


def itkBinaryProjectionImageFilterIUC3IUC2_New():
  return itkBinaryProjectionImageFilterIUC3IUC2.New()


def itkBinaryProjectionImageFilterIUC3IUC2_Superclass_New():
  return itkBinaryProjectionImageFilterIUC3IUC2_Superclass.New()


def itkBinaryProjectionImageFilterISS3ISS2_New():
  return itkBinaryProjectionImageFilterISS3ISS2.New()


def itkBinaryProjectionImageFilterISS3ISS2_Superclass_New():
  return itkBinaryProjectionImageFilterISS3ISS2_Superclass.New()


def itkBinaryProjectionImageFilterID3ID3_New():
  return itkBinaryProjectionImageFilterID3ID3.New()


def itkBinaryProjectionImageFilterID3ID3_Superclass_New():
  return itkBinaryProjectionImageFilterID3ID3_Superclass.New()


def itkBinaryProjectionImageFilterID2ID2_New():
  return itkBinaryProjectionImageFilterID2ID2.New()


def itkBinaryProjectionImageFilterID2ID2_Superclass_New():
  return itkBinaryProjectionImageFilterID2ID2_Superclass.New()


def itkBinaryProjectionImageFilterIF3IF3_New():
  return itkBinaryProjectionImageFilterIF3IF3.New()


def itkBinaryProjectionImageFilterIF3IF3_Superclass_New():
  return itkBinaryProjectionImageFilterIF3IF3_Superclass.New()


def itkBinaryProjectionImageFilterIF2IF2_New():
  return itkBinaryProjectionImageFilterIF2IF2.New()


def itkBinaryProjectionImageFilterIF2IF2_Superclass_New():
  return itkBinaryProjectionImageFilterIF2IF2_Superclass.New()


def itkBinaryProjectionImageFilterIUS3IUS3_New():
  return itkBinaryProjectionImageFilterIUS3IUS3.New()


def itkBinaryProjectionImageFilterIUS3IUS3_Superclass_New():
  return itkBinaryProjectionImageFilterIUS3IUS3_Superclass.New()


def itkBinaryProjectionImageFilterIUS2IUS2_New():
  return itkBinaryProjectionImageFilterIUS2IUS2.New()


def itkBinaryProjectionImageFilterIUS2IUS2_Superclass_New():
  return itkBinaryProjectionImageFilterIUS2IUS2_Superclass.New()


def itkBinaryProjectionImageFilterIUC3IUC3_New():
  return itkBinaryProjectionImageFilterIUC3IUC3.New()


def itkBinaryProjectionImageFilterIUC3IUC3_Superclass_New():
  return itkBinaryProjectionImageFilterIUC3IUC3_Superclass.New()


def itkBinaryProjectionImageFilterIUC2IUC2_New():
  return itkBinaryProjectionImageFilterIUC2IUC2.New()


def itkBinaryProjectionImageFilterIUC2IUC2_Superclass_New():
  return itkBinaryProjectionImageFilterIUC2IUC2_Superclass.New()


def itkBinaryProjectionImageFilterISS3ISS3_New():
  return itkBinaryProjectionImageFilterISS3ISS3.New()


def itkBinaryProjectionImageFilterISS3ISS3_Superclass_New():
  return itkBinaryProjectionImageFilterISS3ISS3_Superclass.New()


def itkBinaryProjectionImageFilterISS2ISS2_New():
  return itkBinaryProjectionImageFilterISS2ISS2.New()


def itkBinaryProjectionImageFilterISS2ISS2_Superclass_New():
  return itkBinaryProjectionImageFilterISS2ISS2_Superclass.New()

class itkBinaryProjectionImageFilterID2ID2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkBinaryProjectionImageFilterID2ID2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterID2ID2_Superclass self) -> itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterID2ID2_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterID2ID2_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID2ID2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterID2ID2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterID2ID2_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID2ID2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterID2ID2_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_Clone, None, itkBinaryProjectionImageFilterID2ID2_Superclass)
itkBinaryProjectionImageFilterID2ID2_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterID2ID2_Superclass)
itkBinaryProjectionImageFilterID2ID2_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterID2ID2_Superclass)
itkBinaryProjectionImageFilterID2ID2_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_swigregister
itkBinaryProjectionImageFilterID2ID2_Superclass_swigregister(itkBinaryProjectionImageFilterID2ID2_Superclass)

def itkBinaryProjectionImageFilterID2ID2_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer":
    """itkBinaryProjectionImageFilterID2ID2_Superclass___New_orig__() -> itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass___New_orig__()

def itkBinaryProjectionImageFilterID2ID2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterID2ID2_Superclass *":
    """itkBinaryProjectionImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterID2ID2_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_cast(obj)

class itkBinaryProjectionImageFilterID3ID3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkBinaryProjectionImageFilterID3ID3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterID3ID3_Superclass self) -> itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterID3ID3_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterID3ID3_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID3ID3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterID3ID3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterID3ID3_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID3ID3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterID3ID3_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_Clone, None, itkBinaryProjectionImageFilterID3ID3_Superclass)
itkBinaryProjectionImageFilterID3ID3_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterID3ID3_Superclass)
itkBinaryProjectionImageFilterID3ID3_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterID3ID3_Superclass)
itkBinaryProjectionImageFilterID3ID3_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_swigregister
itkBinaryProjectionImageFilterID3ID3_Superclass_swigregister(itkBinaryProjectionImageFilterID3ID3_Superclass)

def itkBinaryProjectionImageFilterID3ID3_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer":
    """itkBinaryProjectionImageFilterID3ID3_Superclass___New_orig__() -> itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass___New_orig__()

def itkBinaryProjectionImageFilterID3ID3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterID3ID3_Superclass *":
    """itkBinaryProjectionImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterID3ID3_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_cast(obj)

class itkBinaryProjectionImageFilterIF2IF2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkBinaryProjectionImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterIF2IF2_Superclass self) -> itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterIF2IF2_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterIF2IF2_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIF2IF2_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_Clone, None, itkBinaryProjectionImageFilterIF2IF2_Superclass)
itkBinaryProjectionImageFilterIF2IF2_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterIF2IF2_Superclass)
itkBinaryProjectionImageFilterIF2IF2_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterIF2IF2_Superclass)
itkBinaryProjectionImageFilterIF2IF2_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_swigregister
itkBinaryProjectionImageFilterIF2IF2_Superclass_swigregister(itkBinaryProjectionImageFilterIF2IF2_Superclass)

def itkBinaryProjectionImageFilterIF2IF2_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer":
    """itkBinaryProjectionImageFilterIF2IF2_Superclass___New_orig__() -> itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass___New_orig__()

def itkBinaryProjectionImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIF2IF2_Superclass *":
    """itkBinaryProjectionImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIF2IF2_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_cast(obj)

class itkBinaryProjectionImageFilterIF3IF3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkBinaryProjectionImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterIF3IF3_Superclass self) -> itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterIF3IF3_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterIF3IF3_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIF3IF3_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_Clone, None, itkBinaryProjectionImageFilterIF3IF3_Superclass)
itkBinaryProjectionImageFilterIF3IF3_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterIF3IF3_Superclass)
itkBinaryProjectionImageFilterIF3IF3_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterIF3IF3_Superclass)
itkBinaryProjectionImageFilterIF3IF3_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_swigregister
itkBinaryProjectionImageFilterIF3IF3_Superclass_swigregister(itkBinaryProjectionImageFilterIF3IF3_Superclass)

def itkBinaryProjectionImageFilterIF3IF3_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer":
    """itkBinaryProjectionImageFilterIF3IF3_Superclass___New_orig__() -> itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass___New_orig__()

def itkBinaryProjectionImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIF3IF3_Superclass *":
    """itkBinaryProjectionImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIF3IF3_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_cast(obj)

class itkBinaryProjectionImageFilterISS2ISS2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """Proxy of C++ itkBinaryProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterISS2ISS2_Superclass self) -> itkBinaryProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterISS2ISS2_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterISS2ISS2_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS2ISS2_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_Clone, None, itkBinaryProjectionImageFilterISS2ISS2_Superclass)
itkBinaryProjectionImageFilterISS2ISS2_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterISS2ISS2_Superclass)
itkBinaryProjectionImageFilterISS2ISS2_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterISS2ISS2_Superclass)
itkBinaryProjectionImageFilterISS2ISS2_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_swigregister
itkBinaryProjectionImageFilterISS2ISS2_Superclass_swigregister(itkBinaryProjectionImageFilterISS2ISS2_Superclass)

def itkBinaryProjectionImageFilterISS2ISS2_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterISS2ISS2_Superclass_Pointer":
    """itkBinaryProjectionImageFilterISS2ISS2_Superclass___New_orig__() -> itkBinaryProjectionImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass___New_orig__()

def itkBinaryProjectionImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS2ISS2_Superclass *":
    """itkBinaryProjectionImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS2ISS2_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_cast(obj)

class itkBinaryProjectionImageFilterISS3ISS2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    """Proxy of C++ itkBinaryProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterISS3ISS2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterISS3ISS2_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterISS3ISS2_Superclass self) -> itkBinaryProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterISS3ISS2_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterISS3ISS2_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS3ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS3ISS2_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterISS3ISS2_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_Clone, None, itkBinaryProjectionImageFilterISS3ISS2_Superclass)
itkBinaryProjectionImageFilterISS3ISS2_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterISS3ISS2_Superclass)
itkBinaryProjectionImageFilterISS3ISS2_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterISS3ISS2_Superclass)
itkBinaryProjectionImageFilterISS3ISS2_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_swigregister
itkBinaryProjectionImageFilterISS3ISS2_Superclass_swigregister(itkBinaryProjectionImageFilterISS3ISS2_Superclass)

def itkBinaryProjectionImageFilterISS3ISS2_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterISS3ISS2_Superclass_Pointer":
    """itkBinaryProjectionImageFilterISS3ISS2_Superclass___New_orig__() -> itkBinaryProjectionImageFilterISS3ISS2_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass___New_orig__()

def itkBinaryProjectionImageFilterISS3ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS3ISS2_Superclass *":
    """itkBinaryProjectionImageFilterISS3ISS2_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS3ISS2_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_cast(obj)

class itkBinaryProjectionImageFilterISS3ISS3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """Proxy of C++ itkBinaryProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterISS3ISS3_Superclass self) -> itkBinaryProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterISS3ISS3_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterISS3ISS3_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS3ISS3_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_Clone, None, itkBinaryProjectionImageFilterISS3ISS3_Superclass)
itkBinaryProjectionImageFilterISS3ISS3_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterISS3ISS3_Superclass)
itkBinaryProjectionImageFilterISS3ISS3_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterISS3ISS3_Superclass)
itkBinaryProjectionImageFilterISS3ISS3_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_swigregister
itkBinaryProjectionImageFilterISS3ISS3_Superclass_swigregister(itkBinaryProjectionImageFilterISS3ISS3_Superclass)

def itkBinaryProjectionImageFilterISS3ISS3_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterISS3ISS3_Superclass_Pointer":
    """itkBinaryProjectionImageFilterISS3ISS3_Superclass___New_orig__() -> itkBinaryProjectionImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass___New_orig__()

def itkBinaryProjectionImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS3ISS3_Superclass *":
    """itkBinaryProjectionImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS3ISS3_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_cast(obj)

class itkBinaryProjectionImageFilterIUC2IUC2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkBinaryProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUC2IUC2_Superclass self) -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterIUC2IUC2_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterIUC2IUC2_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Clone, None, itkBinaryProjectionImageFilterIUC2IUC2_Superclass)
itkBinaryProjectionImageFilterIUC2IUC2_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterIUC2IUC2_Superclass)
itkBinaryProjectionImageFilterIUC2IUC2_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterIUC2IUC2_Superclass)
itkBinaryProjectionImageFilterIUC2IUC2_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_swigregister
itkBinaryProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkBinaryProjectionImageFilterIUC2IUC2_Superclass)

def itkBinaryProjectionImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer":
    """itkBinaryProjectionImageFilterIUC2IUC2_Superclass___New_orig__() -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

def itkBinaryProjectionImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC2IUC2_Superclass *":
    """itkBinaryProjectionImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

class itkBinaryProjectionImageFilterIUC3IUC2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    """Proxy of C++ itkBinaryProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUC3IUC2_Superclass self) -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterIUC3IUC2_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterIUC3IUC2_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC3IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUC3IUC2_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Clone, None, itkBinaryProjectionImageFilterIUC3IUC2_Superclass)
itkBinaryProjectionImageFilterIUC3IUC2_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterIUC3IUC2_Superclass)
itkBinaryProjectionImageFilterIUC3IUC2_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterIUC3IUC2_Superclass)
itkBinaryProjectionImageFilterIUC3IUC2_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_swigregister
itkBinaryProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkBinaryProjectionImageFilterIUC3IUC2_Superclass)

def itkBinaryProjectionImageFilterIUC3IUC2_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer":
    """itkBinaryProjectionImageFilterIUC3IUC2_Superclass___New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

def itkBinaryProjectionImageFilterIUC3IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC3IUC2_Superclass *":
    """itkBinaryProjectionImageFilterIUC3IUC2_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

class itkBinaryProjectionImageFilterIUC3IUC3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkBinaryProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUC3IUC3_Superclass self) -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterIUC3IUC3_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterIUC3IUC3_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Clone, None, itkBinaryProjectionImageFilterIUC3IUC3_Superclass)
itkBinaryProjectionImageFilterIUC3IUC3_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterIUC3IUC3_Superclass)
itkBinaryProjectionImageFilterIUC3IUC3_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterIUC3IUC3_Superclass)
itkBinaryProjectionImageFilterIUC3IUC3_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_swigregister
itkBinaryProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkBinaryProjectionImageFilterIUC3IUC3_Superclass)

def itkBinaryProjectionImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer":
    """itkBinaryProjectionImageFilterIUC3IUC3_Superclass___New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

def itkBinaryProjectionImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC3IUC3_Superclass *":
    """itkBinaryProjectionImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

class itkBinaryProjectionImageFilterIUS2IUS2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkBinaryProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUS2IUS2_Superclass self) -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterIUS2IUS2_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterIUS2IUS2_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUS2IUS2_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Clone, None, itkBinaryProjectionImageFilterIUS2IUS2_Superclass)
itkBinaryProjectionImageFilterIUS2IUS2_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterIUS2IUS2_Superclass)
itkBinaryProjectionImageFilterIUS2IUS2_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterIUS2IUS2_Superclass)
itkBinaryProjectionImageFilterIUS2IUS2_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_swigregister
itkBinaryProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkBinaryProjectionImageFilterIUS2IUS2_Superclass)

def itkBinaryProjectionImageFilterIUS2IUS2_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer":
    """itkBinaryProjectionImageFilterIUS2IUS2_Superclass___New_orig__() -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

def itkBinaryProjectionImageFilterIUS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS2IUS2_Superclass *":
    """itkBinaryProjectionImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

class itkBinaryProjectionImageFilterIUS3IUS2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    """Proxy of C++ itkBinaryProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUS3IUS2_Superclass self) -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterIUS3IUS2_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterIUS3IUS2_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS3IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUS3IUS2_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Clone, None, itkBinaryProjectionImageFilterIUS3IUS2_Superclass)
itkBinaryProjectionImageFilterIUS3IUS2_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterIUS3IUS2_Superclass)
itkBinaryProjectionImageFilterIUS3IUS2_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterIUS3IUS2_Superclass)
itkBinaryProjectionImageFilterIUS3IUS2_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_swigregister
itkBinaryProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkBinaryProjectionImageFilterIUS3IUS2_Superclass)

def itkBinaryProjectionImageFilterIUS3IUS2_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer":
    """itkBinaryProjectionImageFilterIUS3IUS2_Superclass___New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

def itkBinaryProjectionImageFilterIUS3IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS3IUS2_Superclass *":
    """itkBinaryProjectionImageFilterIUS3IUS2_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

class itkBinaryProjectionImageFilterIUS3IUS3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkBinaryProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUS3IUS3_Superclass self) -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Clone(self)

    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck

    def SetProjectionDimension(self, _arg: 'unsigned int const') -> "void":
        """SetProjectionDimension(itkBinaryProjectionImageFilterIUS3IUS3_Superclass self, unsigned int const _arg)"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension(self, _arg)


    def GetProjectionDimension(self) -> "unsigned int const &":
        """GetProjectionDimension(itkBinaryProjectionImageFilterIUS3IUS3_Superclass self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUS3IUS3_Superclass.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Clone, None, itkBinaryProjectionImageFilterIUS3IUS3_Superclass)
itkBinaryProjectionImageFilterIUS3IUS3_Superclass.SetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension, None, itkBinaryProjectionImageFilterIUS3IUS3_Superclass)
itkBinaryProjectionImageFilterIUS3IUS3_Superclass.GetProjectionDimension = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension, None, itkBinaryProjectionImageFilterIUS3IUS3_Superclass)
itkBinaryProjectionImageFilterIUS3IUS3_Superclass_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_swigregister
itkBinaryProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkBinaryProjectionImageFilterIUS3IUS3_Superclass)

def itkBinaryProjectionImageFilterIUS3IUS3_Superclass___New_orig__() -> "itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer":
    """itkBinaryProjectionImageFilterIUS3IUS3_Superclass___New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

def itkBinaryProjectionImageFilterIUS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS3IUS3_Superclass *":
    """itkBinaryProjectionImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

class itkBinaryProjectionImageFilterID2ID2(itkBinaryProjectionImageFilterID2ID2_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterID2ID2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterID2ID2_Pointer":
        """Clone(itkBinaryProjectionImageFilterID2ID2 self) -> itkBinaryProjectionImageFilterID2ID2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Clone(self)


    def SetForegroundValue(self, _arg: 'double const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterID2ID2 self, double const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "double":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterID2ID2 self) -> double

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'double const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterID2ID2 self, double const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "double":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterID2ID2 self) -> double

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterID2ID2"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID2ID2

        Create a new object of the class itkBinaryProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterID2ID2.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Clone, None, itkBinaryProjectionImageFilterID2ID2)
itkBinaryProjectionImageFilterID2ID2.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_SetForegroundValue, None, itkBinaryProjectionImageFilterID2ID2)
itkBinaryProjectionImageFilterID2ID2.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_GetForegroundValue, None, itkBinaryProjectionImageFilterID2ID2)
itkBinaryProjectionImageFilterID2ID2.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_SetBackgroundValue, None, itkBinaryProjectionImageFilterID2ID2)
itkBinaryProjectionImageFilterID2ID2.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_GetBackgroundValue, None, itkBinaryProjectionImageFilterID2ID2)
itkBinaryProjectionImageFilterID2ID2_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_swigregister
itkBinaryProjectionImageFilterID2ID2_swigregister(itkBinaryProjectionImageFilterID2ID2)

def itkBinaryProjectionImageFilterID2ID2___New_orig__() -> "itkBinaryProjectionImageFilterID2ID2_Pointer":
    """itkBinaryProjectionImageFilterID2ID2___New_orig__() -> itkBinaryProjectionImageFilterID2ID2_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2___New_orig__()

def itkBinaryProjectionImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterID2ID2 *":
    """itkBinaryProjectionImageFilterID2ID2_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterID2ID2"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_cast(obj)

class itkBinaryProjectionImageFilterID3ID3(itkBinaryProjectionImageFilterID3ID3_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterID3ID3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterID3ID3_Pointer":
        """Clone(itkBinaryProjectionImageFilterID3ID3 self) -> itkBinaryProjectionImageFilterID3ID3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Clone(self)


    def SetForegroundValue(self, _arg: 'double const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterID3ID3 self, double const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "double":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterID3ID3 self) -> double

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'double const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterID3ID3 self, double const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "double":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterID3ID3 self) -> double

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterID3ID3"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID3ID3

        Create a new object of the class itkBinaryProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterID3ID3.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Clone, None, itkBinaryProjectionImageFilterID3ID3)
itkBinaryProjectionImageFilterID3ID3.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_SetForegroundValue, None, itkBinaryProjectionImageFilterID3ID3)
itkBinaryProjectionImageFilterID3ID3.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_GetForegroundValue, None, itkBinaryProjectionImageFilterID3ID3)
itkBinaryProjectionImageFilterID3ID3.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_SetBackgroundValue, None, itkBinaryProjectionImageFilterID3ID3)
itkBinaryProjectionImageFilterID3ID3.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_GetBackgroundValue, None, itkBinaryProjectionImageFilterID3ID3)
itkBinaryProjectionImageFilterID3ID3_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_swigregister
itkBinaryProjectionImageFilterID3ID3_swigregister(itkBinaryProjectionImageFilterID3ID3)

def itkBinaryProjectionImageFilterID3ID3___New_orig__() -> "itkBinaryProjectionImageFilterID3ID3_Pointer":
    """itkBinaryProjectionImageFilterID3ID3___New_orig__() -> itkBinaryProjectionImageFilterID3ID3_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3___New_orig__()

def itkBinaryProjectionImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterID3ID3 *":
    """itkBinaryProjectionImageFilterID3ID3_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterID3ID3"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_cast(obj)

class itkBinaryProjectionImageFilterIF2IF2(itkBinaryProjectionImageFilterIF2IF2_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIF2IF2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIF2IF2_Pointer":
        """Clone(itkBinaryProjectionImageFilterIF2IF2 self) -> itkBinaryProjectionImageFilterIF2IF2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Clone(self)


    def SetForegroundValue(self, _arg: 'float const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterIF2IF2 self, float const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "float":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterIF2IF2 self) -> float

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'float const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterIF2IF2 self, float const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "float":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterIF2IF2 self) -> float

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIF2IF2"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF2IF2

        Create a new object of the class itkBinaryProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIF2IF2.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Clone, None, itkBinaryProjectionImageFilterIF2IF2)
itkBinaryProjectionImageFilterIF2IF2.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_SetForegroundValue, None, itkBinaryProjectionImageFilterIF2IF2)
itkBinaryProjectionImageFilterIF2IF2.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_GetForegroundValue, None, itkBinaryProjectionImageFilterIF2IF2)
itkBinaryProjectionImageFilterIF2IF2.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_SetBackgroundValue, None, itkBinaryProjectionImageFilterIF2IF2)
itkBinaryProjectionImageFilterIF2IF2.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_GetBackgroundValue, None, itkBinaryProjectionImageFilterIF2IF2)
itkBinaryProjectionImageFilterIF2IF2_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_swigregister
itkBinaryProjectionImageFilterIF2IF2_swigregister(itkBinaryProjectionImageFilterIF2IF2)

def itkBinaryProjectionImageFilterIF2IF2___New_orig__() -> "itkBinaryProjectionImageFilterIF2IF2_Pointer":
    """itkBinaryProjectionImageFilterIF2IF2___New_orig__() -> itkBinaryProjectionImageFilterIF2IF2_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2___New_orig__()

def itkBinaryProjectionImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIF2IF2 *":
    """itkBinaryProjectionImageFilterIF2IF2_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIF2IF2"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_cast(obj)

class itkBinaryProjectionImageFilterIF3IF3(itkBinaryProjectionImageFilterIF3IF3_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIF3IF3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIF3IF3_Pointer":
        """Clone(itkBinaryProjectionImageFilterIF3IF3 self) -> itkBinaryProjectionImageFilterIF3IF3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Clone(self)


    def SetForegroundValue(self, _arg: 'float const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterIF3IF3 self, float const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "float":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterIF3IF3 self) -> float

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'float const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterIF3IF3 self, float const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "float":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterIF3IF3 self) -> float

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIF3IF3"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF3IF3

        Create a new object of the class itkBinaryProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIF3IF3.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Clone, None, itkBinaryProjectionImageFilterIF3IF3)
itkBinaryProjectionImageFilterIF3IF3.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_SetForegroundValue, None, itkBinaryProjectionImageFilterIF3IF3)
itkBinaryProjectionImageFilterIF3IF3.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_GetForegroundValue, None, itkBinaryProjectionImageFilterIF3IF3)
itkBinaryProjectionImageFilterIF3IF3.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_SetBackgroundValue, None, itkBinaryProjectionImageFilterIF3IF3)
itkBinaryProjectionImageFilterIF3IF3.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_GetBackgroundValue, None, itkBinaryProjectionImageFilterIF3IF3)
itkBinaryProjectionImageFilterIF3IF3_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_swigregister
itkBinaryProjectionImageFilterIF3IF3_swigregister(itkBinaryProjectionImageFilterIF3IF3)

def itkBinaryProjectionImageFilterIF3IF3___New_orig__() -> "itkBinaryProjectionImageFilterIF3IF3_Pointer":
    """itkBinaryProjectionImageFilterIF3IF3___New_orig__() -> itkBinaryProjectionImageFilterIF3IF3_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3___New_orig__()

def itkBinaryProjectionImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIF3IF3 *":
    """itkBinaryProjectionImageFilterIF3IF3_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIF3IF3"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_cast(obj)

class itkBinaryProjectionImageFilterISS2ISS2(itkBinaryProjectionImageFilterISS2ISS2_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterISS2ISS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterISS2ISS2_Pointer":
        """Clone(itkBinaryProjectionImageFilterISS2ISS2 self) -> itkBinaryProjectionImageFilterISS2ISS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Clone(self)


    def SetForegroundValue(self, _arg: 'short const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterISS2ISS2 self, short const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "short":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterISS2ISS2 self) -> short

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'short const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterISS2ISS2 self, short const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "short":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterISS2ISS2 self) -> short

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS2ISS2"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS2ISS2

        Create a new object of the class itkBinaryProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterISS2ISS2.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Clone, None, itkBinaryProjectionImageFilterISS2ISS2)
itkBinaryProjectionImageFilterISS2ISS2.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_SetForegroundValue, None, itkBinaryProjectionImageFilterISS2ISS2)
itkBinaryProjectionImageFilterISS2ISS2.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_GetForegroundValue, None, itkBinaryProjectionImageFilterISS2ISS2)
itkBinaryProjectionImageFilterISS2ISS2.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_SetBackgroundValue, None, itkBinaryProjectionImageFilterISS2ISS2)
itkBinaryProjectionImageFilterISS2ISS2.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_GetBackgroundValue, None, itkBinaryProjectionImageFilterISS2ISS2)
itkBinaryProjectionImageFilterISS2ISS2_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_swigregister
itkBinaryProjectionImageFilterISS2ISS2_swigregister(itkBinaryProjectionImageFilterISS2ISS2)

def itkBinaryProjectionImageFilterISS2ISS2___New_orig__() -> "itkBinaryProjectionImageFilterISS2ISS2_Pointer":
    """itkBinaryProjectionImageFilterISS2ISS2___New_orig__() -> itkBinaryProjectionImageFilterISS2ISS2_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2___New_orig__()

def itkBinaryProjectionImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS2ISS2 *":
    """itkBinaryProjectionImageFilterISS2ISS2_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS2ISS2"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_cast(obj)

class itkBinaryProjectionImageFilterISS3ISS2(itkBinaryProjectionImageFilterISS3ISS2_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterISS3ISS2_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterISS3ISS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterISS3ISS2_Pointer":
        """Clone(itkBinaryProjectionImageFilterISS3ISS2 self) -> itkBinaryProjectionImageFilterISS3ISS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Clone(self)


    def SetForegroundValue(self, _arg: 'short const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterISS3ISS2 self, short const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "short":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterISS3ISS2 self) -> short

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'short const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterISS3ISS2 self, short const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "short":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterISS3ISS2 self) -> short

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS2

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS3ISS2 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS3ISS2"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS2

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterISS3ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterISS3ISS2.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Clone, None, itkBinaryProjectionImageFilterISS3ISS2)
itkBinaryProjectionImageFilterISS3ISS2.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_SetForegroundValue, None, itkBinaryProjectionImageFilterISS3ISS2)
itkBinaryProjectionImageFilterISS3ISS2.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_GetForegroundValue, None, itkBinaryProjectionImageFilterISS3ISS2)
itkBinaryProjectionImageFilterISS3ISS2.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_SetBackgroundValue, None, itkBinaryProjectionImageFilterISS3ISS2)
itkBinaryProjectionImageFilterISS3ISS2.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_GetBackgroundValue, None, itkBinaryProjectionImageFilterISS3ISS2)
itkBinaryProjectionImageFilterISS3ISS2_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_swigregister
itkBinaryProjectionImageFilterISS3ISS2_swigregister(itkBinaryProjectionImageFilterISS3ISS2)

def itkBinaryProjectionImageFilterISS3ISS2___New_orig__() -> "itkBinaryProjectionImageFilterISS3ISS2_Pointer":
    """itkBinaryProjectionImageFilterISS3ISS2___New_orig__() -> itkBinaryProjectionImageFilterISS3ISS2_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2___New_orig__()

def itkBinaryProjectionImageFilterISS3ISS2_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS3ISS2 *":
    """itkBinaryProjectionImageFilterISS3ISS2_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS3ISS2"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_cast(obj)

class itkBinaryProjectionImageFilterISS3ISS3(itkBinaryProjectionImageFilterISS3ISS3_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterISS3ISS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterISS3ISS3_Pointer":
        """Clone(itkBinaryProjectionImageFilterISS3ISS3 self) -> itkBinaryProjectionImageFilterISS3ISS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Clone(self)


    def SetForegroundValue(self, _arg: 'short const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterISS3ISS3 self, short const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "short":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterISS3ISS3 self) -> short

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'short const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterISS3ISS3 self, short const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "short":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterISS3ISS3 self) -> short

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS3ISS3"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS3

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterISS3ISS3.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Clone, None, itkBinaryProjectionImageFilterISS3ISS3)
itkBinaryProjectionImageFilterISS3ISS3.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_SetForegroundValue, None, itkBinaryProjectionImageFilterISS3ISS3)
itkBinaryProjectionImageFilterISS3ISS3.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_GetForegroundValue, None, itkBinaryProjectionImageFilterISS3ISS3)
itkBinaryProjectionImageFilterISS3ISS3.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_SetBackgroundValue, None, itkBinaryProjectionImageFilterISS3ISS3)
itkBinaryProjectionImageFilterISS3ISS3.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_GetBackgroundValue, None, itkBinaryProjectionImageFilterISS3ISS3)
itkBinaryProjectionImageFilterISS3ISS3_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_swigregister
itkBinaryProjectionImageFilterISS3ISS3_swigregister(itkBinaryProjectionImageFilterISS3ISS3)

def itkBinaryProjectionImageFilterISS3ISS3___New_orig__() -> "itkBinaryProjectionImageFilterISS3ISS3_Pointer":
    """itkBinaryProjectionImageFilterISS3ISS3___New_orig__() -> itkBinaryProjectionImageFilterISS3ISS3_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3___New_orig__()

def itkBinaryProjectionImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterISS3ISS3 *":
    """itkBinaryProjectionImageFilterISS3ISS3_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterISS3ISS3"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_cast(obj)

class itkBinaryProjectionImageFilterIUC2IUC2(itkBinaryProjectionImageFilterIUC2IUC2_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUC2IUC2_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUC2IUC2 self) -> itkBinaryProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Clone(self)


    def SetForegroundValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "unsigned char":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterIUC2IUC2 self) -> unsigned char

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "unsigned char":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterIUC2IUC2 self) -> unsigned char

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC2IUC2"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC2IUC2

        Create a new object of the class itkBinaryProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUC2IUC2.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Clone, None, itkBinaryProjectionImageFilterIUC2IUC2)
itkBinaryProjectionImageFilterIUC2IUC2.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_SetForegroundValue, None, itkBinaryProjectionImageFilterIUC2IUC2)
itkBinaryProjectionImageFilterIUC2IUC2.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_GetForegroundValue, None, itkBinaryProjectionImageFilterIUC2IUC2)
itkBinaryProjectionImageFilterIUC2IUC2.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_SetBackgroundValue, None, itkBinaryProjectionImageFilterIUC2IUC2)
itkBinaryProjectionImageFilterIUC2IUC2.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_GetBackgroundValue, None, itkBinaryProjectionImageFilterIUC2IUC2)
itkBinaryProjectionImageFilterIUC2IUC2_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_swigregister
itkBinaryProjectionImageFilterIUC2IUC2_swigregister(itkBinaryProjectionImageFilterIUC2IUC2)

def itkBinaryProjectionImageFilterIUC2IUC2___New_orig__() -> "itkBinaryProjectionImageFilterIUC2IUC2_Pointer":
    """itkBinaryProjectionImageFilterIUC2IUC2___New_orig__() -> itkBinaryProjectionImageFilterIUC2IUC2_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2___New_orig__()

def itkBinaryProjectionImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC2IUC2 *":
    """itkBinaryProjectionImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC2IUC2"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_cast(obj)

class itkBinaryProjectionImageFilterIUC3IUC2(itkBinaryProjectionImageFilterIUC3IUC2_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUC3IUC2_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUC3IUC2_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUC3IUC2 self) -> itkBinaryProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Clone(self)


    def SetForegroundValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterIUC3IUC2 self, unsigned char const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "unsigned char":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterIUC3IUC2 self) -> unsigned char

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterIUC3IUC2 self, unsigned char const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "unsigned char":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterIUC3IUC2 self) -> unsigned char

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC2

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC3IUC2 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC3IUC2"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC2

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUC3IUC2.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Clone, None, itkBinaryProjectionImageFilterIUC3IUC2)
itkBinaryProjectionImageFilterIUC3IUC2.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_SetForegroundValue, None, itkBinaryProjectionImageFilterIUC3IUC2)
itkBinaryProjectionImageFilterIUC3IUC2.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_GetForegroundValue, None, itkBinaryProjectionImageFilterIUC3IUC2)
itkBinaryProjectionImageFilterIUC3IUC2.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_SetBackgroundValue, None, itkBinaryProjectionImageFilterIUC3IUC2)
itkBinaryProjectionImageFilterIUC3IUC2.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_GetBackgroundValue, None, itkBinaryProjectionImageFilterIUC3IUC2)
itkBinaryProjectionImageFilterIUC3IUC2_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_swigregister
itkBinaryProjectionImageFilterIUC3IUC2_swigregister(itkBinaryProjectionImageFilterIUC3IUC2)

def itkBinaryProjectionImageFilterIUC3IUC2___New_orig__() -> "itkBinaryProjectionImageFilterIUC3IUC2_Pointer":
    """itkBinaryProjectionImageFilterIUC3IUC2___New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC2_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2___New_orig__()

def itkBinaryProjectionImageFilterIUC3IUC2_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC3IUC2 *":
    """itkBinaryProjectionImageFilterIUC3IUC2_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC3IUC2"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_cast(obj)

class itkBinaryProjectionImageFilterIUC3IUC3(itkBinaryProjectionImageFilterIUC3IUC3_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUC3IUC3_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUC3IUC3 self) -> itkBinaryProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Clone(self)


    def SetForegroundValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "unsigned char":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterIUC3IUC3 self) -> unsigned char

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "unsigned char":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterIUC3IUC3 self) -> unsigned char

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC3IUC3"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC3

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUC3IUC3.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Clone, None, itkBinaryProjectionImageFilterIUC3IUC3)
itkBinaryProjectionImageFilterIUC3IUC3.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_SetForegroundValue, None, itkBinaryProjectionImageFilterIUC3IUC3)
itkBinaryProjectionImageFilterIUC3IUC3.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_GetForegroundValue, None, itkBinaryProjectionImageFilterIUC3IUC3)
itkBinaryProjectionImageFilterIUC3IUC3.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_SetBackgroundValue, None, itkBinaryProjectionImageFilterIUC3IUC3)
itkBinaryProjectionImageFilterIUC3IUC3.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_GetBackgroundValue, None, itkBinaryProjectionImageFilterIUC3IUC3)
itkBinaryProjectionImageFilterIUC3IUC3_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_swigregister
itkBinaryProjectionImageFilterIUC3IUC3_swigregister(itkBinaryProjectionImageFilterIUC3IUC3)

def itkBinaryProjectionImageFilterIUC3IUC3___New_orig__() -> "itkBinaryProjectionImageFilterIUC3IUC3_Pointer":
    """itkBinaryProjectionImageFilterIUC3IUC3___New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC3_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3___New_orig__()

def itkBinaryProjectionImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUC3IUC3 *":
    """itkBinaryProjectionImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUC3IUC3"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_cast(obj)

class itkBinaryProjectionImageFilterIUS2IUS2(itkBinaryProjectionImageFilterIUS2IUS2_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUS2IUS2_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUS2IUS2 self) -> itkBinaryProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Clone(self)


    def SetForegroundValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterIUS2IUS2 self, unsigned short const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "unsigned short":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterIUS2IUS2 self) -> unsigned short

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterIUS2IUS2 self, unsigned short const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "unsigned short":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterIUS2IUS2 self) -> unsigned short

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS2IUS2"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS2IUS2

        Create a new object of the class itkBinaryProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUS2IUS2.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Clone, None, itkBinaryProjectionImageFilterIUS2IUS2)
itkBinaryProjectionImageFilterIUS2IUS2.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_SetForegroundValue, None, itkBinaryProjectionImageFilterIUS2IUS2)
itkBinaryProjectionImageFilterIUS2IUS2.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_GetForegroundValue, None, itkBinaryProjectionImageFilterIUS2IUS2)
itkBinaryProjectionImageFilterIUS2IUS2.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_SetBackgroundValue, None, itkBinaryProjectionImageFilterIUS2IUS2)
itkBinaryProjectionImageFilterIUS2IUS2.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_GetBackgroundValue, None, itkBinaryProjectionImageFilterIUS2IUS2)
itkBinaryProjectionImageFilterIUS2IUS2_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_swigregister
itkBinaryProjectionImageFilterIUS2IUS2_swigregister(itkBinaryProjectionImageFilterIUS2IUS2)

def itkBinaryProjectionImageFilterIUS2IUS2___New_orig__() -> "itkBinaryProjectionImageFilterIUS2IUS2_Pointer":
    """itkBinaryProjectionImageFilterIUS2IUS2___New_orig__() -> itkBinaryProjectionImageFilterIUS2IUS2_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2___New_orig__()

def itkBinaryProjectionImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS2IUS2 *":
    """itkBinaryProjectionImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS2IUS2"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_cast(obj)

class itkBinaryProjectionImageFilterIUS3IUS2(itkBinaryProjectionImageFilterIUS3IUS2_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUS3IUS2_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUS3IUS2_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUS3IUS2 self) -> itkBinaryProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Clone(self)


    def SetForegroundValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterIUS3IUS2 self, unsigned short const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "unsigned short":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterIUS3IUS2 self) -> unsigned short

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterIUS3IUS2 self, unsigned short const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "unsigned short":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterIUS3IUS2 self) -> unsigned short

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS2

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS3IUS2 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS3IUS2"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS2

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUS3IUS2.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Clone, None, itkBinaryProjectionImageFilterIUS3IUS2)
itkBinaryProjectionImageFilterIUS3IUS2.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_SetForegroundValue, None, itkBinaryProjectionImageFilterIUS3IUS2)
itkBinaryProjectionImageFilterIUS3IUS2.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_GetForegroundValue, None, itkBinaryProjectionImageFilterIUS3IUS2)
itkBinaryProjectionImageFilterIUS3IUS2.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_SetBackgroundValue, None, itkBinaryProjectionImageFilterIUS3IUS2)
itkBinaryProjectionImageFilterIUS3IUS2.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_GetBackgroundValue, None, itkBinaryProjectionImageFilterIUS3IUS2)
itkBinaryProjectionImageFilterIUS3IUS2_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_swigregister
itkBinaryProjectionImageFilterIUS3IUS2_swigregister(itkBinaryProjectionImageFilterIUS3IUS2)

def itkBinaryProjectionImageFilterIUS3IUS2___New_orig__() -> "itkBinaryProjectionImageFilterIUS3IUS2_Pointer":
    """itkBinaryProjectionImageFilterIUS3IUS2___New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS2_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2___New_orig__()

def itkBinaryProjectionImageFilterIUS3IUS2_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS3IUS2 *":
    """itkBinaryProjectionImageFilterIUS3IUS2_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS3IUS2"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_cast(obj)

class itkBinaryProjectionImageFilterIUS3IUS3(itkBinaryProjectionImageFilterIUS3IUS3_Superclass):
    """


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    C++ includes: itkBinaryProjectionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryProjectionImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryProjectionImageFilterIUS3IUS3_Pointer":
        """Clone(itkBinaryProjectionImageFilterIUS3IUS3 self) -> itkBinaryProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Clone(self)


    def SetForegroundValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetForegroundValue(itkBinaryProjectionImageFilterIUS3IUS3 self, unsigned short const _arg)

        Set the value in
        the image to consider as "foreground". Defaults to maximum value of
        PixelType. Subclasses may alias this to DilateValue or ErodeValue. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_SetForegroundValue(self, _arg)


    def GetForegroundValue(self) -> "unsigned short":
        """
        GetForegroundValue(itkBinaryProjectionImageFilterIUS3IUS3 self) -> unsigned short

        Get the value in
        the image considered as "foreground". Defaults to maximum value of
        PixelType. 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_GetForegroundValue(self)


    def SetBackgroundValue(self, _arg: 'unsigned short const') -> "void":
        """
        SetBackgroundValue(itkBinaryProjectionImageFilterIUS3IUS3 self, unsigned short const _arg)

        Set the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_SetBackgroundValue(self, _arg)


    def GetBackgroundValue(self) -> "unsigned short":
        """
        GetBackgroundValue(itkBinaryProjectionImageFilterIUS3IUS3 self) -> unsigned short

        Get the value
        used as "background". Any pixel value which is not DilateValue is
        considered background. BackgroundValue is used for defining boundary
        conditions. Defaults to NumericTraits<PixelType>::NonpositiveMin(). 
        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_GetBackgroundValue(self)

    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS3IUS3"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS3

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryProjectionImageFilterIUS3IUS3.Clone = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Clone, None, itkBinaryProjectionImageFilterIUS3IUS3)
itkBinaryProjectionImageFilterIUS3IUS3.SetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_SetForegroundValue, None, itkBinaryProjectionImageFilterIUS3IUS3)
itkBinaryProjectionImageFilterIUS3IUS3.GetForegroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_GetForegroundValue, None, itkBinaryProjectionImageFilterIUS3IUS3)
itkBinaryProjectionImageFilterIUS3IUS3.SetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_SetBackgroundValue, None, itkBinaryProjectionImageFilterIUS3IUS3)
itkBinaryProjectionImageFilterIUS3IUS3.GetBackgroundValue = new_instancemethod(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_GetBackgroundValue, None, itkBinaryProjectionImageFilterIUS3IUS3)
itkBinaryProjectionImageFilterIUS3IUS3_swigregister = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_swigregister
itkBinaryProjectionImageFilterIUS3IUS3_swigregister(itkBinaryProjectionImageFilterIUS3IUS3)

def itkBinaryProjectionImageFilterIUS3IUS3___New_orig__() -> "itkBinaryProjectionImageFilterIUS3IUS3_Pointer":
    """itkBinaryProjectionImageFilterIUS3IUS3___New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS3_Pointer"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3___New_orig__()

def itkBinaryProjectionImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkBinaryProjectionImageFilterIUS3IUS3 *":
    """itkBinaryProjectionImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkBinaryProjectionImageFilterIUS3IUS3"""
    return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def projection_image_filter(*args, **kwargs):
    """Procedural interface for ProjectionImageFilter"""
    import itk
    instance = itk.ProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ProjectionImageFilter.values()[0]
    else:
        filter_object = itk.ProjectionImageFilter

    projection_image_filter.__doc__ = filter_object.__doc__
    projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    projection_image_filter.__doc__ += "Available Keyword Arguments:\n"
    projection_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_projection_image_filter(*args, **kwargs):
    """Procedural interface for BinaryProjectionImageFilter"""
    import itk
    instance = itk.BinaryProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryProjectionImageFilter.values()[0]
    else:
        filter_object = itk.BinaryProjectionImageFilter

    binary_projection_image_filter.__doc__ = filter_object.__doc__
    binary_projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_projection_image_filter.__doc__ += "Available Keyword Arguments:\n"
    binary_projection_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



