# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkShiftScaleImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkShiftScaleImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkShiftScaleImageFilterPython
            return _itkShiftScaleImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkShiftScaleImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkShiftScaleImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkShiftScaleImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import itkSizePython
import pyBasePython
import ITKCommonBasePython
import itkIndexPython
import itkOffsetPython
import itkImageToImageFilterAPython
import itkImagePython
import itkRGBAPixelPython
import itkFixedArrayPython
import stdcomplexPython
import itkRGBPixelPython
import itkMatrixPython
import vnl_matrix_fixedPython
import vnl_matrixPython
import vnl_vectorPython
import itkVectorPython
import vnl_vector_refPython
import itkCovariantVectorPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkShiftScaleImageFilterID3ID3_New():
  return itkShiftScaleImageFilterID3ID3.New()


def itkShiftScaleImageFilterID2ID2_New():
  return itkShiftScaleImageFilterID2ID2.New()


def itkShiftScaleImageFilterIF3IF3_New():
  return itkShiftScaleImageFilterIF3IF3.New()


def itkShiftScaleImageFilterIF2IF2_New():
  return itkShiftScaleImageFilterIF2IF2.New()


def itkShiftScaleImageFilterIUS3IUS3_New():
  return itkShiftScaleImageFilterIUS3IUS3.New()


def itkShiftScaleImageFilterIUS2IUS2_New():
  return itkShiftScaleImageFilterIUS2IUS2.New()


def itkShiftScaleImageFilterIUC3IUC3_New():
  return itkShiftScaleImageFilterIUC3IUC3.New()


def itkShiftScaleImageFilterIUC2IUC2_New():
  return itkShiftScaleImageFilterIUC2IUC2.New()


def itkShiftScaleImageFilterISS3ISS3_New():
  return itkShiftScaleImageFilterISS3ISS3.New()


def itkShiftScaleImageFilterISS2ISS2_New():
  return itkShiftScaleImageFilterISS2ISS2.New()

class itkShiftScaleImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type.

    C++ includes: itkShiftScaleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShiftScaleImageFilterID2ID2_Pointer":
        """__New_orig__() -> itkShiftScaleImageFilterID2ID2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShiftScaleImageFilterID2ID2_Pointer":
        """Clone(itkShiftScaleImageFilterID2ID2 self) -> itkShiftScaleImageFilterID2ID2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_Clone(self)


    def SetShift(self, _arg: 'double const') -> "void":
        """
        SetShift(itkShiftScaleImageFilterID2ID2 self, double const _arg)

        Set/Get the amount to
        Shift each Pixel. The shift is followed by a Scale. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_SetShift(self, _arg)


    def GetShift(self) -> "double":
        """GetShift(itkShiftScaleImageFilterID2ID2 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetShift(self)


    def SetScale(self, _arg: 'double const') -> "void":
        """
        SetScale(itkShiftScaleImageFilterID2ID2 self, double const _arg)

        Set/Get the amount to
        Scale each Pixel. The Scale is applied after the Shift. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_SetScale(self, _arg)


    def GetScale(self) -> "double":
        """GetScale(itkShiftScaleImageFilterID2ID2 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetScale(self)


    def GetUnderflowCount(self) -> "long":
        """
        GetUnderflowCount(itkShiftScaleImageFilterID2ID2 self) -> long

        Get the number of
        pixels that underflowed and overflowed. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetUnderflowCount(self)


    def GetOverflowCount(self) -> "long":
        """GetOverflowCount(itkShiftScaleImageFilterID2ID2 self) -> long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetOverflowCount(self)

    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_OutputHasNumericTraitsCheck
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_InputPlusRealTypeCheck
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_RealTypeMultiplyOperatorCheck
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterID2ID2

    def cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterID2ID2 *":
        """cast(itkLightObject obj) -> itkShiftScaleImageFilterID2ID2"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterID2ID2

        Create a new object of the class itkShiftScaleImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterID2ID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShiftScaleImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShiftScaleImageFilterID2ID2.Clone = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_Clone, None, itkShiftScaleImageFilterID2ID2)
itkShiftScaleImageFilterID2ID2.SetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_SetShift, None, itkShiftScaleImageFilterID2ID2)
itkShiftScaleImageFilterID2ID2.GetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetShift, None, itkShiftScaleImageFilterID2ID2)
itkShiftScaleImageFilterID2ID2.SetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_SetScale, None, itkShiftScaleImageFilterID2ID2)
itkShiftScaleImageFilterID2ID2.GetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetScale, None, itkShiftScaleImageFilterID2ID2)
itkShiftScaleImageFilterID2ID2.GetUnderflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetUnderflowCount, None, itkShiftScaleImageFilterID2ID2)
itkShiftScaleImageFilterID2ID2.GetOverflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetOverflowCount, None, itkShiftScaleImageFilterID2ID2)
itkShiftScaleImageFilterID2ID2_swigregister = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_swigregister
itkShiftScaleImageFilterID2ID2_swigregister(itkShiftScaleImageFilterID2ID2)

def itkShiftScaleImageFilterID2ID2___New_orig__() -> "itkShiftScaleImageFilterID2ID2_Pointer":
    """itkShiftScaleImageFilterID2ID2___New_orig__() -> itkShiftScaleImageFilterID2ID2_Pointer"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2___New_orig__()

def itkShiftScaleImageFilterID2ID2_cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterID2ID2 *":
    """itkShiftScaleImageFilterID2ID2_cast(itkLightObject obj) -> itkShiftScaleImageFilterID2ID2"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_cast(obj)

class itkShiftScaleImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type.

    C++ includes: itkShiftScaleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShiftScaleImageFilterID3ID3_Pointer":
        """__New_orig__() -> itkShiftScaleImageFilterID3ID3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShiftScaleImageFilterID3ID3_Pointer":
        """Clone(itkShiftScaleImageFilterID3ID3 self) -> itkShiftScaleImageFilterID3ID3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_Clone(self)


    def SetShift(self, _arg: 'double const') -> "void":
        """
        SetShift(itkShiftScaleImageFilterID3ID3 self, double const _arg)

        Set/Get the amount to
        Shift each Pixel. The shift is followed by a Scale. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_SetShift(self, _arg)


    def GetShift(self) -> "double":
        """GetShift(itkShiftScaleImageFilterID3ID3 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetShift(self)


    def SetScale(self, _arg: 'double const') -> "void":
        """
        SetScale(itkShiftScaleImageFilterID3ID3 self, double const _arg)

        Set/Get the amount to
        Scale each Pixel. The Scale is applied after the Shift. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_SetScale(self, _arg)


    def GetScale(self) -> "double":
        """GetScale(itkShiftScaleImageFilterID3ID3 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetScale(self)


    def GetUnderflowCount(self) -> "long":
        """
        GetUnderflowCount(itkShiftScaleImageFilterID3ID3 self) -> long

        Get the number of
        pixels that underflowed and overflowed. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetUnderflowCount(self)


    def GetOverflowCount(self) -> "long":
        """GetOverflowCount(itkShiftScaleImageFilterID3ID3 self) -> long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetOverflowCount(self)

    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_OutputHasNumericTraitsCheck
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_InputPlusRealTypeCheck
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_RealTypeMultiplyOperatorCheck
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterID3ID3

    def cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterID3ID3 *":
        """cast(itkLightObject obj) -> itkShiftScaleImageFilterID3ID3"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterID3ID3

        Create a new object of the class itkShiftScaleImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterID3ID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShiftScaleImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShiftScaleImageFilterID3ID3.Clone = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_Clone, None, itkShiftScaleImageFilterID3ID3)
itkShiftScaleImageFilterID3ID3.SetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_SetShift, None, itkShiftScaleImageFilterID3ID3)
itkShiftScaleImageFilterID3ID3.GetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetShift, None, itkShiftScaleImageFilterID3ID3)
itkShiftScaleImageFilterID3ID3.SetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_SetScale, None, itkShiftScaleImageFilterID3ID3)
itkShiftScaleImageFilterID3ID3.GetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetScale, None, itkShiftScaleImageFilterID3ID3)
itkShiftScaleImageFilterID3ID3.GetUnderflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetUnderflowCount, None, itkShiftScaleImageFilterID3ID3)
itkShiftScaleImageFilterID3ID3.GetOverflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetOverflowCount, None, itkShiftScaleImageFilterID3ID3)
itkShiftScaleImageFilterID3ID3_swigregister = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_swigregister
itkShiftScaleImageFilterID3ID3_swigregister(itkShiftScaleImageFilterID3ID3)

def itkShiftScaleImageFilterID3ID3___New_orig__() -> "itkShiftScaleImageFilterID3ID3_Pointer":
    """itkShiftScaleImageFilterID3ID3___New_orig__() -> itkShiftScaleImageFilterID3ID3_Pointer"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3___New_orig__()

def itkShiftScaleImageFilterID3ID3_cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterID3ID3 *":
    """itkShiftScaleImageFilterID3ID3_cast(itkLightObject obj) -> itkShiftScaleImageFilterID3ID3"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_cast(obj)

class itkShiftScaleImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type.

    C++ includes: itkShiftScaleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShiftScaleImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkShiftScaleImageFilterIF2IF2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShiftScaleImageFilterIF2IF2_Pointer":
        """Clone(itkShiftScaleImageFilterIF2IF2 self) -> itkShiftScaleImageFilterIF2IF2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_Clone(self)


    def SetShift(self, _arg: 'double const') -> "void":
        """
        SetShift(itkShiftScaleImageFilterIF2IF2 self, double const _arg)

        Set/Get the amount to
        Shift each Pixel. The shift is followed by a Scale. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_SetShift(self, _arg)


    def GetShift(self) -> "double":
        """GetShift(itkShiftScaleImageFilterIF2IF2 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetShift(self)


    def SetScale(self, _arg: 'double const') -> "void":
        """
        SetScale(itkShiftScaleImageFilterIF2IF2 self, double const _arg)

        Set/Get the amount to
        Scale each Pixel. The Scale is applied after the Shift. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_SetScale(self, _arg)


    def GetScale(self) -> "double":
        """GetScale(itkShiftScaleImageFilterIF2IF2 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetScale(self)


    def GetUnderflowCount(self) -> "long":
        """
        GetUnderflowCount(itkShiftScaleImageFilterIF2IF2 self) -> long

        Get the number of
        pixels that underflowed and overflowed. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetUnderflowCount(self)


    def GetOverflowCount(self) -> "long":
        """GetOverflowCount(itkShiftScaleImageFilterIF2IF2 self) -> long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetOverflowCount(self)

    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_OutputHasNumericTraitsCheck
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_InputPlusRealTypeCheck
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_RealTypeMultiplyOperatorCheck
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkShiftScaleImageFilterIF2IF2"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIF2IF2

        Create a new object of the class itkShiftScaleImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShiftScaleImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShiftScaleImageFilterIF2IF2.Clone = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_Clone, None, itkShiftScaleImageFilterIF2IF2)
itkShiftScaleImageFilterIF2IF2.SetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_SetShift, None, itkShiftScaleImageFilterIF2IF2)
itkShiftScaleImageFilterIF2IF2.GetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetShift, None, itkShiftScaleImageFilterIF2IF2)
itkShiftScaleImageFilterIF2IF2.SetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_SetScale, None, itkShiftScaleImageFilterIF2IF2)
itkShiftScaleImageFilterIF2IF2.GetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetScale, None, itkShiftScaleImageFilterIF2IF2)
itkShiftScaleImageFilterIF2IF2.GetUnderflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetUnderflowCount, None, itkShiftScaleImageFilterIF2IF2)
itkShiftScaleImageFilterIF2IF2.GetOverflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetOverflowCount, None, itkShiftScaleImageFilterIF2IF2)
itkShiftScaleImageFilterIF2IF2_swigregister = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_swigregister
itkShiftScaleImageFilterIF2IF2_swigregister(itkShiftScaleImageFilterIF2IF2)

def itkShiftScaleImageFilterIF2IF2___New_orig__() -> "itkShiftScaleImageFilterIF2IF2_Pointer":
    """itkShiftScaleImageFilterIF2IF2___New_orig__() -> itkShiftScaleImageFilterIF2IF2_Pointer"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2___New_orig__()

def itkShiftScaleImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIF2IF2 *":
    """itkShiftScaleImageFilterIF2IF2_cast(itkLightObject obj) -> itkShiftScaleImageFilterIF2IF2"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_cast(obj)

class itkShiftScaleImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type.

    C++ includes: itkShiftScaleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShiftScaleImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkShiftScaleImageFilterIF3IF3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShiftScaleImageFilterIF3IF3_Pointer":
        """Clone(itkShiftScaleImageFilterIF3IF3 self) -> itkShiftScaleImageFilterIF3IF3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_Clone(self)


    def SetShift(self, _arg: 'double const') -> "void":
        """
        SetShift(itkShiftScaleImageFilterIF3IF3 self, double const _arg)

        Set/Get the amount to
        Shift each Pixel. The shift is followed by a Scale. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_SetShift(self, _arg)


    def GetShift(self) -> "double":
        """GetShift(itkShiftScaleImageFilterIF3IF3 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetShift(self)


    def SetScale(self, _arg: 'double const') -> "void":
        """
        SetScale(itkShiftScaleImageFilterIF3IF3 self, double const _arg)

        Set/Get the amount to
        Scale each Pixel. The Scale is applied after the Shift. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_SetScale(self, _arg)


    def GetScale(self) -> "double":
        """GetScale(itkShiftScaleImageFilterIF3IF3 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetScale(self)


    def GetUnderflowCount(self) -> "long":
        """
        GetUnderflowCount(itkShiftScaleImageFilterIF3IF3 self) -> long

        Get the number of
        pixels that underflowed and overflowed. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetUnderflowCount(self)


    def GetOverflowCount(self) -> "long":
        """GetOverflowCount(itkShiftScaleImageFilterIF3IF3 self) -> long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetOverflowCount(self)

    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_OutputHasNumericTraitsCheck
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_InputPlusRealTypeCheck
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_RealTypeMultiplyOperatorCheck
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkShiftScaleImageFilterIF3IF3"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIF3IF3

        Create a new object of the class itkShiftScaleImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShiftScaleImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShiftScaleImageFilterIF3IF3.Clone = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_Clone, None, itkShiftScaleImageFilterIF3IF3)
itkShiftScaleImageFilterIF3IF3.SetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_SetShift, None, itkShiftScaleImageFilterIF3IF3)
itkShiftScaleImageFilterIF3IF3.GetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetShift, None, itkShiftScaleImageFilterIF3IF3)
itkShiftScaleImageFilterIF3IF3.SetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_SetScale, None, itkShiftScaleImageFilterIF3IF3)
itkShiftScaleImageFilterIF3IF3.GetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetScale, None, itkShiftScaleImageFilterIF3IF3)
itkShiftScaleImageFilterIF3IF3.GetUnderflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetUnderflowCount, None, itkShiftScaleImageFilterIF3IF3)
itkShiftScaleImageFilterIF3IF3.GetOverflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetOverflowCount, None, itkShiftScaleImageFilterIF3IF3)
itkShiftScaleImageFilterIF3IF3_swigregister = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_swigregister
itkShiftScaleImageFilterIF3IF3_swigregister(itkShiftScaleImageFilterIF3IF3)

def itkShiftScaleImageFilterIF3IF3___New_orig__() -> "itkShiftScaleImageFilterIF3IF3_Pointer":
    """itkShiftScaleImageFilterIF3IF3___New_orig__() -> itkShiftScaleImageFilterIF3IF3_Pointer"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3___New_orig__()

def itkShiftScaleImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIF3IF3 *":
    """itkShiftScaleImageFilterIF3IF3_cast(itkLightObject obj) -> itkShiftScaleImageFilterIF3IF3"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_cast(obj)

class itkShiftScaleImageFilterISS2ISS2(itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    """


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type.

    C++ includes: itkShiftScaleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShiftScaleImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkShiftScaleImageFilterISS2ISS2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShiftScaleImageFilterISS2ISS2_Pointer":
        """Clone(itkShiftScaleImageFilterISS2ISS2 self) -> itkShiftScaleImageFilterISS2ISS2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_Clone(self)


    def SetShift(self, _arg: 'double const') -> "void":
        """
        SetShift(itkShiftScaleImageFilterISS2ISS2 self, double const _arg)

        Set/Get the amount to
        Shift each Pixel. The shift is followed by a Scale. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_SetShift(self, _arg)


    def GetShift(self) -> "double":
        """GetShift(itkShiftScaleImageFilterISS2ISS2 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetShift(self)


    def SetScale(self, _arg: 'double const') -> "void":
        """
        SetScale(itkShiftScaleImageFilterISS2ISS2 self, double const _arg)

        Set/Get the amount to
        Scale each Pixel. The Scale is applied after the Shift. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_SetScale(self, _arg)


    def GetScale(self) -> "double":
        """GetScale(itkShiftScaleImageFilterISS2ISS2 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetScale(self)


    def GetUnderflowCount(self) -> "long":
        """
        GetUnderflowCount(itkShiftScaleImageFilterISS2ISS2 self) -> long

        Get the number of
        pixels that underflowed and overflowed. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetUnderflowCount(self)


    def GetOverflowCount(self) -> "long":
        """GetOverflowCount(itkShiftScaleImageFilterISS2ISS2 self) -> long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetOverflowCount(self)

    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_OutputHasNumericTraitsCheck
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_InputPlusRealTypeCheck
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_RealTypeMultiplyOperatorCheck
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkShiftScaleImageFilterISS2ISS2"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterISS2ISS2

        Create a new object of the class itkShiftScaleImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShiftScaleImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShiftScaleImageFilterISS2ISS2.Clone = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_Clone, None, itkShiftScaleImageFilterISS2ISS2)
itkShiftScaleImageFilterISS2ISS2.SetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_SetShift, None, itkShiftScaleImageFilterISS2ISS2)
itkShiftScaleImageFilterISS2ISS2.GetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetShift, None, itkShiftScaleImageFilterISS2ISS2)
itkShiftScaleImageFilterISS2ISS2.SetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_SetScale, None, itkShiftScaleImageFilterISS2ISS2)
itkShiftScaleImageFilterISS2ISS2.GetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetScale, None, itkShiftScaleImageFilterISS2ISS2)
itkShiftScaleImageFilterISS2ISS2.GetUnderflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetUnderflowCount, None, itkShiftScaleImageFilterISS2ISS2)
itkShiftScaleImageFilterISS2ISS2.GetOverflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetOverflowCount, None, itkShiftScaleImageFilterISS2ISS2)
itkShiftScaleImageFilterISS2ISS2_swigregister = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_swigregister
itkShiftScaleImageFilterISS2ISS2_swigregister(itkShiftScaleImageFilterISS2ISS2)

def itkShiftScaleImageFilterISS2ISS2___New_orig__() -> "itkShiftScaleImageFilterISS2ISS2_Pointer":
    """itkShiftScaleImageFilterISS2ISS2___New_orig__() -> itkShiftScaleImageFilterISS2ISS2_Pointer"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2___New_orig__()

def itkShiftScaleImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterISS2ISS2 *":
    """itkShiftScaleImageFilterISS2ISS2_cast(itkLightObject obj) -> itkShiftScaleImageFilterISS2ISS2"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_cast(obj)

class itkShiftScaleImageFilterISS3ISS3(itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    """


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type.

    C++ includes: itkShiftScaleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShiftScaleImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkShiftScaleImageFilterISS3ISS3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShiftScaleImageFilterISS3ISS3_Pointer":
        """Clone(itkShiftScaleImageFilterISS3ISS3 self) -> itkShiftScaleImageFilterISS3ISS3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_Clone(self)


    def SetShift(self, _arg: 'double const') -> "void":
        """
        SetShift(itkShiftScaleImageFilterISS3ISS3 self, double const _arg)

        Set/Get the amount to
        Shift each Pixel. The shift is followed by a Scale. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_SetShift(self, _arg)


    def GetShift(self) -> "double":
        """GetShift(itkShiftScaleImageFilterISS3ISS3 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetShift(self)


    def SetScale(self, _arg: 'double const') -> "void":
        """
        SetScale(itkShiftScaleImageFilterISS3ISS3 self, double const _arg)

        Set/Get the amount to
        Scale each Pixel. The Scale is applied after the Shift. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_SetScale(self, _arg)


    def GetScale(self) -> "double":
        """GetScale(itkShiftScaleImageFilterISS3ISS3 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetScale(self)


    def GetUnderflowCount(self) -> "long":
        """
        GetUnderflowCount(itkShiftScaleImageFilterISS3ISS3 self) -> long

        Get the number of
        pixels that underflowed and overflowed. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetUnderflowCount(self)


    def GetOverflowCount(self) -> "long":
        """GetOverflowCount(itkShiftScaleImageFilterISS3ISS3 self) -> long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetOverflowCount(self)

    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_OutputHasNumericTraitsCheck
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_InputPlusRealTypeCheck
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_RealTypeMultiplyOperatorCheck
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkShiftScaleImageFilterISS3ISS3"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterISS3ISS3

        Create a new object of the class itkShiftScaleImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShiftScaleImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShiftScaleImageFilterISS3ISS3.Clone = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_Clone, None, itkShiftScaleImageFilterISS3ISS3)
itkShiftScaleImageFilterISS3ISS3.SetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_SetShift, None, itkShiftScaleImageFilterISS3ISS3)
itkShiftScaleImageFilterISS3ISS3.GetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetShift, None, itkShiftScaleImageFilterISS3ISS3)
itkShiftScaleImageFilterISS3ISS3.SetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_SetScale, None, itkShiftScaleImageFilterISS3ISS3)
itkShiftScaleImageFilterISS3ISS3.GetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetScale, None, itkShiftScaleImageFilterISS3ISS3)
itkShiftScaleImageFilterISS3ISS3.GetUnderflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetUnderflowCount, None, itkShiftScaleImageFilterISS3ISS3)
itkShiftScaleImageFilterISS3ISS3.GetOverflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetOverflowCount, None, itkShiftScaleImageFilterISS3ISS3)
itkShiftScaleImageFilterISS3ISS3_swigregister = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_swigregister
itkShiftScaleImageFilterISS3ISS3_swigregister(itkShiftScaleImageFilterISS3ISS3)

def itkShiftScaleImageFilterISS3ISS3___New_orig__() -> "itkShiftScaleImageFilterISS3ISS3_Pointer":
    """itkShiftScaleImageFilterISS3ISS3___New_orig__() -> itkShiftScaleImageFilterISS3ISS3_Pointer"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3___New_orig__()

def itkShiftScaleImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterISS3ISS3 *":
    """itkShiftScaleImageFilterISS3ISS3_cast(itkLightObject obj) -> itkShiftScaleImageFilterISS3ISS3"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_cast(obj)

class itkShiftScaleImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type.

    C++ includes: itkShiftScaleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShiftScaleImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkShiftScaleImageFilterIUC2IUC2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShiftScaleImageFilterIUC2IUC2_Pointer":
        """Clone(itkShiftScaleImageFilterIUC2IUC2 self) -> itkShiftScaleImageFilterIUC2IUC2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_Clone(self)


    def SetShift(self, _arg: 'double const') -> "void":
        """
        SetShift(itkShiftScaleImageFilterIUC2IUC2 self, double const _arg)

        Set/Get the amount to
        Shift each Pixel. The shift is followed by a Scale. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_SetShift(self, _arg)


    def GetShift(self) -> "double":
        """GetShift(itkShiftScaleImageFilterIUC2IUC2 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetShift(self)


    def SetScale(self, _arg: 'double const') -> "void":
        """
        SetScale(itkShiftScaleImageFilterIUC2IUC2 self, double const _arg)

        Set/Get the amount to
        Scale each Pixel. The Scale is applied after the Shift. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_SetScale(self, _arg)


    def GetScale(self) -> "double":
        """GetScale(itkShiftScaleImageFilterIUC2IUC2 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetScale(self)


    def GetUnderflowCount(self) -> "long":
        """
        GetUnderflowCount(itkShiftScaleImageFilterIUC2IUC2 self) -> long

        Get the number of
        pixels that underflowed and overflowed. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetUnderflowCount(self)


    def GetOverflowCount(self) -> "long":
        """GetOverflowCount(itkShiftScaleImageFilterIUC2IUC2 self) -> long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetOverflowCount(self)

    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_InputPlusRealTypeCheck
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_RealTypeMultiplyOperatorCheck
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkShiftScaleImageFilterIUC2IUC2"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUC2IUC2

        Create a new object of the class itkShiftScaleImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShiftScaleImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShiftScaleImageFilterIUC2IUC2.Clone = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_Clone, None, itkShiftScaleImageFilterIUC2IUC2)
itkShiftScaleImageFilterIUC2IUC2.SetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_SetShift, None, itkShiftScaleImageFilterIUC2IUC2)
itkShiftScaleImageFilterIUC2IUC2.GetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetShift, None, itkShiftScaleImageFilterIUC2IUC2)
itkShiftScaleImageFilterIUC2IUC2.SetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_SetScale, None, itkShiftScaleImageFilterIUC2IUC2)
itkShiftScaleImageFilterIUC2IUC2.GetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetScale, None, itkShiftScaleImageFilterIUC2IUC2)
itkShiftScaleImageFilterIUC2IUC2.GetUnderflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetUnderflowCount, None, itkShiftScaleImageFilterIUC2IUC2)
itkShiftScaleImageFilterIUC2IUC2.GetOverflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetOverflowCount, None, itkShiftScaleImageFilterIUC2IUC2)
itkShiftScaleImageFilterIUC2IUC2_swigregister = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_swigregister
itkShiftScaleImageFilterIUC2IUC2_swigregister(itkShiftScaleImageFilterIUC2IUC2)

def itkShiftScaleImageFilterIUC2IUC2___New_orig__() -> "itkShiftScaleImageFilterIUC2IUC2_Pointer":
    """itkShiftScaleImageFilterIUC2IUC2___New_orig__() -> itkShiftScaleImageFilterIUC2IUC2_Pointer"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2___New_orig__()

def itkShiftScaleImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIUC2IUC2 *":
    """itkShiftScaleImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkShiftScaleImageFilterIUC2IUC2"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_cast(obj)

class itkShiftScaleImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type.

    C++ includes: itkShiftScaleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShiftScaleImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkShiftScaleImageFilterIUC3IUC3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShiftScaleImageFilterIUC3IUC3_Pointer":
        """Clone(itkShiftScaleImageFilterIUC3IUC3 self) -> itkShiftScaleImageFilterIUC3IUC3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_Clone(self)


    def SetShift(self, _arg: 'double const') -> "void":
        """
        SetShift(itkShiftScaleImageFilterIUC3IUC3 self, double const _arg)

        Set/Get the amount to
        Shift each Pixel. The shift is followed by a Scale. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_SetShift(self, _arg)


    def GetShift(self) -> "double":
        """GetShift(itkShiftScaleImageFilterIUC3IUC3 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetShift(self)


    def SetScale(self, _arg: 'double const') -> "void":
        """
        SetScale(itkShiftScaleImageFilterIUC3IUC3 self, double const _arg)

        Set/Get the amount to
        Scale each Pixel. The Scale is applied after the Shift. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_SetScale(self, _arg)


    def GetScale(self) -> "double":
        """GetScale(itkShiftScaleImageFilterIUC3IUC3 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetScale(self)


    def GetUnderflowCount(self) -> "long":
        """
        GetUnderflowCount(itkShiftScaleImageFilterIUC3IUC3 self) -> long

        Get the number of
        pixels that underflowed and overflowed. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetUnderflowCount(self)


    def GetOverflowCount(self) -> "long":
        """GetOverflowCount(itkShiftScaleImageFilterIUC3IUC3 self) -> long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetOverflowCount(self)

    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_InputPlusRealTypeCheck
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_RealTypeMultiplyOperatorCheck
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkShiftScaleImageFilterIUC3IUC3"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUC3IUC3

        Create a new object of the class itkShiftScaleImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShiftScaleImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShiftScaleImageFilterIUC3IUC3.Clone = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_Clone, None, itkShiftScaleImageFilterIUC3IUC3)
itkShiftScaleImageFilterIUC3IUC3.SetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_SetShift, None, itkShiftScaleImageFilterIUC3IUC3)
itkShiftScaleImageFilterIUC3IUC3.GetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetShift, None, itkShiftScaleImageFilterIUC3IUC3)
itkShiftScaleImageFilterIUC3IUC3.SetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_SetScale, None, itkShiftScaleImageFilterIUC3IUC3)
itkShiftScaleImageFilterIUC3IUC3.GetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetScale, None, itkShiftScaleImageFilterIUC3IUC3)
itkShiftScaleImageFilterIUC3IUC3.GetUnderflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetUnderflowCount, None, itkShiftScaleImageFilterIUC3IUC3)
itkShiftScaleImageFilterIUC3IUC3.GetOverflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetOverflowCount, None, itkShiftScaleImageFilterIUC3IUC3)
itkShiftScaleImageFilterIUC3IUC3_swigregister = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_swigregister
itkShiftScaleImageFilterIUC3IUC3_swigregister(itkShiftScaleImageFilterIUC3IUC3)

def itkShiftScaleImageFilterIUC3IUC3___New_orig__() -> "itkShiftScaleImageFilterIUC3IUC3_Pointer":
    """itkShiftScaleImageFilterIUC3IUC3___New_orig__() -> itkShiftScaleImageFilterIUC3IUC3_Pointer"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3___New_orig__()

def itkShiftScaleImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIUC3IUC3 *":
    """itkShiftScaleImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkShiftScaleImageFilterIUC3IUC3"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_cast(obj)

class itkShiftScaleImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type.

    C++ includes: itkShiftScaleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShiftScaleImageFilterIUS2IUS2_Pointer":
        """__New_orig__() -> itkShiftScaleImageFilterIUS2IUS2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShiftScaleImageFilterIUS2IUS2_Pointer":
        """Clone(itkShiftScaleImageFilterIUS2IUS2 self) -> itkShiftScaleImageFilterIUS2IUS2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_Clone(self)


    def SetShift(self, _arg: 'double const') -> "void":
        """
        SetShift(itkShiftScaleImageFilterIUS2IUS2 self, double const _arg)

        Set/Get the amount to
        Shift each Pixel. The shift is followed by a Scale. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_SetShift(self, _arg)


    def GetShift(self) -> "double":
        """GetShift(itkShiftScaleImageFilterIUS2IUS2 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetShift(self)


    def SetScale(self, _arg: 'double const') -> "void":
        """
        SetScale(itkShiftScaleImageFilterIUS2IUS2 self, double const _arg)

        Set/Get the amount to
        Scale each Pixel. The Scale is applied after the Shift. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_SetScale(self, _arg)


    def GetScale(self) -> "double":
        """GetScale(itkShiftScaleImageFilterIUS2IUS2 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetScale(self)


    def GetUnderflowCount(self) -> "long":
        """
        GetUnderflowCount(itkShiftScaleImageFilterIUS2IUS2 self) -> long

        Get the number of
        pixels that underflowed and overflowed. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetUnderflowCount(self)


    def GetOverflowCount(self) -> "long":
        """GetOverflowCount(itkShiftScaleImageFilterIUS2IUS2 self) -> long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetOverflowCount(self)

    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_InputPlusRealTypeCheck
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_RealTypeMultiplyOperatorCheck
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIUS2IUS2 *":
        """cast(itkLightObject obj) -> itkShiftScaleImageFilterIUS2IUS2"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUS2IUS2

        Create a new object of the class itkShiftScaleImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShiftScaleImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShiftScaleImageFilterIUS2IUS2.Clone = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_Clone, None, itkShiftScaleImageFilterIUS2IUS2)
itkShiftScaleImageFilterIUS2IUS2.SetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_SetShift, None, itkShiftScaleImageFilterIUS2IUS2)
itkShiftScaleImageFilterIUS2IUS2.GetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetShift, None, itkShiftScaleImageFilterIUS2IUS2)
itkShiftScaleImageFilterIUS2IUS2.SetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_SetScale, None, itkShiftScaleImageFilterIUS2IUS2)
itkShiftScaleImageFilterIUS2IUS2.GetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetScale, None, itkShiftScaleImageFilterIUS2IUS2)
itkShiftScaleImageFilterIUS2IUS2.GetUnderflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetUnderflowCount, None, itkShiftScaleImageFilterIUS2IUS2)
itkShiftScaleImageFilterIUS2IUS2.GetOverflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetOverflowCount, None, itkShiftScaleImageFilterIUS2IUS2)
itkShiftScaleImageFilterIUS2IUS2_swigregister = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_swigregister
itkShiftScaleImageFilterIUS2IUS2_swigregister(itkShiftScaleImageFilterIUS2IUS2)

def itkShiftScaleImageFilterIUS2IUS2___New_orig__() -> "itkShiftScaleImageFilterIUS2IUS2_Pointer":
    """itkShiftScaleImageFilterIUS2IUS2___New_orig__() -> itkShiftScaleImageFilterIUS2IUS2_Pointer"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2___New_orig__()

def itkShiftScaleImageFilterIUS2IUS2_cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIUS2IUS2 *":
    """itkShiftScaleImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkShiftScaleImageFilterIUS2IUS2"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_cast(obj)

class itkShiftScaleImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type.

    C++ includes: itkShiftScaleImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShiftScaleImageFilterIUS3IUS3_Pointer":
        """__New_orig__() -> itkShiftScaleImageFilterIUS3IUS3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShiftScaleImageFilterIUS3IUS3_Pointer":
        """Clone(itkShiftScaleImageFilterIUS3IUS3 self) -> itkShiftScaleImageFilterIUS3IUS3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_Clone(self)


    def SetShift(self, _arg: 'double const') -> "void":
        """
        SetShift(itkShiftScaleImageFilterIUS3IUS3 self, double const _arg)

        Set/Get the amount to
        Shift each Pixel. The shift is followed by a Scale. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_SetShift(self, _arg)


    def GetShift(self) -> "double":
        """GetShift(itkShiftScaleImageFilterIUS3IUS3 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetShift(self)


    def SetScale(self, _arg: 'double const') -> "void":
        """
        SetScale(itkShiftScaleImageFilterIUS3IUS3 self, double const _arg)

        Set/Get the amount to
        Scale each Pixel. The Scale is applied after the Shift. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_SetScale(self, _arg)


    def GetScale(self) -> "double":
        """GetScale(itkShiftScaleImageFilterIUS3IUS3 self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetScale(self)


    def GetUnderflowCount(self) -> "long":
        """
        GetUnderflowCount(itkShiftScaleImageFilterIUS3IUS3 self) -> long

        Get the number of
        pixels that underflowed and overflowed. 
        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetUnderflowCount(self)


    def GetOverflowCount(self) -> "long":
        """GetOverflowCount(itkShiftScaleImageFilterIUS3IUS3 self) -> long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetOverflowCount(self)

    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_InputPlusRealTypeCheck
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_RealTypeMultiplyOperatorCheck
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIUS3IUS3 *":
        """cast(itkLightObject obj) -> itkShiftScaleImageFilterIUS3IUS3"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUS3IUS3

        Create a new object of the class itkShiftScaleImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShiftScaleImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShiftScaleImageFilterIUS3IUS3.Clone = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_Clone, None, itkShiftScaleImageFilterIUS3IUS3)
itkShiftScaleImageFilterIUS3IUS3.SetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_SetShift, None, itkShiftScaleImageFilterIUS3IUS3)
itkShiftScaleImageFilterIUS3IUS3.GetShift = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetShift, None, itkShiftScaleImageFilterIUS3IUS3)
itkShiftScaleImageFilterIUS3IUS3.SetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_SetScale, None, itkShiftScaleImageFilterIUS3IUS3)
itkShiftScaleImageFilterIUS3IUS3.GetScale = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetScale, None, itkShiftScaleImageFilterIUS3IUS3)
itkShiftScaleImageFilterIUS3IUS3.GetUnderflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetUnderflowCount, None, itkShiftScaleImageFilterIUS3IUS3)
itkShiftScaleImageFilterIUS3IUS3.GetOverflowCount = new_instancemethod(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetOverflowCount, None, itkShiftScaleImageFilterIUS3IUS3)
itkShiftScaleImageFilterIUS3IUS3_swigregister = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_swigregister
itkShiftScaleImageFilterIUS3IUS3_swigregister(itkShiftScaleImageFilterIUS3IUS3)

def itkShiftScaleImageFilterIUS3IUS3___New_orig__() -> "itkShiftScaleImageFilterIUS3IUS3_Pointer":
    """itkShiftScaleImageFilterIUS3IUS3___New_orig__() -> itkShiftScaleImageFilterIUS3IUS3_Pointer"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3___New_orig__()

def itkShiftScaleImageFilterIUS3IUS3_cast(obj: 'itkLightObject') -> "itkShiftScaleImageFilterIUS3IUS3 *":
    """itkShiftScaleImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkShiftScaleImageFilterIUS3IUS3"""
    return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def shift_scale_image_filter(*args, **kwargs):
    """Procedural interface for ShiftScaleImageFilter"""
    import itk
    instance = itk.ShiftScaleImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def shift_scale_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ShiftScaleImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ShiftScaleImageFilter.values()[0]
    else:
        filter_object = itk.ShiftScaleImageFilter

    shift_scale_image_filter.__doc__ = filter_object.__doc__
    shift_scale_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    shift_scale_image_filter.__doc__ += "Available Keyword Arguments:\n"
    shift_scale_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



