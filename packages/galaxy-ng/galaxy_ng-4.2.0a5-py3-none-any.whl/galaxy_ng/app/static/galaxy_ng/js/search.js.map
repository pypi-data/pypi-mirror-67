{"version":3,"sources":["webpack:///./src/containers/search/search.scss","webpack:///./src/containers/search/search.scss?5a3c","webpack:///./src/containers/search/search.tsx"],"names":["module","exports","push","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","props","params","parseParamString","location","search","CARD_DEFAULT_PAGE_SIZE","localStorage","getItem","SEARCH_VIEW_TYPE_LOCAL_KEY","state","collections","numberOfResults","loading","tags","componentDidMount","this","queryCollections","render","className","title","updateParams","p","searchPlaceholder","size","setItem","view_type","count","perPageOptions","CARD_DEFAULT_PAGINATION_OPTIONS","isTop","renderCollections","length","renderEmpty","renderList","renderCards","variant","full","icon","headingLevel","onClick","map","c","id","showNamespace","setState","list","getReduced","deprecated","certification","certified","then","result","data","meta","updateParamsMixin","Search"],"mappings":"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","file":"js/search.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/* logo blue */\\n/* well background color */\\n/* alert info background color */\\n/* alert info border color */\\n.toolbar {\\n  padding-bottom: 24px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center; }\\n  .toolbar .pagination-container {\\n    display: flex;\\n    align-items: center; }\\n    .toolbar .pagination-container .card-list-switcher {\\n      margin-right: 24px; }\\n\\n.header {\\n  border-bottom: 1px solid #d8d8d8; }\\n\\n.collection-container {\\n  min-height: calc(100vh - 285px); }\\n  @media (min-width: 1000px) {\\n    .collection-container {\\n      display: flex; } }\\n  .collection-container .sidebar {\\n    margin-left: -24px;\\n    margin-top: -24px;\\n    background-color: white;\\n    min-width: 190px;\\n    padding: 24px;\\n    padding-top: 24px; }\\n    @media (max-width: 1000px) {\\n      .collection-container .sidebar {\\n        margin-bottom: 24px;\\n        margin-right: -24px; } }\\n  .collection-container .cards {\\n    display: flex;\\n    flex-wrap: wrap;\\n    align-content: flex-start; }\\n    .collection-container .cards .card {\\n      margin-left: 24px;\\n      margin-bottom: 24px; }\\n  .collection-container .list-container {\\n    width: 100%; }\\n  .collection-container .list {\\n    margin-bottom: 24px;\\n    margin-left: 24px;\\n    padding-top: 16px;\\n    padding-bottom: 16px;\\n    overflow: hidden; }\\n    .collection-container .list .data-list {\\n      margin-top: -17px;\\n      margin-bottom: -17px; }\\n  .collection-container .empty {\\n    flex-grow: 1; }\\n\\n.footer {\\n  border-top: 1px solid #d8d8d8;\\n  margin: 0px -24px -24px -24px; }\\n\", \"\"]);\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./search.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./search.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./search.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\nimport './search.scss';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport {\n  DataList,\n  EmptyState,\n  EmptyStateIcon,\n  Title,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport {\n  BaseHeader,\n  CollectionCard,\n  Toolbar,\n  TagFilter,\n  CardListSwitcher,\n  CollectionListItem,\n  Pagination,\n  LoadingPageSpinner,\n  Main,\n} from '../../components';\nimport {\n  CollectionAPI,\n  CollectionListType,\n  CertificationStatus,\n} from '../../api';\nimport { ParamHelper } from '../../utilities/param-helper';\nimport { Constants } from '../../constants';\n\ninterface IState {\n  collections: CollectionListType[];\n  numberOfResults: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    keywords?: string;\n    tags?: string;\n    view_type?: string;\n  };\n  loading: boolean;\n}\n\nclass Search extends React.Component<RouteComponentProps, IState> {\n  tags: string[];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = Constants.CARD_DEFAULT_PAGE_SIZE;\n    }\n\n    // Load view type from local storage if it's not set. This allows a\n    // user's view type preference to persist\n    if (!params['view_type']) {\n      params['view_type'] = localStorage.getItem(\n        Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n      );\n    }\n\n    this.state = {\n      collections: [],\n      params: params,\n      numberOfResults: 0,\n      loading: true,\n    };\n\n    this.tags = [\n      'cloud',\n      'linux',\n      'network',\n      'storage',\n      'security',\n      'windows',\n      'infrastructure',\n      'monitoring',\n      'tools',\n      'database',\n      'application',\n    ];\n  }\n\n  componentDidMount() {\n    this.queryCollections();\n  }\n\n  render() {\n    const { collections, params, numberOfResults, loading } = this.state;\n\n    return (\n      <React.Fragment>\n        <BaseHeader className='header' title='Collections'>\n          <div className='toolbar'>\n            <Toolbar\n              params={params}\n              updateParams={p =>\n                this.updateParams(p, () => this.queryCollections())\n              }\n              searchPlaceholder='Search collections'\n            />\n\n            <div className='pagination-container'>\n              <div className='card-list-switcher'>\n                <CardListSwitcher\n                  size='sm'\n                  params={params}\n                  updateParams={p =>\n                    this.updateParams(p, () =>\n                      // Note, we have to use this.state.params instead\n                      // of params in the callback because the callback\n                      // executes before the page can re-run render\n                      // which means params doesn't contain the most\n                      // up to date state\n                      localStorage.setItem(\n                        Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n                        this.state.params.view_type,\n                      ),\n                    )\n                  }\n                />\n              </div>\n\n              <Pagination\n                params={params}\n                updateParams={p =>\n                  this.updateParams(p, () => this.queryCollections())\n                }\n                count={numberOfResults}\n                perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                isTop\n              />\n            </div>\n          </div>\n        </BaseHeader>\n        <Main>\n          <Section className='collection-container'>\n            <div className='sidebar'>\n              <TagFilter\n                params={params}\n                updateParams={p =>\n                  this.updateParams(p, () => this.queryCollections())\n                }\n                tags={this.tags}\n              />\n            </div>\n\n            {this.renderCollections(collections, params)}\n          </Section>\n          <Section className='body footer'>\n            <Pagination\n              params={params}\n              updateParams={p =>\n                this.updateParams(p, () => this.queryCollections())\n              }\n              perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n              count={numberOfResults}\n            />\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private renderCollections(collections, params) {\n    if (this.state.loading) {\n      return <LoadingPageSpinner></LoadingPageSpinner>;\n    }\n    if (collections.length === 0) {\n      return this.renderEmpty();\n    }\n    if (params.view_type === 'list') {\n      return this.renderList(collections);\n    } else {\n      return this.renderCards(collections);\n    }\n  }\n\n  private renderEmpty() {\n    return (\n      <EmptyState className='empty' variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={SearchIcon} />\n        <Title headingLevel='h2' size='lg'>\n          No results found\n        </Title>\n        <EmptyStateBody>\n          No results match the search criteria. Remove all filters to show\n          results.\n        </EmptyStateBody>\n        <Button\n          variant='link'\n          onClick={() => this.updateParams({}, () => this.queryCollections())}\n        >\n          Clear search\n        </Button>\n      </EmptyState>\n    );\n  }\n\n  private renderCards(collections) {\n    return (\n      <div className='cards'>\n        {collections.map(c => {\n          return <CollectionCard className='card' key={c.id} {...c} />;\n        })}\n      </div>\n    );\n  }\n\n  private renderList(collections) {\n    return (\n      <div className='list-container'>\n        <div className='list'>\n          <DataList className='data-list' aria-label={'List of Collections'}>\n            {collections.map(c => (\n              <CollectionListItem showNamespace={true} key={c.id} {...c} />\n            ))}\n          </DataList>\n        </div>\n      </div>\n    );\n  }\n\n  private queryCollections() {\n    this.setState({ loading: true }, () => {\n      CollectionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, ['view_type']),\n        deprecated: false,\n        certification: CertificationStatus.certified,\n      }).then(result => {\n        this.setState({\n          collections: result.data.data,\n          numberOfResults: result.data.meta.count,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(Search);\n"],"sourceRoot":""}