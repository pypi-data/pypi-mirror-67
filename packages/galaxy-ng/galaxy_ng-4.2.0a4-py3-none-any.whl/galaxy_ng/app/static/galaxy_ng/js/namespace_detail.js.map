{"version":3,"sources":["webpack:///./src/containers/namespace-detail/import-modal/import-modal.scss","webpack:///./src/containers/namespace-detail/import-modal/import-modal.tsx","webpack:///./src/containers/namespace-detail/namespace-detail.tsx","webpack:///./src/containers/namespace-detail/import-modal/import-modal.scss?0eb5","webpack:///./src/containers/edit-namespace/namespace-form.tsx","webpack:///./src/containers/namespace-detail/manage-namespace.tsx","webpack:///./src/containers/namespace-detail/partner-detail.tsx"],"names":["module","exports","push","i","Status","props","acceptedFileTypes","COLLECTION_NAME_REGEX","state","file","undefined","errors","uploadProgress","uploadStatus","waiting","render","isOpen","collection","Modal","isSmall","title","name","onClose","handleClose","actions","Button","key","variant","onClick","saveFile","isDisabled","this","canUpload","isFooterLeftAligned","className","disabled","type","id","onChange","e","handleFileUpload","target","files","htmlFor","renderFileIcon","style","width","uploading","newCollection","length","setState","includes","test","split","namespace","artifact","sha256","cancelToken","getCancelToken","upload","loaded","total","then","response","onUploadSuccess","catch","errorMessage","a","isCancel","data","messages","err","detail","code","status","join","finally","_","msg","cancel","setOpen","nonAPIParams","persistentParams","certification","certified","nonQueryStringParams","params","parseParamString","location","search","match","collections","redirect","itemCount","showImportModal","warning","updateCollection","componentDidMount","loadAll","breadcrumbs","Redirect","to","tabs","tab","resources","result","history","myImports","warn","toggleImportModal","Alert","position","right","top","zIndex","action","AlertActionCloseButton","concat","updateParams","p","pageControls","renderPageControls","toLowerCase","loadCollections","showControls","handleControlClick","handleCollectionAction","renderResources","find","x","setDeprecation","deprecated","error","source","list","getReduced","meta","count","Promise","all","get","val","notFound","updateParamsMixin","display","alignItems","marginLeft","items","DropdownItem","component","Link","editNamespace","newState","content","options","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","alerts","userId","newLinkURL","newLinkName","errorMessages","saving","unsavedData","getUser","account_number","loadNamespace","url","myNamespaces","myCollections","closeAlert","updateNamespace","saveNamespace","color","removeGroupsPrefix","groups","unprefixedGroupOwners","ADMIN_GROUP","owner","parameter","description","EditNamespace","ManageNamespace","partners","PartnerDetail"],"mappings":"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","file":"js/namespace_detail.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/* logo blue */\\n/* well background color */\\n/* alert info background color */\\n/* alert info border color */\\n.upload-collection .file-error-messages {\\n  color: #cc0000; }\\n\\n.upload-collection .upload-file {\\n  width: 0.1px;\\n  height: 0.1px;\\n  opacity: 0;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.upload-collection .upload-file-label {\\n  display: inline-block;\\n  cursor: pointer;\\n  width: 100%;\\n  font-weight: normal; }\\n  .upload-collection .upload-file-label .upload-box {\\n    display: flex;\\n    border-style: solid;\\n    border-width: thin;\\n    width: 100%;\\n    border-radius: 3px; }\\n    .upload-collection .upload-file-label .upload-box .upload-button,\\n    .upload-collection .upload-file-label .upload-box .upload-text {\\n      padding: 5px; }\\n    .upload-collection .upload-file-label .upload-box .upload-button {\\n      border-right: thin solid;\\n      padding-left: 10px;\\n      padding-right: 10px; }\\n    .upload-collection .upload-file-label .upload-box .upload-button:hover {\\n      color: white;\\n      background-color: #808080; }\\n    .upload-collection .upload-file-label .upload-box .upload-text {\\n      position: relative;\\n      width: 100%; }\\n    .upload-collection .upload-file-label .upload-box .loading-bar {\\n      position: absolute;\\n      height: 3px;\\n      background-color: #5bb75b;\\n      bottom: 0px;\\n      left: 0px; }\\n\", \"\"]);\n\n","import * as React from 'react';\nimport './import-modal.scss';\nimport axios from 'axios';\n\nimport { Modal, Button } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  CollectionUploadType,\n} from '../../../api';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: any;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+\\-[0-9a-z_]+\\-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        isSmall\n        title={\n          collection ? 'New version of ' + collection.name : 'New collection'\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n          >\n            Upload\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            Cancel\n          </Button>,\n        ]}\n        isFooterLeftAligned\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={e => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : 'Select file'}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: 'Please select no more than one file.',\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: 'Invalid file format.',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: `Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: `The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: `The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      e => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then(response => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch(errors => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (let err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  'API error. Status code: ' + err.status,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = 'API error. Status code: ' + errors.response.status;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(_ => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = 'Collection upload canceled';\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { RouteComponentProps, Redirect, Link } from 'react-router-dom';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport {\n  Button,\n  DropdownItem,\n  Alert,\n  AlertActionCloseButton,\n} from '@patternfly/react-core';\n\nimport * as ReactMarkdown from 'react-markdown';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  NamespaceAPI,\n  NamespaceType,\n  CertificationStatus,\n} from '../../api';\n\nimport {\n  CollectionList,\n  PartnerHeader,\n  StatefulDropdown,\n  LoadingPageWithHeader,\n  Main,\n  APIButton,\n} from '../../components';\n\nimport { ImportModal } from './import-modal/import-modal';\n\nimport { ParamHelper } from '../../utilities/param-helper';\nimport { Paths, formatPath } from '../../paths';\n\ninterface IState {\n  collections: CollectionListType[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionListType;\n}\n\ninterface IProps extends RouteComponentProps {\n  showControls: boolean;\n  breadcrumbs: { name: string; url?: string }[];\n}\n\nexport class NamespaceDetail extends React.Component<IProps, IState> {\n  nonAPIParams = ['tab'];\n  persistentParams = { certification: CertificationStatus.certified };\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.match.params['namespace'];\n\n    this.state = {\n      collections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadAll();\n  }\n\n  render() {\n    const {\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showImportModal,\n      warning,\n      updateCollection,\n    } = this.state;\n\n    const { breadcrumbs } = this.props;\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const tabs = ['Collections'];\n\n    const tab = params['tab'] || 'collections';\n\n    if (namespace.resources) {\n      tabs.push('Resources');\n    }\n\n    return (\n      <React.Fragment>\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={result =>\n            this.props.history.push(\n              formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            )\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection}\n          namespace={namespace.name}\n        />\n        {warning ? (\n          <Alert\n            style={{\n              position: 'fixed',\n              right: '5px',\n              top: '80px',\n              zIndex: 300,\n            }}\n            variant='warning'\n            title={warning}\n            action={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          ></Alert>\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs.concat([{ name: namespace.name }])}\n          tabs={tabs}\n          params={params}\n          updateParams={p => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n        ></PartnerHeader>\n        <Main>\n          <Section className='body'>\n            {tab.toLowerCase() === 'collections' ? (\n              <CollectionList\n                updateParams={params =>\n                  this.updateParams(params, () => this.loadCollections())\n                }\n                params={params}\n                collections={collections}\n                itemCount={itemCount}\n                showControls={this.props.showControls}\n                handleControlClick={(id, action) =>\n                  this.handleCollectionAction(id, action)\n                }\n              />\n            ) : (\n              this.renderResources(namespace)\n            )}\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(id, action) {\n    const collection = this.state.collections.find(x => x.id === id);\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        CollectionAPI.setDeprecation(collection, !collection.deprecated)\n          .then(() => this.loadCollections())\n          .catch(error => {\n            this.setState({\n              warning: 'API Error: Failed to set deprecation.',\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown source={namespace.resources} />\n      </div>\n    );\n  }\n\n  private loadCollections() {\n    CollectionAPI.list({\n      ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      ...this.persistentParams,\n    }).then(result => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private loadAll() {\n    Promise.all([\n      CollectionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        ...this.persistentParams,\n      }),\n      NamespaceAPI.get(this.props.match.params['namespace']),\n    ])\n      .then(val => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n        });\n      })\n      .catch(response => {\n        this.setState({ redirect: Paths.notFound });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    if (!this.props.showControls) {\n      return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <APIButton style={{ marginLeft: '8px' }} />\n        </div>\n      );\n    }\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button onClick={() => this.setState({ showImportModal: true })}>\n          Upload collection\n        </Button>\n        <APIButton style={{ marginLeft: '8px' }} />\n        <StatefulDropdown\n          items={[\n            <DropdownItem\n              key='1'\n              component={\n                <Link\n                  to={formatPath(Paths.editNamespace, {\n                    namespace: this.state.namespace.name,\n                  })}\n                >\n                  Edit namespace\n                </Link>\n              }\n            />,\n            <DropdownItem\n              key='2'\n              component={\n                <Link\n                  to={formatPath(\n                    Paths.myImports,\n                    {},\n                    {\n                      namespace: this.state.namespace.name,\n                    },\n                  )}\n                >\n                  Imports\n                </Link>\n              }\n            />,\n          ]}\n        />\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n}\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/lib/loader.js!./import-modal.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/lib/loader.js!./import-modal.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/lib/loader.js!./import-modal.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\n\nimport { Section, Spinner } from '@redhat-cloud-services/frontend-components';\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\n\nimport {\n  PartnerHeader,\n  NamespaceForm,\n  ResourcesForm,\n  AlertList,\n  closeAlertMixin,\n  AlertType,\n  Main,\n} from '../../components';\nimport { MyNamespaceAPI, NamespaceType, UserAPI } from '../../api';\nimport { Constants } from '../../constants';\n\nimport { Form, ActionGroup, Button } from '@patternfly/react-core';\n\nimport { Paths, formatPath } from '../../paths';\nimport { ParamHelper } from '../../utilities/param-helper';\n\ninterface IState {\n  namespace: NamespaceType;\n  newLinkName: string;\n  newLinkURL: string;\n  errorMessages: any;\n  saving: boolean;\n  redirect: string;\n  unsavedData: boolean;\n  alerts: AlertType[];\n  params: {\n    tab?: string;\n  };\n  userId: string;\n}\n\nclass EditNamespace extends React.Component<RouteComponentProps, IState> {\n  queryParams: URLSearchParams;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    if (!params['tab']) {\n      params['tab'] = 'edit details';\n    }\n\n    this.state = {\n      alerts: [],\n      namespace: null,\n      userId: '',\n      newLinkURL: '',\n      newLinkName: '',\n      errorMessages: {},\n      saving: false,\n      redirect: null,\n      unsavedData: false,\n      params: params,\n    };\n  }\n\n  componentDidMount() {\n    UserAPI.getUser().then(result => {\n      this.setState({ userId: result.account_number }, () =>\n        this.loadNamespace(),\n      );\n    });\n  }\n\n  render() {\n    const {\n      namespace,\n      errorMessages,\n      saving,\n      redirect,\n      params,\n      userId,\n    } = this.state;\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n\n    if (!namespace) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={[\n            { name: 'My namespaces', url: Paths.myNamespaces },\n            {\n              name: namespace.name,\n              url: formatPath(Paths.myCollections, {\n                namespace: namespace.name,\n              }),\n            },\n            { name: 'Edit' },\n          ]}\n          tabs={['Edit details', 'Edit resources']}\n          params={params}\n          updateParams={p => this.updateParams(p)}\n        ></PartnerHeader>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={i => this.closeAlert(i)}\n        />\n        <Main>\n          <Section className='body'>\n            {params.tab.toLowerCase() === 'edit details' ? (\n              <NamespaceForm\n                userId={userId}\n                namespace={namespace}\n                errorMessages={errorMessages}\n                updateNamespace={namespace =>\n                  this.setState({\n                    namespace: namespace,\n                    unsavedData: true,\n                  })\n                }\n              />\n            ) : (\n              <ResourcesForm\n                updateNamespace={namespace =>\n                  this.setState({\n                    namespace: namespace,\n                    unsavedData: true,\n                  })\n                }\n                namespace={namespace}\n              />\n            )}\n            <Form>\n              <ActionGroup>\n                <Button variant='primary' onClick={() => this.saveNamespace()}>\n                  Save\n                </Button>\n                <Button variant='secondary' onClick={() => this.cancel()}>\n                  Cancel\n                </Button>\n\n                {saving ? <Spinner></Spinner> : null}\n              </ActionGroup>\n              {this.state.unsavedData ? (\n                <div style={{ color: 'red' }}>You have unsaved changes</div>\n              ) : null}\n            </Form>\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private removeGroupsPrefix(groups) {\n    let unprefixedGroupOwners = [Constants.ADMIN_GROUP];\n    for (const owner of groups) {\n      if (owner == Constants.ADMIN_GROUP) {\n        continue;\n      }\n      // 'rh-identity-account', '<id>'\n      else unprefixedGroupOwners.push(owner.split(':')[1]);\n    }\n    return unprefixedGroupOwners;\n  }\n\n  private loadNamespace() {\n    MyNamespaceAPI.get(this.props.match.params['namespace'])\n      .then(response => {\n        response.data.groups = this.removeGroupsPrefix(response.data.groups);\n        this.setState({ namespace: response.data });\n      })\n      .catch(response => {\n        this.setState({ redirect: Paths.notFound });\n      });\n  }\n\n  private saveNamespace() {\n    this.setState({ saving: true }, () => {\n      MyNamespaceAPI.update(this.state.namespace.name, this.state.namespace)\n        .then(result => {\n          this.setState({\n            namespace: result.data,\n            errorMessages: {},\n            saving: false,\n            unsavedData: false,\n            redirect: formatPath(Paths.myCollections, {\n              namespace: this.state.namespace.name,\n            }),\n          });\n        })\n        .catch(error => {\n          const result = error.response;\n          if (result.status === 400) {\n            const messages: any = {};\n            for (const e of result.data.errors) {\n              messages[e.source.parameter] = e.detail;\n            }\n\n            this.setState({\n              errorMessages: messages,\n              saving: false,\n            });\n          } else if (result.status === 404) {\n            this.setState({\n              alerts: this.state.alerts.concat({\n                variant: 'danger',\n                title: `API Error: ${error.response.status}`,\n                description: `You don't have permissions to update this namespace.`,\n              }),\n              saving: false,\n            });\n          }\n        });\n    });\n  }\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private cancel() {\n    this.setState({\n      redirect: formatPath(Paths.myCollections, {\n        namespace: this.state.namespace.name,\n      }),\n    });\n  }\n}\n\nexport default withRouter(EditNamespace);\n","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceDetail } from './namespace-detail';\nimport { Paths } from '../../paths';\n\nclass ManageNamespace extends React.Component<RouteComponentProps> {\n  render() {\n    return (\n      <NamespaceDetail\n        {...this.props}\n        showControls={true}\n        breadcrumbs={[{ url: Paths.myNamespaces, name: 'My namespaces' }]}\n      ></NamespaceDetail>\n    );\n  }\n}\n\nexport default withRouter(ManageNamespace);\n","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceDetail } from './namespace-detail';\nimport { Paths } from '../../paths';\n\nclass PartnerDetail extends React.Component<RouteComponentProps> {\n  render() {\n    return (\n      <NamespaceDetail\n        {...this.props}\n        showControls={false}\n        breadcrumbs={[{ url: Paths.partners, name: 'Partners' }]}\n      ></NamespaceDetail>\n    );\n  }\n}\n\nexport default withRouter(PartnerDetail);\n"],"sourceRoot":""}